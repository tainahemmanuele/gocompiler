/**
 * generated by Xtext 2.15.0-SNAPSHOT
 */
package org.xtext.example.mydsl.go.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.go.Block;
import org.xtext.example.mydsl.go.Expression;
import org.xtext.example.mydsl.go.GoPackage;
import org.xtext.example.mydsl.go.IfStmt;
import org.xtext.example.mydsl.go.SimpleStmt;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If Stmt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.go.impl.IfStmtImpl#getSimst <em>Simst</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.go.impl.IfStmtImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.go.impl.IfStmtImpl#getBlock <em>Block</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.go.impl.IfStmtImpl#getIfs <em>Ifs</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.go.impl.IfStmtImpl#getBlock2 <em>Block2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfStmtImpl extends MinimalEObjectImpl.Container implements IfStmt
{
  /**
   * The cached value of the '{@link #getSimst() <em>Simst</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimst()
   * @generated
   * @ordered
   */
  protected SimpleStmt simst;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected Expression expression;

  /**
   * The cached value of the '{@link #getBlock() <em>Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlock()
   * @generated
   * @ordered
   */
  protected Block block;

  /**
   * The cached value of the '{@link #getIfs() <em>Ifs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfs()
   * @generated
   * @ordered
   */
  protected IfStmt ifs;

  /**
   * The cached value of the '{@link #getBlock2() <em>Block2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlock2()
   * @generated
   * @ordered
   */
  protected Block block2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfStmtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.IF_STMT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimpleStmt getSimst()
  {
    return simst;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimst(SimpleStmt newSimst, NotificationChain msgs)
  {
    SimpleStmt oldSimst = simst;
    simst = newSimst;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__SIMST, oldSimst, newSimst);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSimst(SimpleStmt newSimst)
  {
    if (newSimst != simst)
    {
      NotificationChain msgs = null;
      if (simst != null)
        msgs = ((InternalEObject)simst).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__SIMST, null, msgs);
      if (newSimst != null)
        msgs = ((InternalEObject)newSimst).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__SIMST, null, msgs);
      msgs = basicSetSimst(newSimst, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__SIMST, newSimst, newSimst));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(Expression newExpression, NotificationChain msgs)
  {
    Expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(Expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Block getBlock()
  {
    return block;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBlock(Block newBlock, NotificationChain msgs)
  {
    Block oldBlock = block;
    block = newBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__BLOCK, oldBlock, newBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBlock(Block newBlock)
  {
    if (newBlock != block)
    {
      NotificationChain msgs = null;
      if (block != null)
        msgs = ((InternalEObject)block).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__BLOCK, null, msgs);
      if (newBlock != null)
        msgs = ((InternalEObject)newBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__BLOCK, null, msgs);
      msgs = basicSetBlock(newBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__BLOCK, newBlock, newBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IfStmt getIfs()
  {
    return ifs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfs(IfStmt newIfs, NotificationChain msgs)
  {
    IfStmt oldIfs = ifs;
    ifs = newIfs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__IFS, oldIfs, newIfs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIfs(IfStmt newIfs)
  {
    if (newIfs != ifs)
    {
      NotificationChain msgs = null;
      if (ifs != null)
        msgs = ((InternalEObject)ifs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__IFS, null, msgs);
      if (newIfs != null)
        msgs = ((InternalEObject)newIfs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__IFS, null, msgs);
      msgs = basicSetIfs(newIfs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__IFS, newIfs, newIfs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Block getBlock2()
  {
    return block2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBlock2(Block newBlock2, NotificationChain msgs)
  {
    Block oldBlock2 = block2;
    block2 = newBlock2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__BLOCK2, oldBlock2, newBlock2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBlock2(Block newBlock2)
  {
    if (newBlock2 != block2)
    {
      NotificationChain msgs = null;
      if (block2 != null)
        msgs = ((InternalEObject)block2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__BLOCK2, null, msgs);
      if (newBlock2 != null)
        msgs = ((InternalEObject)newBlock2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.IF_STMT__BLOCK2, null, msgs);
      msgs = basicSetBlock2(newBlock2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.IF_STMT__BLOCK2, newBlock2, newBlock2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.IF_STMT__SIMST:
        return basicSetSimst(null, msgs);
      case GoPackage.IF_STMT__EXPRESSION:
        return basicSetExpression(null, msgs);
      case GoPackage.IF_STMT__BLOCK:
        return basicSetBlock(null, msgs);
      case GoPackage.IF_STMT__IFS:
        return basicSetIfs(null, msgs);
      case GoPackage.IF_STMT__BLOCK2:
        return basicSetBlock2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.IF_STMT__SIMST:
        return getSimst();
      case GoPackage.IF_STMT__EXPRESSION:
        return getExpression();
      case GoPackage.IF_STMT__BLOCK:
        return getBlock();
      case GoPackage.IF_STMT__IFS:
        return getIfs();
      case GoPackage.IF_STMT__BLOCK2:
        return getBlock2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.IF_STMT__SIMST:
        setSimst((SimpleStmt)newValue);
        return;
      case GoPackage.IF_STMT__EXPRESSION:
        setExpression((Expression)newValue);
        return;
      case GoPackage.IF_STMT__BLOCK:
        setBlock((Block)newValue);
        return;
      case GoPackage.IF_STMT__IFS:
        setIfs((IfStmt)newValue);
        return;
      case GoPackage.IF_STMT__BLOCK2:
        setBlock2((Block)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.IF_STMT__SIMST:
        setSimst((SimpleStmt)null);
        return;
      case GoPackage.IF_STMT__EXPRESSION:
        setExpression((Expression)null);
        return;
      case GoPackage.IF_STMT__BLOCK:
        setBlock((Block)null);
        return;
      case GoPackage.IF_STMT__IFS:
        setIfs((IfStmt)null);
        return;
      case GoPackage.IF_STMT__BLOCK2:
        setBlock2((Block)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.IF_STMT__SIMST:
        return simst != null;
      case GoPackage.IF_STMT__EXPRESSION:
        return expression != null;
      case GoPackage.IF_STMT__BLOCK:
        return block != null;
      case GoPackage.IF_STMT__IFS:
        return ifs != null;
      case GoPackage.IF_STMT__BLOCK2:
        return block2 != null;
    }
    return super.eIsSet(featureID);
  }

} //IfStmtImpl
