/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.go.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.go.GoPackage;
import org.xtext.example.mydsl.go.UnaryExpr;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Unary Expr</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.go.impl.UnaryExprImpl#getUp <em>Up</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.go.impl.UnaryExprImpl#getUe <em>Ue</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UnaryExprImpl extends MinimalEObjectImpl.Container implements UnaryExpr
{
  /**
   * The default value of the '{@link #getUp() <em>Up</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUp()
   * @generated
   * @ordered
   */
  protected static final String UP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUp() <em>Up</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUp()
   * @generated
   * @ordered
   */
  protected String up = UP_EDEFAULT;

  /**
   * The cached value of the '{@link #getUe() <em>Ue</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUe()
   * @generated
   * @ordered
   */
  protected UnaryExpr ue;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UnaryExprImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.UNARY_EXPR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUp()
  {
    return up;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUp(String newUp)
  {
    String oldUp = up;
    up = newUp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.UNARY_EXPR__UP, oldUp, up));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UnaryExpr getUe()
  {
    return ue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUe(UnaryExpr newUe, NotificationChain msgs)
  {
    UnaryExpr oldUe = ue;
    ue = newUe;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.UNARY_EXPR__UE, oldUe, newUe);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUe(UnaryExpr newUe)
  {
    if (newUe != ue)
    {
      NotificationChain msgs = null;
      if (ue != null)
        msgs = ((InternalEObject)ue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.UNARY_EXPR__UE, null, msgs);
      if (newUe != null)
        msgs = ((InternalEObject)newUe).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.UNARY_EXPR__UE, null, msgs);
      msgs = basicSetUe(newUe, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.UNARY_EXPR__UE, newUe, newUe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.UNARY_EXPR__UE:
        return basicSetUe(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.UNARY_EXPR__UP:
        return getUp();
      case GoPackage.UNARY_EXPR__UE:
        return getUe();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.UNARY_EXPR__UP:
        setUp((String)newValue);
        return;
      case GoPackage.UNARY_EXPR__UE:
        setUe((UnaryExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.UNARY_EXPR__UP:
        setUp(UP_EDEFAULT);
        return;
      case GoPackage.UNARY_EXPR__UE:
        setUe((UnaryExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.UNARY_EXPR__UP:
        return UP_EDEFAULT == null ? up != null : !UP_EDEFAULT.equals(up);
      case GoPackage.UNARY_EXPR__UE:
        return ue != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (up: ");
    result.append(up);
    result.append(')');
    return result.toString();
  }

} //UnaryExprImpl
