/**
 * generated by Xtext 2.15.0-SNAPSHOT
 */
package org.xtext.example.mydsl.go.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.go.ExpressionList;
import org.xtext.example.mydsl.go.GoPackage;
import org.xtext.example.mydsl.go.ShortVarDecl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Short Var Decl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.go.impl.ShortVarDeclImpl#getIdl <em>Idl</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.go.impl.ShortVarDeclImpl#getEpl <em>Epl</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ShortVarDeclImpl extends MinimalEObjectImpl.Container implements ShortVarDecl
{
  /**
   * The default value of the '{@link #getIdl() <em>Idl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdl()
   * @generated
   * @ordered
   */
  protected static final String IDL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdl() <em>Idl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdl()
   * @generated
   * @ordered
   */
  protected String idl = IDL_EDEFAULT;

  /**
   * The cached value of the '{@link #getEpl() <em>Epl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEpl()
   * @generated
   * @ordered
   */
  protected ExpressionList epl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ShortVarDeclImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.SHORT_VAR_DECL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIdl()
  {
    return idl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdl(String newIdl)
  {
    String oldIdl = idl;
    idl = newIdl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.SHORT_VAR_DECL__IDL, oldIdl, idl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExpressionList getEpl()
  {
    return epl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEpl(ExpressionList newEpl, NotificationChain msgs)
  {
    ExpressionList oldEpl = epl;
    epl = newEpl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.SHORT_VAR_DECL__EPL, oldEpl, newEpl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEpl(ExpressionList newEpl)
  {
    if (newEpl != epl)
    {
      NotificationChain msgs = null;
      if (epl != null)
        msgs = ((InternalEObject)epl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.SHORT_VAR_DECL__EPL, null, msgs);
      if (newEpl != null)
        msgs = ((InternalEObject)newEpl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.SHORT_VAR_DECL__EPL, null, msgs);
      msgs = basicSetEpl(newEpl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.SHORT_VAR_DECL__EPL, newEpl, newEpl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.SHORT_VAR_DECL__EPL:
        return basicSetEpl(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.SHORT_VAR_DECL__IDL:
        return getIdl();
      case GoPackage.SHORT_VAR_DECL__EPL:
        return getEpl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.SHORT_VAR_DECL__IDL:
        setIdl((String)newValue);
        return;
      case GoPackage.SHORT_VAR_DECL__EPL:
        setEpl((ExpressionList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.SHORT_VAR_DECL__IDL:
        setIdl(IDL_EDEFAULT);
        return;
      case GoPackage.SHORT_VAR_DECL__EPL:
        setEpl((ExpressionList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.SHORT_VAR_DECL__IDL:
        return IDL_EDEFAULT == null ? idl != null : !IDL_EDEFAULT.equals(idl);
      case GoPackage.SHORT_VAR_DECL__EPL:
        return epl != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (idl: ");
    result.append(idl);
    result.append(')');
    return result.toString();
  }

} //ShortVarDeclImpl
