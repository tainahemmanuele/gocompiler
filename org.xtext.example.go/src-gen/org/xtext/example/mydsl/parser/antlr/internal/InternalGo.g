/*
 * generated by Xtext 2.15.0-SNAPSHOT
 */
grammar InternalGo;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.GoGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private GoGrammarAccess grammarAccess;

    public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected GoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getGreetingsCompilation_initialParserRuleCall_0());
			}
			lv_greetings_0_0=ruleCompilation_initial
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"greetings",
					lv_greetings_0_0,
					"org.xtext.example.mydsl.Go.Compilation_initial");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleCompilation_initial
entryRuleCompilation_initial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompilation_initialRule()); }
	iv_ruleCompilation_initial=ruleCompilation_initial
	{ $current=$iv_ruleCompilation_initial.current; }
	EOF;

// Rule Compilation_initial
ruleCompilation_initial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompilation_initialAccess().getCompilation_initialAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompilation_initialAccess().getInitialPackageClauseParserRuleCall_1_0_0());
					}
					lv_initial_1_0=rulePackageClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
						}
						set(
							$current,
							"initial",
							lv_initial_1_0,
							"org.xtext.example.mydsl.Go.PackageClause");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompilation_initialAccess().getImportdeclImportDeclParserRuleCall_1_1_0());
					}
					lv_importdecl_2_0=ruleImportDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
						}
						add(
							$current,
							"importdecl",
							lv_importdecl_2_0,
							"org.xtext.example.mydsl.Go.ImportDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getCompilation_initialAccess().getToplevelTopLevelDeclParserRuleCall_1_2_0());
					}
					lv_toplevel_3_0=ruleTopLevelDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
						}
						add(
							$current,
							"toplevel",
							lv_toplevel_3_0,
							"org.xtext.example.mydsl.Go.TopLevelDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleTopLevelDecl
entryRuleTopLevelDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopLevelDeclRule()); }
	iv_ruleTopLevelDecl=ruleTopLevelDecl
	{ $current=$iv_ruleTopLevelDecl.current; }
	EOF;

// Rule TopLevelDecl
ruleTopLevelDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=ruleDeclaration
		{
			$current = $this_Declaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFunctionDeclParserRuleCall_1());
		}
		this_FunctionDecl_1=ruleFunctionDecl
		{
			$current = $this_FunctionDecl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMethodDeclParserRuleCall_2());
		}
		this_MethodDecl_2=ruleMethodDecl
		{
			$current = $this_MethodDecl_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMethodDecl
entryRuleMethodDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodDeclRule()); }
	iv_ruleMethodDecl=ruleMethodDecl
	{ $current=$iv_ruleMethodDecl.current; }
	EOF;

// Rule MethodDecl
ruleMethodDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodDeclAccess().getMethodDeclAction_0(),
					$current);
			}
		)
		otherlv_1='func'
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodDeclAccess().getFuncKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_2_0());
				}
				lv_receiver_2_0=ruleReceiver
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					set(
						$current,
						"receiver",
						lv_receiver_2_0,
						"org.xtext.example.mydsl.Go.Receiver");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getMethodMethodNameParserRuleCall_3_0());
				}
				lv_method_3_0=ruleMethodName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					set(
						$current,
						"method",
						lv_method_3_0,
						"org.xtext.example.mydsl.Go.MethodName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_4_0());
				}
				lv_signature_4_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					set(
						$current,
						"signature",
						lv_signature_4_0,
						"org.xtext.example.mydsl.Go.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getBodyFunctionBodyParserRuleCall_5_0());
				}
				lv_body_5_0=ruleFunctionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					add(
						$current,
						"body",
						lv_body_5_0,
						"org.xtext.example.mydsl.Go.FunctionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReceiver
entryRuleReceiver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverRule()); }
	iv_ruleReceiver=ruleReceiver
	{ $current=$iv_ruleReceiver.current; }
	EOF;

// Rule Receiver
ruleReceiver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
	}
	this_Parameters_0=ruleParameters
	{
		$current = $this_Parameters_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFunctionName
entryRuleFunctionName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionNameRule()); }
	iv_ruleFunctionName=ruleFunctionName
	{ $current=$iv_ruleFunctionName.current.getText(); }
	EOF;

// Rule FunctionName
ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFunctionNameAccess().getIDENTIFIERParserRuleCall());
	}
	this_IDENTIFIER_0=ruleIDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDeclRule()); }
	iv_ruleFunctionDecl=ruleFunctionDecl
	{ $current=$iv_ruleFunctionDecl.current; }
	EOF;

// Rule FunctionDecl
ruleFunctionDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionDeclAccess().getFunctionDeclAction_0(),
					$current);
			}
		)
		otherlv_1='func'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionDeclAccess().getFuncKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionnFunctionNameParserRuleCall_2_0());
				}
				lv_functionn_2_0=ruleFunctionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					set(
						$current,
						"functionn",
						lv_functionn_2_0,
						"org.xtext.example.mydsl.Go.FunctionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_3_0());
				}
				lv_signature_3_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					set(
						$current,
						"signature",
						lv_signature_3_0,
						"org.xtext.example.mydsl.Go.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getBodyFunctionBodyParserRuleCall_4_0());
				}
				lv_body_4_0=ruleFunctionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					add(
						$current,
						"body",
						lv_body_4_0,
						"org.xtext.example.mydsl.Go.FunctionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulePackageClause
entryRulePackageClause returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackageClauseRule()); }
	iv_rulePackageClause=rulePackageClause
	{ $current=$iv_rulePackageClause.current.getText(); }
	EOF;

// Rule PackageClause
rulePackageClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='package'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNameParserRuleCall_1());
		}
		this_PackageName_1=rulePackageName
		{
			$current.merge(this_PackageName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIDENTIFIER
entryRuleIDENTIFIER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIDENTIFIERRule()); }
	iv_ruleIDENTIFIER=ruleIDENTIFIER
	{ $current=$iv_ruleIDENTIFIER.current.getText(); }
	EOF;

// Rule IDENTIFIER
ruleIDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LETTER_0=RULE_LETTER
		{
			$current.merge(this_LETTER_0);
		}
		{
			newLeafNode(this_LETTER_0, grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_0());
		}
		(
			this_LETTER_1=RULE_LETTER
			{
				$current.merge(this_LETTER_1);
			}
			{
				newLeafNode(this_LETTER_1, grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_1_0());
			}
			    |
			this_UNICODE_DIGIT_2=RULE_UNICODE_DIGIT
			{
				$current.merge(this_UNICODE_DIGIT_2);
			}
			{
				newLeafNode(this_UNICODE_DIGIT_2, grammarAccess.getIDENTIFIERAccess().getUNICODE_DIGITTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleIMAGINARY_LIT
entryRuleIMAGINARY_LIT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIMAGINARY_LITRule()); }
	iv_ruleIMAGINARY_LIT=ruleIMAGINARY_LIT
	{ $current=$iv_ruleIMAGINARY_LIT.current.getText(); }
	EOF;

// Rule IMAGINARY_LIT
ruleIMAGINARY_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_DECIMALS_0=RULE_DECIMALS
			{
				$current.merge(this_DECIMALS_0);
			}
			{
				newLeafNode(this_DECIMALS_0, grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0());
			}
			    |
			this_FLOAT_LIT_1=RULE_FLOAT_LIT
			{
				$current.merge(this_FLOAT_LIT_1);
			}
			{
				newLeafNode(this_FLOAT_LIT_1, grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITTerminalRuleCall_0_1());
			}
		)
		kw='\u00EF'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIMAGINARY_LITAccess().getLatinSmallLetterIWithDiaeresisKeyword_1());
		}
	)
;

// Entry rule entryRuleRUNE_LIT
entryRuleRUNE_LIT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRUNE_LITRule()); }
	iv_ruleRUNE_LIT=ruleRUNE_LIT
	{ $current=$iv_ruleRUNE_LIT.current.getText(); }
	EOF;

// Rule RUNE_LIT
ruleRUNE_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_0());
		}
		(
			this_UNICODE_VALUE_1=RULE_UNICODE_VALUE
			{
				$current.merge(this_UNICODE_VALUE_1);
			}
			{
				newLeafNode(this_UNICODE_VALUE_1, grammarAccess.getRUNE_LITAccess().getUNICODE_VALUETerminalRuleCall_1_0());
			}
			    |
			this_BYTE_VALUE_2=RULE_BYTE_VALUE
			{
				$current.merge(this_BYTE_VALUE_2);
			}
			{
				newLeafNode(this_BYTE_VALUE_2, grammarAccess.getRUNE_LITAccess().getBYTE_VALUETerminalRuleCall_1_1());
			}
		)
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_2());
		}
	)
;

// Entry rule entryRuleSTRING_LIT
entryRuleSTRING_LIT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSTRING_LITRule()); }
	iv_ruleSTRING_LIT=ruleSTRING_LIT
	{ $current=$iv_ruleSTRING_LIT.current.getText(); }
	EOF;

// Rule STRING_LIT
ruleSTRING_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_RAW_STRING_LIT_0=RULE_RAW_STRING_LIT
		{
			$current.merge(this_RAW_STRING_LIT_0);
		}
		{
			newLeafNode(this_RAW_STRING_LIT_0, grammarAccess.getSTRING_LITAccess().getRAW_STRING_LITTerminalRuleCall_0());
		}
		    |
		this_INTERPRETED_STRING_LIT_1=RULE_INTERPRETED_STRING_LIT
		{
			$current.merge(this_INTERPRETED_STRING_LIT_1);
		}
		{
			newLeafNode(this_INTERPRETED_STRING_LIT_1, grammarAccess.getSTRING_LITAccess().getINTERPRETED_STRING_LITTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeAccess().getTypeAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getTpTypeNameParserRuleCall_0_1_0());
					}
					lv_tp_1_0=ruleTypeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"tp",
							lv_tp_1_0,
							"org.xtext.example.mydsl.Go.TypeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTp2TypeLitParserRuleCall_1_0());
				}
				lv_tp2_2_0=ruleTypeLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"tp2",
						lv_tp2_2_0,
						"org.xtext.example.mydsl.Go.TypeLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getTp3TypeParserRuleCall_2_1_0());
					}
					lv_tp3_4_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"tp3",
							lv_tp3_4_0,
							"org.xtext.example.mydsl.Go.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleTypeName
entryRuleTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruleTypeName=ruleTypeName
	{ $current=$iv_ruleTypeName.current.getText(); }
	EOF;

// Rule TypeName
ruleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0());
		}
		this_IDENTIFIER_0=ruleIDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1());
		}
		this_QualifiedIdent_1=ruleQualifiedIdent
		{
			$current.merge(this_QualifiedIdent_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedIdent
entryRuleQualifiedIdent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedIdentRule()); }
	iv_ruleQualifiedIdent=ruleQualifiedIdent
	{ $current=$iv_ruleQualifiedIdent.current.getText(); }
	EOF;

// Rule QualifiedIdent
ruleQualifiedIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0());
		}
		this_PackageName_0=rulePackageName
		{
			$current.merge(this_PackageName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERParserRuleCall_2());
		}
		this_IDENTIFIER_2=ruleIDENTIFIER
		{
			$current.merge(this_IDENTIFIER_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current.getText(); }
	EOF;

// Rule PackageName
rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPackageNameAccess().getIDENTIFIERParserRuleCall());
	}
	this_IDENTIFIER_0=ruleIDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleTypeLit
entryRuleTypeLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLitRule()); }
	iv_ruleTypeLit=ruleTypeLit
	{ $current=$iv_ruleTypeLit.current; }
	EOF;

// Rule TypeLit
ruleTypeLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0());
		}
		this_ArrayType_0=ruleArrayType
		{
			$current = $this_ArrayType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1());
		}
		this_StructType_1=ruleStructType
		{
			$current = $this_StructType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2());
		}
		this_PointerType_2=rulePointerType
		{
			$current = $this_PointerType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3());
		}
		this_FunctionType_3=ruleFunctionType
		{
			$current = $this_FunctionType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4());
		}
		this_InterfaceType_4=ruleInterfaceType
		{
			$current = $this_InterfaceType_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_5());
		}
		this_SliceType_5=ruleSliceType
		{
			$current = $this_SliceType_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_6());
		}
		this_MapType_6=ruleMapType
		{
			$current = $this_MapType_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_7());
		}
		this_ChannelType_7=ruleChannelType
		{
			$current = $this_ChannelType_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArrayType
entryRuleArrayType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	iv_ruleArrayType=ruleArrayType
	{ $current=$iv_ruleArrayType.current; }
	EOF;

// Rule ArrayType
ruleArrayType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1());
		}
		this_ArrayLength_1=ruleArrayLength
		{
			$current = $this_ArrayLength_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayTypeAccess().getElemtypeElementTypeParserRuleCall_3_0());
				}
				lv_elemtype_3_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayTypeRule());
					}
					set(
						$current,
						"elemtype",
						lv_elemtype_3_0,
						"org.xtext.example.mydsl.Go.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArrayLength
entryRuleArrayLength returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayLengthRule()); }
	iv_ruleArrayLength=ruleArrayLength
	{ $current=$iv_ruleArrayLength.current; }
	EOF;

// Rule ArrayLength
ruleArrayLength returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall());
	}
	this_Expression_0=ruleExpression
	{
		$current = $this_Expression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	iv_ruleElementType=ruleElementType
	{ $current=$iv_ruleElementType.current; }
	EOF;

// Rule ElementType
ruleElementType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getElementTypeAccess().getTypeParserRuleCall());
	}
	this_Type_0=ruleType
	{
		$current = $this_Type_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSliceType
entryRuleSliceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSliceTypeRule()); }
	iv_ruleSliceType=ruleSliceType
	{ $current=$iv_ruleSliceType.current; }
	EOF;

// Rule SliceType
ruleSliceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
		}
		otherlv_1=']'
		{
			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSliceTypeAccess().getElemtypeElementTypeParserRuleCall_2_0());
				}
				lv_elemtype_2_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSliceTypeRule());
					}
					set(
						$current,
						"elemtype",
						lv_elemtype_2_0,
						"org.xtext.example.mydsl.Go.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStructType
entryRuleStructType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructTypeRule()); }
	iv_ruleStructType=ruleStructType
	{ $current=$iv_ruleStructType.current; }
	EOF;

// Rule StructType
ruleStructType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
					$current);
			}
		)
		otherlv_1='struct'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructTypeAccess().getFielddeclFieldDeclParserRuleCall_3_0_0());
					}
					lv_fielddecl_3_0=ruleFieldDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructTypeRule());
						}
						add(
							$current,
							"fielddecl",
							lv_fielddecl_3_0,
							"org.xtext.example.mydsl.Go.FieldDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldDeclRule()); }
	iv_ruleFieldDecl=ruleFieldDecl
	{ $current=$iv_ruleFieldDecl.current; }
	EOF;

// Rule FieldDecl
ruleFieldDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFieldDeclAccess().getFieldDeclAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
						}
						lv_indentifierL_1_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
							}
							set(
								$current,
								"indentifierL",
								lv_indentifierL_1_0,
								"org.xtext.example.mydsl.Go.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
						}
						lv_type_2_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
							}
							set(
								$current,
								"type",
								lv_type_2_0,
								"org.xtext.example.mydsl.Go.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedEmbeddedFieldParserRuleCall_1_1_0());
					}
					lv_embedded_3_0=ruleEmbeddedField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
						}
						set(
							$current,
							"embedded",
							lv_embedded_3_0,
							"org.xtext.example.mydsl.Go.EmbeddedField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_2_0());
				}
				lv_tag_4_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
					}
					set(
						$current,
						"tag",
						lv_tag_4_0,
						"org.xtext.example.mydsl.Go.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierListRule()); }
	iv_ruleIdentifierList=ruleIdentifierList
	{ $current=$iv_ruleIdentifierList.current; }
	EOF;

// Rule IdentifierList
ruleIdentifierList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIdentifierListAccess().getIdentifierListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentifierListAccess().getIdIDENTIFIERParserRuleCall_1_0());
				}
				lv_id_1_0=ruleIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentifierListRule());
					}
					set(
						$current,
						"id",
						lv_id_1_0,
						"org.xtext.example.mydsl.Go.IDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getIdentifierListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentifierListAccess().getId2IDENTIFIERParserRuleCall_2_1_0());
					}
					lv_id2_3_0=ruleIDENTIFIER
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentifierListRule());
						}
						add(
							$current,
							"id2",
							lv_id2_3_0,
							"org.xtext.example.mydsl.Go.IDENTIFIER");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmbeddedFieldRule()); }
	iv_ruleEmbeddedField=ruleEmbeddedField
	{ $current=$iv_ruleEmbeddedField.current.getText(); }
	EOF;

// Rule EmbeddedField
ruleEmbeddedField returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1());
		}
		this_TypeName_1=ruleTypeName
		{
			$current.merge(this_TypeName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current.getText(); }
	EOF;

// Rule Tag
ruleTag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTagAccess().getSTRING_LITParserRuleCall());
	}
	this_STRING_LIT_0=ruleSTRING_LIT
	{
		$current.merge(this_STRING_LIT_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePointerType
entryRulePointerType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointerTypeRule()); }
	iv_rulePointerType=rulePointerType
	{ $current=$iv_rulePointerType.current; }
	EOF;

// Rule PointerType
rulePointerType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='*'
		{
			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPointerTypeAccess().getBasetypeBaseTypeParserRuleCall_1_0());
				}
				lv_basetype_1_0=ruleBaseType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointerTypeRule());
					}
					set(
						$current,
						"basetype",
						lv_basetype_1_0,
						"org.xtext.example.mydsl.Go.BaseType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBaseType
entryRuleBaseType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseTypeRule()); }
	iv_ruleBaseType=ruleBaseType
	{ $current=$iv_ruleBaseType.current; }
	EOF;

// Rule BaseType
ruleBaseType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall());
	}
	this_Type_0=ruleType
	{
		$current = $this_Type_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFunctionType
entryRuleFunctionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTypeRule()); }
	iv_ruleFunctionType=ruleFunctionType
	{ $current=$iv_ruleFunctionType.current; }
	EOF;

// Rule FunctionType
ruleFunctionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1());
		}
		this_Signature_1=ruleSignature
		{
			$current = $this_Signature_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSignature
entryRuleSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignatureRule()); }
	iv_ruleSignature=ruleSignature
	{ $current=$iv_ruleSignature.current; }
	EOF;

// Rule Signature
ruleSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
				}
				lv_parameters_0_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_0_0,
						"org.xtext.example.mydsl.Go.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
				}
				lv_result_1_0=ruleResult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"result",
						lv_result_1_0,
						"org.xtext.example.mydsl.Go.Result");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleResult
entryRuleResult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultRule()); }
	iv_ruleResult=ruleResult
	{ $current=$iv_ruleResult.current; }
	EOF;

// Rule Result
ruleResult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getResultAccess().getParameteresParametersParserRuleCall_0_0());
				}
				lv_parameteres_0_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultRule());
					}
					set(
						$current,
						"parameteres",
						lv_parameteres_0_0,
						"org.xtext.example.mydsl.Go.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameters
entryRuleParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	iv_ruleParameters=ruleParameters
	{ $current=$iv_ruleParameters.current; }
	EOF;

// Rule Parameters
ruleParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getParametersAccess().getParametersAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0());
				}
				lv_parameterlist_2_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametersRule());
					}
					set(
						$current,
						"parameterlist",
						lv_parameterlist_2_0,
						"org.xtext.example.mydsl.Go.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterListAccess().getParameterListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDecl1ParameterDeclParserRuleCall_1_0());
				}
				lv_parameterDecl1_1_0=ruleParameterDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					set(
						$current,
						"parameterDecl1",
						lv_parameterDecl1_1_0,
						"org.xtext.example.mydsl.Go.ParameterDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getParameterdeclParameterDeclParserRuleCall_2_1_0());
					}
					lv_parameterdecl_3_0=ruleParameterDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"parameterdecl",
							lv_parameterdecl_3_0,
							"org.xtext.example.mydsl.Go.ParameterDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterDeclRule()); }
	iv_ruleParameterDecl=ruleParameterDecl
	{ $current=$iv_ruleParameterDecl.current; }
	EOF;

// Rule ParameterDecl
ruleParameterDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterDeclAccess().getParameterDeclAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierLIdentifierListParserRuleCall_1_0());
				}
				lv_identifierL_1_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDeclRule());
					}
					set(
						$current,
						"identifierL",
						lv_identifierL_1_0,
						"org.xtext.example.mydsl.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='...'
			{
				newLeafNode(otherlv_2, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.mydsl.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeRule()); }
	iv_ruleInterfaceType=ruleInterfaceType
	{ $current=$iv_ruleInterfaceType.current; }
	EOF;

// Rule InterfaceType
ruleInterfaceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
					$current);
			}
		)
		otherlv_1='interface'
		{
			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodspecMethodSpecParserRuleCall_3_0_0());
					}
					lv_methodspec_3_0=ruleMethodSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
						}
						add(
							$current,
							"methodspec",
							lv_methodspec_3_0,
							"org.xtext.example.mydsl.Go.MethodSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodSpecRule()); }
	iv_ruleMethodSpec=ruleMethodSpec
	{ $current=$iv_ruleMethodSpec.current; }
	EOF;

// Rule MethodSpec
ruleMethodSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSpecAccess().getMnMethodNameParserRuleCall_0_0_0());
					}
					lv_mn_0_0=ruleMethodName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
						}
						set(
							$current,
							"mn",
							lv_mn_0_0,
							"org.xtext.example.mydsl.Go.MethodName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
					}
					lv_signature_1_0=ruleSignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
						}
						set(
							$current,
							"signature",
							lv_signature_1_0,
							"org.xtext.example.mydsl.Go.Signature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getMethodSpecAccess().getMethodSpecAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSpecAccess().getItnInterfaceTypeNameParserRuleCall_1_1_0());
					}
					lv_itn_3_0=ruleInterfaceTypeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
						}
						set(
							$current,
							"itn",
							lv_itn_3_0,
							"org.xtext.example.mydsl.Go.InterfaceTypeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMethodName
entryRuleMethodName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); }
	iv_ruleMethodName=ruleMethodName
	{ $current=$iv_ruleMethodName.current.getText(); }
	EOF;

// Rule MethodName
ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getMethodNameAccess().getIDENTIFIERParserRuleCall());
	}
	this_IDENTIFIER_0=ruleIDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); }
	iv_ruleInterfaceTypeName=ruleInterfaceTypeName
	{ $current=$iv_ruleInterfaceTypeName.current.getText(); }
	EOF;

// Rule InterfaceTypeName
ruleInterfaceTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall());
	}
	this_TypeName_0=ruleTypeName
	{
		$current.merge(this_TypeName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleMapType
entryRuleMapType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapTypeRule()); }
	iv_ruleMapType=ruleMapType
	{ $current=$iv_ruleMapType.current; }
	EOF;

// Rule MapType
ruleMapType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='map'
		{
			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getKeytypeKeyTypeParserRuleCall_2_0());
				}
				lv_keytype_2_0=ruleKeyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"keytype",
						lv_keytype_2_0,
						"org.xtext.example.mydsl.Go.KeyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getElemtypeElementTypeParserRuleCall_4_0());
				}
				lv_elemtype_4_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"elemtype",
						lv_elemtype_4_0,
						"org.xtext.example.mydsl.Go.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyType
entryRuleKeyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyTypeRule()); }
	iv_ruleKeyType=ruleKeyType
	{ $current=$iv_ruleKeyType.current; }
	EOF;

// Rule KeyType
ruleKeyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall());
	}
	this_Type_0=ruleType
	{
		$current = $this_Type_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleChannelType
entryRuleChannelType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelTypeRule()); }
	iv_ruleChannelType=ruleChannelType
	{ $current=$iv_ruleChannelType.current; }
	EOF;

// Rule ChannelType
ruleChannelType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='chan'
				{
					newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0_0());
				}
				(
					otherlv_1='<-'
					{
						newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_0_1());
					}
				)?
			)
			    |
			(
				otherlv_2='<-'
				{
					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0());
				}
				otherlv_3='chan'
				{
					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChannelTypeAccess().getElemtypeElementTypeParserRuleCall_1_0());
				}
				lv_elemtype_4_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChannelTypeRule());
					}
					set(
						$current,
						"elemtype",
						lv_elemtype_4_0,
						"org.xtext.example.mydsl.Go.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1());
		}
		this_StatementList_1=ruleStatementList
		{
			$current = $this_StatementList_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleStatementList
entryRuleStatementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementListRule()); }
	iv_ruleStatementList=ruleStatementList
	{ $current=$iv_ruleStatementList.current; }
	EOF;

// Rule StatementList
ruleStatementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementListAccess().getStatementListAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementListAccess().getStatmentStatementParserRuleCall_1_0_0());
					}
					lv_statment_1_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementListRule());
						}
						add(
							$current,
							"statment",
							lv_statment_1_0,
							"org.xtext.example.mydsl.Go.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=';'
				{
					newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1());
				}
			)?
		)*
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_1_0());
					}
					lv_declaration_1_0=ruleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"declaration",
							lv_declaration_1_0,
							"org.xtext.example.mydsl.Go.Declaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0());
				}
				lv_labest_2_0=ruleLabeledStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"labest",
						lv_labest_2_0,
						"org.xtext.example.mydsl.Go.LabeledStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0());
				}
				lv_simplest_3_0=ruleSimpleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"simplest",
						lv_simplest_3_0,
						"org.xtext.example.mydsl.Go.SimpleStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
				}
				lv_gotst_4_0=ruleGoStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"gotst",
						lv_gotst_4_0,
						"org.xtext.example.mydsl.Go.GoStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4());
		}
		this_ReturnStmt_5=ruleReturnStmt
		{
			$current = $this_ReturnStmt_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBreakstBreakStmtParserRuleCall_5_0());
				}
				lv_breakst_6_0=ruleBreakStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"breakst",
						lv_breakst_6_0,
						"org.xtext.example.mydsl.Go.BreakStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getContinuestContinueStmtParserRuleCall_6_0());
				}
				lv_continuest_7_0=ruleContinueStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"continuest",
						lv_continuest_7_0,
						"org.xtext.example.mydsl.Go.ContinueStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
				}
				lv_gotost_8_0=ruleGotoStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"gotost",
						lv_gotost_8_0,
						"org.xtext.example.mydsl.Go.GotoStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getFalltstFallthroughStmtParserRuleCall_8_0());
				}
				lv_falltst_9_0=ruleFallthroughStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"falltst",
						lv_falltst_9_0,
						"org.xtext.example.mydsl.Go.FallthroughStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBlock1BlockParserRuleCall_9_0());
				}
				lv_block1_10_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"block1",
						lv_block1_10_0,
						"org.xtext.example.mydsl.Go.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getIfIfStmtParserRuleCall_10_0());
				}
				lv_if_11_0=ruleIfStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"if",
						lv_if_11_0,
						"org.xtext.example.mydsl.Go.IfStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSwitchSwitchStmtParserRuleCall_11_0());
				}
				lv_switch_12_0=ruleSwitchStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"switch",
						lv_switch_12_0,
						"org.xtext.example.mydsl.Go.SwitchStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSelectstSelectStmtParserRuleCall_12_0());
				}
				lv_selectst_13_0=ruleSelectStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"selectst",
						lv_selectst_13_0,
						"org.xtext.example.mydsl.Go.SelectStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getForstForStmtParserRuleCall_13_0());
				}
				lv_forst_14_0=ruleForStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"forst",
						lv_forst_14_0,
						"org.xtext.example.mydsl.Go.ForStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getDeferstDeferStmtParserRuleCall_14_0());
				}
				lv_deferst_15_0=ruleDeferStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"deferst",
						lv_deferst_15_0,
						"org.xtext.example.mydsl.Go.DeferStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0());
		}
		this_ConstDecl_0=ruleConstDecl
		{
			$current = $this_ConstDecl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1());
		}
		this_TypeDecl_1=ruleTypeDecl
		{
			$current = $this_TypeDecl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2());
		}
		this_VarDecl_2=ruleVarDecl
		{
			$current = $this_VarDecl_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabeledStmt
entryRuleLabeledStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledStmtRule()); }
	iv_ruleLabeledStmt=ruleLabeledStmt
	{ $current=$iv_ruleLabeledStmt.current; }
	EOF;

// Rule LabeledStmt
ruleLabeledStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0());
				}
				lv_label_0_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
					}
					set(
						$current,
						"label",
						lv_label_0_0,
						"org.xtext.example.mydsl.Go.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
				}
				lv_statement_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
					}
					set(
						$current,
						"statement",
						lv_statement_2_0,
						"org.xtext.example.mydsl.Go.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleStmt
entryRuleSimpleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStmtRule()); }
	iv_ruleSimpleStmt=ruleSimpleStmt
	{ $current=$iv_ruleSimpleStmt.current; }
	EOF;

// Rule SimpleStmt
ruleSimpleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSimpleStmtAccess().getSimpleStmtAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyEmptyStmtParserRuleCall_0_1_0());
					}
					lv_empty_1_0=ruleEmptyStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
						}
						set(
							$current,
							"empty",
							lv_empty_1_0,
							"org.xtext.example.mydsl.Go.EmptyStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEsExpressionStmtParserRuleCall_1_0());
				}
				lv_es_2_0=ruleExpressionStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"es",
						lv_es_2_0,
						"org.xtext.example.mydsl.Go.ExpressionStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSsSendStmtParserRuleCall_2_0());
				}
				lv_ss_3_0=ruleSendStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"ss",
						lv_ss_3_0,
						"org.xtext.example.mydsl.Go.SendStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncIncDecStmtParserRuleCall_3_0());
				}
				lv_inc_4_0=ruleIncDecStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"inc",
						lv_inc_4_0,
						"org.xtext.example.mydsl.Go.IncDecStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssAssignmentParserRuleCall_4_0());
				}
				lv_ass_5_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"ass",
						lv_ass_5_0,
						"org.xtext.example.mydsl.Go.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSvdShortVarDeclParserRuleCall_5_0());
				}
				lv_svd_6_0=ruleShortVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"svd",
						lv_svd_6_0,
						"org.xtext.example.mydsl.Go.ShortVarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGoStmt
entryRuleGoStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGoStmtRule()); }
	iv_ruleGoStmt=ruleGoStmt
	{ $current=$iv_ruleGoStmt.current.getText(); }
	EOF;

// Rule GoStmt
ruleGoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='goto'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getGoStmtAccess().getGotoKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getGoStmtAccess().getLabelParserRuleCall_1());
		}
		this_Label_1=ruleLabel
		{
			$current.merge(this_Label_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStmtRule()); }
	iv_ruleReturnStmt=ruleReturnStmt
	{ $current=$iv_ruleReturnStmt.current; }
	EOF;

// Rule ReturnStmt
ruleReturnStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
				}
				lv_expressionlist_2_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStmtRule());
					}
					set(
						$current,
						"expressionlist",
						lv_expressionlist_2_0,
						"org.xtext.example.mydsl.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleBreakStmt
entryRuleBreakStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBreakStmtRule()); }
	iv_ruleBreakStmt=ruleBreakStmt
	{ $current=$iv_ruleBreakStmt.current.getText(); }
	EOF;

// Rule BreakStmt
ruleBreakStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='break'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBreakStmtAccess().getBreakKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
			}
			this_Label_1=ruleLabel
			{
				$current.merge(this_Label_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleContinueStmt
entryRuleContinueStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContinueStmtRule()); }
	iv_ruleContinueStmt=ruleContinueStmt
	{ $current=$iv_ruleContinueStmt.current.getText(); }
	EOF;

// Rule ContinueStmt
ruleContinueStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='continue'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContinueStmtAccess().getContinueKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
			}
			this_Label_1=ruleLabel
			{
				$current.merge(this_Label_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleGotoStmt
entryRuleGotoStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGotoStmtRule()); }
	iv_ruleGotoStmt=ruleGotoStmt
	{ $current=$iv_ruleGotoStmt.current.getText(); }
	EOF;

// Rule GotoStmt
ruleGotoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='goto'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1());
		}
		this_Label_1=ruleLabel
		{
			$current.merge(this_Label_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current; }
	EOF;

// Rule IfStmt
ruleIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
					}
					lv_simst_1_0=ruleSimpleStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"simst",
							lv_simst_1_0,
							"org.xtext.example.mydsl.Go.SimpleStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
				}
				lv_block_4_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"block",
						lv_block_4_0,
						"org.xtext.example.mydsl.Go.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIfStmtAccess().getIfsIfStmtParserRuleCall_4_1_0_0());
						}
						lv_ifs_6_0=ruleIfStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfStmtRule());
							}
							set(
								$current,
								"ifs",
								lv_ifs_6_0,
								"org.xtext.example.mydsl.Go.IfStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getIfStmtAccess().getBlock2BlockParserRuleCall_4_1_1_0());
						}
						lv_block2_7_0=ruleBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfStmtRule());
							}
							set(
								$current,
								"block2",
								lv_block2_7_0,
								"org.xtext.example.mydsl.Go.Block");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleFallthroughStmt
entryRuleFallthroughStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFallthroughStmtRule()); }
	iv_ruleFallthroughStmt=ruleFallthroughStmt
	{ $current=$iv_ruleFallthroughStmt.current.getText(); }
	EOF;

// Rule FallthroughStmt
ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='fallthrough'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
	}
;

// Entry rule entryRuleSwitchStmt
entryRuleSwitchStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStmtRule()); }
	iv_ruleSwitchStmt=ruleSwitchStmt
	{ $current=$iv_ruleSwitchStmt.current; }
	EOF;

// Rule SwitchStmt
ruleSwitchStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtParserRuleCall_0());
		}
		this_ExprSwitchStmt_0=ruleExprSwitchStmt
		{
			$current = $this_ExprSwitchStmt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtParserRuleCall_1());
		}
		this_TypeSwitchStmt_1=ruleTypeSwitchStmt
		{
			$current = $this_TypeSwitchStmt_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSelectStmt
entryRuleSelectStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectStmtRule()); }
	iv_ruleSelectStmt=ruleSelectStmt
	{ $current=$iv_ruleSelectStmt.current; }
	EOF;

// Rule SelectStmt
ruleSelectStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
					$current);
			}
		)
		otherlv_1='select'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommclauseCommClauseParserRuleCall_3_0());
				}
				lv_commclause_3_0=ruleCommClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectStmtRule());
					}
					add(
						$current,
						"commclause",
						lv_commclause_3_0,
						"org.xtext.example.mydsl.Go.CommClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleForStmt
entryRuleForStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStmtRule()); }
	iv_ruleForStmt=ruleForStmt
	{ $current=$iv_ruleForStmt.current; }
	EOF;

// Rule ForStmt
ruleForStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getForStmtAccess().getForStmtAction_0(),
					$current);
			}
		)
		otherlv_1='for'
		{
			newLeafNode(otherlv_1, grammarAccess.getForStmtAccess().getForKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_2_0_0());
					}
					lv_condition_2_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtRule());
						}
						add(
							$current,
							"condition",
							lv_condition_2_0,
							"org.xtext.example.mydsl.Go.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_2_1_0());
					}
					lv_for_3_0=ruleForClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtRule());
						}
						add(
							$current,
							"for",
							lv_for_3_0,
							"org.xtext.example.mydsl.Go.ForClause");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_2_2_0());
					}
					lv_range_4_0=ruleRangeClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtRule());
						}
						add(
							$current,
							"range",
							lv_range_4_0,
							"org.xtext.example.mydsl.Go.RangeClause");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_3_0());
				}
				lv_block_5_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"block",
						lv_block_5_0,
						"org.xtext.example.mydsl.Go.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeferStmt
entryRuleDeferStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeferStmtRule()); }
	iv_ruleDeferStmt=ruleDeferStmt
	{ $current=$iv_ruleDeferStmt.current; }
	EOF;

// Rule DeferStmt
ruleDeferStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='defer'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current = $this_Expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConstDecl
entryRuleConstDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstDeclRule()); }
	iv_ruleConstDecl=ruleConstDecl
	{ $current=$iv_ruleConstDecl.current; }
	EOF;

// Rule ConstDecl
ruleConstDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
					$current);
			}
		)
		otherlv_1='const'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstDeclAccess().getConstspecConstSpecParserRuleCall_2_0_0());
					}
					lv_constspec_2_0=ruleConstSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstDeclRule());
						}
						set(
							$current,
							"constspec",
							lv_constspec_2_0,
							"org.xtext.example.mydsl.Go.ConstSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConstDeclAccess().getConstspec2ConstSpecParserRuleCall_2_1_1_0_0());
							}
							lv_constspec2_4_0=ruleConstSpec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConstDeclRule());
								}
								add(
									$current,
									"constspec2",
									lv_constspec2_4_0,
									"org.xtext.example.mydsl.Go.ConstSpec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_5=';'
						{
							newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1());
						}
					)?
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleConstSpec
entryRuleConstSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstSpecRule()); }
	iv_ruleConstSpec=ruleConstSpec
	{ $current=$iv_ruleConstSpec.current; }
	EOF;

// Rule ConstSpec
ruleConstSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstSpecAccess().getIdIdentifierListParserRuleCall_0_0());
				}
				lv_id_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstSpecRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"org.xtext.example.mydsl.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstSpecAccess().getTpTypeParserRuleCall_1_0_0());
					}
					lv_tp_1_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstSpecRule());
						}
						set(
							$current,
							"tp",
							lv_tp_1_0,
							"org.xtext.example.mydsl.Go.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_1_2_0());
					}
					lv_expressionlist_3_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstSpecRule());
						}
						set(
							$current,
							"expressionlist",
							lv_expressionlist_3_0,
							"org.xtext.example.mydsl.Go.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	iv_ruleTypeDecl=ruleTypeDecl
	{ $current=$iv_ruleTypeDecl.current; }
	EOF;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
					$current);
			}
		)
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespecTypeSpecParserRuleCall_2_0_0());
					}
					lv_typespec_2_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDeclRule());
						}
						set(
							$current,
							"typespec",
							lv_typespec_2_0,
							"org.xtext.example.mydsl.Go.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespec2TypeSpecParserRuleCall_2_1_1_0_0());
							}
							lv_typespec2_4_0=ruleTypeSpec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTypeDeclRule());
								}
								add(
									$current,
									"typespec2",
									lv_typespec2_4_0,
									"org.xtext.example.mydsl.Go.TypeSpec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecRule()); }
	iv_ruleTypeSpec=ruleTypeSpec
	{ $current=$iv_ruleTypeSpec.current; }
	EOF;

// Rule TypeSpec
ruleTypeSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
		}
		this_AliasDecl_0=ruleAliasDecl
		{
			$current = $this_AliasDecl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
		}
		this_TypeDef_1=ruleTypeDef
		{
			$current = $this_TypeDef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDefAccess().getIdIDENTIFIERParserRuleCall_0_0());
				}
				lv_id_0_0=ruleIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDefRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"org.xtext.example.mydsl.Go.IDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDefAccess().getTpTypeParserRuleCall_1_0());
				}
				lv_tp_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDefRule());
					}
					set(
						$current,
						"tp",
						lv_tp_1_0,
						"org.xtext.example.mydsl.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasDeclRule()); }
	iv_ruleAliasDecl=ruleAliasDecl
	{ $current=$iv_ruleAliasDecl.current; }
	EOF;

// Rule AliasDecl
ruleAliasDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getAliasDeclAccess().getAliasDeclAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasDeclAccess().getIdIDENTIFIERParserRuleCall_1_0());
				}
				lv_id_1_0=ruleIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasDeclRule());
					}
					set(
						$current,
						"id",
						lv_id_1_0,
						"org.xtext.example.mydsl.Go.IDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasDeclAccess().getTpTypeParserRuleCall_3_0());
				}
				lv_tp_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasDeclRule());
					}
					set(
						$current,
						"tp",
						lv_tp_3_0,
						"org.xtext.example.mydsl.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
					$current);
			}
		)
		otherlv_1='var'
		{
			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getVarspecVarSpecParserRuleCall_2_0_0());
					}
					lv_varspec_2_0=ruleVarSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDeclRule());
						}
						set(
							$current,
							"varspec",
							lv_varspec_2_0,
							"org.xtext.example.mydsl.Go.VarSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getVarDeclAccess().getVarspec2VarSpecParserRuleCall_2_1_1_0_0());
							}
							lv_varspec2_4_0=ruleVarSpec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVarDeclRule());
								}
								add(
									$current,
									"varspec2",
									lv_varspec2_4_0,
									"org.xtext.example.mydsl.Go.VarSpec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleVarSpec
entryRuleVarSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarSpecRule()); }
	iv_ruleVarSpec=ruleVarSpec
	{ $current=$iv_ruleVarSpec.current; }
	EOF;

// Rule VarSpec
ruleVarSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarSpecAccess().getIdIdentifierListParserRuleCall_0_0());
				}
				lv_id_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarSpecRule());
					}
					set(
						$current,
						"id",
						lv_id_0_0,
						"org.xtext.example.mydsl.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVarSpecAccess().getTp2TypeParserRuleCall_1_0());
				}
				lv_tp2_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarSpecRule());
					}
					set(
						$current,
						"tp2",
						lv_tp2_1_0,
						"org.xtext.example.mydsl.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionlistExpressionListParserRuleCall_2_1_0());
					}
					lv_expressionlist_3_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarSpecRule());
						}
						set(
							$current,
							"expressionlist",
							lv_expressionlist_3_0,
							"org.xtext.example.mydsl.Go.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEmptyStmt
entryRuleEmptyStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmptyStmtRule()); }
	iv_ruleEmptyStmt=ruleEmptyStmt
	{ $current=$iv_ruleEmptyStmt.current.getText(); }
	EOF;

// Rule EmptyStmt
ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=';'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEmptyStmtAccess().getSemicolonKeyword());
	}
;

// Entry rule entryRuleExpressionStmt
entryRuleExpressionStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionStmtRule()); }
	iv_ruleExpressionStmt=ruleExpressionStmt
	{ $current=$iv_ruleExpressionStmt.current; }
	EOF;

// Rule ExpressionStmt
ruleExpressionStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpExpressionParserRuleCall_0());
			}
			lv_exp_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
				}
				set(
					$current,
					"exp",
					lv_exp_0_0,
					"org.xtext.example.mydsl.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSendStmt
entryRuleSendStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendStmtRule()); }
	iv_ruleSendStmt=ruleSendStmt
	{ $current=$iv_ruleSendStmt.current; }
	EOF;

// Rule SendStmt
ruleSendStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSendStmtAccess().getChChannelParserRuleCall_0_0());
				}
				lv_ch_0_0=ruleChannel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendStmtRule());
					}
					set(
						$current,
						"ch",
						lv_ch_0_0,
						"org.xtext.example.mydsl.Go.Channel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='<-'
		{
			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendStmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChannel
entryRuleChannel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelRule()); }
	iv_ruleChannel=ruleChannel
	{ $current=$iv_ruleChannel.current; }
	EOF;

// Rule Channel
ruleChannel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getChannelAccess().getExpExpressionParserRuleCall_0());
			}
			lv_exp_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getChannelRule());
				}
				set(
					$current,
					"exp",
					lv_exp_0_0,
					"org.xtext.example.mydsl.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIncDecStmt
entryRuleIncDecStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncDecStmtRule()); }
	iv_ruleIncDecStmt=ruleIncDecStmt
	{ $current=$iv_ruleIncDecStmt.current; }
	EOF;

// Rule IncDecStmt
ruleIncDecStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpExpressionParserRuleCall_0_0());
				}
				lv_exp_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
					}
					set(
						$current,
						"exp",
						lv_exp_0_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='++'
			{
				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
			}
			    |
			otherlv_2='--'
			{
				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlistExpressionListParserRuleCall_0_0());
				}
				lv_expressionlist_0_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"expressionlist",
						lv_expressionlist_0_0,
						"org.xtext.example.mydsl.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_asop_1_0=RULE_ASSING_OP
				{
					newLeafNode(lv_asop_1_0, grammarAccess.getAssignmentAccess().getAsopASSING_OPTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
					setWithLastConsumed(
						$current,
						"asop",
						lv_asop_1_0,
						"org.xtext.example.mydsl.Go.ASSING_OP");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlist2ExpressionListParserRuleCall_2_0());
				}
				lv_expressionlist2_2_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"expressionlist2",
						lv_expressionlist2_2_0,
						"org.xtext.example.mydsl.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleShortVarDecl
entryRuleShortVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortVarDeclRule()); }
	iv_ruleShortVarDecl=ruleShortVarDecl
	{ $current=$iv_ruleShortVarDecl.current; }
	EOF;

// Rule ShortVarDecl
ruleShortVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getShortVarDeclAccess().getShortVarDeclAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdlIdentifierListParserRuleCall_1_0());
				}
				lv_idl_1_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
					}
					set(
						$current,
						"idl",
						lv_idl_1_0,
						"org.xtext.example.mydsl.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':='
		{
			newLeafNode(otherlv_2, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShortVarDeclAccess().getEplExpressionListParserRuleCall_3_0());
				}
				lv_epl_3_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
					}
					set(
						$current,
						"epl",
						lv_epl_3_0,
						"org.xtext.example.mydsl.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprSwitchStmt
entryRuleExprSwitchStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprSwitchStmtRule()); }
	iv_ruleExprSwitchStmt=ruleExprSwitchStmt
	{ $current=$iv_ruleExprSwitchStmt.current; }
	EOF;

// Rule ExprSwitchStmt
ruleExprSwitchStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0(),
					$current);
			}
		)
		otherlv_1='switch'
		{
			newLeafNode(otherlv_1, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
					}
					lv_simplestmt_2_0=ruleSimpleStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
						}
						set(
							$current,
							"simplestmt",
							lv_simplestmt_2_0,
							"org.xtext.example.mydsl.Go.SimpleStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_2_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprcaseExprCaseClauseParserRuleCall_5_0());
				}
				lv_exprcase_6_0=ruleExprCaseClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
					}
					add(
						$current,
						"exprcase",
						lv_exprcase_6_0,
						"org.xtext.example.mydsl.Go.ExprCaseClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleExprCaseClause
entryRuleExprCaseClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprCaseClauseRule()); }
	iv_ruleExprCaseClause=ruleExprCaseClause
	{ $current=$iv_ruleExprCaseClause.current; }
	EOF;

// Rule ExprCaseClause
ruleExprCaseClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseParserRuleCall_0());
		}
		this_ExprSwitchCase_0=ruleExprSwitchCase
		{
			$current = $this_ExprSwitchCase_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
				}
				lv_statementlist_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
					}
					set(
						$current,
						"statementlist",
						lv_statementlist_2_0,
						"org.xtext.example.mydsl.Go.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprSwitchCase
entryRuleExprSwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprSwitchCaseRule()); }
	iv_ruleExprSwitchCase=ruleExprSwitchCase
	{ $current=$iv_ruleExprSwitchCase.current; }
	EOF;

// Rule ExprSwitchCase
ruleExprSwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_0_0(),
						$current);
				}
			)
			otherlv_1='case'
			{
				newLeafNode(otherlv_1, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionlistExpressionListParserRuleCall_0_2_0());
					}
					lv_expressionlist_2_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
						}
						set(
							$current,
							"expressionlist",
							lv_expressionlist_2_0,
							"org.xtext.example.mydsl.Go.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
						$current);
				}
			)
			otherlv_4='default'
			{
				newLeafNode(otherlv_4, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleTypeSwitchStmt
entryRuleTypeSwitchStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); }
	iv_ruleTypeSwitchStmt=ruleTypeSwitchStmt
	{ $current=$iv_ruleTypeSwitchStmt.current; }
	EOF;

// Rule TypeSwitchStmt
ruleTypeSwitchStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimplestmSimpleStmtParserRuleCall_1_0_0());
					}
					lv_simplestm_1_0=ruleSimpleStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
						}
						set(
							$current,
							"simplestm",
							lv_simplestm_1_0,
							"org.xtext.example.mydsl.Go.SimpleStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypesgTypeSwitchGuardParserRuleCall_2_0());
				}
				lv_typesg_3_0=ruleTypeSwitchGuard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
					}
					set(
						$current,
						"typesg",
						lv_typesg_3_0,
						"org.xtext.example.mydsl.Go.TypeSwitchGuard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeccTypeCaseClauseParserRuleCall_4_0());
				}
				lv_typecc_5_0=ruleTypeCaseClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
					}
					add(
						$current,
						"typecc",
						lv_typecc_5_0,
						"org.xtext.example.mydsl.Go.TypeCaseClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeSwitchGuard
entryRuleTypeSwitchGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); }
	iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard
	{ $current=$iv_ruleTypeSwitchGuard.current; }
	EOF;

// Rule TypeSwitchGuard
ruleTypeSwitchGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getIdIDENTIFIERParserRuleCall_0_0_0());
					}
					lv_id_0_0=ruleIDENTIFIER
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
						}
						set(
							$current,
							"id",
							lv_id_0_0,
							"org.xtext.example.mydsl.Go.IDENTIFIER");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':='
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPerPrimaryExprParserRuleCall_1_0());
				}
				lv_per_2_0=rulePrimaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
					}
					set(
						$current,
						"per",
						lv_per_2_0,
						"org.xtext.example.mydsl.Go.PrimaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
		}
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeCaseClause
entryRuleTypeCaseClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeCaseClauseRule()); }
	iv_ruleTypeCaseClause=ruleTypeCaseClause
	{ $current=$iv_ruleTypeCaseClause.current; }
	EOF;

// Rule TypeCaseClause
ruleTypeCaseClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0());
		}
		this_TypeSwitchCase_0=ruleTypeSwitchCase
		{
			$current = $this_TypeSwitchCase_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
				}
				lv_statementlist_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
					}
					set(
						$current,
						"statementlist",
						lv_statementlist_2_0,
						"org.xtext.example.mydsl.Go.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSwitchCase
entryRuleTypeSwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); }
	iv_ruleTypeSwitchCase=ruleTypeSwitchCase
	{ $current=$iv_ruleTypeSwitchCase.current; }
	EOF;

// Rule TypeSwitchCase
ruleTypeSwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_0_0(),
						$current);
				}
			)
			otherlv_1='case'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypelistTypeListParserRuleCall_0_2_0());
					}
					lv_typelist_2_0=ruleTypeList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
						}
						set(
							$current,
							"typelist",
							lv_typelist_2_0,
							"org.xtext.example.mydsl.Go.TypeList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
						$current);
				}
			)
			otherlv_4='default'
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleTypeList
entryRuleTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeListRule()); }
	iv_ruleTypeList=ruleTypeList
	{ $current=$iv_ruleTypeList.current; }
	EOF;

// Rule TypeList
ruleTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypeListAccess().getTypeListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeListRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeListAccess().getType2TypeParserRuleCall_2_1_0());
					}
					lv_type2_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeListRule());
						}
						add(
							$current,
							"type2",
							lv_type2_3_0,
							"org.xtext.example.mydsl.Go.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommClause
entryRuleCommClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommClauseRule()); }
	iv_ruleCommClause=ruleCommClause
	{ $current=$iv_ruleCommClause.current; }
	EOF;

// Rule CommClause
ruleCommClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0());
		}
		this_CommCase_0=ruleCommCase
		{
			$current = $this_CommCase_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementlist2StatementListParserRuleCall_2_0());
				}
				lv_statementlist2_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommClauseRule());
					}
					set(
						$current,
						"statementlist2",
						lv_statementlist2_2_0,
						"org.xtext.example.mydsl.Go.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCommCase
entryRuleCommCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommCaseRule()); }
	iv_ruleCommCase=ruleCommCase
	{ $current=$iv_ruleCommCase.current; }
	EOF;

// Rule CommCase
ruleCommCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommCaseAccess().getCommCaseAction_0_0(),
						$current);
				}
			)
			otherlv_1='case'
			{
				newLeafNode(otherlv_1, grammarAccess.getCommCaseAccess().getCaseKeyword_0_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
						}
						lv_sendstmt_2_0=ruleSendStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommCaseRule());
							}
							set(
								$current,
								"sendstmt",
								lv_sendstmt_2_0,
								"org.xtext.example.mydsl.Go.SendStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvstmtRecvStmtParserRuleCall_0_2_1_0());
						}
						lv_recvstmt_3_0=ruleRecvStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommCaseRule());
							}
							set(
								$current,
								"recvstmt",
								lv_recvstmt_3_0,
								"org.xtext.example.mydsl.Go.RecvStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
						$current);
				}
			)
			otherlv_5='default'
			{
				newLeafNode(otherlv_5, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleRecvStmt
entryRuleRecvStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecvStmtRule()); }
	iv_ruleRecvStmt=ruleRecvStmt
	{ $current=$iv_ruleRecvStmt.current; }
	EOF;

// Rule RecvStmt
ruleRecvStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListParserRuleCall_0_0_0());
				}
				this_ExpressionList_0=ruleExpressionList
				{
					$current = $this_ExpressionList_0.current;
					afterParserOrEnumRuleCall();
				}
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
						}
						lv_idl_2_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecvStmtRule());
							}
							set(
								$current,
								"idl",
								lv_idl_2_0,
								"org.xtext.example.mydsl.Go.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=':='
				{
					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRecvStmtAccess().getRecvexprRecvExprParserRuleCall_1_0());
				}
				lv_recvexpr_4_0=ruleRecvExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecvStmtRule());
					}
					set(
						$current,
						"recvexpr",
						lv_recvexpr_4_0,
						"org.xtext.example.mydsl.Go.RecvExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRecvExpr
entryRuleRecvExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecvExprRule()); }
	iv_ruleRecvExpr=ruleRecvExpr
	{ $current=$iv_ruleRecvExpr.current; }
	EOF;

// Rule RecvExpr
ruleRecvExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRecvExprAccess().getExpExpressionParserRuleCall_0());
			}
			lv_exp_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRecvExprRule());
				}
				set(
					$current,
					"exp",
					lv_exp_0_0,
					"org.xtext.example.mydsl.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConditionAccess().getExpExpressionParserRuleCall_0());
			}
			lv_exp_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConditionRule());
				}
				set(
					$current,
					"exp",
					lv_exp_0_0,
					"org.xtext.example.mydsl.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleForClause
entryRuleForClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForClauseRule()); }
	iv_ruleForClause=ruleForClause
	{ $current=$iv_ruleForClause.current; }
	EOF;

// Rule ForClause
ruleForClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getForClauseAccess().getInitInitStmtParserRuleCall_0_0());
				}
				lv_init_0_0=ruleInitStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForClauseRule());
					}
					set(
						$current,
						"init",
						lv_init_0_0,
						"org.xtext.example.mydsl.Go.InitStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getForClauseAccess().getSemicolonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForClauseRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.xtext.example.mydsl.Go.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getForClauseAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForClauseAccess().getPoststmtPostStmtParserRuleCall_4_0());
				}
				lv_poststmt_4_0=rulePostStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForClauseRule());
					}
					set(
						$current,
						"poststmt",
						lv_poststmt_4_0,
						"org.xtext.example.mydsl.Go.PostStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRangeClause
entryRuleRangeClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeClauseRule()); }
	iv_ruleRangeClause=ruleRangeClause
	{ $current=$iv_ruleRangeClause.current; }
	EOF;

// Rule RangeClause
ruleRangeClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionlistExpressionListParserRuleCall_0_0_0_0());
						}
						lv_expressionlist_0_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangeClauseRule());
							}
							set(
								$current,
								"expressionlist",
								lv_expressionlist_0_0,
								"org.xtext.example.mydsl.Go.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
						}
						lv_idl_2_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangeClauseRule());
							}
							set(
								$current,
								"idl",
								lv_idl_2_0,
								"org.xtext.example.mydsl.Go.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=':='
				{
					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
				}
			)
		)?
		otherlv_4='range'
		{
			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeClauseRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInitStmt
entryRuleInitStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitStmtRule()); }
	iv_ruleInitStmt=ruleInitStmt
	{ $current=$iv_ruleInitStmt.current; }
	EOF;

// Rule InitStmt
ruleInitStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInitStmtAccess().getSimpleSimpleStmtParserRuleCall_0());
			}
			lv_simple_0_0=ruleSimpleStmt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInitStmtRule());
				}
				set(
					$current,
					"simple",
					lv_simple_0_0,
					"org.xtext.example.mydsl.Go.SimpleStmt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePostStmt
entryRulePostStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostStmtRule()); }
	iv_rulePostStmt=rulePostStmt
	{ $current=$iv_rulePostStmt.current; }
	EOF;

// Rule PostStmt
rulePostStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleSimpleStmtParserRuleCall_0());
			}
			lv_simple_0_0=ruleSimpleStmt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPostStmtRule());
				}
				set(
					$current,
					"simple",
					lv_simple_0_0,
					"org.xtext.example.mydsl.Go.SimpleStmt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current.getText(); }
	EOF;

// Rule Label
ruleLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getLabelAccess().getIDENTIFIERParserRuleCall());
	}
	this_IDENTIFIER_0=ruleIDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	iv_ruleExpressionList=ruleExpressionList
	{ $current=$iv_ruleExpressionList.current; }
	EOF;

// Rule ExpressionList
ruleExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionListAccess().getExpressionListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionListAccess().getExpExpressionParserRuleCall_1_0());
				}
				lv_exp_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionListRule());
					}
					set(
						$current,
						"exp",
						lv_exp_1_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_2_1_0());
					}
					lv_expression2_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionListRule());
						}
						add(
							$current,
							"expression2",
							lv_expression2_3_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionAccess().getExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getUpUnaryExprParserRuleCall_1_0());
				}
				lv_up_1_0=ruleUnaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"up",
						lv_up_1_0,
						"org.xtext.example.mydsl.Go.UnaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getExpExpression2ParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"org.xtext.example.mydsl.Go.Expression2");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression2
entryRuleExpression2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression2Rule()); }
	iv_ruleExpression2=ruleExpression2
	{ $current=$iv_ruleExpression2.current; }
	EOF;

// Rule Expression2
ruleExpression2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpression2Access().getExpression2Action_0(),
					$current);
			}
		)
		(
			(
				(
					lv_bop_1_0=RULE_BINARY_OP
					{
						newLeafNode(lv_bop_1_0, grammarAccess.getExpression2Access().getBopBINARY_OPTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpression2Rule());
						}
						setWithLastConsumed(
							$current,
							"bop",
							lv_bop_1_0,
							"org.xtext.example.mydsl.Go.BINARY_OP");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression2Rule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
					}
					lv_expression2_3_0=ruleExpression2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression2Rule());
						}
						set(
							$current,
							"expression2",
							lv_expression2_3_0,
							"org.xtext.example.mydsl.Go.Expression2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current; }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_0());
		}
		this_PrimaryExpr_0=rulePrimaryExpr
		{
			$current = $this_PrimaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					lv_up_1_0=RULE_UNARY_OP
					{
						newLeafNode(lv_up_1_0, grammarAccess.getUnaryExprAccess().getUpUNARY_OPTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExprRule());
						}
						setWithLastConsumed(
							$current,
							"up",
							lv_up_1_0,
							"org.xtext.example.mydsl.Go.UNARY_OP");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExprAccess().getUeUnaryExprParserRuleCall_1_1_0());
					}
					lv_ue_2_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
						}
						set(
							$current,
							"ue",
							lv_ue_2_0,
							"org.xtext.example.mydsl.Go.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	iv_rulePrimaryExpr=rulePrimaryExpr
	{ $current=$iv_rulePrimaryExpr.current; }
	EOF;

// Rule PrimaryExpr
rulePrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprAccess().getPrimaryExprAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOpOperandParserRuleCall_0_1_0());
					}
					lv_op_1_0=ruleOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"op",
							lv_op_1_0,
							"org.xtext.example.mydsl.Go.Operand");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_2_0());
					}
					lv_pr_2_0=rulePrimaryExpr2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"pr",
							lv_pr_2_0,
							"org.xtext.example.mydsl.Go.PrimaryExpr2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConConversionParserRuleCall_1_0_0());
					}
					lv_con_3_0=ruleConversion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"con",
							lv_con_3_0,
							"org.xtext.example.mydsl.Go.Conversion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
					}
					lv_pr_4_0=rulePrimaryExpr2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"pr",
							lv_pr_4_0,
							"org.xtext.example.mydsl.Go.PrimaryExpr2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getMeMethodExprParserRuleCall_2_0_0());
					}
					lv_me_5_0=ruleMethodExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"me",
							lv_me_5_0,
							"org.xtext.example.mydsl.Go.MethodExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_2_1_0());
					}
					lv_pr_6_0=rulePrimaryExpr2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"pr",
							lv_pr_6_0,
							"org.xtext.example.mydsl.Go.PrimaryExpr2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePrimaryExpr2
entryRulePrimaryExpr2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr2Rule()); }
	iv_rulePrimaryExpr2=rulePrimaryExpr2
	{ $current=$iv_rulePrimaryExpr2.current; }
	EOF;

// Rule PrimaryExpr2
rulePrimaryExpr2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExpr2Access().getPrimaryExpr2Action_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorSelectorParserRuleCall_1_0_0_0());
						}
						lv_selector_1_0=ruleSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"selector",
								lv_selector_1_0,
								"org.xtext.example.mydsl.Go.Selector");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
						}
						lv_pr_2_0=rulePrimaryExpr2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"pr",
								lv_pr_2_0,
								"org.xtext.example.mydsl.Go.PrimaryExpr2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
						}
						lv_index_3_0=ruleIndex
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"index",
								lv_index_3_0,
								"org.xtext.example.mydsl.Go.Index");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
						}
						lv_pr_4_0=rulePrimaryExpr2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"pr",
								lv_pr_4_0,
								"org.xtext.example.mydsl.Go.PrimaryExpr2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
						}
						lv_slice_5_0=ruleSlice
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"slice",
								lv_slice_5_0,
								"org.xtext.example.mydsl.Go.Slice");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
						}
						lv_pr_6_0=rulePrimaryExpr2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"pr",
								lv_pr_6_0,
								"org.xtext.example.mydsl.Go.PrimaryExpr2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
						}
						lv_typeass_7_0=ruleTypeAssertion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"typeass",
								lv_typeass_7_0,
								"org.xtext.example.mydsl.Go.TypeAssertion");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
						}
						lv_pr_8_0=rulePrimaryExpr2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"pr",
								lv_pr_8_0,
								"org.xtext.example.mydsl.Go.PrimaryExpr2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
						}
						lv_arguments_9_0=ruleArguments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"arguments",
								lv_arguments_9_0,
								"org.xtext.example.mydsl.Go.Arguments");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
						}
						lv_pr_10_0=rulePrimaryExpr2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
							}
							set(
								$current,
								"pr",
								lv_pr_10_0,
								"org.xtext.example.mydsl.Go.PrimaryExpr2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleOperand
entryRuleOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandRule()); }
	iv_ruleOperand=ruleOperand
	{ $current=$iv_ruleOperand.current; }
	EOF;

// Rule Operand
ruleOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getOperandAccess().getOperandAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
					}
					lv_literal_1_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperandRule());
						}
						set(
							$current,
							"literal",
							lv_literal_1_0,
							"org.xtext.example.mydsl.Go.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0());
				}
				lv_operandn_2_0=ruleOperandName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperandRule());
					}
					set(
						$current,
						"operandn",
						lv_operandn_2_0,
						"org.xtext.example.mydsl.Go.OperandName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
					}
					lv_expression_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperandRule());
						}
						set(
							$current,
							"expression",
							lv_expression_4_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleConversion
entryRuleConversion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConversionRule()); }
	iv_ruleConversion=ruleConversion
	{ $current=$iv_ruleConversion.current; }
	EOF;

// Rule Conversion
ruleConversion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getConversionAccess().getConversionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getCommaKeyword_4());
			}
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getConversionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleMethodExpr
entryRuleMethodExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodExprRule()); }
	iv_ruleMethodExpr=ruleMethodExpr
	{ $current=$iv_ruleMethodExpr.current; }
	EOF;

// Rule MethodExpr
ruleMethodExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0());
		}
		this_ReceiverType_0=ruleReceiverType
		{
			$current = $this_ReceiverType_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodExprAccess().getMethodnMethodNameParserRuleCall_2_0());
				}
				lv_methodn_2_0=ruleMethodName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodExprRule());
					}
					set(
						$current,
						"methodn",
						lv_methodn_2_0,
						"org.xtext.example.mydsl.Go.MethodName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelector
entryRuleSelector returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	iv_ruleSelector=ruleSelector
	{ $current=$iv_ruleSelector.current.getText(); }
	EOF;

// Rule Selector
ruleSelector returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getSelectorAccess().getIDENTIFIERParserRuleCall_1());
		}
		this_IDENTIFIER_1=ruleIDENTIFIER
		{
			$current.merge(this_IDENTIFIER_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleSlice
entryRuleSlice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSliceRule()); }
	iv_ruleSlice=ruleSlice
	{ $current=$iv_ruleSlice.current; }
	EOF;

// Rule Slice
ruleSlice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSliceAccess().getSliceAction_0_0(),
						$current);
				}
			)
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSliceRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSliceAccess().getColonKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
					}
					lv_expression2_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSliceRule());
						}
						set(
							$current,
							"expression2",
							lv_expression2_4_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_0_5());
			}
		)
		    |
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSliceAccess().getExpression3ExpressionParserRuleCall_1_1_0());
					}
					lv_expression3_7_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSliceRule());
						}
						set(
							$current,
							"expression3",
							lv_expression3_7_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_8=':'
			{
				newLeafNode(otherlv_8, grammarAccess.getSliceAccess().getColonKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSliceAccess().getExpression4ExpressionParserRuleCall_1_3_0());
					}
					lv_expression4_9_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSliceRule());
						}
						set(
							$current,
							"expression4",
							lv_expression4_9_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getSliceAccess().getColonKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSliceAccess().getExpression5ExpressionParserRuleCall_1_5_0());
					}
					lv_expression5_11_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSliceRule());
						}
						set(
							$current,
							"expression5",
							lv_expression5_11_0,
							"org.xtext.example.mydsl.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=']'
			{
				newLeafNode(otherlv_12, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_6());
			}
		)
	)
;

// Entry rule entryRuleTypeAssertion
entryRuleTypeAssertion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeAssertionRule()); }
	iv_ruleTypeAssertion=ruleTypeAssertion
	{ $current=$iv_ruleTypeAssertion.current; }
	EOF;

// Rule TypeAssertion
ruleTypeAssertion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeParserRuleCall_2());
		}
		this_Type_2=ruleType
		{
			$current = $this_Type_2.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current; }
	EOF;

// Rule Arguments
ruleArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
						}
						lv_expressionlist_2_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgumentsRule());
							}
							set(
								$current,
								"expressionlist",
								lv_expressionlist_2_0,
								"org.xtext.example.mydsl.Go.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
							}
							lv_type_3_0=ruleType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArgumentsRule());
								}
								set(
									$current,
									"type",
									lv_type_3_0,
									"org.xtext.example.mydsl.Go.Type");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
								}
								lv_expressionlist_5_0=ruleExpressionList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentsRule());
									}
									set(
										$current,
										"expressionlist",
										lv_expressionlist_5_0,
										"org.xtext.example.mydsl.Go.ExpressionList");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)
			(
				otherlv_6='...'
				{
					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
				}
			)?
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
				}
			)?
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralAccess().getLiteralAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getBasicBasicLitParserRuleCall_0_1_0());
					}
					lv_basic_1_0=ruleBasicLit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"basic",
							lv_basic_1_0,
							"org.xtext.example.mydsl.Go.BasicLit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getClCompositeLitParserRuleCall_1_0());
				}
				lv_cl_2_0=ruleCompositeLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"cl",
						lv_cl_2_0,
						"org.xtext.example.mydsl.Go.CompositeLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getFlFunctionLitParserRuleCall_2_0());
				}
				lv_fl_3_0=ruleFunctionLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"fl",
						lv_fl_3_0,
						"org.xtext.example.mydsl.Go.FunctionLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionLitRule()); }
	iv_ruleFunctionLit=ruleFunctionLit
	{ $current=$iv_ruleFunctionLit.current; }
	EOF;

// Rule FunctionLit
ruleFunctionLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0());
				}
				lv_signature_1_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionLitRule());
					}
					set(
						$current,
						"signature",
						lv_signature_1_0,
						"org.xtext.example.mydsl.Go.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionbodyFunctionBodyParserRuleCall_2_0());
				}
				lv_functionbody_2_0=ruleFunctionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionLitRule());
					}
					set(
						$current,
						"functionbody",
						lv_functionbody_2_0,
						"org.xtext.example.mydsl.Go.FunctionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeLitRule()); }
	iv_ruleCompositeLit=ruleCompositeLit
	{ $current=$iv_ruleCompositeLit.current; }
	EOF;

// Rule CompositeLit
ruleCompositeLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteraltLiteralTypeParserRuleCall_0_0());
				}
				lv_literalt_0_0=ruleLiteralType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeLitRule());
					}
					set(
						$current,
						"literalt",
						lv_literalt_0_0,
						"org.xtext.example.mydsl.Go.LiteralType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralvLiteralValueParserRuleCall_1_0());
				}
				lv_literalv_1_0=ruleLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeLitRule());
					}
					set(
						$current,
						"literalv",
						lv_literalv_1_0,
						"org.xtext.example.mydsl.Go.LiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLiteralType
entryRuleLiteralType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralTypeRule()); }
	iv_ruleLiteralType=ruleLiteralType
	{ $current=$iv_ruleLiteralType.current; }
	EOF;

// Rule LiteralType
ruleLiteralType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralTypeAccess().getLiteralTypeAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructtypeStructTypeParserRuleCall_0_1_0());
					}
					lv_structtype_1_0=ruleStructType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
						}
						set(
							$current,
							"structtype",
							lv_structtype_1_0,
							"org.xtext.example.mydsl.Go.StructType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getArraytypeArrayTypeParserRuleCall_1_0());
				}
				lv_arraytype_2_0=ruleArrayType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"arraytype",
						lv_arraytype_2_0,
						"org.xtext.example.mydsl.Go.ArrayType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
			}
			otherlv_4='...'
			{
				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
			}
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementypeElementTypeParserRuleCall_2_3_0());
					}
					lv_elementype_6_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
						}
						set(
							$current,
							"elementype",
							lv_elementype_6_0,
							"org.xtext.example.mydsl.Go.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getSlicetypeSliceTypeParserRuleCall_3_0());
				}
				lv_slicetype_7_0=ruleSliceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"slicetype",
						lv_slicetype_7_0,
						"org.xtext.example.mydsl.Go.SliceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMaptypeMapTypeParserRuleCall_4_0());
				}
				lv_maptype_8_0=ruleMapType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"maptype",
						lv_maptype_8_0,
						"org.xtext.example.mydsl.Go.MapType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypenameTypeNameParserRuleCall_5_0());
				}
				lv_typename_9_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"typename",
						lv_typename_9_0,
						"org.xtext.example.mydsl.Go.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	iv_ruleLiteralValue=ruleLiteralValue
	{ $current=$iv_ruleLiteralValue.current; }
	EOF;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementlistElementListParserRuleCall_2_0_0());
					}
					lv_elementlist_2_0=ruleElementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralValueRule());
						}
						set(
							$current,
							"elementlist",
							lv_elementlist_2_0,
							"org.xtext.example.mydsl.Go.ElementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
				}
			)?
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElementList
entryRuleElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementListRule()); }
	iv_ruleElementList=ruleElementList
	{ $current=$iv_ruleElementList.current; }
	EOF;

// Rule ElementList
ruleElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0());
		}
		this_KeyedElement_0=ruleKeyedElement
		{
			$current = $this_KeyedElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getElementListAccess().getKeyedelementKeyedElementParserRuleCall_1_1_0());
					}
					lv_keyedelement_2_0=ruleKeyedElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementListRule());
						}
						add(
							$current,
							"keyedelement",
							lv_keyedelement_2_0,
							"org.xtext.example.mydsl.Go.KeyedElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyedElementRule()); }
	iv_ruleKeyedElement=ruleKeyedElement
	{ $current=$iv_ruleKeyedElement.current; }
	EOF;

// Rule KeyedElement
ruleKeyedElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0());
			}
			this_Key_0=ruleKey
			{
				$current = $this_Key_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyedElementRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"org.xtext.example.mydsl.Go.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKey
entryRuleKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_ruleKey=ruleKey
	{ $current=$iv_ruleKey.current; }
	EOF;

// Rule Key
ruleKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getKeyAccess().getKeyAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyAccess().getFieldnFieldNameParserRuleCall_0_1_0());
					}
					lv_fieldn_1_0=ruleFieldName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyRule());
						}
						set(
							$current,
							"fieldn",
							lv_fieldn_1_0,
							"org.xtext.example.mydsl.Go.FieldName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_2=ruleExpression
		{
			$current = $this_Expression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2());
		}
		this_LiteralValue_3=ruleLiteralValue
		{
			$current = $this_LiteralValue_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFieldName
entryRuleFieldName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFieldNameRule()); }
	iv_ruleFieldName=ruleFieldName
	{ $current=$iv_ruleFieldName.current.getText(); }
	EOF;

// Rule FieldName
ruleFieldName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFieldNameAccess().getIDENTIFIERParserRuleCall());
	}
	this_IDENTIFIER_0=ruleIDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getElementAccess().getExpressionParserRuleCall_0());
		}
		this_Expression_0=ruleExpression
		{
			$current = $this_Expression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1());
		}
		this_LiteralValue_1=ruleLiteralValue
		{
			$current = $this_LiteralValue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicLit
entryRuleBasicLit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasicLitRule()); }
	iv_ruleBasicLit=ruleBasicLit
	{ $current=$iv_ruleBasicLit.current.getText(); }
	EOF;

// Rule BasicLit
ruleBasicLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_LIT_0=RULE_INT_LIT
		{
			$current.merge(this_INT_LIT_0);
		}
		{
			newLeafNode(this_INT_LIT_0, grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0());
		}
		    |
		this_FLOAT_LIT_1=RULE_FLOAT_LIT
		{
			$current.merge(this_FLOAT_LIT_1);
		}
		{
			newLeafNode(this_FLOAT_LIT_1, grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2());
		}
		this_IMAGINARY_LIT_2=ruleIMAGINARY_LIT
		{
			$current.merge(this_IMAGINARY_LIT_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasicLitAccess().getRUNE_LITParserRuleCall_3());
		}
		this_RUNE_LIT_3=ruleRUNE_LIT
		{
			$current.merge(this_RUNE_LIT_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_STRING_4=RULE_STRING
		{
			$current.merge(this_STRING_4);
		}
		{
			newLeafNode(this_STRING_4, grammarAccess.getBasicLitAccess().getSTRINGTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleReceiverType
entryRuleReceiverType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverTypeRule()); }
	iv_ruleReceiverType=ruleReceiverType
	{ $current=$iv_ruleReceiverType.current; }
	EOF;

// Rule ReceiverType
ruleReceiverType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.example.mydsl.Go.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionBodyRule()); }
	iv_ruleFunctionBody=ruleFunctionBody
	{ $current=$iv_ruleFunctionBody.current; }
	EOF;

// Rule FunctionBody
ruleFunctionBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall());
	}
	this_Block_0=ruleBlock
	{
		$current = $this_Block_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOperandName
entryRuleOperandName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandNameRule()); }
	iv_ruleOperandName=ruleOperandName
	{ $current=$iv_ruleOperandName.current; }
	EOF;

// Rule OperandName
ruleOperandName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getOperandNameAccess().getOperandNameAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOperandNameAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
					}
					lv_id_1_0=ruleIDENTIFIER
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperandNameRule());
						}
						set(
							$current,
							"id",
							lv_id_1_0,
							"org.xtext.example.mydsl.Go.IDENTIFIER");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getOperandNameAccess().getOperandNameAction_1_0(),
						$current);
				}
			)
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1_1());
			}
			ruleQualifiedIdent
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleImportDecl
entryRuleImportDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDeclRule()); }
	iv_ruleImportDecl=ruleImportDecl
	{ $current=$iv_ruleImportDecl.current; }
	EOF;

// Rule ImportDecl
ruleImportDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
					$current);
			}
		)
		otherlv_1='import'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportDeclAccess().getImportsImportSpecParserRuleCall_2_0_0());
					}
					lv_imports_2_0=ruleImportSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportDeclRule());
						}
						add(
							$current,
							"imports",
							lv_imports_2_0,
							"org.xtext.example.mydsl.Go.ImportSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportDeclAccess().getImports2ImportSpecParserRuleCall_2_1_1_0());
						}
						lv_imports2_4_0=ruleImportSpec
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportDeclRule());
							}
							add(
								$current,
								"imports2",
								lv_imports2_4_0,
								"org.xtext.example.mydsl.Go.ImportSpec");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleImportSpec
entryRuleImportSpec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportSpecRule()); }
	iv_ruleImportSpec=ruleImportSpec
	{ $current=$iv_ruleImportSpec.current.getText(); }
	EOF;

// Rule ImportSpec
ruleImportSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
			}
			    |
			{
				newCompositeNode(grammarAccess.getImportSpecAccess().getIDENTIFIERParserRuleCall_0_1());
			}
			this_IDENTIFIER_1=ruleIDENTIFIER
			{
				$current.merge(this_IDENTIFIER_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		{
			newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathParserRuleCall_1());
		}
		this_ImportPath_2=ruleImportPath
		{
			$current.merge(this_ImportPath_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImportPath
entryRuleImportPath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportPathRule()); }
	iv_ruleImportPath=ruleImportPath
	{ $current=$iv_ruleImportPath.current.getText(); }
	EOF;

// Rule ImportPath
ruleImportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getImportPathAccess().getSTRINGTerminalRuleCall());
	}
;

fragment RULE_NEWLINE : '\n';

fragment RULE_UNICODE_CHAR : '\n';

fragment RULE_UNICODE_LETTER : ('A-Z'|'a-z'|'\u00AA'|'\u00B5'|'\u00BA'|'\u00C0-\u00D6'|'\u00D8-\u00F6'|'\u00F8-\u021F'|'\u0222-\u0233'|'\u0250-\u02AD'|'\u02B0-\u02B8'|'\u02BB-\u02C1'|'\u02D0-\u02D1'|'\u02E0-\u02E4'|'\u02EE'|'\u037A'|'\u0386'|'\u0388-\u038A'|'\u038C'|'\u038E-\u03A1'|'\u03A3-\u03CE'|'\u03D0-\u03D7'|'\u03DA-\u03F3'|'\u0400-\u0481'|'\u048C-\u04C4'|'\u04C7-\u04C8'|'\u04CB-\u04CC'|'\u04D0-\u04F5'|'\u04F8-\u04F9'|'\u0531-\u0556'|'\u0559'|'\u0561-\u0587'|'\u05D0-\u05EA'|'\u05F0-\u05F2'|'\u0621-\u063A'|'\u0640-\u064A'|'\u0671-\u06D3'|'\u06D5'|'\u06E5-\u06E6'|'\u06FA-\u06FC'|'\u0710'|'\u0712-\u072C'|'\u0780-\u07A5'|'\u0905-\u0939'|'\u093D'|'\u0950'|'\u0958-\u0961'|'\u0985-\u098C'|'\u098F-\u0990'|'\u0993-\u09A8'|'\u09AA-\u09B0'|'\u09B2'|'\u09B6-\u09B9'|'\u09DC-\u09DD'|'\u09DF-\u09E1'|'\u09F0-\u09F1'|'\u0A05-\u0A0A'|'\u0A0F-\u0A10'|'\u0A13-\u0A28'|'\u0A2A-\u0A30'|'\u0A32-\u0A33'|'\u0A35-\u0A36'|'\u0A38-\u0A39'|'\u0A59-\u0A5C'|'\u0A5E'|'\u0A72-\u0A74'|'\u0A85-\u0A8B'|'\u0A8D'|'\u0A8F-\u0A91'|'\u0A93-\u0AA8'|'\u0AAA-\u0AB0'|'\u0AB2-\u0AB3'|'\u0AB5-\u0AB9'|'\u0ABD'|'\u0AD0'|'\u0AE0'|'\u0B05-\u0B0C'|'\u0B0F-\u0B10'|'\u0B13-\u0B28'|'\u0B2A-\u0B30'|'\u0B32-\u0B33'|'\u0B36-\u0B39'|'\u0B3D'|'\u0B5C-\u0B5D'|'\u0B5F-\u0B61'|'\u0B85-\u0B8A'|'\u0B8E-\u0B90'|'\u0B92-\u0B95'|'\u0B99-\u0B9A'|'\u0B9C'|'\u0B9E-\u0B9F'|'\u0BA3-\u0BA4'|'\u0BA8-\u0BAA'|'\u0BAE-\u0BB5'|'\u0BB7-\u0BB9'|'\u0C05-\u0C0C'|'\u0C0E-\u0C10'|'\u0C12-\u0C28'|'\u0C2A-\u0C33'|'\u0C35-\u0C39'|'\u0C60-\u0C61'|'\u0C85-\u0C8C'|'\u0C8E-\u0C90'|'\u0C92-\u0CA8'|'\u0CAA-\u0CB3'|'\u0CB5-\u0CB9'|'\u0CDE'|'\u0CE0-\u0CE1'|'\u0D05-\u0D0C'|'\u0D0E-\u0D10'|'\u0D12-\u0D28'|'\u0D2A-\u0D39'|'\u0D60-\u0D61'|'\u0D85-\u0D96'|'\u0D9A-\u0DB1'|'\u0DB3-\u0DBB'|'\u0DBD'|'\u0DC0-\u0DC6'|'\u0E01-\u0E30'|'\u0E32-\u0E33'|'\u0E40-\u0E46'|'\u0E81-\u0E82'|'\u0E84'|'\u0E87-\u0E88'|'\u0E8A'|'\u0E8D'|'\u0E94-\u0E97'|'\u0E99-\u0E9F'|'\u0EA1-\u0EA3'|'\u0EA5'|'\u0EA7'|'\u0EAA-\u0EAB'|'\u0EAD-\u0EB0'|'\u0EB2-\u0EB3'|'\u0EBD-\u0EC4'|'\u0EC6'|'\u0EDC-\u0EDD'|'\u0F00'|'\u0F40-\u0F6A'|'\u0F88-\u0F8B'|'\u1000-\u1021'|'\u1023-\u1027'|'\u1029-\u102A'|'\u1050-\u1055'|'\u10A0-\u10C5'|'\u10D0-\u10F6'|'\u1100-\u1159'|'\u115F-\u11A2'|'\u11A8-\u11F9'|'\u1200-\u1206'|'\u1208-\u1246'|'\u1248'|'\u124A-\u124D'|'\u1250-\u1256'|'\u1258'|'\u125A-\u125D'|'\u1260-\u1286'|'\u1288'|'\u128A-\u128D'|'\u1290-\u12AE'|'\u12B0'|'\u12B2-\u12B5'|'\u12B8-\u12BE'|'\u12C0'|'\u12C2-\u12C5'|'\u12C8-\u12CE'|'\u12D0-\u12D6'|'\u12D8-\u12EE'|'\u12F0-\u130E'|'\u1310'|'\u1312-\u1315'|'\u1318-\u131E'|'\u1320-\u1346'|'\u1348-\u135A'|'\u13A0-\u13B0'|'\u13B1-\u13F4'|'\u1401-\u1676'|'\u1681-\u169A'|'\u16A0-\u16EA'|'\u1780-\u17B3'|'\u1820-\u1877'|'\u1880-\u18A8'|'\u1E00-\u1E9B'|'\u1EA0-\u1EE0'|'\u1EE1-\u1EF9'|'\u1F00-\u1F15'|'\u1F18-\u1F1D'|'\u1F20-\u1F39'|'\u1F3A-\u1F45'|'\u1F48-\u1F4D'|'\u1F50-\u1F57'|'\u1F59'|'\u1F5B'|'\u1F5D'|'\u1F5F-\u1F7D'|'\u1F80-\u1FB4'|'\u1FB6-\u1FBC'|'\u1FBE'|'\u1FC2-\u1FC4'|'\u1FC6-\u1FCC'|'\u1FD0-\u1FD3'|'\u1FD6-\u1FDB'|'\u1FE0-\u1FEC'|'\u1FF2-\u1FF4'|'\u1FF6-\u1FFC'|'\u207F'|'\u2102'|'\u2107'|'\u210A-\u2113'|'\u2115'|'\u2119-\u211D'|'\u2124'|'\u2126'|'\u2128'|'\u212A-\u212D'|'\u212F-\u2131'|'\u2133-\u2139'|'\u2160-\u2183'|'\u3005-\u3007'|'\u3021-\u3029'|'\u3031-\u3035'|'\u3038-\u303A'|'\u3041-\u3094'|'\u309D-\u309E'|'\u30A1-\u30FA'|'\u30FC-\u30FE'|'\u3105-\u312C'|'\u3131-\u318E'|'\u31A0-\u31B7'|'\u3400'|'\u4DB5'|'\u4E00'|'\u9FA5'|'\uA000-\uA48C'|'\uAC00'|'\uD7A3'|'\uF900-\uFA2D'|'\uFB00-\uFB06'|'\uFB13-\uFB17'|'\uFB1D'|'\uFB1F-\uFB28'|'\uFB2A-\uFB36'|'\uFB38-\uFB3C'|'\uFB3E'|'\uFB40-\uFB41'|'\uFB43-\uFB44'|'\uFB46-\uFBB1'|'\uFBD3-\uFD3D'|'\uFD50-\uFD8F'|'\uFD92-\uFDC7'|'\uFDF0-\uFDFB'|'\uFE70-\uFE72'|'\uFE74'|'\uFE76-\uFEFC'|'\uFF21-\uFF3A'|'\uFF41-\uFF5A'|'\uFF66-\uFFBE'|'\uFFC2-\uFFC7'|'\uFFCA-\uFFCF'|'\uFFD2-\uFFD7'|'\uFFDA-\uFFDC');

RULE_UNICODE_DIGIT : 'A-Z';

RULE_BINARY_OP : ('||'|'&&'|RULE_REL_OP|RULE_ADD_OP|RULE_MUL_OP);

fragment RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>='|':=');

fragment RULE_ADD_OP : ('+'|'-'|'|'|'^');

fragment RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_ASSING_OP : (RULE_ADD_OP|RULE_MUL_OP)? '=';

RULE_LETTER : (RULE_UNICODE_LETTER|RULE_ID);

fragment RULE_DECIMAL_DIGIT : RULE_INT;

fragment RULE_OCTAL_DIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7');

fragment RULE_HEX_DIGIT : (('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9')|('A'|'B'|'C'|'D'|'E'|'F')|('a'|'b'|'c'|'d'|'e'|'f'));

RULE_INT_LIT : (RULE_DECIMAL_LIT|RULE_OCTAL_LIT|RULE_HEX_LIT);

fragment RULE_DECIMAL_LIT : ('1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9') RULE_DECIMAL_DIGIT*;

fragment RULE_OCTAL_LIT : '0' RULE_OCTAL_DIGIT*;

fragment RULE_HEX_LIT : '0' ('x'|'X') RULE_HEX_DIGIT RULE_HEX_DIGIT+;

RULE_FLOAT_LIT : (RULE_DECIMAL_LIT '.' RULE_DECIMAL_LIT? RULE_EXPOENT?|RULE_DECIMALS RULE_EXPOENT|'.' RULE_DECIMALS RULE_EXPOENT?);

RULE_DECIMALS : RULE_DECIMAL_DIGIT+;

fragment RULE_EXPOENT : ('e'|'E') ('+'|'-')? RULE_DECIMALS;

RULE_UNICODE_VALUE : (RULE_UNICODE_CHAR|RULE_LITTLE_U_VALUE|RULE_BIG_U_VALUE|RULE_ESCAPED_CHAR);

RULE_BYTE_VALUE : (RULE_OCTAL_BYTE_VALUE|RULE_HEX_BYTE_VALUE);

fragment RULE_OCTAL_BYTE_VALUE : '\\' RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT;

fragment RULE_HEX_BYTE_VALUE : '\\' 'x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_LITTLE_U_VALUE : '\\' 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_BIG_U_VALUE : '\\' 'U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_RAW_STRING_LIT : '\'' (RULE_UNICODE_CHAR|RULE_NEWLINE)? '\'';

RULE_INTERPRETED_STRING_LIT : '"' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE)? '"';

fragment RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
