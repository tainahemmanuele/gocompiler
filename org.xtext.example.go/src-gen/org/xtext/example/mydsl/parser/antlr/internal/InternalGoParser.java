package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_DECIMALS", "RULE_FLOAT_LIT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_LITERAL_TYPE", "RULE_ASSING_OP", "RULE_BINARY_OP", "RULE_UNARY_OP", "RULE_INT_LIT", "RULE_STRING", "RULE_BOOLEAN_LIT", "RULE_NEWLINE", "RULE_UNICODE_CHAR", "RULE_UNICODE_LETTER", "RULE_REL_OP", "RULE_MUL_OP", "RULE_ADD_OP", "RULE_INT", "RULE_DECIMAL_DIGIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_DECIMAL_LIT", "RULE_EXPOENT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'func'", "'package'", "'-'", "'\\u00EF'", "'\\''", "'('", "')'", "'.'", "'['", "']'", "'struct'", "'{'", "';'", "'}'", "','", "'*'", "'...'", "'interface'", "'map'", "'chan'", "'<-'", "':'", "'goto'", "'return'", "'break'", "'continue'", "'if'", "'else'", "'fallthrough'", "'select'", "'for'", "'defer'", "'const'", "'='", "'type'", "'var'", "'++'", "'--'", "':='", "'switch'", "'case'", "'default'", "'range'", "'import'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=25;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int RULE_BINARY_OP=13;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INTERPRETED_STRING_LIT=10;
    public static final int RULE_UNICODE_VALUE=7;
    public static final int RULE_LITTLE_U_VALUE=32;
    public static final int RULE_ASSING_OP=12;
    public static final int RULE_HEX_BYTE_VALUE=36;
    public static final int RULE_OCTAL_BYTE_VALUE=35;
    public static final int RULE_MUL_OP=22;
    public static final int RULE_INT=24;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=37;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int RULE_EXPOENT=29;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=5;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_LITERAL_TYPE=11;
    public static final int RULE_NEWLINE=18;
    public static final int RULE_BIG_U_VALUE=33;
    public static final int RULE_ESCAPED_CHAR=34;
    public static final int RULE_STRING=16;
    public static final int RULE_BOOLEAN_LIT=17;
    public static final int RULE_BYTE_VALUE=8;
    public static final int RULE_SL_COMMENT=38;
    public static final int RULE_UNICODE_LETTER=20;
    public static final int T__77=77;
    public static final int RULE_UNICODE_CHAR=19;
    public static final int RULE_HEX_LIT=31;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=23;
    public static final int RULE_OCTAL_DIGIT=26;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=39;
    public static final int RULE_ANY_OTHER=40;
    public static final int RULE_OCTAL_LIT=30;
    public static final int RULE_FLOAT_LIT=6;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=9;
    public static final int RULE_INT_LIT=15;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=14;
    public static final int T__45=45;
    public static final int RULE_REL_OP=21;
    public static final int RULE_HEX_DIGIT=27;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__84=84;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int RULE_DECIMAL_LIT=28;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalGo.g:70:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalGo.g:70:46: (iv_ruleModel= ruleModel EOF )
            // InternalGo.g:71:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:77:1: ruleModel returns [EObject current=null] : ( (lv_greetings_0_0= ruleCompilation_initial ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_greetings_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( (lv_greetings_0_0= ruleCompilation_initial ) ) )
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            {
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            {
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            // InternalGo.g:86:4: lv_greetings_0_0= ruleCompilation_initial
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getGreetingsCompilation_initialParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_greetings_0_0=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"greetings",
              					lv_greetings_0_0,
              					"org.xtext.example.mydsl.Go.Compilation_initial");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleCompilation_initial"
    // InternalGo.g:106:1: entryRuleCompilation_initial returns [EObject current=null] : iv_ruleCompilation_initial= ruleCompilation_initial EOF ;
    public final EObject entryRuleCompilation_initial() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompilation_initial = null;


        try {
            // InternalGo.g:106:60: (iv_ruleCompilation_initial= ruleCompilation_initial EOF )
            // InternalGo.g:107:2: iv_ruleCompilation_initial= ruleCompilation_initial EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompilation_initialRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompilation_initial=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompilation_initial; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompilation_initial"


    // $ANTLR start "ruleCompilation_initial"
    // InternalGo.g:113:1: ruleCompilation_initial returns [EObject current=null] : ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? ) ;
    public final EObject ruleCompilation_initial() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_initial_1_0 = null;

        EObject lv_importdecl_2_0 = null;

        EObject lv_toplevel_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:119:2: ( ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? ) )
            // InternalGo.g:120:2: ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? )
            {
            // InternalGo.g:120:2: ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? )
            // InternalGo.g:121:3: () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )?
            {
            // InternalGo.g:121:3: ()
            // InternalGo.g:122:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCompilation_initialAccess().getCompilation_initialAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:131:3: ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==42) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalGo.g:132:4: ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )*
                    {
                    // InternalGo.g:132:4: ( (lv_initial_1_0= rulePackageClause ) )
                    // InternalGo.g:133:5: (lv_initial_1_0= rulePackageClause )
                    {
                    // InternalGo.g:133:5: (lv_initial_1_0= rulePackageClause )
                    // InternalGo.g:134:6: lv_initial_1_0= rulePackageClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getInitialPackageClauseParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_initial_1_0=rulePackageClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                      						}
                      						set(
                      							current,
                      							"initial",
                      							lv_initial_1_0,
                      							"org.xtext.example.mydsl.Go.PackageClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:151:4: ( (lv_importdecl_2_0= ruleImportDecl ) )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==84) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalGo.g:152:5: (lv_importdecl_2_0= ruleImportDecl )
                    	    {
                    	    // InternalGo.g:152:5: (lv_importdecl_2_0= ruleImportDecl )
                    	    // InternalGo.g:153:6: lv_importdecl_2_0= ruleImportDecl
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getImportdeclImportDeclParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_importdecl_2_0=ruleImportDecl();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"importdecl",
                    	      							lv_importdecl_2_0,
                    	      							"org.xtext.example.mydsl.Go.ImportDecl");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                    // InternalGo.g:170:4: ( (lv_toplevel_3_0= ruleTopLevelDecl ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==41||LA2_0==73||(LA2_0>=75 && LA2_0<=76)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalGo.g:171:5: (lv_toplevel_3_0= ruleTopLevelDecl )
                    	    {
                    	    // InternalGo.g:171:5: (lv_toplevel_3_0= ruleTopLevelDecl )
                    	    // InternalGo.g:172:6: lv_toplevel_3_0= ruleTopLevelDecl
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getToplevelTopLevelDeclParserRuleCall_1_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_toplevel_3_0=ruleTopLevelDecl();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"toplevel",
                    	      							lv_toplevel_3_0,
                    	      							"org.xtext.example.mydsl.Go.TopLevelDecl");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompilation_initial"


    // $ANTLR start "entryRuleTopLevelDecl"
    // InternalGo.g:194:1: entryRuleTopLevelDecl returns [EObject current=null] : iv_ruleTopLevelDecl= ruleTopLevelDecl EOF ;
    public final EObject entryRuleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelDecl = null;


        try {
            // InternalGo.g:194:53: (iv_ruleTopLevelDecl= ruleTopLevelDecl EOF )
            // InternalGo.g:195:2: iv_ruleTopLevelDecl= ruleTopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTopLevelDecl=ruleTopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelDecl"


    // $ANTLR start "ruleTopLevelDecl"
    // InternalGo.g:201:1: ruleTopLevelDecl returns [EObject current=null] : ( ( () ( (lv_dl_1_0= ruleDeclaration ) ) ) | ( (lv_fd_2_0= ruleFunctionDecl ) ) | ( (lv_mt_3_0= ruleMethodDecl ) ) ) ;
    public final EObject ruleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject lv_dl_1_0 = null;

        EObject lv_fd_2_0 = null;

        EObject lv_mt_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:207:2: ( ( ( () ( (lv_dl_1_0= ruleDeclaration ) ) ) | ( (lv_fd_2_0= ruleFunctionDecl ) ) | ( (lv_mt_3_0= ruleMethodDecl ) ) ) )
            // InternalGo.g:208:2: ( ( () ( (lv_dl_1_0= ruleDeclaration ) ) ) | ( (lv_fd_2_0= ruleFunctionDecl ) ) | ( (lv_mt_3_0= ruleMethodDecl ) ) )
            {
            // InternalGo.g:208:2: ( ( () ( (lv_dl_1_0= ruleDeclaration ) ) ) | ( (lv_fd_2_0= ruleFunctionDecl ) ) | ( (lv_mt_3_0= ruleMethodDecl ) ) )
            int alt4=3;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==73||(LA4_0>=75 && LA4_0<=76)) ) {
                alt4=1;
            }
            else if ( (LA4_0==41) ) {
                int LA4_2 = input.LA(2);

                if ( (LA4_2==46) ) {
                    alt4=3;
                }
                else if ( (LA4_2==RULE_ID||LA4_2==43) ) {
                    alt4=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalGo.g:209:3: ( () ( (lv_dl_1_0= ruleDeclaration ) ) )
                    {
                    // InternalGo.g:209:3: ( () ( (lv_dl_1_0= ruleDeclaration ) ) )
                    // InternalGo.g:210:4: () ( (lv_dl_1_0= ruleDeclaration ) )
                    {
                    // InternalGo.g:210:4: ()
                    // InternalGo.g:211:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTopLevelDeclAccess().getTopLevelDeclAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:220:4: ( (lv_dl_1_0= ruleDeclaration ) )
                    // InternalGo.g:221:5: (lv_dl_1_0= ruleDeclaration )
                    {
                    // InternalGo.g:221:5: (lv_dl_1_0= ruleDeclaration )
                    // InternalGo.g:222:6: lv_dl_1_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDlDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_dl_1_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      						}
                      						set(
                      							current,
                      							"dl",
                      							lv_dl_1_0,
                      							"org.xtext.example.mydsl.Go.Declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:241:3: ( (lv_fd_2_0= ruleFunctionDecl ) )
                    {
                    // InternalGo.g:241:3: ( (lv_fd_2_0= ruleFunctionDecl ) )
                    // InternalGo.g:242:4: (lv_fd_2_0= ruleFunctionDecl )
                    {
                    // InternalGo.g:242:4: (lv_fd_2_0= ruleFunctionDecl )
                    // InternalGo.g:243:5: lv_fd_2_0= ruleFunctionDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFdFunctionDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_fd_2_0=ruleFunctionDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"fd",
                      						lv_fd_2_0,
                      						"org.xtext.example.mydsl.Go.FunctionDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:261:3: ( (lv_mt_3_0= ruleMethodDecl ) )
                    {
                    // InternalGo.g:261:3: ( (lv_mt_3_0= ruleMethodDecl ) )
                    // InternalGo.g:262:4: (lv_mt_3_0= ruleMethodDecl )
                    {
                    // InternalGo.g:262:4: (lv_mt_3_0= ruleMethodDecl )
                    // InternalGo.g:263:5: lv_mt_3_0= ruleMethodDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMtMethodDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_mt_3_0=ruleMethodDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"mt",
                      						lv_mt_3_0,
                      						"org.xtext.example.mydsl.Go.MethodDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelDecl"


    // $ANTLR start "entryRuleMethodDecl"
    // InternalGo.g:284:1: entryRuleMethodDecl returns [EObject current=null] : iv_ruleMethodDecl= ruleMethodDecl EOF ;
    public final EObject entryRuleMethodDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDecl = null;


        try {
            // InternalGo.g:284:51: (iv_ruleMethodDecl= ruleMethodDecl EOF )
            // InternalGo.g:285:2: iv_ruleMethodDecl= ruleMethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodDecl=ruleMethodDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDecl"


    // $ANTLR start "ruleMethodDecl"
    // InternalGo.g:291:1: ruleMethodDecl returns [EObject current=null] : ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleMethodDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_receiver_2_0 = null;

        AntlrDatatypeRuleToken lv_method_3_0 = null;

        EObject lv_signature_4_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:297:2: ( ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:298:2: ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:298:2: ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? )
            // InternalGo.g:299:3: () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )?
            {
            // InternalGo.g:299:3: ()
            // InternalGo.g:300:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclAccess().getMethodDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodDeclAccess().getFuncKeyword_1());
              		
            }
            // InternalGo.g:313:3: ( (lv_receiver_2_0= ruleReceiver ) )
            // InternalGo.g:314:4: (lv_receiver_2_0= ruleReceiver )
            {
            // InternalGo.g:314:4: (lv_receiver_2_0= ruleReceiver )
            // InternalGo.g:315:5: lv_receiver_2_0= ruleReceiver
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_receiver_2_0=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"receiver",
              						lv_receiver_2_0,
              						"org.xtext.example.mydsl.Go.Receiver");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:332:3: ( (lv_method_3_0= ruleMethodName ) )
            // InternalGo.g:333:4: (lv_method_3_0= ruleMethodName )
            {
            // InternalGo.g:333:4: (lv_method_3_0= ruleMethodName )
            // InternalGo.g:334:5: lv_method_3_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getMethodMethodNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_method_3_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"method",
              						lv_method_3_0,
              						"org.xtext.example.mydsl.Go.MethodName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:351:3: ( (lv_signature_4_0= ruleSignature ) )
            // InternalGo.g:352:4: (lv_signature_4_0= ruleSignature )
            {
            // InternalGo.g:352:4: (lv_signature_4_0= ruleSignature )
            // InternalGo.g:353:5: lv_signature_4_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_signature_4_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_4_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:370:3: ( (lv_body_5_0= ruleFunctionBody ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==52) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalGo.g:371:4: (lv_body_5_0= ruleFunctionBody )
                    {
                    // InternalGo.g:371:4: (lv_body_5_0= ruleFunctionBody )
                    // InternalGo.g:372:5: lv_body_5_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclAccess().getBodyFunctionBodyParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_5_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_5_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDecl"


    // $ANTLR start "entryRuleReceiver"
    // InternalGo.g:393:1: entryRuleReceiver returns [EObject current=null] : iv_ruleReceiver= ruleReceiver EOF ;
    public final EObject entryRuleReceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiver = null;


        try {
            // InternalGo.g:393:49: (iv_ruleReceiver= ruleReceiver EOF )
            // InternalGo.g:394:2: iv_ruleReceiver= ruleReceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiver=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiver"


    // $ANTLR start "ruleReceiver"
    // InternalGo.g:400:1: ruleReceiver returns [EObject current=null] : this_Parameters_0= ruleParameters ;
    public final EObject ruleReceiver() throws RecognitionException {
        EObject current = null;

        EObject this_Parameters_0 = null;



        	enterRule();

        try {
            // InternalGo.g:406:2: (this_Parameters_0= ruleParameters )
            // InternalGo.g:407:2: this_Parameters_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Parameters_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Parameters_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiver"


    // $ANTLR start "entryRuleFunctionName"
    // InternalGo.g:421:1: entryRuleFunctionName returns [String current=null] : iv_ruleFunctionName= ruleFunctionName EOF ;
    public final String entryRuleFunctionName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFunctionName = null;


        try {
            // InternalGo.g:421:52: (iv_ruleFunctionName= ruleFunctionName EOF )
            // InternalGo.g:422:2: iv_ruleFunctionName= ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionName=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalGo.g:428:1: ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFunctionName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:434:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:435:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFunctionNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleFunctionDecl"
    // InternalGo.g:448:1: entryRuleFunctionDecl returns [EObject current=null] : iv_ruleFunctionDecl= ruleFunctionDecl EOF ;
    public final EObject entryRuleFunctionDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDecl = null;


        try {
            // InternalGo.g:448:53: (iv_ruleFunctionDecl= ruleFunctionDecl EOF )
            // InternalGo.g:449:2: iv_ruleFunctionDecl= ruleFunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDecl=ruleFunctionDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDecl"


    // $ANTLR start "ruleFunctionDecl"
    // InternalGo.g:455:1: ruleFunctionDecl returns [EObject current=null] : ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleFunctionDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_functionn_2_0 = null;

        EObject lv_signature_3_0 = null;

        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:461:2: ( ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:462:2: ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:462:2: ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            // InternalGo.g:463:3: () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )?
            {
            // InternalGo.g:463:3: ()
            // InternalGo.g:464:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionDeclAccess().getFunctionDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,41,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionDeclAccess().getFuncKeyword_1());
              		
            }
            // InternalGo.g:477:3: ( (lv_functionn_2_0= ruleFunctionName ) )
            // InternalGo.g:478:4: (lv_functionn_2_0= ruleFunctionName )
            {
            // InternalGo.g:478:4: (lv_functionn_2_0= ruleFunctionName )
            // InternalGo.g:479:5: lv_functionn_2_0= ruleFunctionName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionnFunctionNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_functionn_2_0=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
              					}
              					set(
              						current,
              						"functionn",
              						lv_functionn_2_0,
              						"org.xtext.example.mydsl.Go.FunctionName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:496:3: ( (lv_signature_3_0= ruleSignature ) )
            // InternalGo.g:497:4: (lv_signature_3_0= ruleSignature )
            {
            // InternalGo.g:497:4: (lv_signature_3_0= ruleSignature )
            // InternalGo.g:498:5: lv_signature_3_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_signature_3_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_3_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:515:3: ( (lv_body_4_0= ruleFunctionBody ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==52) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalGo.g:516:4: (lv_body_4_0= ruleFunctionBody )
                    {
                    // InternalGo.g:516:4: (lv_body_4_0= ruleFunctionBody )
                    // InternalGo.g:517:5: lv_body_4_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionDeclAccess().getBodyFunctionBodyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_4_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_4_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDecl"


    // $ANTLR start "entryRulePackageClause"
    // InternalGo.g:538:1: entryRulePackageClause returns [String current=null] : iv_rulePackageClause= rulePackageClause EOF ;
    public final String entryRulePackageClause() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePackageClause = null;


        try {
            // InternalGo.g:538:53: (iv_rulePackageClause= rulePackageClause EOF )
            // InternalGo.g:539:2: iv_rulePackageClause= rulePackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageClause=rulePackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageClause.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageClause"


    // $ANTLR start "rulePackageClause"
    // InternalGo.g:545:1: rulePackageClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'package' this_PackageName_1= rulePackageName ) ;
    public final AntlrDatatypeRuleToken rulePackageClause() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_PackageName_1 = null;



        	enterRule();

        try {
            // InternalGo.g:551:2: ( (kw= 'package' this_PackageName_1= rulePackageName ) )
            // InternalGo.g:552:2: (kw= 'package' this_PackageName_1= rulePackageName )
            {
            // InternalGo.g:552:2: (kw= 'package' this_PackageName_1= rulePackageName )
            // InternalGo.g:553:3: kw= 'package' this_PackageName_1= rulePackageName
            {
            kw=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageName_1=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PackageName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageClause"


    // $ANTLR start "entryRuleIDENTIFIER"
    // InternalGo.g:572:1: entryRuleIDENTIFIER returns [String current=null] : iv_ruleIDENTIFIER= ruleIDENTIFIER EOF ;
    public final String entryRuleIDENTIFIER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIDENTIFIER = null;


        try {
            // InternalGo.g:572:50: (iv_ruleIDENTIFIER= ruleIDENTIFIER EOF )
            // InternalGo.g:573:2: iv_ruleIDENTIFIER= ruleIDENTIFIER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDENTIFIERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIDENTIFIER=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIDENTIFIER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIDENTIFIER"


    // $ANTLR start "ruleIDENTIFIER"
    // InternalGo.g:579:1: ruleIDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | (kw= '-' this_ID_2= RULE_ID ) ) ;
    public final AntlrDatatypeRuleToken ruleIDENTIFIER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;


        	enterRule();

        try {
            // InternalGo.g:585:2: ( (this_ID_0= RULE_ID | (kw= '-' this_ID_2= RULE_ID ) ) )
            // InternalGo.g:586:2: (this_ID_0= RULE_ID | (kw= '-' this_ID_2= RULE_ID ) )
            {
            // InternalGo.g:586:2: (this_ID_0= RULE_ID | (kw= '-' this_ID_2= RULE_ID ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                alt7=1;
            }
            else if ( (LA7_0==43) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalGo.g:587:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getIDENTIFIERAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:595:3: (kw= '-' this_ID_2= RULE_ID )
                    {
                    // InternalGo.g:595:3: (kw= '-' this_ID_2= RULE_ID )
                    // InternalGo.g:596:4: kw= '-' this_ID_2= RULE_ID
                    {
                    kw=(Token)match(input,43,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIDENTIFIERAccess().getHyphenMinusKeyword_1_0());
                      			
                    }
                    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ID_2, grammarAccess.getIDENTIFIERAccess().getIDTerminalRuleCall_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIDENTIFIER"


    // $ANTLR start "entryRuleIMAGINARY_LIT"
    // InternalGo.g:613:1: entryRuleIMAGINARY_LIT returns [String current=null] : iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF ;
    public final String entryRuleIMAGINARY_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIMAGINARY_LIT = null;


        try {
            // InternalGo.g:613:53: (iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF )
            // InternalGo.g:614:2: iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIMAGINARY_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIMAGINARY_LIT=ruleIMAGINARY_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIMAGINARY_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIMAGINARY_LIT"


    // $ANTLR start "ruleIMAGINARY_LIT"
    // InternalGo.g:620:1: ruleIMAGINARY_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' ) ;
    public final AntlrDatatypeRuleToken ruleIMAGINARY_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMALS_0=null;
        Token this_FLOAT_LIT_1=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:626:2: ( ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' ) )
            // InternalGo.g:627:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' )
            {
            // InternalGo.g:627:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' )
            // InternalGo.g:628:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF'
            {
            // InternalGo.g:628:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_DECIMALS) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_FLOAT_LIT) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalGo.g:629:4: this_DECIMALS_0= RULE_DECIMALS
                    {
                    this_DECIMALS_0=(Token)match(input,RULE_DECIMALS,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_0, grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:637:4: this_FLOAT_LIT_1= RULE_FLOAT_LIT
                    {
                    this_FLOAT_LIT_1=(Token)match(input,RULE_FLOAT_LIT,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_FLOAT_LIT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_FLOAT_LIT_1, grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getIMAGINARY_LITAccess().getLatinSmallLetterIWithDiaeresisKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIMAGINARY_LIT"


    // $ANTLR start "entryRuleRUNE_LIT"
    // InternalGo.g:654:1: entryRuleRUNE_LIT returns [String current=null] : iv_ruleRUNE_LIT= ruleRUNE_LIT EOF ;
    public final String entryRuleRUNE_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRUNE_LIT = null;


        try {
            // InternalGo.g:654:48: (iv_ruleRUNE_LIT= ruleRUNE_LIT EOF )
            // InternalGo.g:655:2: iv_ruleRUNE_LIT= ruleRUNE_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRUNE_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRUNE_LIT=ruleRUNE_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRUNE_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRUNE_LIT"


    // $ANTLR start "ruleRUNE_LIT"
    // InternalGo.g:661:1: ruleRUNE_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) ;
    public final AntlrDatatypeRuleToken ruleRUNE_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_UNICODE_VALUE_1=null;
        Token this_BYTE_VALUE_2=null;


        	enterRule();

        try {
            // InternalGo.g:667:2: ( (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) )
            // InternalGo.g:668:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            {
            // InternalGo.g:668:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            // InternalGo.g:669:3: kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\''
            {
            kw=(Token)match(input,45,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_0());
              		
            }
            // InternalGo.g:674:3: (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_UNICODE_VALUE) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_BYTE_VALUE) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalGo.g:675:4: this_UNICODE_VALUE_1= RULE_UNICODE_VALUE
                    {
                    this_UNICODE_VALUE_1=(Token)match(input,RULE_UNICODE_VALUE,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UNICODE_VALUE_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UNICODE_VALUE_1, grammarAccess.getRUNE_LITAccess().getUNICODE_VALUETerminalRuleCall_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:683:4: this_BYTE_VALUE_2= RULE_BYTE_VALUE
                    {
                    this_BYTE_VALUE_2=(Token)match(input,RULE_BYTE_VALUE,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BYTE_VALUE_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BYTE_VALUE_2, grammarAccess.getRUNE_LITAccess().getBYTE_VALUETerminalRuleCall_1_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRUNE_LIT"


    // $ANTLR start "entryRuleSTRING_LIT"
    // InternalGo.g:700:1: entryRuleSTRING_LIT returns [String current=null] : iv_ruleSTRING_LIT= ruleSTRING_LIT EOF ;
    public final String entryRuleSTRING_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSTRING_LIT = null;


        try {
            // InternalGo.g:700:50: (iv_ruleSTRING_LIT= ruleSTRING_LIT EOF )
            // InternalGo.g:701:2: iv_ruleSTRING_LIT= ruleSTRING_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSTRING_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSTRING_LIT=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSTRING_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_LIT"


    // $ANTLR start "ruleSTRING_LIT"
    // InternalGo.g:707:1: ruleSTRING_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) ;
    public final AntlrDatatypeRuleToken ruleSTRING_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RAW_STRING_LIT_0=null;
        Token this_INTERPRETED_STRING_LIT_1=null;


        	enterRule();

        try {
            // InternalGo.g:713:2: ( (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) )
            // InternalGo.g:714:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            {
            // InternalGo.g:714:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_RAW_STRING_LIT) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_INTERPRETED_STRING_LIT) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalGo.g:715:3: this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT
                    {
                    this_RAW_STRING_LIT_0=(Token)match(input,RULE_RAW_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RAW_STRING_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RAW_STRING_LIT_0, grammarAccess.getSTRING_LITAccess().getRAW_STRING_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:723:3: this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT
                    {
                    this_INTERPRETED_STRING_LIT_1=(Token)match(input,RULE_INTERPRETED_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTERPRETED_STRING_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INTERPRETED_STRING_LIT_1, grammarAccess.getSTRING_LITAccess().getINTERPRETED_STRING_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_LIT"


    // $ANTLR start "entryRuleType"
    // InternalGo.g:734:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalGo.g:734:45: (iv_ruleType= ruleType EOF )
            // InternalGo.g:735:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalGo.g:741:1: ruleType returns [EObject current=null] : ( ( () ( (lv_tp_1_0= RULE_LITERAL_TYPE ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token lv_tp_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_tp2_2_0 = null;

        EObject lv_tp3_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:747:2: ( ( ( () ( (lv_tp_1_0= RULE_LITERAL_TYPE ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:748:2: ( ( () ( (lv_tp_1_0= RULE_LITERAL_TYPE ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:748:2: ( ( () ( (lv_tp_1_0= RULE_LITERAL_TYPE ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case RULE_LITERAL_TYPE:
                {
                alt11=1;
                }
                break;
            case 41:
            case 49:
            case 51:
            case 56:
            case 58:
            case 59:
            case 60:
            case 61:
                {
                alt11=2;
                }
                break;
            case 46:
                {
                alt11=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalGo.g:749:3: ( () ( (lv_tp_1_0= RULE_LITERAL_TYPE ) ) )
                    {
                    // InternalGo.g:749:3: ( () ( (lv_tp_1_0= RULE_LITERAL_TYPE ) ) )
                    // InternalGo.g:750:4: () ( (lv_tp_1_0= RULE_LITERAL_TYPE ) )
                    {
                    // InternalGo.g:750:4: ()
                    // InternalGo.g:751:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeAccess().getTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:760:4: ( (lv_tp_1_0= RULE_LITERAL_TYPE ) )
                    // InternalGo.g:761:5: (lv_tp_1_0= RULE_LITERAL_TYPE )
                    {
                    // InternalGo.g:761:5: (lv_tp_1_0= RULE_LITERAL_TYPE )
                    // InternalGo.g:762:6: lv_tp_1_0= RULE_LITERAL_TYPE
                    {
                    lv_tp_1_0=(Token)match(input,RULE_LITERAL_TYPE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_tp_1_0, grammarAccess.getTypeAccess().getTpLITERAL_TYPETerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"tp",
                      							lv_tp_1_0,
                      							"org.xtext.example.mydsl.Go.LITERAL_TYPE");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:780:3: ( (lv_tp2_2_0= ruleTypeLit ) )
                    {
                    // InternalGo.g:780:3: ( (lv_tp2_2_0= ruleTypeLit ) )
                    // InternalGo.g:781:4: (lv_tp2_2_0= ruleTypeLit )
                    {
                    // InternalGo.g:781:4: (lv_tp2_2_0= ruleTypeLit )
                    // InternalGo.g:782:5: lv_tp2_2_0= ruleTypeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getTp2TypeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tp2_2_0=ruleTypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"tp2",
                      						lv_tp2_2_0,
                      						"org.xtext.example.mydsl.Go.TypeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:800:3: (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:800:3: (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' )
                    // InternalGo.g:801:4: otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,46,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:805:4: ( (lv_tp3_4_0= ruleType ) )
                    // InternalGo.g:806:5: (lv_tp3_4_0= ruleType )
                    {
                    // InternalGo.g:806:5: (lv_tp3_4_0= ruleType )
                    // InternalGo.g:807:6: lv_tp3_4_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getTp3TypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_tp3_4_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"tp3",
                      							lv_tp3_4_0,
                      							"org.xtext.example.mydsl.Go.Type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleTypeName"
    // InternalGo.g:833:1: entryRuleTypeName returns [String current=null] : iv_ruleTypeName= ruleTypeName EOF ;
    public final String entryRuleTypeName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeName = null;


        try {
            // InternalGo.g:833:48: (iv_ruleTypeName= ruleTypeName EOF )
            // InternalGo.g:834:2: iv_ruleTypeName= ruleTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeName=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeName"


    // $ANTLR start "ruleTypeName"
    // InternalGo.g:840:1: ruleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) ;
    public final AntlrDatatypeRuleToken ruleTypeName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;

        AntlrDatatypeRuleToken this_QualifiedIdent_1 = null;



        	enterRule();

        try {
            // InternalGo.g:846:2: ( (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) )
            // InternalGo.g:847:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            {
            // InternalGo.g:847:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_ID) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==EOF||LA12_1==RULE_ID||(LA12_1>=RULE_RAW_STRING_LIT && LA12_1<=RULE_INTERPRETED_STRING_LIT)||LA12_1==43||(LA12_1>=52 && LA12_1<=54)||LA12_1==56) ) {
                    alt12=1;
                }
                else if ( (LA12_1==48) ) {
                    alt12=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA12_0==43) ) {
                int LA12_2 = input.LA(2);

                if ( (LA12_2==RULE_ID) ) {
                    int LA12_5 = input.LA(3);

                    if ( (LA12_5==EOF||LA12_5==RULE_ID||(LA12_5>=RULE_RAW_STRING_LIT && LA12_5<=RULE_INTERPRETED_STRING_LIT)||LA12_5==43||(LA12_5>=52 && LA12_5<=54)||LA12_5==56) ) {
                        alt12=1;
                    }
                    else if ( (LA12_5==48) ) {
                        alt12=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalGo.g:848:3: this_IDENTIFIER_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IDENTIFIER_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IDENTIFIER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:859:3: this_QualifiedIdent_1= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedIdent_1=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QualifiedIdent_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeName"


    // $ANTLR start "entryRuleQualifiedIdent"
    // InternalGo.g:873:1: entryRuleQualifiedIdent returns [String current=null] : iv_ruleQualifiedIdent= ruleQualifiedIdent EOF ;
    public final String entryRuleQualifiedIdent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedIdent = null;


        try {
            // InternalGo.g:873:54: (iv_ruleQualifiedIdent= ruleQualifiedIdent EOF )
            // InternalGo.g:874:2: iv_ruleQualifiedIdent= ruleQualifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedIdent=ruleQualifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedIdent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedIdent"


    // $ANTLR start "ruleQualifiedIdent"
    // InternalGo.g:880:1: ruleQualifiedIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedIdent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_PackageName_0 = null;

        AntlrDatatypeRuleToken this_IDENTIFIER_2 = null;



        	enterRule();

        try {
            // InternalGo.g:886:2: ( (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER ) )
            // InternalGo.g:887:2: (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER )
            {
            // InternalGo.g:887:2: (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER )
            // InternalGo.g:888:3: this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_14);
            this_PackageName_0=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PackageName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,48,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_2=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedIdent"


    // $ANTLR start "entryRulePackageName"
    // InternalGo.g:917:1: entryRulePackageName returns [String current=null] : iv_rulePackageName= rulePackageName EOF ;
    public final String entryRulePackageName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePackageName = null;


        try {
            // InternalGo.g:917:51: (iv_rulePackageName= rulePackageName EOF )
            // InternalGo.g:918:2: iv_rulePackageName= rulePackageName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageName=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageName"


    // $ANTLR start "rulePackageName"
    // InternalGo.g:924:1: rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken rulePackageName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:930:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:931:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getPackageNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageName"


    // $ANTLR start "entryRuleTypeLit"
    // InternalGo.g:944:1: entryRuleTypeLit returns [EObject current=null] : iv_ruleTypeLit= ruleTypeLit EOF ;
    public final EObject entryRuleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLit = null;


        try {
            // InternalGo.g:944:48: (iv_ruleTypeLit= ruleTypeLit EOF )
            // InternalGo.g:945:2: iv_ruleTypeLit= ruleTypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeLit=ruleTypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLit"


    // $ANTLR start "ruleTypeLit"
    // InternalGo.g:951:1: ruleTypeLit returns [EObject current=null] : (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType ) ;
    public final EObject ruleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayType_0 = null;

        EObject this_StructType_1 = null;

        EObject this_FunctionType_2 = null;

        EObject this_InterfaceType_3 = null;

        EObject this_SliceType_4 = null;

        EObject this_MapType_5 = null;

        EObject this_ChannelType_6 = null;

        EObject this_PointerType_7 = null;



        	enterRule();

        try {
            // InternalGo.g:957:2: ( (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType ) )
            // InternalGo.g:958:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType )
            {
            // InternalGo.g:958:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType )
            int alt13=8;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalGo.g:959:3: this_ArrayType_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayType_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ArrayType_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:971:3: this_StructType_1= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructType_1=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructType_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:983:3: this_FunctionType_2= ruleFunctionType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionType_2=ruleFunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionType_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:995:3: this_InterfaceType_3= ruleInterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InterfaceType_3=ruleInterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InterfaceType_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:1007:3: this_SliceType_4= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SliceType_4=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SliceType_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:1019:3: this_MapType_5= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapType_5=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapType_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:1031:3: this_ChannelType_6= ruleChannelType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChannelType_6=ruleChannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChannelType_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:1043:3: this_PointerType_7= rulePointerType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PointerType_7=rulePointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PointerType_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLit"


    // $ANTLR start "entryRuleArrayType"
    // InternalGo.g:1058:1: entryRuleArrayType returns [EObject current=null] : iv_ruleArrayType= ruleArrayType EOF ;
    public final EObject entryRuleArrayType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayType = null;


        try {
            // InternalGo.g:1058:50: (iv_ruleArrayType= ruleArrayType EOF )
            // InternalGo.g:1059:2: iv_ruleArrayType= ruleArrayType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayType=ruleArrayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayType"


    // $ANTLR start "ruleArrayType"
    // InternalGo.g:1065:1: ruleArrayType returns [EObject current=null] : (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) ;
    public final EObject ruleArrayType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_ArrayLength_1 = null;

        EObject lv_elemtype_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1071:2: ( (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) )
            // InternalGo.g:1072:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            {
            // InternalGo.g:1072:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            // InternalGo.g:1073:3: otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,49,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_16);
            this_ArrayLength_1=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArrayLength_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalGo.g:1092:3: ( (lv_elemtype_3_0= ruleElementType ) )
            // InternalGo.g:1093:4: (lv_elemtype_3_0= ruleElementType )
            {
            // InternalGo.g:1093:4: (lv_elemtype_3_0= ruleElementType )
            // InternalGo.g:1094:5: lv_elemtype_3_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getElemtypeElementTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_3_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_3_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayType"


    // $ANTLR start "entryRuleArrayLength"
    // InternalGo.g:1115:1: entryRuleArrayLength returns [EObject current=null] : iv_ruleArrayLength= ruleArrayLength EOF ;
    public final EObject entryRuleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLength = null;


        try {
            // InternalGo.g:1115:52: (iv_ruleArrayLength= ruleArrayLength EOF )
            // InternalGo.g:1116:2: iv_ruleArrayLength= ruleArrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLength=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayLength"


    // $ANTLR start "ruleArrayLength"
    // InternalGo.g:1122:1: ruleArrayLength returns [EObject current=null] : ( (lv_exp_0_0= ruleExpression ) ) ;
    public final EObject ruleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1128:2: ( ( (lv_exp_0_0= ruleExpression ) ) )
            // InternalGo.g:1129:2: ( (lv_exp_0_0= ruleExpression ) )
            {
            // InternalGo.g:1129:2: ( (lv_exp_0_0= ruleExpression ) )
            // InternalGo.g:1130:3: (lv_exp_0_0= ruleExpression )
            {
            // InternalGo.g:1130:3: (lv_exp_0_0= ruleExpression )
            // InternalGo.g:1131:4: lv_exp_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArrayLengthAccess().getExpExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArrayLengthRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.xtext.example.mydsl.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayLength"


    // $ANTLR start "entryRuleElementType"
    // InternalGo.g:1151:1: entryRuleElementType returns [EObject current=null] : iv_ruleElementType= ruleElementType EOF ;
    public final EObject entryRuleElementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementType = null;


        try {
            // InternalGo.g:1151:52: (iv_ruleElementType= ruleElementType EOF )
            // InternalGo.g:1152:2: iv_ruleElementType= ruleElementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementType=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementType"


    // $ANTLR start "ruleElementType"
    // InternalGo.g:1158:1: ruleElementType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleElementType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1164:2: (this_Type_0= ruleType )
            // InternalGo.g:1165:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getElementTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementType"


    // $ANTLR start "entryRuleSliceType"
    // InternalGo.g:1179:1: entryRuleSliceType returns [EObject current=null] : iv_ruleSliceType= ruleSliceType EOF ;
    public final EObject entryRuleSliceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSliceType = null;


        try {
            // InternalGo.g:1179:50: (iv_ruleSliceType= ruleSliceType EOF )
            // InternalGo.g:1180:2: iv_ruleSliceType= ruleSliceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSliceType=ruleSliceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSliceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSliceType"


    // $ANTLR start "ruleSliceType"
    // InternalGo.g:1186:1: ruleSliceType returns [EObject current=null] : (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) ;
    public final EObject ruleSliceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_elemtype_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1192:2: ( (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) )
            // InternalGo.g:1193:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            {
            // InternalGo.g:1193:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            // InternalGo.g:1194:3: otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,49,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:1202:3: ( (lv_elemtype_2_0= ruleElementType ) )
            // InternalGo.g:1203:4: (lv_elemtype_2_0= ruleElementType )
            {
            // InternalGo.g:1203:4: (lv_elemtype_2_0= ruleElementType )
            // InternalGo.g:1204:5: lv_elemtype_2_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceTypeAccess().getElemtypeElementTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_2_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_2_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSliceType"


    // $ANTLR start "entryRuleStructType"
    // InternalGo.g:1225:1: entryRuleStructType returns [EObject current=null] : iv_ruleStructType= ruleStructType EOF ;
    public final EObject entryRuleStructType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructType = null;


        try {
            // InternalGo.g:1225:51: (iv_ruleStructType= ruleStructType EOF )
            // InternalGo.g:1226:2: iv_ruleStructType= ruleStructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructType=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructType"


    // $ANTLR start "ruleStructType"
    // InternalGo.g:1232:1: ruleStructType returns [EObject current=null] : ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' ) ;
    public final EObject ruleStructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_fielddecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1238:2: ( ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' ) )
            // InternalGo.g:1239:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' )
            {
            // InternalGo.g:1239:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' )
            // InternalGo.g:1240:3: () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}'
            {
            // InternalGo.g:1240:3: ()
            // InternalGo.g:1241:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,51,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,52,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:1258:3: ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==RULE_ID||LA15_0==43||LA15_0==56) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalGo.g:1259:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )?
            	    {
            	    // InternalGo.g:1259:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) )
            	    // InternalGo.g:1260:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    {
            	    // InternalGo.g:1260:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    // InternalGo.g:1261:6: lv_fielddecl_3_0= ruleFieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFielddeclFieldDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_fielddecl_3_0=ruleFieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"fielddecl",
            	      							lv_fielddecl_3_0,
            	      							"org.xtext.example.mydsl.Go.FieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:1278:4: (otherlv_4= ';' )?
            	    int alt14=2;
            	    int LA14_0 = input.LA(1);

            	    if ( (LA14_0==53) ) {
            	        alt14=1;
            	    }
            	    switch (alt14) {
            	        case 1 :
            	            // InternalGo.g:1279:5: otherlv_4= ';'
            	            {
            	            otherlv_4=(Token)match(input,53,FOLLOW_18); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);

            otherlv_5=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalGo.g:1293:1: entryRuleFieldDecl returns [EObject current=null] : iv_ruleFieldDecl= ruleFieldDecl EOF ;
    public final EObject entryRuleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldDecl = null;


        try {
            // InternalGo.g:1293:50: (iv_ruleFieldDecl= ruleFieldDecl EOF )
            // InternalGo.g:1294:2: iv_ruleFieldDecl= ruleFieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldDecl=ruleFieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalGo.g:1300:1: ruleFieldDecl returns [EObject current=null] : ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? ) ;
    public final EObject ruleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject lv_indentifierL_1_0 = null;

        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_embedded_3_0 = null;

        AntlrDatatypeRuleToken lv_tag_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1306:2: ( ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? ) )
            // InternalGo.g:1307:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? )
            {
            // InternalGo.g:1307:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? )
            // InternalGo.g:1308:3: () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )?
            {
            // InternalGo.g:1308:3: ()
            // InternalGo.g:1309:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFieldDeclAccess().getFieldDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1318:3: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) )
            int alt16=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case RULE_ID:
                case RULE_RAW_STRING_LIT:
                case RULE_INTERPRETED_STRING_LIT:
                case 43:
                case 48:
                case 53:
                case 54:
                    {
                    alt16=2;
                    }
                    break;
                case 56:
                    {
                    int LA16_4 = input.LA(3);

                    if ( (LA16_4==RULE_ID||LA16_4==43) ) {
                        alt16=2;
                    }
                    else if ( (LA16_4==RULE_LITERAL_TYPE||LA16_4==41||LA16_4==46||LA16_4==49||LA16_4==51||LA16_4==56||(LA16_4>=58 && LA16_4<=61)) ) {
                        alt16=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 16, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LITERAL_TYPE:
                case 41:
                case 46:
                case 49:
                case 51:
                case 55:
                case 58:
                case 59:
                case 60:
                case 61:
                    {
                    alt16=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }

                }
                break;
            case 43:
                {
                int LA16_2 = input.LA(2);

                if ( (LA16_2==RULE_ID) ) {
                    switch ( input.LA(3) ) {
                    case EOF:
                    case RULE_ID:
                    case RULE_RAW_STRING_LIT:
                    case RULE_INTERPRETED_STRING_LIT:
                    case 43:
                    case 48:
                    case 53:
                    case 54:
                        {
                        alt16=2;
                        }
                        break;
                    case 56:
                        {
                        int LA16_4 = input.LA(4);

                        if ( (LA16_4==RULE_ID||LA16_4==43) ) {
                            alt16=2;
                        }
                        else if ( (LA16_4==RULE_LITERAL_TYPE||LA16_4==41||LA16_4==46||LA16_4==49||LA16_4==51||LA16_4==56||(LA16_4>=58 && LA16_4<=61)) ) {
                            alt16=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 4, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LITERAL_TYPE:
                    case 41:
                    case 46:
                    case 49:
                    case 51:
                    case 55:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                        {
                        alt16=1;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 16, 6, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
                }
                break;
            case 56:
                {
                alt16=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalGo.g:1319:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    {
                    // InternalGo.g:1319:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    // InternalGo.g:1320:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) )
                    {
                    // InternalGo.g:1320:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) )
                    // InternalGo.g:1321:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1321:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    // InternalGo.g:1322:7: lv_indentifierL_1_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_12);
                    lv_indentifierL_1_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"indentifierL",
                      								lv_indentifierL_1_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:1339:5: ( (lv_type_2_0= ruleType ) )
                    // InternalGo.g:1340:6: (lv_type_2_0= ruleType )
                    {
                    // InternalGo.g:1340:6: (lv_type_2_0= ruleType )
                    // InternalGo.g:1341:7: lv_type_2_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_type_2_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"org.xtext.example.mydsl.Go.Type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1360:4: ( (lv_embedded_3_0= ruleEmbeddedField ) )
                    {
                    // InternalGo.g:1360:4: ( (lv_embedded_3_0= ruleEmbeddedField ) )
                    // InternalGo.g:1361:5: (lv_embedded_3_0= ruleEmbeddedField )
                    {
                    // InternalGo.g:1361:5: (lv_embedded_3_0= ruleEmbeddedField )
                    // InternalGo.g:1362:6: lv_embedded_3_0= ruleEmbeddedField
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedEmbeddedFieldParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_embedded_3_0=ruleEmbeddedField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      						}
                      						set(
                      							current,
                      							"embedded",
                      							lv_embedded_3_0,
                      							"org.xtext.example.mydsl.Go.EmbeddedField");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:1380:3: ( (lv_tag_4_0= ruleTag ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=RULE_RAW_STRING_LIT && LA17_0<=RULE_INTERPRETED_STRING_LIT)) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalGo.g:1381:4: (lv_tag_4_0= ruleTag )
                    {
                    // InternalGo.g:1381:4: (lv_tag_4_0= ruleTag )
                    // InternalGo.g:1382:5: lv_tag_4_0= ruleTag
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tag_4_0=ruleTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      					}
                      					set(
                      						current,
                      						"tag",
                      						lv_tag_4_0,
                      						"org.xtext.example.mydsl.Go.Tag");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleIdentifierList"
    // InternalGo.g:1403:1: entryRuleIdentifierList returns [EObject current=null] : iv_ruleIdentifierList= ruleIdentifierList EOF ;
    public final EObject entryRuleIdentifierList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierList = null;


        try {
            // InternalGo.g:1403:55: (iv_ruleIdentifierList= ruleIdentifierList EOF )
            // InternalGo.g:1404:2: iv_ruleIdentifierList= ruleIdentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierList=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierList"


    // $ANTLR start "ruleIdentifierList"
    // InternalGo.g:1410:1: ruleIdentifierList returns [EObject current=null] : ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* ) ;
    public final EObject ruleIdentifierList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_id_1_0 = null;

        AntlrDatatypeRuleToken lv_id2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1416:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* ) )
            // InternalGo.g:1417:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* )
            {
            // InternalGo.g:1417:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* )
            // InternalGo.g:1418:3: () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )*
            {
            // InternalGo.g:1418:3: ()
            // InternalGo.g:1419:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIdentifierListAccess().getIdentifierListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1428:3: ( (lv_id_1_0= ruleIDENTIFIER ) )
            // InternalGo.g:1429:4: (lv_id_1_0= ruleIDENTIFIER )
            {
            // InternalGo.g:1429:4: (lv_id_1_0= ruleIDENTIFIER )
            // InternalGo.g:1430:5: lv_id_1_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIdentifierListAccess().getIdIDENTIFIERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_id_1_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIdentifierListRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_1_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1447:3: (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==55) ) {
                    int LA18_2 = input.LA(2);

                    if ( (LA18_2==RULE_ID) ) {
                        int LA18_3 = input.LA(3);

                        if ( (synpred26_InternalGo()) ) {
                            alt18=1;
                        }


                    }
                    else if ( (LA18_2==43) ) {
                        int LA18_4 = input.LA(3);

                        if ( (LA18_4==RULE_ID) ) {
                            int LA18_6 = input.LA(4);

                            if ( (synpred26_InternalGo()) ) {
                                alt18=1;
                            }


                        }


                    }


                }


                switch (alt18) {
            	case 1 :
            	    // InternalGo.g:1448:4: otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) )
            	    {
            	    otherlv_2=(Token)match(input,55,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getIdentifierListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:1452:4: ( (lv_id2_3_0= ruleIDENTIFIER ) )
            	    // InternalGo.g:1453:5: (lv_id2_3_0= ruleIDENTIFIER )
            	    {
            	    // InternalGo.g:1453:5: (lv_id2_3_0= ruleIDENTIFIER )
            	    // InternalGo.g:1454:6: lv_id2_3_0= ruleIDENTIFIER
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getIdentifierListAccess().getId2IDENTIFIERParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_id2_3_0=ruleIDENTIFIER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getIdentifierListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"id2",
            	      							lv_id2_3_0,
            	      							"org.xtext.example.mydsl.Go.IDENTIFIER");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierList"


    // $ANTLR start "entryRuleEmbeddedField"
    // InternalGo.g:1476:1: entryRuleEmbeddedField returns [String current=null] : iv_ruleEmbeddedField= ruleEmbeddedField EOF ;
    public final String entryRuleEmbeddedField() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmbeddedField = null;


        try {
            // InternalGo.g:1476:53: (iv_ruleEmbeddedField= ruleEmbeddedField EOF )
            // InternalGo.g:1477:2: iv_ruleEmbeddedField= ruleEmbeddedField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmbeddedFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmbeddedField=ruleEmbeddedField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmbeddedField.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmbeddedField"


    // $ANTLR start "ruleEmbeddedField"
    // InternalGo.g:1483:1: ruleEmbeddedField returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '*' )? this_TypeName_1= ruleTypeName ) ;
    public final AntlrDatatypeRuleToken ruleEmbeddedField() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_TypeName_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1489:2: ( ( (kw= '*' )? this_TypeName_1= ruleTypeName ) )
            // InternalGo.g:1490:2: ( (kw= '*' )? this_TypeName_1= ruleTypeName )
            {
            // InternalGo.g:1490:2: ( (kw= '*' )? this_TypeName_1= ruleTypeName )
            // InternalGo.g:1491:3: (kw= '*' )? this_TypeName_1= ruleTypeName
            {
            // InternalGo.g:1491:3: (kw= '*' )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==56) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1492:4: kw= '*'
                    {
                    kw=(Token)match(input,56,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeName_1=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_TypeName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmbeddedField"


    // $ANTLR start "entryRuleTag"
    // InternalGo.g:1512:1: entryRuleTag returns [String current=null] : iv_ruleTag= ruleTag EOF ;
    public final String entryRuleTag() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTag = null;


        try {
            // InternalGo.g:1512:43: (iv_ruleTag= ruleTag EOF )
            // InternalGo.g:1513:2: iv_ruleTag= ruleTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTag=ruleTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTag.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTag"


    // $ANTLR start "ruleTag"
    // InternalGo.g:1519:1: ruleTag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= ruleSTRING_LIT ;
    public final AntlrDatatypeRuleToken ruleTag() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_STRING_LIT_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1525:2: (this_STRING_LIT_0= ruleSTRING_LIT )
            // InternalGo.g:1526:2: this_STRING_LIT_0= ruleSTRING_LIT
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getTagAccess().getSTRING_LITParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_STRING_LIT_0=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTag"


    // $ANTLR start "entryRulePointerType"
    // InternalGo.g:1539:1: entryRulePointerType returns [EObject current=null] : iv_rulePointerType= rulePointerType EOF ;
    public final EObject entryRulePointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePointerType = null;


        try {
            // InternalGo.g:1539:52: (iv_rulePointerType= rulePointerType EOF )
            // InternalGo.g:1540:2: iv_rulePointerType= rulePointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePointerType=rulePointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePointerType"


    // $ANTLR start "rulePointerType"
    // InternalGo.g:1546:1: rulePointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) ;
    public final EObject rulePointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_basetype_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1552:2: ( (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) )
            // InternalGo.g:1553:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            {
            // InternalGo.g:1553:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            // InternalGo.g:1554:3: otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) )
            {
            otherlv_0=(Token)match(input,56,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:1558:3: ( (lv_basetype_1_0= ruleBaseType ) )
            // InternalGo.g:1559:4: (lv_basetype_1_0= ruleBaseType )
            {
            // InternalGo.g:1559:4: (lv_basetype_1_0= ruleBaseType )
            // InternalGo.g:1560:5: lv_basetype_1_0= ruleBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getBasetypeBaseTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_basetype_1_0=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"basetype",
              						lv_basetype_1_0,
              						"org.xtext.example.mydsl.Go.BaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePointerType"


    // $ANTLR start "entryRuleBaseType"
    // InternalGo.g:1581:1: entryRuleBaseType returns [EObject current=null] : iv_ruleBaseType= ruleBaseType EOF ;
    public final EObject entryRuleBaseType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseType = null;


        try {
            // InternalGo.g:1581:49: (iv_ruleBaseType= ruleBaseType EOF )
            // InternalGo.g:1582:2: iv_ruleBaseType= ruleBaseType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseType=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseType"


    // $ANTLR start "ruleBaseType"
    // InternalGo.g:1588:1: ruleBaseType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleBaseType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1594:2: (this_Type_0= ruleType )
            // InternalGo.g:1595:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseType"


    // $ANTLR start "entryRuleFunctionType"
    // InternalGo.g:1609:1: entryRuleFunctionType returns [EObject current=null] : iv_ruleFunctionType= ruleFunctionType EOF ;
    public final EObject entryRuleFunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionType = null;


        try {
            // InternalGo.g:1609:53: (iv_ruleFunctionType= ruleFunctionType EOF )
            // InternalGo.g:1610:2: iv_ruleFunctionType= ruleFunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionType=ruleFunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionType"


    // $ANTLR start "ruleFunctionType"
    // InternalGo.g:1616:1: ruleFunctionType returns [EObject current=null] : (otherlv_0= 'func' this_Signature_1= ruleSignature ) ;
    public final EObject ruleFunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Signature_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1622:2: ( (otherlv_0= 'func' this_Signature_1= ruleSignature ) )
            // InternalGo.g:1623:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            {
            // InternalGo.g:1623:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            // InternalGo.g:1624:3: otherlv_0= 'func' this_Signature_1= ruleSignature
            {
            otherlv_0=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Signature_1=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Signature_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionType"


    // $ANTLR start "entryRuleSignature"
    // InternalGo.g:1643:1: entryRuleSignature returns [EObject current=null] : iv_ruleSignature= ruleSignature EOF ;
    public final EObject entryRuleSignature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignature = null;


        try {
            // InternalGo.g:1643:50: (iv_ruleSignature= ruleSignature EOF )
            // InternalGo.g:1644:2: iv_ruleSignature= ruleSignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignature=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignature"


    // $ANTLR start "ruleSignature"
    // InternalGo.g:1650:1: ruleSignature returns [EObject current=null] : ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? ) ;
    public final EObject ruleSignature() throws RecognitionException {
        EObject current = null;

        EObject lv_parameters_0_0 = null;

        EObject lv_result_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1656:2: ( ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? ) )
            // InternalGo.g:1657:2: ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? )
            {
            // InternalGo.g:1657:2: ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? )
            // InternalGo.g:1658:3: ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )?
            {
            // InternalGo.g:1658:3: ( (lv_parameters_0_0= ruleParameters ) )
            // InternalGo.g:1659:4: (lv_parameters_0_0= ruleParameters )
            {
            // InternalGo.g:1659:4: (lv_parameters_0_0= ruleParameters )
            // InternalGo.g:1660:5: lv_parameters_0_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_parameters_0_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignatureRule());
              					}
              					set(
              						current,
              						"parameters",
              						lv_parameters_0_0,
              						"org.xtext.example.mydsl.Go.Parameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1677:3: ( (lv_result_1_0= ruleResult ) )?
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalGo.g:1678:4: (lv_result_1_0= ruleResult )
                    {
                    // InternalGo.g:1678:4: (lv_result_1_0= ruleResult )
                    // InternalGo.g:1679:5: lv_result_1_0= ruleResult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_result_1_0=ruleResult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"result",
                      						lv_result_1_0,
                      						"org.xtext.example.mydsl.Go.Result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignature"


    // $ANTLR start "entryRuleResult"
    // InternalGo.g:1700:1: entryRuleResult returns [EObject current=null] : iv_ruleResult= ruleResult EOF ;
    public final EObject entryRuleResult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResult = null;


        try {
            // InternalGo.g:1700:47: (iv_ruleResult= ruleResult EOF )
            // InternalGo.g:1701:2: iv_ruleResult= ruleResult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResult=ruleResult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResult"


    // $ANTLR start "ruleResult"
    // InternalGo.g:1707:1: ruleResult returns [EObject current=null] : ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) ) ;
    public final EObject ruleResult() throws RecognitionException {
        EObject current = null;

        EObject lv_parameteres_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1713:2: ( ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) ) )
            // InternalGo.g:1714:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )
            {
            // InternalGo.g:1714:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalGo.g:1715:3: ( (lv_parameteres_0_0= ruleParameters ) )
                    {
                    // InternalGo.g:1715:3: ( (lv_parameteres_0_0= ruleParameters ) )
                    // InternalGo.g:1716:4: (lv_parameteres_0_0= ruleParameters )
                    {
                    // InternalGo.g:1716:4: (lv_parameteres_0_0= ruleParameters )
                    // InternalGo.g:1717:5: lv_parameteres_0_0= ruleParameters
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getParameteresParametersParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameteres_0_0=ruleParameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"parameteres",
                      						lv_parameteres_0_0,
                      						"org.xtext.example.mydsl.Go.Parameters");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1735:3: ( (lv_type_1_0= ruleType ) )
                    {
                    // InternalGo.g:1735:3: ( (lv_type_1_0= ruleType ) )
                    // InternalGo.g:1736:4: (lv_type_1_0= ruleType )
                    {
                    // InternalGo.g:1736:4: (lv_type_1_0= ruleType )
                    // InternalGo.g:1737:5: lv_type_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.example.mydsl.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResult"


    // $ANTLR start "entryRuleParameters"
    // InternalGo.g:1758:1: entryRuleParameters returns [EObject current=null] : iv_ruleParameters= ruleParameters EOF ;
    public final EObject entryRuleParameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameters = null;


        try {
            // InternalGo.g:1758:51: (iv_ruleParameters= ruleParameters EOF )
            // InternalGo.g:1759:2: iv_ruleParameters= ruleParameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameters=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameters"


    // $ANTLR start "ruleParameters"
    // InternalGo.g:1765:1: ruleParameters returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleParameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameterlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1771:2: ( ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalGo.g:1772:2: ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalGo.g:1772:2: ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalGo.g:1773:3: () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalGo.g:1773:3: ()
            // InternalGo.g:1774:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParametersAccess().getParametersAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,46,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:1787:3: ( (lv_parameterlist_2_0= ruleParameterList ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID||LA22_0==RULE_LITERAL_TYPE||LA22_0==41||LA22_0==43||LA22_0==46||LA22_0==49||LA22_0==51||(LA22_0>=55 && LA22_0<=61)) ) {
                alt22=1;
            }
            else if ( (LA22_0==47) ) {
                int LA22_2 = input.LA(2);

                if ( (synpred30_InternalGo()) ) {
                    alt22=1;
                }
            }
            switch (alt22) {
                case 1 :
                    // InternalGo.g:1788:4: (lv_parameterlist_2_0= ruleParameterList )
                    {
                    // InternalGo.g:1788:4: (lv_parameterlist_2_0= ruleParameterList )
                    // InternalGo.g:1789:5: lv_parameterlist_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_13);
                    lv_parameterlist_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParametersRule());
                      					}
                      					set(
                      						current,
                      						"parameterlist",
                      						lv_parameterlist_2_0,
                      						"org.xtext.example.mydsl.Go.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameters"


    // $ANTLR start "entryRuleParameterList"
    // InternalGo.g:1814:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalGo.g:1814:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalGo.g:1815:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalGo.g:1821:1: ruleParameterList returns [EObject current=null] : ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_parameterDecl1_1_0 = null;

        EObject lv_parameterdecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1827:2: ( ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* ) )
            // InternalGo.g:1828:2: ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* )
            {
            // InternalGo.g:1828:2: ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* )
            // InternalGo.g:1829:3: () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )*
            {
            // InternalGo.g:1829:3: ()
            // InternalGo.g:1830:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParameterListAccess().getParameterListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1839:3: ( (lv_parameterDecl1_1_0= ruleParameterDecl ) )
            // InternalGo.g:1840:4: (lv_parameterDecl1_1_0= ruleParameterDecl )
            {
            // InternalGo.g:1840:4: (lv_parameterDecl1_1_0= ruleParameterDecl )
            // InternalGo.g:1841:5: lv_parameterDecl1_1_0= ruleParameterDecl
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDecl1ParameterDeclParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_parameterDecl1_1_0=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterListRule());
              					}
              					set(
              						current,
              						"parameterDecl1",
              						lv_parameterDecl1_1_0,
              						"org.xtext.example.mydsl.Go.ParameterDecl");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1858:3: (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==55) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalGo.g:1859:4: otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) )
            	    {
            	    otherlv_2=(Token)match(input,55,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:1863:4: ( (lv_parameterdecl_3_0= ruleParameterDecl ) )
            	    // InternalGo.g:1864:5: (lv_parameterdecl_3_0= ruleParameterDecl )
            	    {
            	    // InternalGo.g:1864:5: (lv_parameterdecl_3_0= ruleParameterDecl )
            	    // InternalGo.g:1865:6: lv_parameterdecl_3_0= ruleParameterDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameterListAccess().getParameterdeclParameterDeclParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_parameterdecl_3_0=ruleParameterDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameterListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"parameterdecl",
            	      							lv_parameterdecl_3_0,
            	      							"org.xtext.example.mydsl.Go.ParameterDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleParameterDecl"
    // InternalGo.g:1887:1: entryRuleParameterDecl returns [EObject current=null] : iv_ruleParameterDecl= ruleParameterDecl EOF ;
    public final EObject entryRuleParameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterDecl = null;


        try {
            // InternalGo.g:1887:54: (iv_ruleParameterDecl= ruleParameterDecl EOF )
            // InternalGo.g:1888:2: iv_ruleParameterDecl= ruleParameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterDecl=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterDecl"


    // $ANTLR start "ruleParameterDecl"
    // InternalGo.g:1894:1: ruleParameterDecl returns [EObject current=null] : ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) | ( ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) ) ) ) ;
    public final EObject ruleParameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_id_1_0 = null;

        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_id_4_0 = null;

        EObject lv_type_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1900:2: ( ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) | ( ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) ) ) ) )
            // InternalGo.g:1901:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) | ( ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) ) ) )
            {
            // InternalGo.g:1901:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) | ( ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) ) ) )
            int alt29=2;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // InternalGo.g:1902:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? )
                    {
                    // InternalGo.g:1902:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? )
                    // InternalGo.g:1903:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )?
                    {
                    // InternalGo.g:1903:4: ()
                    // InternalGo.g:1904:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getParameterDeclAccess().getParameterDeclAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:1913:4: ( (lv_id_1_0= ruleIDENTIFIER ) )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==RULE_ID||LA24_0==43) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalGo.g:1914:5: (lv_id_1_0= ruleIDENTIFIER )
                            {
                            // InternalGo.g:1914:5: (lv_id_1_0= ruleIDENTIFIER )
                            // InternalGo.g:1915:6: lv_id_1_0= ruleIDENTIFIER
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getParameterDeclAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_26);
                            lv_id_1_0=ruleIDENTIFIER();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_1_0,
                              							"org.xtext.example.mydsl.Go.IDENTIFIER");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalGo.g:1932:4: (otherlv_2= '...' )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==57) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalGo.g:1933:5: otherlv_2= '...'
                            {
                            otherlv_2=(Token)match(input,57,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_0_2());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:1938:4: ( (lv_type_3_0= ruleType ) )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==RULE_LITERAL_TYPE||LA26_0==41||LA26_0==46||LA26_0==49||LA26_0==51||LA26_0==56||(LA26_0>=58 && LA26_0<=61)) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalGo.g:1939:5: (lv_type_3_0= ruleType )
                            {
                            // InternalGo.g:1939:5: (lv_type_3_0= ruleType )
                            // InternalGo.g:1940:6: lv_type_3_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_type_3_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                              						}
                              						set(
                              							current,
                              							"type",
                              							lv_type_3_0,
                              							"org.xtext.example.mydsl.Go.Type");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1959:3: ( ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) ) )
                    {
                    // InternalGo.g:1959:3: ( ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) ) )
                    // InternalGo.g:1960:4: ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) )
                    {
                    // InternalGo.g:1960:4: ( (lv_id_4_0= ruleIDENTIFIER ) )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==RULE_ID||LA27_0==43) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalGo.g:1961:5: (lv_id_4_0= ruleIDENTIFIER )
                            {
                            // InternalGo.g:1961:5: (lv_id_4_0= ruleIDENTIFIER )
                            // InternalGo.g:1962:6: lv_id_4_0= ruleIDENTIFIER
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getParameterDeclAccess().getIdIDENTIFIERParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_27);
                            lv_id_4_0=ruleIDENTIFIER();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_4_0,
                              							"org.xtext.example.mydsl.Go.IDENTIFIER");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalGo.g:1979:4: (otherlv_5= '...' )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==57) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalGo.g:1980:5: otherlv_5= '...'
                            {
                            otherlv_5=(Token)match(input,57,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:1985:4: ( (lv_type_6_0= ruleType ) )
                    // InternalGo.g:1986:5: (lv_type_6_0= ruleType )
                    {
                    // InternalGo.g:1986:5: (lv_type_6_0= ruleType )
                    // InternalGo.g:1987:6: lv_type_6_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_6_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_6_0,
                      							"org.xtext.example.mydsl.Go.Type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterDecl"


    // $ANTLR start "entryRuleInterfaceType"
    // InternalGo.g:2009:1: entryRuleInterfaceType returns [EObject current=null] : iv_ruleInterfaceType= ruleInterfaceType EOF ;
    public final EObject entryRuleInterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceType = null;


        try {
            // InternalGo.g:2009:54: (iv_ruleInterfaceType= ruleInterfaceType EOF )
            // InternalGo.g:2010:2: iv_ruleInterfaceType= ruleInterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceType=ruleInterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceType"


    // $ANTLR start "ruleInterfaceType"
    // InternalGo.g:2016:1: ruleInterfaceType returns [EObject current=null] : ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) (otherlv_4= ';' )? )* otherlv_5= '}' ) ;
    public final EObject ruleInterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_methodspec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2022:2: ( ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) (otherlv_4= ';' )? )* otherlv_5= '}' ) )
            // InternalGo.g:2023:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) (otherlv_4= ';' )? )* otherlv_5= '}' )
            {
            // InternalGo.g:2023:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) (otherlv_4= ';' )? )* otherlv_5= '}' )
            // InternalGo.g:2024:3: () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) (otherlv_4= ';' )? )* otherlv_5= '}'
            {
            // InternalGo.g:2024:3: ()
            // InternalGo.g:2025:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,58,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,52,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:2042:3: ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) (otherlv_4= ';' )? )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_ID||LA31_0==43) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalGo.g:2043:4: ( (lv_methodspec_3_0= ruleMethodSpec ) ) (otherlv_4= ';' )?
            	    {
            	    // InternalGo.g:2043:4: ( (lv_methodspec_3_0= ruleMethodSpec ) )
            	    // InternalGo.g:2044:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    {
            	    // InternalGo.g:2044:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    // InternalGo.g:2045:6: lv_methodspec_3_0= ruleMethodSpec
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodspecMethodSpecParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_methodspec_3_0=ruleMethodSpec();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"methodspec",
            	      							lv_methodspec_3_0,
            	      							"org.xtext.example.mydsl.Go.MethodSpec");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:2062:4: (otherlv_4= ';' )?
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( (LA30_0==53) ) {
            	        alt30=1;
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // InternalGo.g:2063:5: otherlv_4= ';'
            	            {
            	            otherlv_4=(Token)match(input,53,FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            otherlv_5=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceType"


    // $ANTLR start "entryRuleMethodSpec"
    // InternalGo.g:2077:1: entryRuleMethodSpec returns [EObject current=null] : iv_ruleMethodSpec= ruleMethodSpec EOF ;
    public final EObject entryRuleMethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodSpec = null;


        try {
            // InternalGo.g:2077:51: (iv_ruleMethodSpec= ruleMethodSpec EOF )
            // InternalGo.g:2078:2: iv_ruleMethodSpec= ruleMethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodSpec=ruleMethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodSpec"


    // $ANTLR start "ruleMethodSpec"
    // InternalGo.g:2084:1: ruleMethodSpec returns [EObject current=null] : ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) ) ;
    public final EObject ruleMethodSpec() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_mn_0_0 = null;

        EObject lv_signature_1_0 = null;

        AntlrDatatypeRuleToken lv_itn_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2090:2: ( ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) ) )
            // InternalGo.g:2091:2: ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) )
            {
            // InternalGo.g:2091:2: ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_ID) ) {
                int LA32_1 = input.LA(2);

                if ( (LA32_1==EOF||LA32_1==RULE_ID||LA32_1==43||LA32_1==48||(LA32_1>=53 && LA32_1<=54)) ) {
                    alt32=2;
                }
                else if ( (LA32_1==46) ) {
                    alt32=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA32_0==43) ) {
                int LA32_2 = input.LA(2);

                if ( (LA32_2==RULE_ID) ) {
                    int LA32_5 = input.LA(3);

                    if ( (LA32_5==EOF||LA32_5==RULE_ID||LA32_5==43||LA32_5==48||(LA32_5>=53 && LA32_5<=54)) ) {
                        alt32=2;
                    }
                    else if ( (LA32_5==46) ) {
                        alt32=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalGo.g:2092:3: ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) )
                    {
                    // InternalGo.g:2092:3: ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) )
                    // InternalGo.g:2093:4: ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) )
                    {
                    // InternalGo.g:2093:4: ( (lv_mn_0_0= ruleMethodName ) )
                    // InternalGo.g:2094:5: (lv_mn_0_0= ruleMethodName )
                    {
                    // InternalGo.g:2094:5: (lv_mn_0_0= ruleMethodName )
                    // InternalGo.g:2095:6: lv_mn_0_0= ruleMethodName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getMnMethodNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_mn_0_0=ruleMethodName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"mn",
                      							lv_mn_0_0,
                      							"org.xtext.example.mydsl.Go.MethodName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2112:4: ( (lv_signature_1_0= ruleSignature ) )
                    // InternalGo.g:2113:5: (lv_signature_1_0= ruleSignature )
                    {
                    // InternalGo.g:2113:5: (lv_signature_1_0= ruleSignature )
                    // InternalGo.g:2114:6: lv_signature_1_0= ruleSignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_signature_1_0=ruleSignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"signature",
                      							lv_signature_1_0,
                      							"org.xtext.example.mydsl.Go.Signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2133:3: ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) )
                    {
                    // InternalGo.g:2133:3: ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) )
                    // InternalGo.g:2134:4: () ( (lv_itn_3_0= ruleInterfaceTypeName ) )
                    {
                    // InternalGo.g:2134:4: ()
                    // InternalGo.g:2135:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getMethodSpecAccess().getMethodSpecAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2144:4: ( (lv_itn_3_0= ruleInterfaceTypeName ) )
                    // InternalGo.g:2145:5: (lv_itn_3_0= ruleInterfaceTypeName )
                    {
                    // InternalGo.g:2145:5: (lv_itn_3_0= ruleInterfaceTypeName )
                    // InternalGo.g:2146:6: lv_itn_3_0= ruleInterfaceTypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getItnInterfaceTypeNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_itn_3_0=ruleInterfaceTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"itn",
                      							lv_itn_3_0,
                      							"org.xtext.example.mydsl.Go.InterfaceTypeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodSpec"


    // $ANTLR start "entryRuleMethodName"
    // InternalGo.g:2168:1: entryRuleMethodName returns [String current=null] : iv_ruleMethodName= ruleMethodName EOF ;
    public final String entryRuleMethodName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethodName = null;


        try {
            // InternalGo.g:2168:50: (iv_ruleMethodName= ruleMethodName EOF )
            // InternalGo.g:2169:2: iv_ruleMethodName= ruleMethodName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodName=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodName"


    // $ANTLR start "ruleMethodName"
    // InternalGo.g:2175:1: ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleMethodName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2181:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:2182:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getMethodNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodName"


    // $ANTLR start "entryRuleInterfaceTypeName"
    // InternalGo.g:2195:1: entryRuleInterfaceTypeName returns [String current=null] : iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF ;
    public final String entryRuleInterfaceTypeName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInterfaceTypeName = null;


        try {
            // InternalGo.g:2195:57: (iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF )
            // InternalGo.g:2196:2: iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceTypeName=ruleInterfaceTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceTypeName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceTypeName"


    // $ANTLR start "ruleInterfaceTypeName"
    // InternalGo.g:2202:1: ruleInterfaceTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_TypeName_0= ruleTypeName ;
    public final AntlrDatatypeRuleToken ruleInterfaceTypeName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_TypeName_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2208:2: (this_TypeName_0= ruleTypeName )
            // InternalGo.g:2209:2: this_TypeName_0= ruleTypeName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_TypeName_0=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_TypeName_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceTypeName"


    // $ANTLR start "entryRuleMapType"
    // InternalGo.g:2222:1: entryRuleMapType returns [EObject current=null] : iv_ruleMapType= ruleMapType EOF ;
    public final EObject entryRuleMapType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapType = null;


        try {
            // InternalGo.g:2222:48: (iv_ruleMapType= ruleMapType EOF )
            // InternalGo.g:2223:2: iv_ruleMapType= ruleMapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapType=ruleMapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapType"


    // $ANTLR start "ruleMapType"
    // InternalGo.g:2229:1: ruleMapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleMapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_keytype_2_0 = null;

        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2235:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2236:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2236:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2237:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,59,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,49,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:2245:3: ( (lv_keytype_2_0= ruleKeyType ) )
            // InternalGo.g:2246:4: (lv_keytype_2_0= ruleKeyType )
            {
            // InternalGo.g:2246:4: (lv_keytype_2_0= ruleKeyType )
            // InternalGo.g:2247:5: lv_keytype_2_0= ruleKeyType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getKeytypeKeyTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_keytype_2_0=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"keytype",
              						lv_keytype_2_0,
              						"org.xtext.example.mydsl.Go.KeyType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:2268:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2269:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2269:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2270:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElemtypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapType"


    // $ANTLR start "entryRuleKeyType"
    // InternalGo.g:2291:1: entryRuleKeyType returns [EObject current=null] : iv_ruleKeyType= ruleKeyType EOF ;
    public final EObject entryRuleKeyType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyType = null;


        try {
            // InternalGo.g:2291:48: (iv_ruleKeyType= ruleKeyType EOF )
            // InternalGo.g:2292:2: iv_ruleKeyType= ruleKeyType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyType=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyType"


    // $ANTLR start "ruleKeyType"
    // InternalGo.g:2298:1: ruleKeyType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleKeyType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2304:2: (this_Type_0= ruleType )
            // InternalGo.g:2305:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyType"


    // $ANTLR start "entryRuleChannelType"
    // InternalGo.g:2319:1: entryRuleChannelType returns [EObject current=null] : iv_ruleChannelType= ruleChannelType EOF ;
    public final EObject entryRuleChannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelType = null;


        try {
            // InternalGo.g:2319:52: (iv_ruleChannelType= ruleChannelType EOF )
            // InternalGo.g:2320:2: iv_ruleChannelType= ruleChannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelType=ruleChannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelType"


    // $ANTLR start "ruleChannelType"
    // InternalGo.g:2326:1: ruleChannelType returns [EObject current=null] : ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleChannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2332:2: ( ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2333:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2333:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2334:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) )
            {
            // InternalGo.g:2334:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==60) ) {
                alt34=1;
            }
            else if ( (LA34_0==61) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalGo.g:2335:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    {
                    // InternalGo.g:2335:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    // InternalGo.g:2336:5: otherlv_0= 'chan' (otherlv_1= '<-' )?
                    {
                    otherlv_0=(Token)match(input,60,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0_0());
                      				
                    }
                    // InternalGo.g:2340:5: (otherlv_1= '<-' )?
                    int alt33=2;
                    alt33 = dfa33.predict(input);
                    switch (alt33) {
                        case 1 :
                            // InternalGo.g:2341:6: otherlv_1= '<-'
                            {
                            otherlv_1=(Token)match(input,61,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_0_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2348:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    {
                    // InternalGo.g:2348:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    // InternalGo.g:2349:5: otherlv_2= '<-' otherlv_3= 'chan'
                    {
                    otherlv_2=(Token)match(input,61,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0());
                      				
                    }
                    otherlv_3=(Token)match(input,60,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:2359:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2360:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2360:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2361:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElemtypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelType"


    // $ANTLR start "entryRuleBlock"
    // InternalGo.g:2382:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalGo.g:2382:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalGo.g:2383:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalGo.g:2389:1: ruleBlock returns [EObject current=null] : (otherlv_0= '{' ( (lv_statementlist_1_0= ruleStatementList ) ) otherlv_2= '}' ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_statementlist_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2395:2: ( (otherlv_0= '{' ( (lv_statementlist_1_0= ruleStatementList ) ) otherlv_2= '}' ) )
            // InternalGo.g:2396:2: (otherlv_0= '{' ( (lv_statementlist_1_0= ruleStatementList ) ) otherlv_2= '}' )
            {
            // InternalGo.g:2396:2: (otherlv_0= '{' ( (lv_statementlist_1_0= ruleStatementList ) ) otherlv_2= '}' )
            // InternalGo.g:2397:3: otherlv_0= '{' ( (lv_statementlist_1_0= ruleStatementList ) ) otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,52,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalGo.g:2401:3: ( (lv_statementlist_1_0= ruleStatementList ) )
            // InternalGo.g:2402:4: (lv_statementlist_1_0= ruleStatementList )
            {
            // InternalGo.g:2402:4: (lv_statementlist_1_0= ruleStatementList )
            // InternalGo.g:2403:5: lv_statementlist_1_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockAccess().getStatementlistStatementListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_statementlist_1_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_1_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleStatementList"
    // InternalGo.g:2428:1: entryRuleStatementList returns [EObject current=null] : iv_ruleStatementList= ruleStatementList EOF ;
    public final EObject entryRuleStatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatementList = null;


        try {
            // InternalGo.g:2428:54: (iv_ruleStatementList= ruleStatementList EOF )
            // InternalGo.g:2429:2: iv_ruleStatementList= ruleStatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatementList=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementList"


    // $ANTLR start "ruleStatementList"
    // InternalGo.g:2435:1: ruleStatementList returns [EObject current=null] : ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' | otherlv_3= ',' )? )* ) ;
    public final EObject ruleStatementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_statment_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2441:2: ( ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' | otherlv_3= ',' )? )* ) )
            // InternalGo.g:2442:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' | otherlv_3= ',' )? )* )
            {
            // InternalGo.g:2442:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' | otherlv_3= ',' )? )* )
            // InternalGo.g:2443:3: () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' | otherlv_3= ',' )? )*
            {
            // InternalGo.g:2443:3: ()
            // InternalGo.g:2444:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStatementListAccess().getStatementListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:2453:3: ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' | otherlv_3= ',' )? )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=RULE_ID && LA36_0<=RULE_FLOAT_LIT)||LA36_0==RULE_LITERAL_TYPE||(LA36_0>=RULE_UNARY_OP && LA36_0<=RULE_BOOLEAN_LIT)||LA36_0==41||LA36_0==43||(LA36_0>=45 && LA36_0<=46)||LA36_0==49||(LA36_0>=51 && LA36_0<=53)||LA36_0==56||(LA36_0>=58 && LA36_0<=61)||(LA36_0>=63 && LA36_0<=67)||(LA36_0>=69 && LA36_0<=73)||(LA36_0>=75 && LA36_0<=76)||LA36_0==80) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalGo.g:2454:4: ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' | otherlv_3= ',' )?
            	    {
            	    // InternalGo.g:2454:4: ( (lv_statment_1_0= ruleStatement ) )
            	    // InternalGo.g:2455:5: (lv_statment_1_0= ruleStatement )
            	    {
            	    // InternalGo.g:2455:5: (lv_statment_1_0= ruleStatement )
            	    // InternalGo.g:2456:6: lv_statment_1_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStatementListAccess().getStatmentStatementParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_statment_1_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"statment",
            	      							lv_statment_1_0,
            	      							"org.xtext.example.mydsl.Go.Statement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:2473:4: (otherlv_2= ';' | otherlv_3= ',' )?
            	    int alt35=3;
            	    int LA35_0 = input.LA(1);

            	    if ( (LA35_0==53) ) {
            	        int LA35_1 = input.LA(2);

            	        if ( (synpred43_InternalGo()) ) {
            	            alt35=1;
            	        }
            	    }
            	    else if ( (LA35_0==55) ) {
            	        alt35=2;
            	    }
            	    switch (alt35) {
            	        case 1 :
            	            // InternalGo.g:2474:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,53,FOLLOW_35); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalGo.g:2479:5: otherlv_3= ','
            	            {
            	            otherlv_3=(Token)match(input,55,FOLLOW_35); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getStatementListAccess().getCommaKeyword_1_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementList"


    // $ANTLR start "entryRuleStatement"
    // InternalGo.g:2489:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalGo.g:2489:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalGo.g:2490:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalGo.g:2496:1: ruleStatement returns [EObject current=null] : ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_0 = null;

        EObject lv_labest_2_0 = null;

        EObject lv_simplest_3_0 = null;

        AntlrDatatypeRuleToken lv_gotst_4_0 = null;

        EObject this_ReturnStmt_5 = null;

        AntlrDatatypeRuleToken lv_breakst_6_0 = null;

        AntlrDatatypeRuleToken lv_continuest_7_0 = null;

        AntlrDatatypeRuleToken lv_gotost_8_0 = null;

        AntlrDatatypeRuleToken lv_falltst_9_0 = null;

        EObject lv_block1_10_0 = null;

        EObject lv_if_11_0 = null;

        EObject lv_switch_12_0 = null;

        EObject lv_selectst_13_0 = null;

        EObject lv_forst_14_0 = null;

        EObject lv_deferst_15_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2502:2: ( ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) )
            // InternalGo.g:2503:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            {
            // InternalGo.g:2503:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            int alt37=15;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalGo.g:2504:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    {
                    // InternalGo.g:2504:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    // InternalGo.g:2505:4: () ( (lv_declaration_1_0= ruleDeclaration ) )
                    {
                    // InternalGo.g:2505:4: ()
                    // InternalGo.g:2506:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getStatementAccess().getStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2515:4: ( (lv_declaration_1_0= ruleDeclaration ) )
                    // InternalGo.g:2516:5: (lv_declaration_1_0= ruleDeclaration )
                    {
                    // InternalGo.g:2516:5: (lv_declaration_1_0= ruleDeclaration )
                    // InternalGo.g:2517:6: lv_declaration_1_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_1_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_1_0,
                      							"org.xtext.example.mydsl.Go.Declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2536:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    {
                    // InternalGo.g:2536:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    // InternalGo.g:2537:4: (lv_labest_2_0= ruleLabeledStmt )
                    {
                    // InternalGo.g:2537:4: (lv_labest_2_0= ruleLabeledStmt )
                    // InternalGo.g:2538:5: lv_labest_2_0= ruleLabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_labest_2_0=ruleLabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"labest",
                      						lv_labest_2_0,
                      						"org.xtext.example.mydsl.Go.LabeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2556:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    {
                    // InternalGo.g:2556:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    // InternalGo.g:2557:4: (lv_simplest_3_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:2557:4: (lv_simplest_3_0= ruleSimpleStmt )
                    // InternalGo.g:2558:5: lv_simplest_3_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simplest_3_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"simplest",
                      						lv_simplest_3_0,
                      						"org.xtext.example.mydsl.Go.SimpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:2576:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    {
                    // InternalGo.g:2576:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    // InternalGo.g:2577:4: (lv_gotst_4_0= ruleGoStmt )
                    {
                    // InternalGo.g:2577:4: (lv_gotst_4_0= ruleGoStmt )
                    // InternalGo.g:2578:5: lv_gotst_4_0= ruleGoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotst_4_0=ruleGoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotst",
                      						lv_gotst_4_0,
                      						"org.xtext.example.mydsl.Go.GoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:2596:3: this_ReturnStmt_5= ruleReturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStmt_5=ruleReturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReturnStmt_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2608:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    {
                    // InternalGo.g:2608:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    // InternalGo.g:2609:4: (lv_breakst_6_0= ruleBreakStmt )
                    {
                    // InternalGo.g:2609:4: (lv_breakst_6_0= ruleBreakStmt )
                    // InternalGo.g:2610:5: lv_breakst_6_0= ruleBreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBreakstBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_breakst_6_0=ruleBreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"breakst",
                      						lv_breakst_6_0,
                      						"org.xtext.example.mydsl.Go.BreakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:2628:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    {
                    // InternalGo.g:2628:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    // InternalGo.g:2629:4: (lv_continuest_7_0= ruleContinueStmt )
                    {
                    // InternalGo.g:2629:4: (lv_continuest_7_0= ruleContinueStmt )
                    // InternalGo.g:2630:5: lv_continuest_7_0= ruleContinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContinuestContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_continuest_7_0=ruleContinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"continuest",
                      						lv_continuest_7_0,
                      						"org.xtext.example.mydsl.Go.ContinueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:2648:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    {
                    // InternalGo.g:2648:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    // InternalGo.g:2649:4: (lv_gotost_8_0= ruleGotoStmt )
                    {
                    // InternalGo.g:2649:4: (lv_gotost_8_0= ruleGotoStmt )
                    // InternalGo.g:2650:5: lv_gotost_8_0= ruleGotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotost_8_0=ruleGotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotost",
                      						lv_gotost_8_0,
                      						"org.xtext.example.mydsl.Go.GotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:2668:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    {
                    // InternalGo.g:2668:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    // InternalGo.g:2669:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    {
                    // InternalGo.g:2669:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    // InternalGo.g:2670:5: lv_falltst_9_0= ruleFallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getFalltstFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_falltst_9_0=ruleFallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"falltst",
                      						lv_falltst_9_0,
                      						"org.xtext.example.mydsl.Go.FallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:2688:3: ( (lv_block1_10_0= ruleBlock ) )
                    {
                    // InternalGo.g:2688:3: ( (lv_block1_10_0= ruleBlock ) )
                    // InternalGo.g:2689:4: (lv_block1_10_0= ruleBlock )
                    {
                    // InternalGo.g:2689:4: (lv_block1_10_0= ruleBlock )
                    // InternalGo.g:2690:5: lv_block1_10_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBlock1BlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block1_10_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"block1",
                      						lv_block1_10_0,
                      						"org.xtext.example.mydsl.Go.Block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:2708:3: ( (lv_if_11_0= ruleIfStmt ) )
                    {
                    // InternalGo.g:2708:3: ( (lv_if_11_0= ruleIfStmt ) )
                    // InternalGo.g:2709:4: (lv_if_11_0= ruleIfStmt )
                    {
                    // InternalGo.g:2709:4: (lv_if_11_0= ruleIfStmt )
                    // InternalGo.g:2710:5: lv_if_11_0= ruleIfStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIfIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_if_11_0=ruleIfStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"if",
                      						lv_if_11_0,
                      						"org.xtext.example.mydsl.Go.IfStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:2728:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    {
                    // InternalGo.g:2728:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    // InternalGo.g:2729:4: (lv_switch_12_0= ruleSwitchStmt )
                    {
                    // InternalGo.g:2729:4: (lv_switch_12_0= ruleSwitchStmt )
                    // InternalGo.g:2730:5: lv_switch_12_0= ruleSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSwitchSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_switch_12_0=ruleSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"switch",
                      						lv_switch_12_0,
                      						"org.xtext.example.mydsl.Go.SwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:2748:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    {
                    // InternalGo.g:2748:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    // InternalGo.g:2749:4: (lv_selectst_13_0= ruleSelectStmt )
                    {
                    // InternalGo.g:2749:4: (lv_selectst_13_0= ruleSelectStmt )
                    // InternalGo.g:2750:5: lv_selectst_13_0= ruleSelectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelectstSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selectst_13_0=ruleSelectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"selectst",
                      						lv_selectst_13_0,
                      						"org.xtext.example.mydsl.Go.SelectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:2768:3: ( (lv_forst_14_0= ruleForStmt ) )
                    {
                    // InternalGo.g:2768:3: ( (lv_forst_14_0= ruleForStmt ) )
                    // InternalGo.g:2769:4: (lv_forst_14_0= ruleForStmt )
                    {
                    // InternalGo.g:2769:4: (lv_forst_14_0= ruleForStmt )
                    // InternalGo.g:2770:5: lv_forst_14_0= ruleForStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getForstForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_forst_14_0=ruleForStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"forst",
                      						lv_forst_14_0,
                      						"org.xtext.example.mydsl.Go.ForStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:2788:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    {
                    // InternalGo.g:2788:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    // InternalGo.g:2789:4: (lv_deferst_15_0= ruleDeferStmt )
                    {
                    // InternalGo.g:2789:4: (lv_deferst_15_0= ruleDeferStmt )
                    // InternalGo.g:2790:5: lv_deferst_15_0= ruleDeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeferstDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_deferst_15_0=ruleDeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"deferst",
                      						lv_deferst_15_0,
                      						"org.xtext.example.mydsl.Go.DeferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleDeclaration"
    // InternalGo.g:2811:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalGo.g:2811:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalGo.g:2812:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalGo.g:2818:1: ruleDeclaration returns [EObject current=null] : ( ( (lv_cd_0_0= ruleConstDecl ) ) | ( (lv_td_1_0= ruleTypeDecl ) ) | ( (lv_vd_2_0= ruleVarDecl ) ) ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_cd_0_0 = null;

        EObject lv_td_1_0 = null;

        EObject lv_vd_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2824:2: ( ( ( (lv_cd_0_0= ruleConstDecl ) ) | ( (lv_td_1_0= ruleTypeDecl ) ) | ( (lv_vd_2_0= ruleVarDecl ) ) ) )
            // InternalGo.g:2825:2: ( ( (lv_cd_0_0= ruleConstDecl ) ) | ( (lv_td_1_0= ruleTypeDecl ) ) | ( (lv_vd_2_0= ruleVarDecl ) ) )
            {
            // InternalGo.g:2825:2: ( ( (lv_cd_0_0= ruleConstDecl ) ) | ( (lv_td_1_0= ruleTypeDecl ) ) | ( (lv_vd_2_0= ruleVarDecl ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case 73:
                {
                alt38=1;
                }
                break;
            case 75:
                {
                alt38=2;
                }
                break;
            case 76:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalGo.g:2826:3: ( (lv_cd_0_0= ruleConstDecl ) )
                    {
                    // InternalGo.g:2826:3: ( (lv_cd_0_0= ruleConstDecl ) )
                    // InternalGo.g:2827:4: (lv_cd_0_0= ruleConstDecl )
                    {
                    // InternalGo.g:2827:4: (lv_cd_0_0= ruleConstDecl )
                    // InternalGo.g:2828:5: lv_cd_0_0= ruleConstDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getCdConstDeclParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_cd_0_0=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"cd",
                      						lv_cd_0_0,
                      						"org.xtext.example.mydsl.Go.ConstDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2846:3: ( (lv_td_1_0= ruleTypeDecl ) )
                    {
                    // InternalGo.g:2846:3: ( (lv_td_1_0= ruleTypeDecl ) )
                    // InternalGo.g:2847:4: (lv_td_1_0= ruleTypeDecl )
                    {
                    // InternalGo.g:2847:4: (lv_td_1_0= ruleTypeDecl )
                    // InternalGo.g:2848:5: lv_td_1_0= ruleTypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getTdTypeDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_td_1_0=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"td",
                      						lv_td_1_0,
                      						"org.xtext.example.mydsl.Go.TypeDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2866:3: ( (lv_vd_2_0= ruleVarDecl ) )
                    {
                    // InternalGo.g:2866:3: ( (lv_vd_2_0= ruleVarDecl ) )
                    // InternalGo.g:2867:4: (lv_vd_2_0= ruleVarDecl )
                    {
                    // InternalGo.g:2867:4: (lv_vd_2_0= ruleVarDecl )
                    // InternalGo.g:2868:5: lv_vd_2_0= ruleVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getVdVarDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_vd_2_0=ruleVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"vd",
                      						lv_vd_2_0,
                      						"org.xtext.example.mydsl.Go.VarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleLabeledStmt"
    // InternalGo.g:2889:1: entryRuleLabeledStmt returns [EObject current=null] : iv_ruleLabeledStmt= ruleLabeledStmt EOF ;
    public final EObject entryRuleLabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabeledStmt = null;


        try {
            // InternalGo.g:2889:52: (iv_ruleLabeledStmt= ruleLabeledStmt EOF )
            // InternalGo.g:2890:2: iv_ruleLabeledStmt= ruleLabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabeledStmt=ruleLabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabeledStmt"


    // $ANTLR start "ruleLabeledStmt"
    // InternalGo.g:2896:1: ruleLabeledStmt returns [EObject current=null] : ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) ;
    public final EObject ruleLabeledStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_label_0_0 = null;

        EObject lv_statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2902:2: ( ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) )
            // InternalGo.g:2903:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            {
            // InternalGo.g:2903:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            // InternalGo.g:2904:3: ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) )
            {
            // InternalGo.g:2904:3: ( (lv_label_0_0= ruleLabel ) )
            // InternalGo.g:2905:4: (lv_label_0_0= ruleLabel )
            {
            // InternalGo.g:2905:4: (lv_label_0_0= ruleLabel )
            // InternalGo.g:2906:5: lv_label_0_0= ruleLabel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_label_0_0=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"label",
              						lv_label_0_0,
              						"org.xtext.example.mydsl.Go.Label");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,62,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2927:3: ( (lv_statement_2_0= ruleStatement ) )
            // InternalGo.g:2928:4: (lv_statement_2_0= ruleStatement )
            {
            // InternalGo.g:2928:4: (lv_statement_2_0= ruleStatement )
            // InternalGo.g:2929:5: lv_statement_2_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_2_0,
              						"org.xtext.example.mydsl.Go.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabeledStmt"


    // $ANTLR start "entryRuleSimpleStmt"
    // InternalGo.g:2950:1: entryRuleSimpleStmt returns [EObject current=null] : iv_ruleSimpleStmt= ruleSimpleStmt EOF ;
    public final EObject entryRuleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStmt = null;


        try {
            // InternalGo.g:2950:51: (iv_ruleSimpleStmt= ruleSimpleStmt EOF )
            // InternalGo.g:2951:2: iv_ruleSimpleStmt= ruleSimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStmt=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStmt"


    // $ANTLR start "ruleSimpleStmt"
    // InternalGo.g:2957:1: ruleSimpleStmt returns [EObject current=null] : ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) ) ;
    public final EObject ruleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_inc_0_0 = null;

        EObject lv_ass_1_0 = null;

        EObject lv_ss_2_0 = null;

        EObject lv_svd_3_0 = null;

        EObject lv_es_4_0 = null;

        AntlrDatatypeRuleToken lv_empty_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2963:2: ( ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) ) )
            // InternalGo.g:2964:2: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) )
            {
            // InternalGo.g:2964:2: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) )
            int alt39=6;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // InternalGo.g:2965:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
                    {
                    // InternalGo.g:2965:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
                    // InternalGo.g:2966:4: (lv_inc_0_0= ruleIncDecStmt )
                    {
                    // InternalGo.g:2966:4: (lv_inc_0_0= ruleIncDecStmt )
                    // InternalGo.g:2967:5: lv_inc_0_0= ruleIncDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncIncDecStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_inc_0_0=ruleIncDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"inc",
                      						lv_inc_0_0,
                      						"org.xtext.example.mydsl.Go.IncDecStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2985:3: ( (lv_ass_1_0= ruleAssignment ) )
                    {
                    // InternalGo.g:2985:3: ( (lv_ass_1_0= ruleAssignment ) )
                    // InternalGo.g:2986:4: (lv_ass_1_0= ruleAssignment )
                    {
                    // InternalGo.g:2986:4: (lv_ass_1_0= ruleAssignment )
                    // InternalGo.g:2987:5: lv_ass_1_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssAssignmentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ass_1_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ass",
                      						lv_ass_1_0,
                      						"org.xtext.example.mydsl.Go.Assignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3005:3: ( (lv_ss_2_0= ruleSendStmt ) )
                    {
                    // InternalGo.g:3005:3: ( (lv_ss_2_0= ruleSendStmt ) )
                    // InternalGo.g:3006:4: (lv_ss_2_0= ruleSendStmt )
                    {
                    // InternalGo.g:3006:4: (lv_ss_2_0= ruleSendStmt )
                    // InternalGo.g:3007:5: lv_ss_2_0= ruleSendStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSsSendStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ss_2_0=ruleSendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ss",
                      						lv_ss_2_0,
                      						"org.xtext.example.mydsl.Go.SendStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3025:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
                    {
                    // InternalGo.g:3025:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
                    // InternalGo.g:3026:4: (lv_svd_3_0= ruleShortVarDecl )
                    {
                    // InternalGo.g:3026:4: (lv_svd_3_0= ruleShortVarDecl )
                    // InternalGo.g:3027:5: lv_svd_3_0= ruleShortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSvdShortVarDeclParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_svd_3_0=ruleShortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"svd",
                      						lv_svd_3_0,
                      						"org.xtext.example.mydsl.Go.ShortVarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3045:3: ( (lv_es_4_0= ruleExpressionStmt ) )
                    {
                    // InternalGo.g:3045:3: ( (lv_es_4_0= ruleExpressionStmt ) )
                    // InternalGo.g:3046:4: (lv_es_4_0= ruleExpressionStmt )
                    {
                    // InternalGo.g:3046:4: (lv_es_4_0= ruleExpressionStmt )
                    // InternalGo.g:3047:5: lv_es_4_0= ruleExpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEsExpressionStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_es_4_0=ruleExpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"es",
                      						lv_es_4_0,
                      						"org.xtext.example.mydsl.Go.ExpressionStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3065:3: ( (lv_empty_5_0= ruleEmptyStmt ) )
                    {
                    // InternalGo.g:3065:3: ( (lv_empty_5_0= ruleEmptyStmt ) )
                    // InternalGo.g:3066:4: (lv_empty_5_0= ruleEmptyStmt )
                    {
                    // InternalGo.g:3066:4: (lv_empty_5_0= ruleEmptyStmt )
                    // InternalGo.g:3067:5: lv_empty_5_0= ruleEmptyStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyEmptyStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_empty_5_0=ruleEmptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"empty",
                      						lv_empty_5_0,
                      						"org.xtext.example.mydsl.Go.EmptyStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStmt"


    // $ANTLR start "entryRuleGoStmt"
    // InternalGo.g:3088:1: entryRuleGoStmt returns [String current=null] : iv_ruleGoStmt= ruleGoStmt EOF ;
    public final String entryRuleGoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGoStmt = null;


        try {
            // InternalGo.g:3088:46: (iv_ruleGoStmt= ruleGoStmt EOF )
            // InternalGo.g:3089:2: iv_ruleGoStmt= ruleGoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoStmt=ruleGoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoStmt"


    // $ANTLR start "ruleGoStmt"
    // InternalGo.g:3095:1: ruleGoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3101:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:3102:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:3102:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:3103:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,63,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoStmt"


    // $ANTLR start "entryRuleReturnStmt"
    // InternalGo.g:3122:1: entryRuleReturnStmt returns [EObject current=null] : iv_ruleReturnStmt= ruleReturnStmt EOF ;
    public final EObject entryRuleReturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStmt = null;


        try {
            // InternalGo.g:3122:51: (iv_ruleReturnStmt= ruleReturnStmt EOF )
            // InternalGo.g:3123:2: iv_ruleReturnStmt= ruleReturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStmt=ruleReturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStmt"


    // $ANTLR start "ruleReturnStmt"
    // InternalGo.g:3129:1: ruleReturnStmt returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) ;
    public final EObject ruleReturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3135:2: ( ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) )
            // InternalGo.g:3136:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            {
            // InternalGo.g:3136:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            // InternalGo.g:3137:3: () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            {
            // InternalGo.g:3137:3: ()
            // InternalGo.g:3138:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,64,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
              		
            }
            // InternalGo.g:3151:3: ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            int alt40=2;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3152:4: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:3152:4: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:3153:5: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"expressionlist",
                      						lv_expressionlist_2_0,
                      						"org.xtext.example.mydsl.Go.ExpressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStmt"


    // $ANTLR start "entryRuleBreakStmt"
    // InternalGo.g:3174:1: entryRuleBreakStmt returns [String current=null] : iv_ruleBreakStmt= ruleBreakStmt EOF ;
    public final String entryRuleBreakStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBreakStmt = null;


        try {
            // InternalGo.g:3174:49: (iv_ruleBreakStmt= ruleBreakStmt EOF )
            // InternalGo.g:3175:2: iv_ruleBreakStmt= ruleBreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStmt=ruleBreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBreakStmt"


    // $ANTLR start "ruleBreakStmt"
    // InternalGo.g:3181:1: ruleBreakStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'break' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleBreakStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3187:2: ( (kw= 'break' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:3188:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:3188:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            // InternalGo.g:3189:3: kw= 'break' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,65,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getBreakStmtAccess().getBreakKeyword_0());
              		
            }
            // InternalGo.g:3194:3: (this_Label_1= ruleLabel )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_ID) ) {
                int LA41_1 = input.LA(2);

                if ( (synpred68_InternalGo()) ) {
                    alt41=1;
                }
            }
            else if ( (LA41_0==43) ) {
                int LA41_2 = input.LA(2);

                if ( (LA41_2==RULE_ID) ) {
                    int LA41_5 = input.LA(3);

                    if ( (synpred68_InternalGo()) ) {
                        alt41=1;
                    }
                }
            }
            switch (alt41) {
                case 1 :
                    // InternalGo.g:3195:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBreakStmt"


    // $ANTLR start "entryRuleContinueStmt"
    // InternalGo.g:3210:1: entryRuleContinueStmt returns [String current=null] : iv_ruleContinueStmt= ruleContinueStmt EOF ;
    public final String entryRuleContinueStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleContinueStmt = null;


        try {
            // InternalGo.g:3210:52: (iv_ruleContinueStmt= ruleContinueStmt EOF )
            // InternalGo.g:3211:2: iv_ruleContinueStmt= ruleContinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStmt=ruleContinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContinueStmt"


    // $ANTLR start "ruleContinueStmt"
    // InternalGo.g:3217:1: ruleContinueStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'continue' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleContinueStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3223:2: ( (kw= 'continue' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:3224:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:3224:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            // InternalGo.g:3225:3: kw= 'continue' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,66,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getContinueStmtAccess().getContinueKeyword_0());
              		
            }
            // InternalGo.g:3230:3: (this_Label_1= ruleLabel )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_ID) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred69_InternalGo()) ) {
                    alt42=1;
                }
            }
            else if ( (LA42_0==43) ) {
                int LA42_2 = input.LA(2);

                if ( (LA42_2==RULE_ID) ) {
                    int LA42_5 = input.LA(3);

                    if ( (synpred69_InternalGo()) ) {
                        alt42=1;
                    }
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalGo.g:3231:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContinueStmt"


    // $ANTLR start "entryRuleGotoStmt"
    // InternalGo.g:3246:1: entryRuleGotoStmt returns [String current=null] : iv_ruleGotoStmt= ruleGotoStmt EOF ;
    public final String entryRuleGotoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGotoStmt = null;


        try {
            // InternalGo.g:3246:48: (iv_ruleGotoStmt= ruleGotoStmt EOF )
            // InternalGo.g:3247:2: iv_ruleGotoStmt= ruleGotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGotoStmt=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGotoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGotoStmt"


    // $ANTLR start "ruleGotoStmt"
    // InternalGo.g:3253:1: ruleGotoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGotoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3259:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:3260:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:3260:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:3261:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,63,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGotoStmt"


    // $ANTLR start "entryRuleIfStmt"
    // InternalGo.g:3280:1: entryRuleIfStmt returns [EObject current=null] : iv_ruleIfStmt= ruleIfStmt EOF ;
    public final EObject entryRuleIfStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStmt = null;


        try {
            // InternalGo.g:3280:47: (iv_ruleIfStmt= ruleIfStmt EOF )
            // InternalGo.g:3281:2: iv_ruleIfStmt= ruleIfStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStmt=ruleIfStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStmt"


    // $ANTLR start "ruleIfStmt"
    // InternalGo.g:3287:1: ruleIfStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) ;
    public final EObject ruleIfStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_simst_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_block_4_0 = null;

        EObject lv_ifs_6_0 = null;

        EObject lv_block2_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3293:2: ( (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) )
            // InternalGo.g:3294:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            {
            // InternalGo.g:3294:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            // InternalGo.g:3295:3: otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            {
            otherlv_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:3299:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?
            int alt43=2;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3300:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:3300:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:3301:5: (lv_simst_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:3301:5: (lv_simst_1_0= ruleSimpleStmt )
                    // InternalGo.g:3302:6: lv_simst_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_simst_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"simst",
                      							lv_simst_1_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,53,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3324:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:3325:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:3325:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:3326:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3343:3: ( (lv_block_4_0= ruleBlock ) )
            // InternalGo.g:3344:4: (lv_block_4_0= ruleBlock )
            {
            // InternalGo.g:3344:4: (lv_block_4_0= ruleBlock )
            // InternalGo.g:3345:5: lv_block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_42);
            lv_block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3362:3: (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==68) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalGo.g:3363:4: otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    {
                    otherlv_5=(Token)match(input,68,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:3367:4: ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==67) ) {
                        alt44=1;
                    }
                    else if ( (LA44_0==52) ) {
                        alt44=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 0, input);

                        throw nvae;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalGo.g:3368:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            {
                            // InternalGo.g:3368:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            // InternalGo.g:3369:6: (lv_ifs_6_0= ruleIfStmt )
                            {
                            // InternalGo.g:3369:6: (lv_ifs_6_0= ruleIfStmt )
                            // InternalGo.g:3370:7: lv_ifs_6_0= ruleIfStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfsIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ifs_6_0=ruleIfStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"ifs",
                              								lv_ifs_6_0,
                              								"org.xtext.example.mydsl.Go.IfStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:3388:5: ( (lv_block2_7_0= ruleBlock ) )
                            {
                            // InternalGo.g:3388:5: ( (lv_block2_7_0= ruleBlock ) )
                            // InternalGo.g:3389:6: (lv_block2_7_0= ruleBlock )
                            {
                            // InternalGo.g:3389:6: (lv_block2_7_0= ruleBlock )
                            // InternalGo.g:3390:7: lv_block2_7_0= ruleBlock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getBlock2BlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_block2_7_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"block2",
                              								lv_block2_7_0,
                              								"org.xtext.example.mydsl.Go.Block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStmt"


    // $ANTLR start "entryRuleFallthroughStmt"
    // InternalGo.g:3413:1: entryRuleFallthroughStmt returns [String current=null] : iv_ruleFallthroughStmt= ruleFallthroughStmt EOF ;
    public final String entryRuleFallthroughStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFallthroughStmt = null;


        try {
            // InternalGo.g:3413:55: (iv_ruleFallthroughStmt= ruleFallthroughStmt EOF )
            // InternalGo.g:3414:2: iv_ruleFallthroughStmt= ruleFallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFallthroughStmt=ruleFallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFallthroughStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallthroughStmt"


    // $ANTLR start "ruleFallthroughStmt"
    // InternalGo.g:3420:1: ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'fallthrough' ;
    public final AntlrDatatypeRuleToken ruleFallthroughStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:3426:2: (kw= 'fallthrough' )
            // InternalGo.g:3427:2: kw= 'fallthrough'
            {
            kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallthroughStmt"


    // $ANTLR start "entryRuleSwitchStmt"
    // InternalGo.g:3435:1: entryRuleSwitchStmt returns [EObject current=null] : iv_ruleSwitchStmt= ruleSwitchStmt EOF ;
    public final EObject entryRuleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStmt = null;


        try {
            // InternalGo.g:3435:51: (iv_ruleSwitchStmt= ruleSwitchStmt EOF )
            // InternalGo.g:3436:2: iv_ruleSwitchStmt= ruleSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStmt=ruleSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchStmt"


    // $ANTLR start "ruleSwitchStmt"
    // InternalGo.g:3442:1: ruleSwitchStmt returns [EObject current=null] : ( ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) ) | ( () ( (lv_expr_3_0= ruleExprSwitchStmt ) ) ) ) ;
    public final EObject ruleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_tss_1_0 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3448:2: ( ( ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) ) | ( () ( (lv_expr_3_0= ruleExprSwitchStmt ) ) ) ) )
            // InternalGo.g:3449:2: ( ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) ) | ( () ( (lv_expr_3_0= ruleExprSwitchStmt ) ) ) )
            {
            // InternalGo.g:3449:2: ( ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) ) | ( () ( (lv_expr_3_0= ruleExprSwitchStmt ) ) ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==80) ) {
                int LA46_1 = input.LA(2);

                if ( (synpred73_InternalGo()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalGo.g:3450:3: ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) )
                    {
                    // InternalGo.g:3450:3: ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) )
                    // InternalGo.g:3451:4: () ( (lv_tss_1_0= ruleTypeSwitchStmt ) )
                    {
                    // InternalGo.g:3451:4: ()
                    // InternalGo.g:3452:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSwitchStmtAccess().getSwitchStmtAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:3461:4: ( (lv_tss_1_0= ruleTypeSwitchStmt ) )
                    // InternalGo.g:3462:5: (lv_tss_1_0= ruleTypeSwitchStmt )
                    {
                    // InternalGo.g:3462:5: (lv_tss_1_0= ruleTypeSwitchStmt )
                    // InternalGo.g:3463:6: lv_tss_1_0= ruleTypeSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSwitchStmtAccess().getTssTypeSwitchStmtParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_tss_1_0=ruleTypeSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"tss",
                      							lv_tss_1_0,
                      							"org.xtext.example.mydsl.Go.TypeSwitchStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3482:3: ( () ( (lv_expr_3_0= ruleExprSwitchStmt ) ) )
                    {
                    // InternalGo.g:3482:3: ( () ( (lv_expr_3_0= ruleExprSwitchStmt ) ) )
                    // InternalGo.g:3483:4: () ( (lv_expr_3_0= ruleExprSwitchStmt ) )
                    {
                    // InternalGo.g:3483:4: ()
                    // InternalGo.g:3484:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSwitchStmtAccess().getSwitchStmtAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:3493:4: ( (lv_expr_3_0= ruleExprSwitchStmt ) )
                    // InternalGo.g:3494:5: (lv_expr_3_0= ruleExprSwitchStmt )
                    {
                    // InternalGo.g:3494:5: (lv_expr_3_0= ruleExprSwitchStmt )
                    // InternalGo.g:3495:6: lv_expr_3_0= ruleExprSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprExprSwitchStmtParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=ruleExprSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"org.xtext.example.mydsl.Go.ExprSwitchStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchStmt"


    // $ANTLR start "entryRuleSelectStmt"
    // InternalGo.g:3517:1: entryRuleSelectStmt returns [EObject current=null] : iv_ruleSelectStmt= ruleSelectStmt EOF ;
    public final EObject entryRuleSelectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectStmt = null;


        try {
            // InternalGo.g:3517:51: (iv_ruleSelectStmt= ruleSelectStmt EOF )
            // InternalGo.g:3518:2: iv_ruleSelectStmt= ruleSelectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectStmt=ruleSelectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectStmt"


    // $ANTLR start "ruleSelectStmt"
    // InternalGo.g:3524:1: ruleSelectStmt returns [EObject current=null] : ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) ;
    public final EObject ruleSelectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_commclause_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3530:2: ( ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) )
            // InternalGo.g:3531:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            {
            // InternalGo.g:3531:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            // InternalGo.g:3532:3: () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}'
            {
            // InternalGo.g:3532:3: ()
            // InternalGo.g:3533:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,70,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,52,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:3550:3: ( (lv_commclause_3_0= ruleCommClause ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( ((LA47_0>=81 && LA47_0<=82)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalGo.g:3551:4: (lv_commclause_3_0= ruleCommClause )
            	    {
            	    // InternalGo.g:3551:4: (lv_commclause_3_0= ruleCommClause )
            	    // InternalGo.g:3552:5: lv_commclause_3_0= ruleCommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommclauseCommClauseParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_commclause_3_0=ruleCommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"commclause",
            	      						lv_commclause_3_0,
            	      						"org.xtext.example.mydsl.Go.CommClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            otherlv_4=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectStmt"


    // $ANTLR start "entryRuleForStmt"
    // InternalGo.g:3577:1: entryRuleForStmt returns [EObject current=null] : iv_ruleForStmt= ruleForStmt EOF ;
    public final EObject entryRuleForStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStmt = null;


        try {
            // InternalGo.g:3577:48: (iv_ruleForStmt= ruleForStmt EOF )
            // InternalGo.g:3578:2: iv_ruleForStmt= ruleForStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStmt=ruleForStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForStmt"


    // $ANTLR start "ruleForStmt"
    // InternalGo.g:3584:1: ruleForStmt returns [EObject current=null] : ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) ) ;
    public final EObject ruleForStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_condition_2_0 = null;

        EObject lv_for_3_0 = null;

        EObject lv_range_4_0 = null;

        EObject lv_block_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3590:2: ( ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) ) )
            // InternalGo.g:3591:2: ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) )
            {
            // InternalGo.g:3591:2: ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) )
            // InternalGo.g:3592:3: () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) )
            {
            // InternalGo.g:3592:3: ()
            // InternalGo.g:3593:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getForStmtAccess().getForStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForStmtAccess().getForKeyword_1());
              		
            }
            // InternalGo.g:3606:3: ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )?
            int alt48=4;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3607:4: ( (lv_condition_2_0= ruleCondition ) )
                    {
                    // InternalGo.g:3607:4: ( (lv_condition_2_0= ruleCondition ) )
                    // InternalGo.g:3608:5: (lv_condition_2_0= ruleCondition )
                    {
                    // InternalGo.g:3608:5: (lv_condition_2_0= ruleCondition )
                    // InternalGo.g:3609:6: lv_condition_2_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_condition_2_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_2_0,
                      							"org.xtext.example.mydsl.Go.Condition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3627:4: ( (lv_for_3_0= ruleForClause ) )
                    {
                    // InternalGo.g:3627:4: ( (lv_for_3_0= ruleForClause ) )
                    // InternalGo.g:3628:5: (lv_for_3_0= ruleForClause )
                    {
                    // InternalGo.g:3628:5: (lv_for_3_0= ruleForClause )
                    // InternalGo.g:3629:6: lv_for_3_0= ruleForClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_for_3_0=ruleForClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"for",
                      							lv_for_3_0,
                      							"org.xtext.example.mydsl.Go.ForClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3647:4: ( (lv_range_4_0= ruleRangeClause ) )
                    {
                    // InternalGo.g:3647:4: ( (lv_range_4_0= ruleRangeClause ) )
                    // InternalGo.g:3648:5: (lv_range_4_0= ruleRangeClause )
                    {
                    // InternalGo.g:3648:5: (lv_range_4_0= ruleRangeClause )
                    // InternalGo.g:3649:6: lv_range_4_0= ruleRangeClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_range_4_0=ruleRangeClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"range",
                      							lv_range_4_0,
                      							"org.xtext.example.mydsl.Go.RangeClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:3667:3: ( (lv_block_5_0= ruleBlock ) )
            // InternalGo.g:3668:4: (lv_block_5_0= ruleBlock )
            {
            // InternalGo.g:3668:4: (lv_block_5_0= ruleBlock )
            // InternalGo.g:3669:5: lv_block_5_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_5_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForStmt"


    // $ANTLR start "entryRuleDeferStmt"
    // InternalGo.g:3690:1: entryRuleDeferStmt returns [EObject current=null] : iv_ruleDeferStmt= ruleDeferStmt EOF ;
    public final EObject entryRuleDeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeferStmt = null;


        try {
            // InternalGo.g:3690:50: (iv_ruleDeferStmt= ruleDeferStmt EOF )
            // InternalGo.g:3691:2: iv_ruleDeferStmt= ruleDeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeferStmt=ruleDeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeferStmt"


    // $ANTLR start "ruleDeferStmt"
    // InternalGo.g:3697:1: ruleDeferStmt returns [EObject current=null] : (otherlv_0= 'defer' this_Expression_1= ruleExpression ) ;
    public final EObject ruleDeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Expression_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3703:2: ( (otherlv_0= 'defer' this_Expression_1= ruleExpression ) )
            // InternalGo.g:3704:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            {
            // InternalGo.g:3704:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            // InternalGo.g:3705:3: otherlv_0= 'defer' this_Expression_1= ruleExpression
            {
            otherlv_0=(Token)match(input,72,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Expression_1=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeferStmt"


    // $ANTLR start "entryRuleConstDecl"
    // InternalGo.g:3724:1: entryRuleConstDecl returns [EObject current=null] : iv_ruleConstDecl= ruleConstDecl EOF ;
    public final EObject entryRuleConstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstDecl = null;


        try {
            // InternalGo.g:3724:50: (iv_ruleConstDecl= ruleConstDecl EOF )
            // InternalGo.g:3725:2: iv_ruleConstDecl= ruleConstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstDecl=ruleConstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstDecl"


    // $ANTLR start "ruleConstDecl"
    // InternalGo.g:3731:1: ruleConstDecl returns [EObject current=null] : ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleConstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_constspec_2_0 = null;

        EObject lv_constspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3737:2: ( ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3738:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3738:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            // InternalGo.g:3739:3: () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3739:3: ()
            // InternalGo.g:3740:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
              		
            }
            // InternalGo.g:3753:3: ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_ID||LA51_0==43) ) {
                alt51=1;
            }
            else if ( (LA51_0==46) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalGo.g:3754:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    {
                    // InternalGo.g:3754:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    // InternalGo.g:3755:5: (lv_constspec_2_0= ruleConstSpec )
                    {
                    // InternalGo.g:3755:5: (lv_constspec_2_0= ruleConstSpec )
                    // InternalGo.g:3756:6: lv_constspec_2_0= ruleConstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getConstspecConstSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constspec_2_0=ruleConstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						set(
                      							current,
                      							"constspec",
                      							lv_constspec_2_0,
                      							"org.xtext.example.mydsl.Go.ConstSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3774:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3774:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    // InternalGo.g:3775:5: otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,46,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3779:5: ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==RULE_ID||LA50_0==43) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // InternalGo.g:3780:6: ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )?
                    	    {
                    	    // InternalGo.g:3780:6: ( (lv_constspec2_4_0= ruleConstSpec ) )
                    	    // InternalGo.g:3781:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    {
                    	    // InternalGo.g:3781:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    // InternalGo.g:3782:8: lv_constspec2_4_0= ruleConstSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getConstDeclAccess().getConstspec2ConstSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_constspec2_4_0=ruleConstSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"constspec2",
                    	      									lv_constspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.ConstSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    // InternalGo.g:3799:6: (otherlv_5= ';' )?
                    	    int alt49=2;
                    	    int LA49_0 = input.LA(1);

                    	    if ( (LA49_0==53) ) {
                    	        alt49=1;
                    	    }
                    	    switch (alt49) {
                    	        case 1 :
                    	            // InternalGo.g:3800:7: otherlv_5= ';'
                    	            {
                    	            otherlv_5=(Token)match(input,53,FOLLOW_47); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	              						
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstDecl"


    // $ANTLR start "entryRuleConstSpec"
    // InternalGo.g:3816:1: entryRuleConstSpec returns [EObject current=null] : iv_ruleConstSpec= ruleConstSpec EOF ;
    public final EObject entryRuleConstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstSpec = null;


        try {
            // InternalGo.g:3816:50: (iv_ruleConstSpec= ruleConstSpec EOF )
            // InternalGo.g:3817:2: iv_ruleConstSpec= ruleConstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstSpec=ruleConstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstSpec"


    // $ANTLR start "ruleConstSpec"
    // InternalGo.g:3823:1: ruleConstSpec returns [EObject current=null] : ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) ;
    public final EObject ruleConstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_id_0_0 = null;

        EObject lv_tp_1_0 = null;

        EObject lv_expressionlist_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3829:2: ( ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) )
            // InternalGo.g:3830:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            {
            // InternalGo.g:3830:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            // InternalGo.g:3831:3: ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            {
            // InternalGo.g:3831:3: ( (lv_id_0_0= ruleIdentifierList ) )
            // InternalGo.g:3832:4: (lv_id_0_0= ruleIdentifierList )
            {
            // InternalGo.g:3832:4: (lv_id_0_0= ruleIdentifierList )
            // InternalGo.g:3833:5: lv_id_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getIdIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_id_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3850:3: ( (lv_tp_1_0= ruleType ) )?
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalGo.g:3851:4: (lv_tp_1_0= ruleType )
                    {
                    // InternalGo.g:3851:4: (lv_tp_1_0= ruleType )
                    // InternalGo.g:3852:5: lv_tp_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConstSpecAccess().getTpTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_50);
                    lv_tp_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConstSpecRule());
                      					}
                      					set(
                      						current,
                      						"tp",
                      						lv_tp_1_0,
                      						"org.xtext.example.mydsl.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:3869:3: (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==74) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalGo.g:3870:4: otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    {
                    otherlv_2=(Token)match(input,74,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalGo.g:3874:4: ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    // InternalGo.g:3875:5: (lv_expressionlist_3_0= ruleExpressionList )
                    {
                    // InternalGo.g:3875:5: (lv_expressionlist_3_0= ruleExpressionList )
                    // InternalGo.g:3876:6: lv_expressionlist_3_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_3_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_3_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstSpec"


    // $ANTLR start "entryRuleTypeDecl"
    // InternalGo.g:3898:1: entryRuleTypeDecl returns [EObject current=null] : iv_ruleTypeDecl= ruleTypeDecl EOF ;
    public final EObject entryRuleTypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDecl = null;


        try {
            // InternalGo.g:3898:49: (iv_ruleTypeDecl= ruleTypeDecl EOF )
            // InternalGo.g:3899:2: iv_ruleTypeDecl= ruleTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDecl=ruleTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDecl"


    // $ANTLR start "ruleTypeDecl"
    // InternalGo.g:3905:1: ruleTypeDecl returns [EObject current=null] : ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleTypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_typespec_2_0 = null;

        EObject lv_typespec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3911:2: ( ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3912:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3912:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:3913:3: () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3913:3: ()
            // InternalGo.g:3914:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
              		
            }
            // InternalGo.g:3927:3: ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_ID||LA55_0==43) ) {
                alt55=1;
            }
            else if ( (LA55_0==46) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalGo.g:3928:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    {
                    // InternalGo.g:3928:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    // InternalGo.g:3929:5: (lv_typespec_2_0= ruleTypeSpec )
                    {
                    // InternalGo.g:3929:5: (lv_typespec_2_0= ruleTypeSpec )
                    // InternalGo.g:3930:6: lv_typespec_2_0= ruleTypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespecTypeSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typespec_2_0=ruleTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						set(
                      							current,
                      							"typespec",
                      							lv_typespec_2_0,
                      							"org.xtext.example.mydsl.Go.TypeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3948:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3948:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:3949:5: otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,46,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3953:5: ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )*
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==RULE_ID||LA54_0==43) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // InternalGo.g:3954:6: ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:3954:6: ( (lv_typespec2_4_0= ruleTypeSpec ) )
                    	    // InternalGo.g:3955:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    {
                    	    // InternalGo.g:3955:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    // InternalGo.g:3956:8: lv_typespec2_4_0= ruleTypeSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespec2TypeSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_41);
                    	    lv_typespec2_4_0=ruleTypeSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"typespec2",
                    	      									lv_typespec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.TypeSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,53,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDecl"


    // $ANTLR start "entryRuleTypeSpec"
    // InternalGo.g:3988:1: entryRuleTypeSpec returns [EObject current=null] : iv_ruleTypeSpec= ruleTypeSpec EOF ;
    public final EObject entryRuleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSpec = null;


        try {
            // InternalGo.g:3988:49: (iv_ruleTypeSpec= ruleTypeSpec EOF )
            // InternalGo.g:3989:2: iv_ruleTypeSpec= ruleTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSpec=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSpec"


    // $ANTLR start "ruleTypeSpec"
    // InternalGo.g:3995:1: ruleTypeSpec returns [EObject current=null] : (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) ;
    public final EObject ruleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject this_AliasDecl_0 = null;

        EObject this_TypeDef_1 = null;



        	enterRule();

        try {
            // InternalGo.g:4001:2: ( (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) )
            // InternalGo.g:4002:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            {
            // InternalGo.g:4002:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_ID) ) {
                int LA56_1 = input.LA(2);

                if ( (LA56_1==74) ) {
                    alt56=1;
                }
                else if ( (LA56_1==RULE_LITERAL_TYPE||LA56_1==41||LA56_1==46||LA56_1==49||LA56_1==51||LA56_1==56||(LA56_1>=58 && LA56_1<=61)) ) {
                    alt56=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA56_0==43) ) {
                int LA56_2 = input.LA(2);

                if ( (LA56_2==RULE_ID) ) {
                    int LA56_5 = input.LA(3);

                    if ( (LA56_5==RULE_LITERAL_TYPE||LA56_5==41||LA56_5==46||LA56_5==49||LA56_5==51||LA56_5==56||(LA56_5>=58 && LA56_5<=61)) ) {
                        alt56=2;
                    }
                    else if ( (LA56_5==74) ) {
                        alt56=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4003:3: this_AliasDecl_0= ruleAliasDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AliasDecl_0=ruleAliasDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AliasDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:4015:3: this_TypeDef_1= ruleTypeDef
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDef_1=ruleTypeDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSpec"


    // $ANTLR start "entryRuleTypeDef"
    // InternalGo.g:4030:1: entryRuleTypeDef returns [EObject current=null] : iv_ruleTypeDef= ruleTypeDef EOF ;
    public final EObject entryRuleTypeDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDef = null;


        try {
            // InternalGo.g:4030:48: (iv_ruleTypeDef= ruleTypeDef EOF )
            // InternalGo.g:4031:2: iv_ruleTypeDef= ruleTypeDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDef=ruleTypeDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDef"


    // $ANTLR start "ruleTypeDef"
    // InternalGo.g:4037:1: ruleTypeDef returns [EObject current=null] : ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) ) ;
    public final EObject ruleTypeDef() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_tp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4043:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) ) )
            // InternalGo.g:4044:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) )
            {
            // InternalGo.g:4044:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) )
            // InternalGo.g:4045:3: ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) )
            {
            // InternalGo.g:4045:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
            // InternalGo.g:4046:4: (lv_id_0_0= ruleIDENTIFIER )
            {
            // InternalGo.g:4046:4: (lv_id_0_0= ruleIDENTIFIER )
            // InternalGo.g:4047:5: lv_id_0_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getIdIDENTIFIERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_id_0_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4064:3: ( (lv_tp_1_0= ruleType ) )
            // InternalGo.g:4065:4: (lv_tp_1_0= ruleType )
            {
            // InternalGo.g:4065:4: (lv_tp_1_0= ruleType )
            // InternalGo.g:4066:5: lv_tp_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getTpTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_tp_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"tp",
              						lv_tp_1_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDef"


    // $ANTLR start "entryRuleAliasDecl"
    // InternalGo.g:4087:1: entryRuleAliasDecl returns [EObject current=null] : iv_ruleAliasDecl= ruleAliasDecl EOF ;
    public final EObject entryRuleAliasDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasDecl = null;


        try {
            // InternalGo.g:4087:50: (iv_ruleAliasDecl= ruleAliasDecl EOF )
            // InternalGo.g:4088:2: iv_ruleAliasDecl= ruleAliasDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasDecl=ruleAliasDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasDecl"


    // $ANTLR start "ruleAliasDecl"
    // InternalGo.g:4094:1: ruleAliasDecl returns [EObject current=null] : ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) ) ;
    public final EObject ruleAliasDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_id_1_0 = null;

        EObject lv_tp_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4100:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) ) )
            // InternalGo.g:4101:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) )
            {
            // InternalGo.g:4101:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) )
            // InternalGo.g:4102:3: () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) )
            {
            // InternalGo.g:4102:3: ()
            // InternalGo.g:4103:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAliasDeclAccess().getAliasDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4112:3: ( (lv_id_1_0= ruleIDENTIFIER ) )
            // InternalGo.g:4113:4: (lv_id_1_0= ruleIDENTIFIER )
            {
            // InternalGo.g:4113:4: (lv_id_1_0= ruleIDENTIFIER )
            // InternalGo.g:4114:5: lv_id_1_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getIdIDENTIFIERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_id_1_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_1_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,74,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalGo.g:4135:3: ( (lv_tp_3_0= ruleType ) )
            // InternalGo.g:4136:4: (lv_tp_3_0= ruleType )
            {
            // InternalGo.g:4136:4: (lv_tp_3_0= ruleType )
            // InternalGo.g:4137:5: lv_tp_3_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getTpTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_tp_3_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"tp",
              						lv_tp_3_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasDecl"


    // $ANTLR start "entryRuleVarDecl"
    // InternalGo.g:4158:1: entryRuleVarDecl returns [EObject current=null] : iv_ruleVarDecl= ruleVarDecl EOF ;
    public final EObject entryRuleVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDecl = null;


        try {
            // InternalGo.g:4158:48: (iv_ruleVarDecl= ruleVarDecl EOF )
            // InternalGo.g:4159:2: iv_ruleVarDecl= ruleVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDecl=ruleVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDecl"


    // $ANTLR start "ruleVarDecl"
    // InternalGo.g:4165:1: ruleVarDecl returns [EObject current=null] : ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_varspec_2_0 = null;

        EObject lv_varspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4171:2: ( ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:4172:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:4172:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            // InternalGo.g:4173:3: () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            {
            // InternalGo.g:4173:3: ()
            // InternalGo.g:4174:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,76,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
              		
            }
            // InternalGo.g:4187:3: ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_ID||LA59_0==43) ) {
                alt59=1;
            }
            else if ( (LA59_0==46) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalGo.g:4188:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    {
                    // InternalGo.g:4188:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    // InternalGo.g:4189:5: (lv_varspec_2_0= ruleVarSpec )
                    {
                    // InternalGo.g:4189:5: (lv_varspec_2_0= ruleVarSpec )
                    // InternalGo.g:4190:6: lv_varspec_2_0= ruleVarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getVarspecVarSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_varspec_2_0=ruleVarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						set(
                      							current,
                      							"varspec",
                      							lv_varspec_2_0,
                      							"org.xtext.example.mydsl.Go.VarSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4208:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    {
                    // InternalGo.g:4208:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    // InternalGo.g:4209:5: otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,46,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:4213:5: ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==RULE_ID||LA58_0==43) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalGo.g:4214:6: ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )?
                    	    {
                    	    // InternalGo.g:4214:6: ( (lv_varspec2_4_0= ruleVarSpec ) )
                    	    // InternalGo.g:4215:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    {
                    	    // InternalGo.g:4215:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    // InternalGo.g:4216:8: lv_varspec2_4_0= ruleVarSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVarDeclAccess().getVarspec2VarSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_varspec2_4_0=ruleVarSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"varspec2",
                    	      									lv_varspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.VarSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    // InternalGo.g:4233:6: (otherlv_5= ';' )?
                    	    int alt57=2;
                    	    int LA57_0 = input.LA(1);

                    	    if ( (LA57_0==53) ) {
                    	        alt57=1;
                    	    }
                    	    switch (alt57) {
                    	        case 1 :
                    	            // InternalGo.g:4234:7: otherlv_5= ';'
                    	            {
                    	            otherlv_5=(Token)match(input,53,FOLLOW_47); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	              						
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDecl"


    // $ANTLR start "entryRuleVarSpec"
    // InternalGo.g:4250:1: entryRuleVarSpec returns [EObject current=null] : iv_ruleVarSpec= ruleVarSpec EOF ;
    public final EObject entryRuleVarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarSpec = null;


        try {
            // InternalGo.g:4250:48: (iv_ruleVarSpec= ruleVarSpec EOF )
            // InternalGo.g:4251:2: iv_ruleVarSpec= ruleVarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarSpec=ruleVarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarSpec"


    // $ANTLR start "ruleVarSpec"
    // InternalGo.g:4257:1: ruleVarSpec returns [EObject current=null] : ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) ;
    public final EObject ruleVarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_id_0_0 = null;

        EObject lv_tp2_1_0 = null;

        EObject lv_expressionlist_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4263:2: ( ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) )
            // InternalGo.g:4264:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            {
            // InternalGo.g:4264:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            // InternalGo.g:4265:3: ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            {
            // InternalGo.g:4265:3: ( (lv_id_0_0= ruleIdentifierList ) )
            // InternalGo.g:4266:4: (lv_id_0_0= ruleIdentifierList )
            {
            // InternalGo.g:4266:4: (lv_id_0_0= ruleIdentifierList )
            // InternalGo.g:4267:5: lv_id_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarSpecAccess().getIdIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_id_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarSpecRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4284:3: ( (lv_tp2_1_0= ruleType ) )?
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalGo.g:4285:4: (lv_tp2_1_0= ruleType )
                    {
                    // InternalGo.g:4285:4: (lv_tp2_1_0= ruleType )
                    // InternalGo.g:4286:5: lv_tp2_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVarSpecAccess().getTp2TypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_50);
                    lv_tp2_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      					}
                      					set(
                      						current,
                      						"tp2",
                      						lv_tp2_1_0,
                      						"org.xtext.example.mydsl.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:4303:3: (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==74) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalGo.g:4304:4: otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    {
                    otherlv_2=(Token)match(input,74,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalGo.g:4308:4: ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    // InternalGo.g:4309:5: (lv_expressionlist_3_0= ruleExpressionList )
                    {
                    // InternalGo.g:4309:5: (lv_expressionlist_3_0= ruleExpressionList )
                    // InternalGo.g:4310:6: lv_expressionlist_3_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionlistExpressionListParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_3_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_3_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarSpec"


    // $ANTLR start "entryRuleEmptyStmt"
    // InternalGo.g:4332:1: entryRuleEmptyStmt returns [String current=null] : iv_ruleEmptyStmt= ruleEmptyStmt EOF ;
    public final String entryRuleEmptyStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmptyStmt = null;


        try {
            // InternalGo.g:4332:49: (iv_ruleEmptyStmt= ruleEmptyStmt EOF )
            // InternalGo.g:4333:2: iv_ruleEmptyStmt= ruleEmptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStmt=ruleEmptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyStmt"


    // $ANTLR start "ruleEmptyStmt"
    // InternalGo.g:4339:1: ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ';' ;
    public final AntlrDatatypeRuleToken ruleEmptyStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:4345:2: (kw= ';' )
            // InternalGo.g:4346:2: kw= ';'
            {
            kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getEmptyStmtAccess().getSemicolonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyStmt"


    // $ANTLR start "entryRuleExpressionStmt"
    // InternalGo.g:4354:1: entryRuleExpressionStmt returns [EObject current=null] : iv_ruleExpressionStmt= ruleExpressionStmt EOF ;
    public final EObject entryRuleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStmt = null;


        try {
            // InternalGo.g:4354:55: (iv_ruleExpressionStmt= ruleExpressionStmt EOF )
            // InternalGo.g:4355:2: iv_ruleExpressionStmt= ruleExpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStmt=ruleExpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionStmt"


    // $ANTLR start "ruleExpressionStmt"
    // InternalGo.g:4361:1: ruleExpressionStmt returns [EObject current=null] : ( () ( (lv_exp_1_0= ruleExpression ) ) ) ;
    public final EObject ruleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4367:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) ) )
            // InternalGo.g:4368:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            {
            // InternalGo.g:4368:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            // InternalGo.g:4369:3: () ( (lv_exp_1_0= ruleExpression ) )
            {
            // InternalGo.g:4369:3: ()
            // InternalGo.g:4370:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionStmtAccess().getExpressionStmtAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4379:3: ( (lv_exp_1_0= ruleExpression ) )
            // InternalGo.g:4380:4: (lv_exp_1_0= ruleExpression )
            {
            // InternalGo.g:4380:4: (lv_exp_1_0= ruleExpression )
            // InternalGo.g:4381:5: lv_exp_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionStmt"


    // $ANTLR start "entryRuleSendStmt"
    // InternalGo.g:4402:1: entryRuleSendStmt returns [EObject current=null] : iv_ruleSendStmt= ruleSendStmt EOF ;
    public final EObject entryRuleSendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSendStmt = null;


        try {
            // InternalGo.g:4402:49: (iv_ruleSendStmt= ruleSendStmt EOF )
            // InternalGo.g:4403:2: iv_ruleSendStmt= ruleSendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSendStmt=ruleSendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSendStmt"


    // $ANTLR start "ruleSendStmt"
    // InternalGo.g:4409:1: ruleSendStmt returns [EObject current=null] : ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleSendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_ch_1_0 = null;

        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4415:2: ( ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) ) )
            // InternalGo.g:4416:2: ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) )
            {
            // InternalGo.g:4416:2: ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) )
            // InternalGo.g:4417:3: () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) )
            {
            // InternalGo.g:4417:3: ()
            // InternalGo.g:4418:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSendStmtAccess().getSendStmtAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4427:3: ( (lv_ch_1_0= ruleChannel ) )
            // InternalGo.g:4428:4: (lv_ch_1_0= ruleChannel )
            {
            // InternalGo.g:4428:4: (lv_ch_1_0= ruleChannel )
            // InternalGo.g:4429:5: lv_ch_1_0= ruleChannel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getChChannelParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_ch_1_0=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"ch",
              						lv_ch_1_0,
              						"org.xtext.example.mydsl.Go.Channel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,61,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_2());
              		
            }
            // InternalGo.g:4450:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:4451:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:4451:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:4452:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSendStmt"


    // $ANTLR start "entryRuleChannel"
    // InternalGo.g:4473:1: entryRuleChannel returns [EObject current=null] : iv_ruleChannel= ruleChannel EOF ;
    public final EObject entryRuleChannel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannel = null;


        try {
            // InternalGo.g:4473:48: (iv_ruleChannel= ruleChannel EOF )
            // InternalGo.g:4474:2: iv_ruleChannel= ruleChannel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannel=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannel"


    // $ANTLR start "ruleChannel"
    // InternalGo.g:4480:1: ruleChannel returns [EObject current=null] : ( (lv_exp_0_0= ruleExpression ) ) ;
    public final EObject ruleChannel() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4486:2: ( ( (lv_exp_0_0= ruleExpression ) ) )
            // InternalGo.g:4487:2: ( (lv_exp_0_0= ruleExpression ) )
            {
            // InternalGo.g:4487:2: ( (lv_exp_0_0= ruleExpression ) )
            // InternalGo.g:4488:3: (lv_exp_0_0= ruleExpression )
            {
            // InternalGo.g:4488:3: (lv_exp_0_0= ruleExpression )
            // InternalGo.g:4489:4: lv_exp_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getChannelAccess().getExpExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getChannelRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.xtext.example.mydsl.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannel"


    // $ANTLR start "entryRuleIncDecStmt"
    // InternalGo.g:4509:1: entryRuleIncDecStmt returns [EObject current=null] : iv_ruleIncDecStmt= ruleIncDecStmt EOF ;
    public final EObject entryRuleIncDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncDecStmt = null;


        try {
            // InternalGo.g:4509:51: (iv_ruleIncDecStmt= ruleIncDecStmt EOF )
            // InternalGo.g:4510:2: iv_ruleIncDecStmt= ruleIncDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncDecStmt=ruleIncDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncDecStmt"


    // $ANTLR start "ruleIncDecStmt"
    // InternalGo.g:4516:1: ruleIncDecStmt returns [EObject current=null] : ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) ) ;
    public final EObject ruleIncDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_exp_1_0 = null;

        EObject lv_exp2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4522:2: ( ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) ) )
            // InternalGo.g:4523:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) )
            {
            // InternalGo.g:4523:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) )
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalGo.g:4524:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
                    {
                    // InternalGo.g:4524:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
                    // InternalGo.g:4525:4: () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++'
                    {
                    // InternalGo.g:4525:4: ()
                    // InternalGo.g:4526:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getIncDecStmtAccess().getIncDecStmtAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:4535:4: ( (lv_exp_1_0= ruleExpression ) )
                    // InternalGo.g:4536:5: (lv_exp_1_0= ruleExpression )
                    {
                    // InternalGo.g:4536:5: (lv_exp_1_0= ruleExpression )
                    // InternalGo.g:4537:6: lv_exp_1_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_exp_1_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
                      						}
                      						set(
                      							current,
                      							"exp",
                      							lv_exp_1_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4560:3: ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' )
                    {
                    // InternalGo.g:4560:3: ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' )
                    // InternalGo.g:4561:4: ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--'
                    {
                    // InternalGo.g:4561:4: ( (lv_exp2_3_0= ruleExpression ) )
                    // InternalGo.g:4562:5: (lv_exp2_3_0= ruleExpression )
                    {
                    // InternalGo.g:4562:5: (lv_exp2_3_0= ruleExpression )
                    // InternalGo.g:4563:6: lv_exp2_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIncDecStmtAccess().getExp2ExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    lv_exp2_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
                      						}
                      						set(
                      							current,
                      							"exp2",
                      							lv_exp2_3_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncDecStmt"


    // $ANTLR start "entryRuleAssignment"
    // InternalGo.g:4589:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalGo.g:4589:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalGo.g:4590:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalGo.g:4596:1: ruleAssignment returns [EObject current=null] : ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_asop_2_1=null;
        Token lv_asop_2_2=null;
        EObject lv_expressionlist_1_0 = null;

        EObject lv_expressionlist2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4602:2: ( ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) ) )
            // InternalGo.g:4603:2: ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:4603:2: ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) )
            // InternalGo.g:4604:3: () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) )
            {
            // InternalGo.g:4604:3: ()
            // InternalGo.g:4605:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAssignmentAccess().getAssignmentAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4614:3: ( (lv_expressionlist_1_0= ruleExpressionList ) )
            // InternalGo.g:4615:4: (lv_expressionlist_1_0= ruleExpressionList )
            {
            // InternalGo.g:4615:4: (lv_expressionlist_1_0= ruleExpressionList )
            // InternalGo.g:4616:5: lv_expressionlist_1_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlistExpressionListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_55);
            lv_expressionlist_1_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist",
              						lv_expressionlist_1_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4633:3: ( ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) ) )
            // InternalGo.g:4634:4: ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) )
            {
            // InternalGo.g:4634:4: ( (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' ) )
            // InternalGo.g:4635:5: (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' )
            {
            // InternalGo.g:4635:5: (lv_asop_2_1= RULE_ASSING_OP | lv_asop_2_2= '=' )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_ASSING_OP) ) {
                alt63=1;
            }
            else if ( (LA63_0==74) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalGo.g:4636:6: lv_asop_2_1= RULE_ASSING_OP
                    {
                    lv_asop_2_1=(Token)match(input,RULE_ASSING_OP,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_asop_2_1, grammarAccess.getAssignmentAccess().getAsopASSING_OPTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAssignmentRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"asop",
                      							lv_asop_2_1,
                      							"org.xtext.example.mydsl.Go.ASSING_OP");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:4651:6: lv_asop_2_2= '='
                    {
                    lv_asop_2_2=(Token)match(input,74,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_asop_2_2, grammarAccess.getAssignmentAccess().getAsopEqualsSignKeyword_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAssignmentRule());
                      						}
                      						setWithLastConsumed(current, "asop", lv_asop_2_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalGo.g:4664:3: ( (lv_expressionlist2_3_0= ruleExpressionList ) )
            // InternalGo.g:4665:4: (lv_expressionlist2_3_0= ruleExpressionList )
            {
            // InternalGo.g:4665:4: (lv_expressionlist2_3_0= ruleExpressionList )
            // InternalGo.g:4666:5: lv_expressionlist2_3_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlist2ExpressionListParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionlist2_3_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist2",
              						lv_expressionlist2_3_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleShortVarDecl"
    // InternalGo.g:4687:1: entryRuleShortVarDecl returns [EObject current=null] : iv_ruleShortVarDecl= ruleShortVarDecl EOF ;
    public final EObject entryRuleShortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShortVarDecl = null;


        try {
            // InternalGo.g:4687:53: (iv_ruleShortVarDecl= ruleShortVarDecl EOF )
            // InternalGo.g:4688:2: iv_ruleShortVarDecl= ruleShortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShortVarDecl=ruleShortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShortVarDecl"


    // $ANTLR start "ruleShortVarDecl"
    // InternalGo.g:4694:1: ruleShortVarDecl returns [EObject current=null] : ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) ) ;
    public final EObject ruleShortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_idl_1_0 = null;

        EObject lv_epl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4700:2: ( ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) ) )
            // InternalGo.g:4701:2: ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:4701:2: ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) )
            // InternalGo.g:4702:3: () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) )
            {
            // InternalGo.g:4702:3: ()
            // InternalGo.g:4703:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getShortVarDeclAccess().getShortVarDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4712:3: ( (lv_idl_1_0= ruleIdentifierList ) )
            // InternalGo.g:4713:4: (lv_idl_1_0= ruleIdentifierList )
            {
            // InternalGo.g:4713:4: (lv_idl_1_0= ruleIdentifierList )
            // InternalGo.g:4714:5: lv_idl_1_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdlIdentifierListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_56);
            lv_idl_1_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"idl",
              						lv_idl_1_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,79,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_2());
              		
            }
            // InternalGo.g:4735:3: ( (lv_epl_3_0= ruleExpressionList ) )
            // InternalGo.g:4736:4: (lv_epl_3_0= ruleExpressionList )
            {
            // InternalGo.g:4736:4: (lv_epl_3_0= ruleExpressionList )
            // InternalGo.g:4737:5: lv_epl_3_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getEplExpressionListParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_epl_3_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"epl",
              						lv_epl_3_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShortVarDecl"


    // $ANTLR start "entryRuleExprSwitchStmt"
    // InternalGo.g:4758:1: entryRuleExprSwitchStmt returns [EObject current=null] : iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF ;
    public final EObject entryRuleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchStmt = null;


        try {
            // InternalGo.g:4758:55: (iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF )
            // InternalGo.g:4759:2: iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchStmt=ruleExprSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchStmt"


    // $ANTLR start "ruleExprSwitchStmt"
    // InternalGo.g:4765:1: ruleExprSwitchStmt returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) ;
    public final EObject ruleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_simplestmt_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_exprcase_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4771:2: ( ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) )
            // InternalGo.g:4772:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            {
            // InternalGo.g:4772:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            // InternalGo.g:4773:3: () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}'
            {
            // InternalGo.g:4773:3: ()
            // InternalGo.g:4774:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1());
              		
            }
            // InternalGo.g:4787:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalGo.g:4788:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )?
                    {
                    // InternalGo.g:4788:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
                    // InternalGo.g:4789:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:4789:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    // InternalGo.g:4790:6: lv_simplestmt_2_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_57);
                    lv_simplestmt_2_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplestmt",
                      							lv_simplestmt_2_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4807:4: (otherlv_3= ';' )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==53) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalGo.g:4808:5: otherlv_3= ';'
                            {
                            otherlv_3=(Token)match(input,53,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalGo.g:4814:3: ( (lv_expression_4_0= ruleExpression ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=RULE_ID && LA66_0<=RULE_FLOAT_LIT)||LA66_0==RULE_LITERAL_TYPE||(LA66_0>=RULE_UNARY_OP && LA66_0<=RULE_BOOLEAN_LIT)||LA66_0==41||LA66_0==43||(LA66_0>=45 && LA66_0<=46)||LA66_0==49||LA66_0==51||LA66_0==56||(LA66_0>=58 && LA66_0<=61)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalGo.g:4815:4: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalGo.g:4815:4: (lv_expression_4_0= ruleExpression )
                    // InternalGo.g:4816:5: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_17);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_4_0,
                      						"org.xtext.example.mydsl.Go.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,52,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalGo.g:4837:3: ( (lv_exprcase_6_0= ruleExprCaseClause ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( ((LA67_0>=81 && LA67_0<=82)) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalGo.g:4838:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    {
            	    // InternalGo.g:4838:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    // InternalGo.g:4839:5: lv_exprcase_6_0= ruleExprCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprcaseExprCaseClauseParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_exprcase_6_0=ruleExprCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"exprcase",
            	      						lv_exprcase_6_0,
            	      						"org.xtext.example.mydsl.Go.ExprCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            otherlv_7=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchStmt"


    // $ANTLR start "entryRuleExprCaseClause"
    // InternalGo.g:4864:1: entryRuleExprCaseClause returns [EObject current=null] : iv_ruleExprCaseClause= ruleExprCaseClause EOF ;
    public final EObject entryRuleExprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprCaseClause = null;


        try {
            // InternalGo.g:4864:55: (iv_ruleExprCaseClause= ruleExprCaseClause EOF )
            // InternalGo.g:4865:2: iv_ruleExprCaseClause= ruleExprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprCaseClause=ruleExprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprCaseClause"


    // $ANTLR start "ruleExprCaseClause"
    // InternalGo.g:4871:1: ruleExprCaseClause returns [EObject current=null] : ( () ( (lv_expr_1_0= ruleExprSwitchCase ) ) otherlv_2= ':' ( (lv_statementlist_3_0= ruleStatementList ) ) ) ;
    public final EObject ruleExprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expr_1_0 = null;

        EObject lv_statementlist_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4877:2: ( ( () ( (lv_expr_1_0= ruleExprSwitchCase ) ) otherlv_2= ':' ( (lv_statementlist_3_0= ruleStatementList ) ) ) )
            // InternalGo.g:4878:2: ( () ( (lv_expr_1_0= ruleExprSwitchCase ) ) otherlv_2= ':' ( (lv_statementlist_3_0= ruleStatementList ) ) )
            {
            // InternalGo.g:4878:2: ( () ( (lv_expr_1_0= ruleExprSwitchCase ) ) otherlv_2= ':' ( (lv_statementlist_3_0= ruleStatementList ) ) )
            // InternalGo.g:4879:3: () ( (lv_expr_1_0= ruleExprSwitchCase ) ) otherlv_2= ':' ( (lv_statementlist_3_0= ruleStatementList ) )
            {
            // InternalGo.g:4879:3: ()
            // InternalGo.g:4880:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExprCaseClauseAccess().getExprCaseClauseAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4889:3: ( (lv_expr_1_0= ruleExprSwitchCase ) )
            // InternalGo.g:4890:4: (lv_expr_1_0= ruleExprSwitchCase )
            {
            // InternalGo.g:4890:4: (lv_expr_1_0= ruleExprSwitchCase )
            // InternalGo.g:4891:5: lv_expr_1_0= ruleExprSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprExprSwitchCaseParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_expr_1_0=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.example.mydsl.Go.ExprSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,62,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExprCaseClauseAccess().getColonKeyword_2());
              		
            }
            // InternalGo.g:4912:3: ( (lv_statementlist_3_0= ruleStatementList ) )
            // InternalGo.g:4913:4: (lv_statementlist_3_0= ruleStatementList )
            {
            // InternalGo.g:4913:4: (lv_statementlist_3_0= ruleStatementList )
            // InternalGo.g:4914:5: lv_statementlist_3_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementlistStatementListParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_3_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_3_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprCaseClause"


    // $ANTLR start "entryRuleExprSwitchCase"
    // InternalGo.g:4935:1: entryRuleExprSwitchCase returns [EObject current=null] : iv_ruleExprSwitchCase= ruleExprSwitchCase EOF ;
    public final EObject entryRuleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchCase = null;


        try {
            // InternalGo.g:4935:55: (iv_ruleExprSwitchCase= ruleExprSwitchCase EOF )
            // InternalGo.g:4936:2: iv_ruleExprSwitchCase= ruleExprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchCase=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchCase"


    // $ANTLR start "ruleExprSwitchCase"
    // InternalGo.g:4942:1: ruleExprSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4948:2: ( ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:4949:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:4949:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==81) ) {
                alt68=1;
            }
            else if ( (LA68_0==82) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalGo.g:4950:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    {
                    // InternalGo.g:4950:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    // InternalGo.g:4951:4: () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    {
                    // InternalGo.g:4951:4: ()
                    // InternalGo.g:4952:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,81,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:4965:4: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    // InternalGo.g:4966:5: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:4966:5: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:4967:6: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionlistExpressionListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_2_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4986:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:4986:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:4987:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:4987:4: ()
                    // InternalGo.g:4988:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchCase"


    // $ANTLR start "entryRuleTypeSwitchStmt"
    // InternalGo.g:5006:1: entryRuleTypeSwitchStmt returns [EObject current=null] : iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF ;
    public final EObject entryRuleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchStmt = null;


        try {
            // InternalGo.g:5006:55: (iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF )
            // InternalGo.g:5007:2: iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchStmt=ruleTypeSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchStmt"


    // $ANTLR start "ruleTypeSwitchStmt"
    // InternalGo.g:5013:1: ruleTypeSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simplestm_1_0 = null;

        EObject lv_typesg_3_0 = null;

        EObject lv_typecc_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5019:2: ( (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:5020:2: (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:5020:2: (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:5021:3: otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,80,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:5025:3: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalGo.g:5026:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )?
                    {
                    // InternalGo.g:5026:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:5027:5: (lv_simplestm_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:5027:5: (lv_simplestm_1_0= ruleSimpleStmt )
                    // InternalGo.g:5028:6: lv_simplestm_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimplestmSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_simplestm_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplestm",
                      							lv_simplestm_1_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5045:4: (otherlv_2= ';' )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==53) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalGo.g:5046:5: otherlv_2= ';'
                            {
                            otherlv_2=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalGo.g:5052:3: ( (lv_typesg_3_0= ruleTypeSwitchGuard ) )
            // InternalGo.g:5053:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            {
            // InternalGo.g:5053:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            // InternalGo.g:5054:5: lv_typesg_3_0= ruleTypeSwitchGuard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypesgTypeSwitchGuardParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_typesg_3_0=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
              					}
              					set(
              						current,
              						"typesg",
              						lv_typesg_3_0,
              						"org.xtext.example.mydsl.Go.TypeSwitchGuard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,52,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:5075:3: ( (lv_typecc_5_0= ruleTypeCaseClause ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( ((LA71_0>=81 && LA71_0<=82)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalGo.g:5076:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    {
            	    // InternalGo.g:5076:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    // InternalGo.g:5077:5: lv_typecc_5_0= ruleTypeCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeccTypeCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_typecc_5_0=ruleTypeCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"typecc",
            	      						lv_typecc_5_0,
            	      						"org.xtext.example.mydsl.Go.TypeCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            otherlv_6=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchStmt"


    // $ANTLR start "entryRuleTypeSwitchGuard"
    // InternalGo.g:5102:1: entryRuleTypeSwitchGuard returns [EObject current=null] : iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF ;
    public final EObject entryRuleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchGuard = null;


        try {
            // InternalGo.g:5102:56: (iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF )
            // InternalGo.g:5103:2: iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchGuard"


    // $ANTLR start "ruleTypeSwitchGuard"
    // InternalGo.g:5109:1: ruleTypeSwitchGuard returns [EObject current=null] : ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_per_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5115:2: ( ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:5116:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:5116:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:5117:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:5117:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_ID) ) {
                int LA72_1 = input.LA(2);

                if ( (LA72_1==79) ) {
                    alt72=1;
                }
            }
            else if ( (LA72_0==43) ) {
                int LA72_2 = input.LA(2);

                if ( (LA72_2==RULE_ID) ) {
                    int LA72_5 = input.LA(3);

                    if ( (LA72_5==79) ) {
                        alt72=1;
                    }
                }
            }
            switch (alt72) {
                case 1 :
                    // InternalGo.g:5118:4: ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':='
                    {
                    // InternalGo.g:5118:4: ( (lv_id_0_0= ruleIDENTIFIER ) )
                    // InternalGo.g:5119:5: (lv_id_0_0= ruleIDENTIFIER )
                    {
                    // InternalGo.g:5119:5: (lv_id_0_0= ruleIDENTIFIER )
                    // InternalGo.g:5120:6: lv_id_0_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getIdIDENTIFIERParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_id_0_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
                      						}
                      						set(
                      							current,
                      							"id",
                      							lv_id_0_0,
                      							"org.xtext.example.mydsl.Go.IDENTIFIER");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,79,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:5142:3: ( (lv_per_2_0= rulePrimaryExpr ) )
            // InternalGo.g:5143:4: (lv_per_2_0= rulePrimaryExpr )
            {
            // InternalGo.g:5143:4: (lv_per_2_0= rulePrimaryExpr )
            // InternalGo.g:5144:5: lv_per_2_0= rulePrimaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPerPrimaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_per_2_0=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
              					}
              					set(
              						current,
              						"per",
              						lv_per_2_0,
              						"org.xtext.example.mydsl.Go.PrimaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,48,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,46,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,75,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchGuard"


    // $ANTLR start "entryRuleTypeCaseClause"
    // InternalGo.g:5181:1: entryRuleTypeCaseClause returns [EObject current=null] : iv_ruleTypeCaseClause= ruleTypeCaseClause EOF ;
    public final EObject entryRuleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeCaseClause = null;


        try {
            // InternalGo.g:5181:55: (iv_ruleTypeCaseClause= ruleTypeCaseClause EOF )
            // InternalGo.g:5182:2: iv_ruleTypeCaseClause= ruleTypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeCaseClause=ruleTypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeCaseClause"


    // $ANTLR start "ruleTypeCaseClause"
    // InternalGo.g:5188:1: ruleTypeCaseClause returns [EObject current=null] : (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypeSwitchCase_0 = null;

        EObject lv_statementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5194:2: ( (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:5195:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:5195:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            // InternalGo.g:5196:3: this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_TypeSwitchCase_0=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeSwitchCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,62,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:5211:3: ( (lv_statementlist_2_0= ruleStatementList ) )
            // InternalGo.g:5212:4: (lv_statementlist_2_0= ruleStatementList )
            {
            // InternalGo.g:5212:4: (lv_statementlist_2_0= ruleStatementList )
            // InternalGo.g:5213:5: lv_statementlist_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeCaseClause"


    // $ANTLR start "entryRuleTypeSwitchCase"
    // InternalGo.g:5234:1: entryRuleTypeSwitchCase returns [EObject current=null] : iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF ;
    public final EObject entryRuleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchCase = null;


        try {
            // InternalGo.g:5234:55: (iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF )
            // InternalGo.g:5235:2: iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchCase=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchCase"


    // $ANTLR start "ruleTypeSwitchCase"
    // InternalGo.g:5241:1: ruleTypeSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_typelist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5247:2: ( ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:5248:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:5248:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==81) ) {
                alt73=1;
            }
            else if ( (LA73_0==82) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalGo.g:5249:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    {
                    // InternalGo.g:5249:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    // InternalGo.g:5250:4: () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) )
                    {
                    // InternalGo.g:5250:4: ()
                    // InternalGo.g:5251:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,81,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:5264:4: ( (lv_typelist_2_0= ruleTypeList ) )
                    // InternalGo.g:5265:5: (lv_typelist_2_0= ruleTypeList )
                    {
                    // InternalGo.g:5265:5: (lv_typelist_2_0= ruleTypeList )
                    // InternalGo.g:5266:6: lv_typelist_2_0= ruleTypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypelistTypeListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typelist_2_0=ruleTypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"typelist",
                      							lv_typelist_2_0,
                      							"org.xtext.example.mydsl.Go.TypeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5285:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:5285:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:5286:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:5286:4: ()
                    // InternalGo.g:5287:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchCase"


    // $ANTLR start "entryRuleTypeList"
    // InternalGo.g:5305:1: entryRuleTypeList returns [EObject current=null] : iv_ruleTypeList= ruleTypeList EOF ;
    public final EObject entryRuleTypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeList = null;


        try {
            // InternalGo.g:5305:49: (iv_ruleTypeList= ruleTypeList EOF )
            // InternalGo.g:5306:2: iv_ruleTypeList= ruleTypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeList=ruleTypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeList"


    // $ANTLR start "ruleTypeList"
    // InternalGo.g:5312:1: ruleTypeList returns [EObject current=null] : ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* ) ;
    public final EObject ruleTypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_type_1_0 = null;

        EObject lv_type2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5318:2: ( ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* ) )
            // InternalGo.g:5319:2: ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* )
            {
            // InternalGo.g:5319:2: ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* )
            // InternalGo.g:5320:3: () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )*
            {
            // InternalGo.g:5320:3: ()
            // InternalGo.g:5321:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeListAccess().getTypeListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5330:3: ( (lv_type_1_0= ruleType ) )
            // InternalGo.g:5331:4: (lv_type_1_0= ruleType )
            {
            // InternalGo.g:5331:4: (lv_type_1_0= ruleType )
            // InternalGo.g:5332:5: lv_type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5349:3: (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==55) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalGo.g:5350:4: otherlv_2= ',' ( (lv_type2_3_0= ruleType ) )
            	    {
            	    otherlv_2=(Token)match(input,55,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTypeListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:5354:4: ( (lv_type2_3_0= ruleType ) )
            	    // InternalGo.g:5355:5: (lv_type2_3_0= ruleType )
            	    {
            	    // InternalGo.g:5355:5: (lv_type2_3_0= ruleType )
            	    // InternalGo.g:5356:6: lv_type2_3_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getType2TypeParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_type2_3_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"type2",
            	      							lv_type2_3_0,
            	      							"org.xtext.example.mydsl.Go.Type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeList"


    // $ANTLR start "entryRuleCommClause"
    // InternalGo.g:5378:1: entryRuleCommClause returns [EObject current=null] : iv_ruleCommClause= ruleCommClause EOF ;
    public final EObject entryRuleCommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommClause = null;


        try {
            // InternalGo.g:5378:51: (iv_ruleCommClause= ruleCommClause EOF )
            // InternalGo.g:5379:2: iv_ruleCommClause= ruleCommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommClause=ruleCommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommClause"


    // $ANTLR start "ruleCommClause"
    // InternalGo.g:5385:1: ruleCommClause returns [EObject current=null] : (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleCommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_CommCase_0 = null;

        EObject lv_statementlist2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5391:2: ( (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:5392:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:5392:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            // InternalGo.g:5393:3: this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_CommCase_0=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CommCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,62,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:5408:3: ( (lv_statementlist2_2_0= ruleStatementList ) )
            // InternalGo.g:5409:4: (lv_statementlist2_2_0= ruleStatementList )
            {
            // InternalGo.g:5409:4: (lv_statementlist2_2_0= ruleStatementList )
            // InternalGo.g:5410:5: lv_statementlist2_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementlist2StatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist2_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"statementlist2",
              						lv_statementlist2_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommClause"


    // $ANTLR start "entryRuleCommCase"
    // InternalGo.g:5431:1: entryRuleCommCase returns [EObject current=null] : iv_ruleCommCase= ruleCommCase EOF ;
    public final EObject entryRuleCommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommCase = null;


        try {
            // InternalGo.g:5431:49: (iv_ruleCommCase= ruleCommCase EOF )
            // InternalGo.g:5432:2: iv_ruleCommCase= ruleCommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommCase=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommCase"


    // $ANTLR start "ruleCommCase"
    // InternalGo.g:5438:1: ruleCommCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) ;
    public final EObject ruleCommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_sendstmt_2_0 = null;

        EObject lv_recvstmt_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5444:2: ( ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) )
            // InternalGo.g:5445:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            {
            // InternalGo.g:5445:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==81) ) {
                alt76=1;
            }
            else if ( (LA76_0==82) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // InternalGo.g:5446:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    {
                    // InternalGo.g:5446:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    // InternalGo.g:5447:4: () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    {
                    // InternalGo.g:5447:4: ()
                    // InternalGo.g:5448:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,81,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCommCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:5461:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    int alt75=2;
                    alt75 = dfa75.predict(input);
                    switch (alt75) {
                        case 1 :
                            // InternalGo.g:5462:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            {
                            // InternalGo.g:5462:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            // InternalGo.g:5463:6: (lv_sendstmt_2_0= ruleSendStmt )
                            {
                            // InternalGo.g:5463:6: (lv_sendstmt_2_0= ruleSendStmt )
                            // InternalGo.g:5464:7: lv_sendstmt_2_0= ruleSendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sendstmt_2_0=ruleSendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"sendstmt",
                              								lv_sendstmt_2_0,
                              								"org.xtext.example.mydsl.Go.SendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:5482:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            {
                            // InternalGo.g:5482:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            // InternalGo.g:5483:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            {
                            // InternalGo.g:5483:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            // InternalGo.g:5484:7: lv_recvstmt_3_0= ruleRecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvstmtRecvStmtParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_recvstmt_3_0=ruleRecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"recvstmt",
                              								lv_recvstmt_3_0,
                              								"org.xtext.example.mydsl.Go.RecvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5504:3: ( () otherlv_5= 'default' )
                    {
                    // InternalGo.g:5504:3: ( () otherlv_5= 'default' )
                    // InternalGo.g:5505:4: () otherlv_5= 'default'
                    {
                    // InternalGo.g:5505:4: ()
                    // InternalGo.g:5506:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommCase"


    // $ANTLR start "entryRuleRecvStmt"
    // InternalGo.g:5524:1: entryRuleRecvStmt returns [EObject current=null] : iv_ruleRecvStmt= ruleRecvStmt EOF ;
    public final EObject entryRuleRecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvStmt = null;


        try {
            // InternalGo.g:5524:49: (iv_ruleRecvStmt= ruleRecvStmt EOF )
            // InternalGo.g:5525:2: iv_ruleRecvStmt= ruleRecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvStmt=ruleRecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvStmt"


    // $ANTLR start "ruleRecvStmt"
    // InternalGo.g:5531:1: ruleRecvStmt returns [EObject current=null] : ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) ;
    public final EObject ruleRecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_ExpressionList_0 = null;

        EObject lv_idl_2_0 = null;

        EObject lv_recvexpr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5537:2: ( ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) )
            // InternalGo.g:5538:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            {
            // InternalGo.g:5538:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            // InternalGo.g:5539:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            {
            // InternalGo.g:5539:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt77=3;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalGo.g:5540:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    {
                    // InternalGo.g:5540:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    // InternalGo.g:5541:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FOLLOW_51);
                    this_ExpressionList_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_ExpressionList_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_1=(Token)match(input,74,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5558:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:5558:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:5559:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:5559:5: ( (lv_idl_2_0= ruleIdentifierList ) )
                    // InternalGo.g:5560:6: (lv_idl_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:5560:6: (lv_idl_2_0= ruleIdentifierList )
                    // InternalGo.g:5561:7: lv_idl_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_56);
                    lv_idl_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"idl",
                      								lv_idl_2_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,79,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:5584:3: ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            // InternalGo.g:5585:4: (lv_recvexpr_4_0= ruleRecvExpr )
            {
            // InternalGo.g:5585:4: (lv_recvexpr_4_0= ruleRecvExpr )
            // InternalGo.g:5586:5: lv_recvexpr_4_0= ruleRecvExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getRecvexprRecvExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_recvexpr_4_0=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"recvexpr",
              						lv_recvexpr_4_0,
              						"org.xtext.example.mydsl.Go.RecvExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvStmt"


    // $ANTLR start "entryRuleRecvExpr"
    // InternalGo.g:5607:1: entryRuleRecvExpr returns [EObject current=null] : iv_ruleRecvExpr= ruleRecvExpr EOF ;
    public final EObject entryRuleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvExpr = null;


        try {
            // InternalGo.g:5607:49: (iv_ruleRecvExpr= ruleRecvExpr EOF )
            // InternalGo.g:5608:2: iv_ruleRecvExpr= ruleRecvExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvExpr=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvExpr"


    // $ANTLR start "ruleRecvExpr"
    // InternalGo.g:5614:1: ruleRecvExpr returns [EObject current=null] : ( (lv_exp_0_0= ruleExpression ) ) ;
    public final EObject ruleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5620:2: ( ( (lv_exp_0_0= ruleExpression ) ) )
            // InternalGo.g:5621:2: ( (lv_exp_0_0= ruleExpression ) )
            {
            // InternalGo.g:5621:2: ( (lv_exp_0_0= ruleExpression ) )
            // InternalGo.g:5622:3: (lv_exp_0_0= ruleExpression )
            {
            // InternalGo.g:5622:3: (lv_exp_0_0= ruleExpression )
            // InternalGo.g:5623:4: lv_exp_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRecvExprAccess().getExpExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getRecvExprRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.xtext.example.mydsl.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvExpr"


    // $ANTLR start "entryRuleCondition"
    // InternalGo.g:5643:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalGo.g:5643:50: (iv_ruleCondition= ruleCondition EOF )
            // InternalGo.g:5644:2: iv_ruleCondition= ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalGo.g:5650:1: ruleCondition returns [EObject current=null] : ( () ( (lv_exp_1_0= ruleExpression ) ) ) ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5656:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) ) )
            // InternalGo.g:5657:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            {
            // InternalGo.g:5657:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            // InternalGo.g:5658:3: () ( (lv_exp_1_0= ruleExpression ) )
            {
            // InternalGo.g:5658:3: ()
            // InternalGo.g:5659:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConditionAccess().getConditionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5668:3: ( (lv_exp_1_0= ruleExpression ) )
            // InternalGo.g:5669:4: (lv_exp_1_0= ruleExpression )
            {
            // InternalGo.g:5669:4: (lv_exp_1_0= ruleExpression )
            // InternalGo.g:5670:5: lv_exp_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionAccess().getExpExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleForClause"
    // InternalGo.g:5691:1: entryRuleForClause returns [EObject current=null] : iv_ruleForClause= ruleForClause EOF ;
    public final EObject entryRuleForClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForClause = null;


        try {
            // InternalGo.g:5691:50: (iv_ruleForClause= ruleForClause EOF )
            // InternalGo.g:5692:2: iv_ruleForClause= ruleForClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForClause=ruleForClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForClause"


    // $ANTLR start "ruleForClause"
    // InternalGo.g:5698:1: ruleForClause returns [EObject current=null] : ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? ) ;
    public final EObject ruleForClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_init_1_0 = null;

        EObject lv_condition_3_0 = null;

        EObject lv_poststmt_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5704:2: ( ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? ) )
            // InternalGo.g:5705:2: ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? )
            {
            // InternalGo.g:5705:2: ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? )
            // InternalGo.g:5706:3: () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )?
            {
            // InternalGo.g:5706:3: ()
            // InternalGo.g:5707:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getForClauseAccess().getForClauseAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5716:3: ( (lv_init_1_0= ruleInitStmt ) )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalGo.g:5717:4: (lv_init_1_0= ruleInitStmt )
                    {
                    // InternalGo.g:5717:4: (lv_init_1_0= ruleInitStmt )
                    // InternalGo.g:5718:5: lv_init_1_0= ruleInitStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getInitInitStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_41);
                    lv_init_1_0=ruleInitStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"init",
                      						lv_init_1_0,
                      						"org.xtext.example.mydsl.Go.InitStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getForClauseAccess().getSemicolonKeyword_2());
              		
            }
            // InternalGo.g:5739:3: ( (lv_condition_3_0= ruleCondition ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=RULE_ID && LA79_0<=RULE_FLOAT_LIT)||LA79_0==RULE_LITERAL_TYPE||(LA79_0>=RULE_UNARY_OP && LA79_0<=RULE_BOOLEAN_LIT)||LA79_0==41||LA79_0==43||(LA79_0>=45 && LA79_0<=46)||LA79_0==49||LA79_0==51||LA79_0==56||(LA79_0>=58 && LA79_0<=61)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalGo.g:5740:4: (lv_condition_3_0= ruleCondition )
                    {
                    // InternalGo.g:5740:4: (lv_condition_3_0= ruleCondition )
                    // InternalGo.g:5741:5: lv_condition_3_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_41);
                    lv_condition_3_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_3_0,
                      						"org.xtext.example.mydsl.Go.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,53,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getForClauseAccess().getSemicolonKeyword_4());
              		
            }
            // InternalGo.g:5762:3: ( (lv_poststmt_5_0= rulePostStmt ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( ((LA80_0>=RULE_ID && LA80_0<=RULE_FLOAT_LIT)||LA80_0==RULE_LITERAL_TYPE||(LA80_0>=RULE_UNARY_OP && LA80_0<=RULE_BOOLEAN_LIT)||LA80_0==41||LA80_0==43||(LA80_0>=45 && LA80_0<=46)||LA80_0==49||LA80_0==51||LA80_0==53||LA80_0==56||(LA80_0>=58 && LA80_0<=61)) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalGo.g:5763:4: (lv_poststmt_5_0= rulePostStmt )
                    {
                    // InternalGo.g:5763:4: (lv_poststmt_5_0= rulePostStmt )
                    // InternalGo.g:5764:5: lv_poststmt_5_0= rulePostStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getPoststmtPostStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_poststmt_5_0=rulePostStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"poststmt",
                      						lv_poststmt_5_0,
                      						"org.xtext.example.mydsl.Go.PostStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForClause"


    // $ANTLR start "entryRuleRangeClause"
    // InternalGo.g:5785:1: entryRuleRangeClause returns [EObject current=null] : iv_ruleRangeClause= ruleRangeClause EOF ;
    public final EObject entryRuleRangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeClause = null;


        try {
            // InternalGo.g:5785:52: (iv_ruleRangeClause= ruleRangeClause EOF )
            // InternalGo.g:5786:2: iv_ruleRangeClause= ruleRangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeClause=ruleRangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeClause"


    // $ANTLR start "ruleRangeClause"
    // InternalGo.g:5792:1: ruleRangeClause returns [EObject current=null] : ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) ;
    public final EObject ruleRangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_0_0 = null;

        EObject lv_idl_2_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5798:2: ( ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) )
            // InternalGo.g:5799:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            {
            // InternalGo.g:5799:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            // InternalGo.g:5800:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) )
            {
            // InternalGo.g:5800:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt81=3;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalGo.g:5801:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:5801:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:5802:5: ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:5802:5: ( (lv_expressionlist_0_0= ruleExpressionList ) )
                    // InternalGo.g:5803:6: (lv_expressionlist_0_0= ruleExpressionList )
                    {
                    // InternalGo.g:5803:6: (lv_expressionlist_0_0= ruleExpressionList )
                    // InternalGo.g:5804:7: lv_expressionlist_0_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionlistExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_51);
                    lv_expressionlist_0_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"expressionlist",
                      								lv_expressionlist_0_0,
                      								"org.xtext.example.mydsl.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,74,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5827:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:5827:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:5828:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:5828:5: ( (lv_idl_2_0= ruleIdentifierList ) )
                    // InternalGo.g:5829:6: (lv_idl_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:5829:6: (lv_idl_2_0= ruleIdentifierList )
                    // InternalGo.g:5830:7: lv_idl_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_56);
                    lv_idl_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"idl",
                      								lv_idl_2_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,79,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,83,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:5857:3: ( (lv_expression_5_0= ruleExpression ) )
            // InternalGo.g:5858:4: (lv_expression_5_0= ruleExpression )
            {
            // InternalGo.g:5858:4: (lv_expression_5_0= ruleExpression )
            // InternalGo.g:5859:5: lv_expression_5_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeClause"


    // $ANTLR start "entryRuleInitStmt"
    // InternalGo.g:5880:1: entryRuleInitStmt returns [EObject current=null] : iv_ruleInitStmt= ruleInitStmt EOF ;
    public final EObject entryRuleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitStmt = null;


        try {
            // InternalGo.g:5880:49: (iv_ruleInitStmt= ruleInitStmt EOF )
            // InternalGo.g:5881:2: iv_ruleInitStmt= ruleInitStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitStmt=ruleInitStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitStmt"


    // $ANTLR start "ruleInitStmt"
    // InternalGo.g:5887:1: ruleInitStmt returns [EObject current=null] : ( (lv_simple_0_0= ruleSimpleStmt ) ) ;
    public final EObject ruleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_simple_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5893:2: ( ( (lv_simple_0_0= ruleSimpleStmt ) ) )
            // InternalGo.g:5894:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:5894:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            // InternalGo.g:5895:3: (lv_simple_0_0= ruleSimpleStmt )
            {
            // InternalGo.g:5895:3: (lv_simple_0_0= ruleSimpleStmt )
            // InternalGo.g:5896:4: lv_simple_0_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getInitStmtAccess().getSimpleSimpleStmtParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_simple_0_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getInitStmtRule());
              				}
              				set(
              					current,
              					"simple",
              					lv_simple_0_0,
              					"org.xtext.example.mydsl.Go.SimpleStmt");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitStmt"


    // $ANTLR start "entryRulePostStmt"
    // InternalGo.g:5916:1: entryRulePostStmt returns [EObject current=null] : iv_rulePostStmt= rulePostStmt EOF ;
    public final EObject entryRulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostStmt = null;


        try {
            // InternalGo.g:5916:49: (iv_rulePostStmt= rulePostStmt EOF )
            // InternalGo.g:5917:2: iv_rulePostStmt= rulePostStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostStmt=rulePostStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostStmt"


    // $ANTLR start "rulePostStmt"
    // InternalGo.g:5923:1: rulePostStmt returns [EObject current=null] : ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) ) ;
    public final EObject rulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_simple_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5929:2: ( ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) ) )
            // InternalGo.g:5930:2: ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) )
            {
            // InternalGo.g:5930:2: ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) )
            // InternalGo.g:5931:3: () ( (lv_simple_1_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:5931:3: ()
            // InternalGo.g:5932:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPostStmtAccess().getPostStmtAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5941:3: ( (lv_simple_1_0= ruleSimpleStmt ) )
            // InternalGo.g:5942:4: (lv_simple_1_0= ruleSimpleStmt )
            {
            // InternalGo.g:5942:4: (lv_simple_1_0= ruleSimpleStmt )
            // InternalGo.g:5943:5: lv_simple_1_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleSimpleStmtParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_simple_1_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostStmtRule());
              					}
              					set(
              						current,
              						"simple",
              						lv_simple_1_0,
              						"org.xtext.example.mydsl.Go.SimpleStmt");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostStmt"


    // $ANTLR start "entryRuleLabel"
    // InternalGo.g:5964:1: entryRuleLabel returns [String current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final String entryRuleLabel() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLabel = null;


        try {
            // InternalGo.g:5964:45: (iv_ruleLabel= ruleLabel EOF )
            // InternalGo.g:5965:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalGo.g:5971:1: ruleLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleLabel() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5977:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:5978:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getLabelAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleExpressionList"
    // InternalGo.g:5991:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // InternalGo.g:5991:55: (iv_ruleExpressionList= ruleExpressionList EOF )
            // InternalGo.g:5992:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionList=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionList"


    // $ANTLR start "ruleExpressionList"
    // InternalGo.g:5998:1: ruleExpressionList returns [EObject current=null] : ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_exp_1_0 = null;

        EObject lv_expression2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6004:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* ) )
            // InternalGo.g:6005:2: ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* )
            {
            // InternalGo.g:6005:2: ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* )
            // InternalGo.g:6006:3: () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )*
            {
            // InternalGo.g:6006:3: ()
            // InternalGo.g:6007:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionListAccess().getExpressionListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6016:3: ( (lv_exp_1_0= ruleExpression ) )
            // InternalGo.g:6017:4: (lv_exp_1_0= ruleExpression )
            {
            // InternalGo.g:6017:4: (lv_exp_1_0= ruleExpression )
            // InternalGo.g:6018:5: lv_exp_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionListAccess().getExpExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_exp_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionListRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6035:3: (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )*
            loop82:
            do {
                int alt82=2;
                alt82 = dfa82.predict(input);
                switch (alt82) {
            	case 1 :
            	    // InternalGo.g:6036:4: otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) )
            	    {
            	    otherlv_2=(Token)match(input,55,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getExpressionListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:6040:4: ( (lv_expression2_3_0= ruleExpression ) )
            	    // InternalGo.g:6041:5: (lv_expression2_3_0= ruleExpression )
            	    {
            	    // InternalGo.g:6041:5: (lv_expression2_3_0= ruleExpression )
            	    // InternalGo.g:6042:6: lv_expression2_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_expression2_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expression2",
            	      							lv_expression2_3_0,
            	      							"org.xtext.example.mydsl.Go.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionList"


    // $ANTLR start "entryRuleExpression"
    // InternalGo.g:6064:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalGo.g:6064:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalGo.g:6065:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalGo.g:6071:1: ruleExpression returns [EObject current=null] : ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_up_1_0 = null;

        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6077:2: ( ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) ) )
            // InternalGo.g:6078:2: ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) )
            {
            // InternalGo.g:6078:2: ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) )
            // InternalGo.g:6079:3: () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) )
            {
            // InternalGo.g:6079:3: ()
            // InternalGo.g:6080:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionAccess().getExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6089:3: ( (lv_up_1_0= ruleUnaryExpr ) )
            // InternalGo.g:6090:4: (lv_up_1_0= ruleUnaryExpr )
            {
            // InternalGo.g:6090:4: (lv_up_1_0= ruleUnaryExpr )
            // InternalGo.g:6091:5: lv_up_1_0= ruleUnaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getUpUnaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_63);
            lv_up_1_0=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"up",
              						lv_up_1_0,
              						"org.xtext.example.mydsl.Go.UnaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6108:3: ( (lv_exp_2_0= ruleExpression2 ) )
            // InternalGo.g:6109:4: (lv_exp_2_0= ruleExpression2 )
            {
            // InternalGo.g:6109:4: (lv_exp_2_0= ruleExpression2 )
            // InternalGo.g:6110:5: lv_exp_2_0= ruleExpression2
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpExpression2ParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_2_0=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.xtext.example.mydsl.Go.Expression2");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleExpression2"
    // InternalGo.g:6131:1: entryRuleExpression2 returns [EObject current=null] : iv_ruleExpression2= ruleExpression2 EOF ;
    public final EObject entryRuleExpression2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression2 = null;


        try {
            // InternalGo.g:6131:52: (iv_ruleExpression2= ruleExpression2 EOF )
            // InternalGo.g:6132:2: iv_ruleExpression2= ruleExpression2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression2=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression2"


    // $ANTLR start "ruleExpression2"
    // InternalGo.g:6138:1: ruleExpression2 returns [EObject current=null] : ( () ( ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) ;
    public final EObject ruleExpression2() throws RecognitionException {
        EObject current = null;

        Token lv_bop_1_1=null;
        Token lv_bop_1_2=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6144:2: ( ( () ( ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) )
            // InternalGo.g:6145:2: ( () ( ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            {
            // InternalGo.g:6145:2: ( () ( ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            // InternalGo.g:6146:3: () ( ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            {
            // InternalGo.g:6146:3: ()
            // InternalGo.g:6147:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpression2Access().getExpression2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6156:3: ( ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_BINARY_OP) ) {
                int LA84_1 = input.LA(2);

                if ( (synpred115_InternalGo()) ) {
                    alt84=1;
                }
            }
            else if ( (LA84_0==56) ) {
                int LA84_2 = input.LA(2);

                if ( (synpred115_InternalGo()) ) {
                    alt84=1;
                }
            }
            switch (alt84) {
                case 1 :
                    // InternalGo.g:6157:4: ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
                    {
                    // InternalGo.g:6157:4: ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) )
                    // InternalGo.g:6158:5: ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) )
                    {
                    // InternalGo.g:6158:5: ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) )
                    // InternalGo.g:6159:6: (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' )
                    {
                    // InternalGo.g:6159:6: (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' )
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==RULE_BINARY_OP) ) {
                        alt83=1;
                    }
                    else if ( (LA83_0==56) ) {
                        alt83=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalGo.g:6160:7: lv_bop_1_1= RULE_BINARY_OP
                            {
                            lv_bop_1_1=(Token)match(input,RULE_BINARY_OP,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_bop_1_1, grammarAccess.getExpression2Access().getBopBINARY_OPTerminalRuleCall_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExpression2Rule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"bop",
                              								lv_bop_1_1,
                              								"org.xtext.example.mydsl.Go.BINARY_OP");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalGo.g:6175:7: lv_bop_1_2= '*'
                            {
                            lv_bop_1_2=(Token)match(input,56,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_bop_1_2, grammarAccess.getExpression2Access().getBopAsteriskKeyword_1_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExpression2Rule());
                              							}
                              							setWithLastConsumed(current, "bop", lv_bop_1_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalGo.g:6188:4: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalGo.g:6189:5: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalGo.g:6189:5: (lv_expression_2_0= ruleExpression )
                    // InternalGo.g:6190:6: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_63);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6207:4: ( (lv_expression2_3_0= ruleExpression2 ) )
                    // InternalGo.g:6208:5: (lv_expression2_3_0= ruleExpression2 )
                    {
                    // InternalGo.g:6208:5: (lv_expression2_3_0= ruleExpression2 )
                    // InternalGo.g:6209:6: lv_expression2_3_0= ruleExpression2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression2_3_0=ruleExpression2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression2",
                      							lv_expression2_3_0,
                      							"org.xtext.example.mydsl.Go.Expression2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression2"


    // $ANTLR start "entryRuleUnaryExpr"
    // InternalGo.g:6231:1: entryRuleUnaryExpr returns [EObject current=null] : iv_ruleUnaryExpr= ruleUnaryExpr EOF ;
    public final EObject entryRuleUnaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpr = null;


        try {
            // InternalGo.g:6231:50: (iv_ruleUnaryExpr= ruleUnaryExpr EOF )
            // InternalGo.g:6232:2: iv_ruleUnaryExpr= ruleUnaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpr=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpr"


    // $ANTLR start "ruleUnaryExpr"
    // InternalGo.g:6238:1: ruleUnaryExpr returns [EObject current=null] : ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) ) ;
    public final EObject ruleUnaryExpr() throws RecognitionException {
        EObject current = null;

        Token lv_up_2_1=null;
        Token lv_up_2_2=null;
        EObject lv_pr_1_0 = null;

        EObject lv_ue_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6244:2: ( ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) ) )
            // InternalGo.g:6245:2: ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) )
            {
            // InternalGo.g:6245:2: ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) )
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalGo.g:6246:3: ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) )
                    {
                    // InternalGo.g:6246:3: ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) )
                    // InternalGo.g:6247:4: () ( (lv_pr_1_0= rulePrimaryExpr ) )
                    {
                    // InternalGo.g:6247:4: ()
                    // InternalGo.g:6248:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExprAccess().getUnaryExprAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6257:4: ( (lv_pr_1_0= rulePrimaryExpr ) )
                    // InternalGo.g:6258:5: (lv_pr_1_0= rulePrimaryExpr )
                    {
                    // InternalGo.g:6258:5: (lv_pr_1_0= rulePrimaryExpr )
                    // InternalGo.g:6259:6: lv_pr_1_0= rulePrimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getPrPrimaryExprParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_1_0=rulePrimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_1_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6278:3: ( ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) )
                    {
                    // InternalGo.g:6278:3: ( ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) )
                    // InternalGo.g:6279:4: ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) )
                    {
                    // InternalGo.g:6279:4: ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) )
                    // InternalGo.g:6280:5: ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) )
                    {
                    // InternalGo.g:6280:5: ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) )
                    // InternalGo.g:6281:6: (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' )
                    {
                    // InternalGo.g:6281:6: (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' )
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( (LA85_0==RULE_UNARY_OP) ) {
                        alt85=1;
                    }
                    else if ( (LA85_0==56) ) {
                        alt85=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 85, 0, input);

                        throw nvae;
                    }
                    switch (alt85) {
                        case 1 :
                            // InternalGo.g:6282:7: lv_up_2_1= RULE_UNARY_OP
                            {
                            lv_up_2_1=(Token)match(input,RULE_UNARY_OP,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_up_2_1, grammarAccess.getUnaryExprAccess().getUpUNARY_OPTerminalRuleCall_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExprRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"up",
                              								lv_up_2_1,
                              								"org.xtext.example.mydsl.Go.UNARY_OP");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalGo.g:6297:7: lv_up_2_2= '*'
                            {
                            lv_up_2_2=(Token)match(input,56,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_up_2_2, grammarAccess.getUnaryExprAccess().getUpAsteriskKeyword_1_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExprRule());
                              							}
                              							setWithLastConsumed(current, "up", lv_up_2_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalGo.g:6310:4: ( (lv_ue_3_0= ruleUnaryExpr ) )
                    // InternalGo.g:6311:5: (lv_ue_3_0= ruleUnaryExpr )
                    {
                    // InternalGo.g:6311:5: (lv_ue_3_0= ruleUnaryExpr )
                    // InternalGo.g:6312:6: lv_ue_3_0= ruleUnaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUeUnaryExprParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ue_3_0=ruleUnaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"ue",
                      							lv_ue_3_0,
                      							"org.xtext.example.mydsl.Go.UnaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpr"


    // $ANTLR start "entryRulePrimaryExpr"
    // InternalGo.g:6334:1: entryRulePrimaryExpr returns [EObject current=null] : iv_rulePrimaryExpr= rulePrimaryExpr EOF ;
    public final EObject entryRulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr = null;


        try {
            // InternalGo.g:6334:52: (iv_rulePrimaryExpr= rulePrimaryExpr EOF )
            // InternalGo.g:6335:2: iv_rulePrimaryExpr= rulePrimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr"


    // $ANTLR start "rulePrimaryExpr"
    // InternalGo.g:6341:1: rulePrimaryExpr returns [EObject current=null] : ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) ) ;
    public final EObject rulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_op_1_0 = null;

        EObject lv_pr_2_0 = null;

        EObject lv_con_3_0 = null;

        EObject lv_pr_4_0 = null;

        EObject lv_me_5_0 = null;

        EObject lv_pr_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6347:2: ( ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) ) )
            // InternalGo.g:6348:2: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
            {
            // InternalGo.g:6348:2: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
            int alt87=3;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // InternalGo.g:6349:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6349:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6350:4: () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6350:4: ()
                    // InternalGo.g:6351:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExprAccess().getPrimaryExprAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6360:4: ( (lv_op_1_0= ruleOperand ) )
                    // InternalGo.g:6361:5: (lv_op_1_0= ruleOperand )
                    {
                    // InternalGo.g:6361:5: (lv_op_1_0= ruleOperand )
                    // InternalGo.g:6362:6: lv_op_1_0= ruleOperand
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOpOperandParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_op_1_0=ruleOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_1_0,
                      							"org.xtext.example.mydsl.Go.Operand");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6379:4: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6380:5: (lv_pr_2_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6380:5: (lv_pr_2_0= rulePrimaryExpr2 )
                    // InternalGo.g:6381:6: lv_pr_2_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_2_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_2_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6400:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6400:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6401:4: ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6401:4: ( (lv_con_3_0= ruleConversion ) )
                    // InternalGo.g:6402:5: (lv_con_3_0= ruleConversion )
                    {
                    // InternalGo.g:6402:5: (lv_con_3_0= ruleConversion )
                    // InternalGo.g:6403:6: lv_con_3_0= ruleConversion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConConversionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_con_3_0=ruleConversion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"con",
                      							lv_con_3_0,
                      							"org.xtext.example.mydsl.Go.Conversion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6420:4: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6421:5: (lv_pr_4_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6421:5: (lv_pr_4_0= rulePrimaryExpr2 )
                    // InternalGo.g:6422:6: lv_pr_4_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_4_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_4_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6441:3: ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6441:3: ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6442:4: ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6442:4: ( (lv_me_5_0= ruleMethodExpr ) )
                    // InternalGo.g:6443:5: (lv_me_5_0= ruleMethodExpr )
                    {
                    // InternalGo.g:6443:5: (lv_me_5_0= ruleMethodExpr )
                    // InternalGo.g:6444:6: lv_me_5_0= ruleMethodExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getMeMethodExprParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_me_5_0=ruleMethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"me",
                      							lv_me_5_0,
                      							"org.xtext.example.mydsl.Go.MethodExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6461:4: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6462:5: (lv_pr_6_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6462:5: (lv_pr_6_0= rulePrimaryExpr2 )
                    // InternalGo.g:6463:6: lv_pr_6_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_6_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_6_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr"


    // $ANTLR start "entryRulePrimaryExpr2"
    // InternalGo.g:6485:1: entryRulePrimaryExpr2 returns [EObject current=null] : iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF ;
    public final EObject entryRulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr2 = null;


        try {
            // InternalGo.g:6485:53: (iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF )
            // InternalGo.g:6486:2: iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpr2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr2=rulePrimaryExpr2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr2"


    // $ANTLR start "rulePrimaryExpr2"
    // InternalGo.g:6492:1: rulePrimaryExpr2 returns [EObject current=null] : ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) ;
    public final EObject rulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_selector_1_0 = null;

        EObject lv_pr_2_0 = null;

        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;

        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;

        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6498:2: ( ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) )
            // InternalGo.g:6499:2: ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            {
            // InternalGo.g:6499:2: ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            // InternalGo.g:6500:3: () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            {
            // InternalGo.g:6500:3: ()
            // InternalGo.g:6501:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExpr2Access().getPrimaryExpr2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6510:3: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            int alt88=6;
            alt88 = dfa88.predict(input);
            switch (alt88) {
                case 1 :
                    // InternalGo.g:6511:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6511:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6512:5: ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6512:5: ( (lv_selector_1_0= ruleSelector ) )
                    // InternalGo.g:6513:6: (lv_selector_1_0= ruleSelector )
                    {
                    // InternalGo.g:6513:6: (lv_selector_1_0= ruleSelector )
                    // InternalGo.g:6514:7: lv_selector_1_0= ruleSelector
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorSelectorParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_64);
                    lv_selector_1_0=ruleSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"selector",
                      								lv_selector_1_0,
                      								"org.xtext.example.mydsl.Go.Selector");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6531:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6532:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6532:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    // InternalGo.g:6533:7: lv_pr_2_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_2_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_2_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6552:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6552:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6553:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6553:5: ( (lv_index_3_0= ruleIndex ) )
                    // InternalGo.g:6554:6: (lv_index_3_0= ruleIndex )
                    {
                    // InternalGo.g:6554:6: (lv_index_3_0= ruleIndex )
                    // InternalGo.g:6555:7: lv_index_3_0= ruleIndex
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_64);
                    lv_index_3_0=ruleIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"index",
                      								lv_index_3_0,
                      								"org.xtext.example.mydsl.Go.Index");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6572:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6573:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6573:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    // InternalGo.g:6574:7: lv_pr_4_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_4_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_4_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6593:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6593:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6594:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6594:5: ( (lv_slice_5_0= ruleSlice ) )
                    // InternalGo.g:6595:6: (lv_slice_5_0= ruleSlice )
                    {
                    // InternalGo.g:6595:6: (lv_slice_5_0= ruleSlice )
                    // InternalGo.g:6596:7: lv_slice_5_0= ruleSlice
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
                      						
                    }
                    pushFollow(FOLLOW_64);
                    lv_slice_5_0=ruleSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"slice",
                      								lv_slice_5_0,
                      								"org.xtext.example.mydsl.Go.Slice");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6613:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6614:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6614:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    // InternalGo.g:6615:7: lv_pr_6_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_6_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_6_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6634:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6634:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6635:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6635:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
                    // InternalGo.g:6636:6: (lv_typeass_7_0= ruleTypeAssertion )
                    {
                    // InternalGo.g:6636:6: (lv_typeass_7_0= ruleTypeAssertion )
                    // InternalGo.g:6637:7: lv_typeass_7_0= ruleTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
                      						
                    }
                    pushFollow(FOLLOW_64);
                    lv_typeass_7_0=ruleTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"typeass",
                      								lv_typeass_7_0,
                      								"org.xtext.example.mydsl.Go.TypeAssertion");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6654:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6655:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6655:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    // InternalGo.g:6656:7: lv_pr_8_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_8_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_8_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6675:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6675:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6676:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6676:5: ( (lv_arguments_9_0= ruleArguments ) )
                    // InternalGo.g:6677:6: (lv_arguments_9_0= ruleArguments )
                    {
                    // InternalGo.g:6677:6: (lv_arguments_9_0= ruleArguments )
                    // InternalGo.g:6678:7: lv_arguments_9_0= ruleArguments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
                      						
                    }
                    pushFollow(FOLLOW_64);
                    lv_arguments_9_0=ruleArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"arguments",
                      								lv_arguments_9_0,
                      								"org.xtext.example.mydsl.Go.Arguments");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6695:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6696:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6696:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    // InternalGo.g:6697:7: lv_pr_10_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_10_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_10_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr2"


    // $ANTLR start "entryRuleOperand"
    // InternalGo.g:6720:1: entryRuleOperand returns [EObject current=null] : iv_ruleOperand= ruleOperand EOF ;
    public final EObject entryRuleOperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperand = null;


        try {
            // InternalGo.g:6720:48: (iv_ruleOperand= ruleOperand EOF )
            // InternalGo.g:6721:2: iv_ruleOperand= ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperand=ruleOperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalGo.g:6727:1: ruleOperand returns [EObject current=null] : ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? ) | (otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')' ) ) ;
    public final EObject ruleOperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_literal_1_0 = null;

        EObject lv_operandn_2_0 = null;

        EObject lv_exp_4_0 = null;

        EObject lv_expression_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6733:2: ( ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? ) | (otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')' ) ) )
            // InternalGo.g:6734:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? ) | (otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')' ) )
            {
            // InternalGo.g:6734:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? ) | (otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')' ) )
            int alt90=3;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalGo.g:6735:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    {
                    // InternalGo.g:6735:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    // InternalGo.g:6736:4: () ( (lv_literal_1_0= ruleLiteral ) )
                    {
                    // InternalGo.g:6736:4: ()
                    // InternalGo.g:6737:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandAccess().getOperandAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6746:4: ( (lv_literal_1_0= ruleLiteral ) )
                    // InternalGo.g:6747:5: (lv_literal_1_0= ruleLiteral )
                    {
                    // InternalGo.g:6747:5: (lv_literal_1_0= ruleLiteral )
                    // InternalGo.g:6748:6: lv_literal_1_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_1_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"literal",
                      							lv_literal_1_0,
                      							"org.xtext.example.mydsl.Go.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6767:3: ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? )
                    {
                    // InternalGo.g:6767:3: ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? )
                    // InternalGo.g:6768:4: ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )?
                    {
                    // InternalGo.g:6768:4: ( (lv_operandn_2_0= ruleOperandName ) )
                    // InternalGo.g:6769:5: (lv_operandn_2_0= ruleOperandName )
                    {
                    // InternalGo.g:6769:5: (lv_operandn_2_0= ruleOperandName )
                    // InternalGo.g:6770:6: lv_operandn_2_0= ruleOperandName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_operandn_2_0=ruleOperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"operandn",
                      							lv_operandn_2_0,
                      							"org.xtext.example.mydsl.Go.OperandName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6787:4: (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )?
                    int alt89=2;
                    alt89 = dfa89.predict(input);
                    switch (alt89) {
                        case 1 :
                            // InternalGo.g:6788:5: otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')'
                            {
                            otherlv_3=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_1_1_0());
                              				
                            }
                            // InternalGo.g:6792:5: ( (lv_exp_4_0= ruleExpressionList ) )
                            // InternalGo.g:6793:6: (lv_exp_4_0= ruleExpressionList )
                            {
                            // InternalGo.g:6793:6: (lv_exp_4_0= ruleExpressionList )
                            // InternalGo.g:6794:7: lv_exp_4_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getOperandAccess().getExpExpressionListParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_13);
                            lv_exp_4_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getOperandRule());
                              							}
                              							set(
                              								current,
                              								"exp",
                              								lv_exp_4_0,
                              								"org.xtext.example.mydsl.Go.ExpressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_1_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6818:3: (otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')' )
                    {
                    // InternalGo.g:6818:3: (otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')' )
                    // InternalGo.g:6819:4: otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')'
                    {
                    otherlv_6=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:6823:4: ( (lv_expression_7_0= ruleExpression ) )
                    // InternalGo.g:6824:5: (lv_expression_7_0= ruleExpression )
                    {
                    // InternalGo.g:6824:5: (lv_expression_7_0= ruleExpression )
                    // InternalGo.g:6825:6: lv_expression_7_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_expression_7_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_7_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleConversion"
    // InternalGo.g:6851:1: entryRuleConversion returns [EObject current=null] : iv_ruleConversion= ruleConversion EOF ;
    public final EObject entryRuleConversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConversion = null;


        try {
            // InternalGo.g:6851:51: (iv_ruleConversion= ruleConversion EOF )
            // InternalGo.g:6852:2: iv_ruleConversion= ruleConversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConversion=ruleConversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConversion"


    // $ANTLR start "ruleConversion"
    // InternalGo.g:6858:1: ruleConversion returns [EObject current=null] : ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' ) ;
    public final EObject ruleConversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_type_1_0 = null;

        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6864:2: ( ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' ) )
            // InternalGo.g:6865:2: ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' )
            {
            // InternalGo.g:6865:2: ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' )
            // InternalGo.g:6866:3: () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')'
            {
            // InternalGo.g:6866:3: ()
            // InternalGo.g:6867:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConversionAccess().getConversionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6876:3: ( (lv_type_1_0= ruleType ) )
            // InternalGo.g:6877:4: (lv_type_1_0= ruleType )
            {
            // InternalGo.g:6877:4: (lv_type_1_0= ruleType )
            // InternalGo.g:6878:5: lv_type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalGo.g:6899:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:6900:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:6900:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:6901:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_66);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6918:3: (otherlv_4= ',' )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==55) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalGo.g:6919:4: otherlv_4= ','
                    {
                    otherlv_4=(Token)match(input,55,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getCommaKeyword_4());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getConversionAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConversion"


    // $ANTLR start "entryRuleMethodExpr"
    // InternalGo.g:6932:1: entryRuleMethodExpr returns [EObject current=null] : iv_ruleMethodExpr= ruleMethodExpr EOF ;
    public final EObject entryRuleMethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodExpr = null;


        try {
            // InternalGo.g:6932:51: (iv_ruleMethodExpr= ruleMethodExpr EOF )
            // InternalGo.g:6933:2: iv_ruleMethodExpr= ruleMethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodExpr=ruleMethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodExpr"


    // $ANTLR start "ruleMethodExpr"
    // InternalGo.g:6939:1: ruleMethodExpr returns [EObject current=null] : (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) ) ;
    public final EObject ruleMethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ReceiverType_0 = null;

        AntlrDatatypeRuleToken lv_methodn_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6945:2: ( (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) ) )
            // InternalGo.g:6946:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) )
            {
            // InternalGo.g:6946:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) )
            // InternalGo.g:6947:3: this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_14);
            this_ReceiverType_0=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ReceiverType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,48,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:6962:3: ( (lv_methodn_2_0= ruleMethodName ) )
            // InternalGo.g:6963:4: (lv_methodn_2_0= ruleMethodName )
            {
            // InternalGo.g:6963:4: (lv_methodn_2_0= ruleMethodName )
            // InternalGo.g:6964:5: lv_methodn_2_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getMethodnMethodNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_methodn_2_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"methodn",
              						lv_methodn_2_0,
              						"org.xtext.example.mydsl.Go.MethodName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodExpr"


    // $ANTLR start "entryRuleSelector"
    // InternalGo.g:6985:1: entryRuleSelector returns [String current=null] : iv_ruleSelector= ruleSelector EOF ;
    public final String entryRuleSelector() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSelector = null;


        try {
            // InternalGo.g:6985:48: (iv_ruleSelector= ruleSelector EOF )
            // InternalGo.g:6986:2: iv_ruleSelector= ruleSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelector=ruleSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelector.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelector"


    // $ANTLR start "ruleSelector"
    // InternalGo.g:6992:1: ruleSelector returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleSelector() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_1 = null;



        	enterRule();

        try {
            // InternalGo.g:6998:2: ( (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) )
            // InternalGo.g:6999:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            {
            // InternalGo.g:6999:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            // InternalGo.g:7000:3: kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER
            {
            kw=(Token)match(input,48,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSelectorAccess().getIDENTIFIERParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_1=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelector"


    // $ANTLR start "entryRuleIndex"
    // InternalGo.g:7019:1: entryRuleIndex returns [EObject current=null] : iv_ruleIndex= ruleIndex EOF ;
    public final EObject entryRuleIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndex = null;


        try {
            // InternalGo.g:7019:46: (iv_ruleIndex= ruleIndex EOF )
            // InternalGo.g:7020:2: iv_ruleIndex= ruleIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndex=ruleIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndex"


    // $ANTLR start "ruleIndex"
    // InternalGo.g:7026:1: ruleIndex returns [EObject current=null] : (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7032:2: ( (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) )
            // InternalGo.g:7033:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            {
            // InternalGo.g:7033:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            // InternalGo.g:7034:3: otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,49,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:7038:3: ( (lv_expression_1_0= ruleExpression ) )
            // InternalGo.g:7039:4: (lv_expression_1_0= ruleExpression )
            {
            // InternalGo.g:7039:4: (lv_expression_1_0= ruleExpression )
            // InternalGo.g:7040:5: lv_expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIndexRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndex"


    // $ANTLR start "entryRuleSlice"
    // InternalGo.g:7065:1: entryRuleSlice returns [EObject current=null] : iv_ruleSlice= ruleSlice EOF ;
    public final EObject entryRuleSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSlice = null;


        try {
            // InternalGo.g:7065:46: (iv_ruleSlice= ruleSlice EOF )
            // InternalGo.g:7066:2: iv_ruleSlice= ruleSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSlice=ruleSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSlice"


    // $ANTLR start "ruleSlice"
    // InternalGo.g:7072:1: ruleSlice returns [EObject current=null] : ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) ;
    public final EObject ruleSlice() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;

        EObject lv_expression3_7_0 = null;

        EObject lv_expression4_9_0 = null;

        EObject lv_expression5_11_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7078:2: ( ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) )
            // InternalGo.g:7079:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            {
            // InternalGo.g:7079:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==49) ) {
                int LA95_1 = input.LA(2);

                if ( (synpred131_InternalGo()) ) {
                    alt95=1;
                }
                else if ( (true) ) {
                    alt95=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 95, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // InternalGo.g:7080:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    {
                    // InternalGo.g:7080:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    // InternalGo.g:7081:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
                    {
                    // InternalGo.g:7081:4: ()
                    // InternalGo.g:7082:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSliceAccess().getSliceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,49,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0_1());
                      			
                    }
                    // InternalGo.g:7095:4: ( (lv_expression_2_0= ruleExpression ) )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( ((LA92_0>=RULE_ID && LA92_0<=RULE_FLOAT_LIT)||LA92_0==RULE_LITERAL_TYPE||(LA92_0>=RULE_UNARY_OP && LA92_0<=RULE_BOOLEAN_LIT)||LA92_0==41||LA92_0==43||(LA92_0>=45 && LA92_0<=46)||LA92_0==49||LA92_0==51||LA92_0==56||(LA92_0>=58 && LA92_0<=61)) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalGo.g:7096:5: (lv_expression_2_0= ruleExpression )
                            {
                            // InternalGo.g:7096:5: (lv_expression_2_0= ruleExpression )
                            // InternalGo.g:7097:6: lv_expression_2_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_36);
                            lv_expression_2_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_2_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,62,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSliceAccess().getColonKeyword_0_3());
                      			
                    }
                    // InternalGo.g:7118:4: ( (lv_expression2_4_0= ruleExpression ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( ((LA93_0>=RULE_ID && LA93_0<=RULE_FLOAT_LIT)||LA93_0==RULE_LITERAL_TYPE||(LA93_0>=RULE_UNARY_OP && LA93_0<=RULE_BOOLEAN_LIT)||LA93_0==41||LA93_0==43||(LA93_0>=45 && LA93_0<=46)||LA93_0==49||LA93_0==51||LA93_0==56||(LA93_0>=58 && LA93_0<=61)) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalGo.g:7119:5: (lv_expression2_4_0= ruleExpression )
                            {
                            // InternalGo.g:7119:5: (lv_expression2_4_0= ruleExpression )
                            // InternalGo.g:7120:6: lv_expression2_4_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_16);
                            lv_expression2_4_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression2",
                              							lv_expression2_4_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7143:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    {
                    // InternalGo.g:7143:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    // InternalGo.g:7144:4: otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']'
                    {
                    otherlv_6=(Token)match(input,49,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalGo.g:7148:4: ( (lv_expression3_7_0= ruleExpression ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( ((LA94_0>=RULE_ID && LA94_0<=RULE_FLOAT_LIT)||LA94_0==RULE_LITERAL_TYPE||(LA94_0>=RULE_UNARY_OP && LA94_0<=RULE_BOOLEAN_LIT)||LA94_0==41||LA94_0==43||(LA94_0>=45 && LA94_0<=46)||LA94_0==49||LA94_0==51||LA94_0==56||(LA94_0>=58 && LA94_0<=61)) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalGo.g:7149:5: (lv_expression3_7_0= ruleExpression )
                            {
                            // InternalGo.g:7149:5: (lv_expression3_7_0= ruleExpression )
                            // InternalGo.g:7150:6: lv_expression3_7_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression3ExpressionParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_36);
                            lv_expression3_7_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression3",
                              							lv_expression3_7_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,62,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSliceAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalGo.g:7171:4: ( (lv_expression4_9_0= ruleExpression ) )
                    // InternalGo.g:7172:5: (lv_expression4_9_0= ruleExpression )
                    {
                    // InternalGo.g:7172:5: (lv_expression4_9_0= ruleExpression )
                    // InternalGo.g:7173:6: lv_expression4_9_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression4ExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_expression4_9_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression4",
                      							lv_expression4_9_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,62,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSliceAccess().getColonKeyword_1_4());
                      			
                    }
                    // InternalGo.g:7194:4: ( (lv_expression5_11_0= ruleExpression ) )
                    // InternalGo.g:7195:5: (lv_expression5_11_0= ruleExpression )
                    {
                    // InternalGo.g:7195:5: (lv_expression5_11_0= ruleExpression )
                    // InternalGo.g:7196:6: lv_expression5_11_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression5ExpressionParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_expression5_11_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression5",
                      							lv_expression5_11_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSlice"


    // $ANTLR start "entryRuleTypeAssertion"
    // InternalGo.g:7222:1: entryRuleTypeAssertion returns [EObject current=null] : iv_ruleTypeAssertion= ruleTypeAssertion EOF ;
    public final EObject entryRuleTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeAssertion = null;


        try {
            // InternalGo.g:7222:54: (iv_ruleTypeAssertion= ruleTypeAssertion EOF )
            // InternalGo.g:7223:2: iv_ruleTypeAssertion= ruleTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeAssertion=ruleTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeAssertion"


    // $ANTLR start "ruleTypeAssertion"
    // InternalGo.g:7229:1: ruleTypeAssertion returns [EObject current=null] : (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) ;
    public final EObject ruleTypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_Type_2 = null;



        	enterRule();

        try {
            // InternalGo.g:7235:2: ( (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) )
            // InternalGo.g:7236:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            {
            // InternalGo.g:7236:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            // InternalGo.g:7237:3: otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,48,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,46,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_13);
            this_Type_2=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Type_2;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_3=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeAssertion"


    // $ANTLR start "entryRuleArguments"
    // InternalGo.g:7264:1: entryRuleArguments returns [EObject current=null] : iv_ruleArguments= ruleArguments EOF ;
    public final EObject entryRuleArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArguments = null;


        try {
            // InternalGo.g:7264:50: (iv_ruleArguments= ruleArguments EOF )
            // InternalGo.g:7265:2: iv_ruleArguments= ruleArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArguments=ruleArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArguments"


    // $ANTLR start "ruleArguments"
    // InternalGo.g:7271:1: ruleArguments returns [EObject current=null] : ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) ;
    public final EObject ruleArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_expressionlist_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7277:2: ( ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) )
            // InternalGo.g:7278:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            {
            // InternalGo.g:7278:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            // InternalGo.g:7279:3: () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')'
            {
            // InternalGo.g:7279:3: ()
            // InternalGo.g:7280:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,46,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:7293:3: ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( ((LA100_0>=RULE_ID && LA100_0<=RULE_FLOAT_LIT)||LA100_0==RULE_LITERAL_TYPE||(LA100_0>=RULE_UNARY_OP && LA100_0<=RULE_BOOLEAN_LIT)||LA100_0==41||LA100_0==43||(LA100_0>=45 && LA100_0<=46)||LA100_0==49||LA100_0==51||LA100_0==56||(LA100_0>=58 && LA100_0<=61)) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalGo.g:7294:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )?
                    {
                    // InternalGo.g:7294:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )
                    int alt97=2;
                    alt97 = dfa97.predict(input);
                    switch (alt97) {
                        case 1 :
                            // InternalGo.g:7295:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            {
                            // InternalGo.g:7295:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            // InternalGo.g:7296:6: (lv_expressionlist_2_0= ruleExpressionList )
                            {
                            // InternalGo.g:7296:6: (lv_expressionlist_2_0= ruleExpressionList )
                            // InternalGo.g:7297:7: lv_expressionlist_2_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_70);
                            lv_expressionlist_2_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"expressionlist",
                              								lv_expressionlist_2_0,
                              								"org.xtext.example.mydsl.Go.ExpressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:7315:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            {
                            // InternalGo.g:7315:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            // InternalGo.g:7316:6: ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            {
                            // InternalGo.g:7316:6: ( (lv_type_3_0= ruleType ) )
                            // InternalGo.g:7317:7: (lv_type_3_0= ruleType )
                            {
                            // InternalGo.g:7317:7: (lv_type_3_0= ruleType )
                            // InternalGo.g:7318:8: lv_type_3_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_70);
                            lv_type_3_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_3_0,
                              									"org.xtext.example.mydsl.Go.Type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:7335:6: (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            int alt96=2;
                            int LA96_0 = input.LA(1);

                            if ( (LA96_0==55) ) {
                                int LA96_1 = input.LA(2);

                                if ( ((LA96_1>=RULE_ID && LA96_1<=RULE_FLOAT_LIT)||LA96_1==RULE_LITERAL_TYPE||(LA96_1>=RULE_UNARY_OP && LA96_1<=RULE_BOOLEAN_LIT)||LA96_1==41||LA96_1==43||(LA96_1>=45 && LA96_1<=46)||LA96_1==49||LA96_1==51||LA96_1==56||(LA96_1>=58 && LA96_1<=61)) ) {
                                    alt96=1;
                                }
                            }
                            switch (alt96) {
                                case 1 :
                                    // InternalGo.g:7336:7: otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    {
                                    otherlv_4=(Token)match(input,55,FOLLOW_15); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
                                      						
                                    }
                                    // InternalGo.g:7340:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    // InternalGo.g:7341:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    {
                                    // InternalGo.g:7341:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    // InternalGo.g:7342:9: lv_expressionlist_5_0= ruleExpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_70);
                                    lv_expressionlist_5_0=ruleExpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"expressionlist",
                                      										lv_expressionlist_5_0,
                                      										"org.xtext.example.mydsl.Go.ExpressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:7362:4: (otherlv_6= '...' )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==57) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalGo.g:7363:5: otherlv_6= '...'
                            {
                            otherlv_6=(Token)match(input,57,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:7368:4: (otherlv_7= ',' )?
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==55) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            // InternalGo.g:7369:5: otherlv_7= ','
                            {
                            otherlv_7=(Token)match(input,55,FOLLOW_13); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArguments"


    // $ANTLR start "entryRuleLiteral"
    // InternalGo.g:7383:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalGo.g:7383:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalGo.g:7384:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalGo.g:7390:1: ruleLiteral returns [EObject current=null] : ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_basic_1_0 = null;

        EObject lv_cl_2_0 = null;

        EObject lv_fl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7396:2: ( ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) ) )
            // InternalGo.g:7397:2: ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) )
            {
            // InternalGo.g:7397:2: ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) )
            int alt101=3;
            switch ( input.LA(1) ) {
            case RULE_DECIMALS:
            case RULE_FLOAT_LIT:
            case RULE_INT_LIT:
            case RULE_STRING:
            case RULE_BOOLEAN_LIT:
            case 45:
                {
                alt101=1;
                }
                break;
            case RULE_ID:
            case 43:
            case 49:
            case 51:
            case 59:
                {
                alt101=2;
                }
                break;
            case 41:
                {
                alt101=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }

            switch (alt101) {
                case 1 :
                    // InternalGo.g:7398:3: ( () ( (lv_basic_1_0= ruleBasicLit ) ) )
                    {
                    // InternalGo.g:7398:3: ( () ( (lv_basic_1_0= ruleBasicLit ) ) )
                    // InternalGo.g:7399:4: () ( (lv_basic_1_0= ruleBasicLit ) )
                    {
                    // InternalGo.g:7399:4: ()
                    // InternalGo.g:7400:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getLiteralAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7409:4: ( (lv_basic_1_0= ruleBasicLit ) )
                    // InternalGo.g:7410:5: (lv_basic_1_0= ruleBasicLit )
                    {
                    // InternalGo.g:7410:5: (lv_basic_1_0= ruleBasicLit )
                    // InternalGo.g:7411:6: lv_basic_1_0= ruleBasicLit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getBasicBasicLitParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_basic_1_0=ruleBasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"basic",
                      							lv_basic_1_0,
                      							"org.xtext.example.mydsl.Go.BasicLit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7430:3: ( (lv_cl_2_0= ruleCompositeLit ) )
                    {
                    // InternalGo.g:7430:3: ( (lv_cl_2_0= ruleCompositeLit ) )
                    // InternalGo.g:7431:4: (lv_cl_2_0= ruleCompositeLit )
                    {
                    // InternalGo.g:7431:4: (lv_cl_2_0= ruleCompositeLit )
                    // InternalGo.g:7432:5: lv_cl_2_0= ruleCompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getClCompositeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_cl_2_0=ruleCompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"cl",
                      						lv_cl_2_0,
                      						"org.xtext.example.mydsl.Go.CompositeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7450:3: ( (lv_fl_3_0= ruleFunctionLit ) )
                    {
                    // InternalGo.g:7450:3: ( (lv_fl_3_0= ruleFunctionLit ) )
                    // InternalGo.g:7451:4: (lv_fl_3_0= ruleFunctionLit )
                    {
                    // InternalGo.g:7451:4: (lv_fl_3_0= ruleFunctionLit )
                    // InternalGo.g:7452:5: lv_fl_3_0= ruleFunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getFlFunctionLitParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_fl_3_0=ruleFunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"fl",
                      						lv_fl_3_0,
                      						"org.xtext.example.mydsl.Go.FunctionLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleFunctionLit"
    // InternalGo.g:7473:1: entryRuleFunctionLit returns [EObject current=null] : iv_ruleFunctionLit= ruleFunctionLit EOF ;
    public final EObject entryRuleFunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionLit = null;


        try {
            // InternalGo.g:7473:52: (iv_ruleFunctionLit= ruleFunctionLit EOF )
            // InternalGo.g:7474:2: iv_ruleFunctionLit= ruleFunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionLit=ruleFunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionLit"


    // $ANTLR start "ruleFunctionLit"
    // InternalGo.g:7480:1: ruleFunctionLit returns [EObject current=null] : (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) ;
    public final EObject ruleFunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_signature_1_0 = null;

        EObject lv_functionbody_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7486:2: ( (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) )
            // InternalGo.g:7487:2: (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            {
            // InternalGo.g:7487:2: (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            // InternalGo.g:7488:3: otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) )
            {
            otherlv_0=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:7492:3: ( (lv_signature_1_0= ruleSignature ) )
            // InternalGo.g:7493:4: (lv_signature_1_0= ruleSignature )
            {
            // InternalGo.g:7493:4: (lv_signature_1_0= ruleSignature )
            // InternalGo.g:7494:5: lv_signature_1_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_signature_1_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_1_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7511:3: ( (lv_functionbody_2_0= ruleFunctionBody ) )
            // InternalGo.g:7512:4: (lv_functionbody_2_0= ruleFunctionBody )
            {
            // InternalGo.g:7512:4: (lv_functionbody_2_0= ruleFunctionBody )
            // InternalGo.g:7513:5: lv_functionbody_2_0= ruleFunctionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionbodyFunctionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_functionbody_2_0=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"functionbody",
              						lv_functionbody_2_0,
              						"org.xtext.example.mydsl.Go.FunctionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionLit"


    // $ANTLR start "entryRuleCompositeLit"
    // InternalGo.g:7534:1: entryRuleCompositeLit returns [EObject current=null] : iv_ruleCompositeLit= ruleCompositeLit EOF ;
    public final EObject entryRuleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompositeLit = null;


        try {
            // InternalGo.g:7534:53: (iv_ruleCompositeLit= ruleCompositeLit EOF )
            // InternalGo.g:7535:2: iv_ruleCompositeLit= ruleCompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompositeLit=ruleCompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompositeLit"


    // $ANTLR start "ruleCompositeLit"
    // InternalGo.g:7541:1: ruleCompositeLit returns [EObject current=null] : ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) ;
    public final EObject ruleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_literalt_0_0 = null;

        EObject lv_literalv_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7547:2: ( ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) )
            // InternalGo.g:7548:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            {
            // InternalGo.g:7548:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            // InternalGo.g:7549:3: ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) )
            {
            // InternalGo.g:7549:3: ( (lv_literalt_0_0= ruleLiteralType ) )
            // InternalGo.g:7550:4: (lv_literalt_0_0= ruleLiteralType )
            {
            // InternalGo.g:7550:4: (lv_literalt_0_0= ruleLiteralType )
            // InternalGo.g:7551:5: lv_literalt_0_0= ruleLiteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteraltLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_literalt_0_0=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalt",
              						lv_literalt_0_0,
              						"org.xtext.example.mydsl.Go.LiteralType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7568:3: ( (lv_literalv_1_0= ruleLiteralValue ) )
            // InternalGo.g:7569:4: (lv_literalv_1_0= ruleLiteralValue )
            {
            // InternalGo.g:7569:4: (lv_literalv_1_0= ruleLiteralValue )
            // InternalGo.g:7570:5: lv_literalv_1_0= ruleLiteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralvLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_literalv_1_0=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalv",
              						lv_literalv_1_0,
              						"org.xtext.example.mydsl.Go.LiteralValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompositeLit"


    // $ANTLR start "entryRuleLiteralType"
    // InternalGo.g:7591:1: entryRuleLiteralType returns [EObject current=null] : iv_ruleLiteralType= ruleLiteralType EOF ;
    public final EObject entryRuleLiteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralType = null;


        try {
            // InternalGo.g:7591:52: (iv_ruleLiteralType= ruleLiteralType EOF )
            // InternalGo.g:7592:2: iv_ruleLiteralType= ruleLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralType=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralType"


    // $ANTLR start "ruleLiteralType"
    // InternalGo.g:7598:1: ruleLiteralType returns [EObject current=null] : ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) ;
    public final EObject ruleLiteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_structtype_1_0 = null;

        EObject lv_arraytype_2_0 = null;

        EObject lv_elementype_6_0 = null;

        EObject lv_slicetype_7_0 = null;

        EObject lv_maptype_8_0 = null;

        AntlrDatatypeRuleToken lv_typename_9_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7604:2: ( ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) )
            // InternalGo.g:7605:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            {
            // InternalGo.g:7605:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            int alt102=6;
            switch ( input.LA(1) ) {
            case 51:
                {
                alt102=1;
                }
                break;
            case 49:
                {
                switch ( input.LA(2) ) {
                case 57:
                    {
                    alt102=3;
                    }
                    break;
                case RULE_ID:
                case RULE_DECIMALS:
                case RULE_FLOAT_LIT:
                case RULE_LITERAL_TYPE:
                case RULE_UNARY_OP:
                case RULE_INT_LIT:
                case RULE_STRING:
                case RULE_BOOLEAN_LIT:
                case 41:
                case 43:
                case 45:
                case 46:
                case 49:
                case 51:
                case 56:
                case 58:
                case 59:
                case 60:
                case 61:
                    {
                    alt102=2;
                    }
                    break;
                case 50:
                    {
                    alt102=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 102, 2, input);

                    throw nvae;
                }

                }
                break;
            case 59:
                {
                alt102=5;
                }
                break;
            case RULE_ID:
            case 43:
                {
                alt102=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }

            switch (alt102) {
                case 1 :
                    // InternalGo.g:7606:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    {
                    // InternalGo.g:7606:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    // InternalGo.g:7607:4: () ( (lv_structtype_1_0= ruleStructType ) )
                    {
                    // InternalGo.g:7607:4: ()
                    // InternalGo.g:7608:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralTypeAccess().getLiteralTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7617:4: ( (lv_structtype_1_0= ruleStructType ) )
                    // InternalGo.g:7618:5: (lv_structtype_1_0= ruleStructType )
                    {
                    // InternalGo.g:7618:5: (lv_structtype_1_0= ruleStructType )
                    // InternalGo.g:7619:6: lv_structtype_1_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructtypeStructTypeParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_structtype_1_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"structtype",
                      							lv_structtype_1_0,
                      							"org.xtext.example.mydsl.Go.StructType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7638:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    {
                    // InternalGo.g:7638:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    // InternalGo.g:7639:4: (lv_arraytype_2_0= ruleArrayType )
                    {
                    // InternalGo.g:7639:4: (lv_arraytype_2_0= ruleArrayType )
                    // InternalGo.g:7640:5: lv_arraytype_2_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getArraytypeArrayTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arraytype_2_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"arraytype",
                      						lv_arraytype_2_0,
                      						"org.xtext.example.mydsl.Go.ArrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7658:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    {
                    // InternalGo.g:7658:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    // InternalGo.g:7659:4: otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) )
                    {
                    otherlv_3=(Token)match(input,49,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_4=(Token)match(input,57,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_5=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }
                    // InternalGo.g:7671:4: ( (lv_elementype_6_0= ruleElementType ) )
                    // InternalGo.g:7672:5: (lv_elementype_6_0= ruleElementType )
                    {
                    // InternalGo.g:7672:5: (lv_elementype_6_0= ruleElementType )
                    // InternalGo.g:7673:6: lv_elementype_6_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementypeElementTypeParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elementype_6_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"elementype",
                      							lv_elementype_6_0,
                      							"org.xtext.example.mydsl.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:7692:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    {
                    // InternalGo.g:7692:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    // InternalGo.g:7693:4: (lv_slicetype_7_0= ruleSliceType )
                    {
                    // InternalGo.g:7693:4: (lv_slicetype_7_0= ruleSliceType )
                    // InternalGo.g:7694:5: lv_slicetype_7_0= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getSlicetypeSliceTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_slicetype_7_0=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"slicetype",
                      						lv_slicetype_7_0,
                      						"org.xtext.example.mydsl.Go.SliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:7712:3: ( (lv_maptype_8_0= ruleMapType ) )
                    {
                    // InternalGo.g:7712:3: ( (lv_maptype_8_0= ruleMapType ) )
                    // InternalGo.g:7713:4: (lv_maptype_8_0= ruleMapType )
                    {
                    // InternalGo.g:7713:4: (lv_maptype_8_0= ruleMapType )
                    // InternalGo.g:7714:5: lv_maptype_8_0= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMaptypeMapTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_maptype_8_0=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"maptype",
                      						lv_maptype_8_0,
                      						"org.xtext.example.mydsl.Go.MapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:7732:3: ( (lv_typename_9_0= ruleTypeName ) )
                    {
                    // InternalGo.g:7732:3: ( (lv_typename_9_0= ruleTypeName ) )
                    // InternalGo.g:7733:4: (lv_typename_9_0= ruleTypeName )
                    {
                    // InternalGo.g:7733:4: (lv_typename_9_0= ruleTypeName )
                    // InternalGo.g:7734:5: lv_typename_9_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypenameTypeNameParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typename_9_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"typename",
                      						lv_typename_9_0,
                      						"org.xtext.example.mydsl.Go.TypeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralType"


    // $ANTLR start "entryRuleLiteralValue"
    // InternalGo.g:7755:1: entryRuleLiteralValue returns [EObject current=null] : iv_ruleLiteralValue= ruleLiteralValue EOF ;
    public final EObject entryRuleLiteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValue = null;


        try {
            // InternalGo.g:7755:53: (iv_ruleLiteralValue= ruleLiteralValue EOF )
            // InternalGo.g:7756:2: iv_ruleLiteralValue= ruleLiteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValue=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValue"


    // $ANTLR start "ruleLiteralValue"
    // InternalGo.g:7762:1: ruleLiteralValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) ;
    public final EObject ruleLiteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7768:2: ( ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) )
            // InternalGo.g:7769:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            {
            // InternalGo.g:7769:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            // InternalGo.g:7770:3: () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}'
            {
            // InternalGo.g:7770:3: ()
            // InternalGo.g:7771:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,52,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:7784:3: ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=RULE_ID && LA104_0<=RULE_FLOAT_LIT)||LA104_0==RULE_LITERAL_TYPE||(LA104_0>=RULE_UNARY_OP && LA104_0<=RULE_BOOLEAN_LIT)||LA104_0==41||LA104_0==43||(LA104_0>=45 && LA104_0<=46)||LA104_0==49||(LA104_0>=51 && LA104_0<=52)||LA104_0==56||(LA104_0>=58 && LA104_0<=61)) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalGo.g:7785:4: ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:7785:4: ( (lv_elementlist_2_0= ruleElementList ) )
                    // InternalGo.g:7786:5: (lv_elementlist_2_0= ruleElementList )
                    {
                    // InternalGo.g:7786:5: (lv_elementlist_2_0= ruleElementList )
                    // InternalGo.g:7787:6: lv_elementlist_2_0= ruleElementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementlistElementListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_73);
                    lv_elementlist_2_0=ruleElementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"elementlist",
                      							lv_elementlist_2_0,
                      							"org.xtext.example.mydsl.Go.ElementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7804:4: (otherlv_3= ',' )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==55) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // InternalGo.g:7805:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,55,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValue"


    // $ANTLR start "entryRuleElementList"
    // InternalGo.g:7819:1: entryRuleElementList returns [EObject current=null] : iv_ruleElementList= ruleElementList EOF ;
    public final EObject entryRuleElementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementList = null;


        try {
            // InternalGo.g:7819:52: (iv_ruleElementList= ruleElementList EOF )
            // InternalGo.g:7820:2: iv_ruleElementList= ruleElementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementList=ruleElementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementList"


    // $ANTLR start "ruleElementList"
    // InternalGo.g:7826:1: ruleElementList returns [EObject current=null] : (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) ;
    public final EObject ruleElementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_KeyedElement_0 = null;

        EObject lv_keyedelement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7832:2: ( (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) )
            // InternalGo.g:7833:2: (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            {
            // InternalGo.g:7833:2: (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            // InternalGo.g:7834:3: this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_74);
            this_KeyedElement_0=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_KeyedElement_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:7845:3: ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==55) ) {
                    int LA106_1 = input.LA(2);

                    if ( ((LA106_1>=RULE_ID && LA106_1<=RULE_FLOAT_LIT)||LA106_1==RULE_LITERAL_TYPE||(LA106_1>=RULE_UNARY_OP && LA106_1<=RULE_BOOLEAN_LIT)||LA106_1==41||LA106_1==43||(LA106_1>=45 && LA106_1<=46)||LA106_1==49||(LA106_1>=51 && LA106_1<=52)||LA106_1==56||(LA106_1>=58 && LA106_1<=61)) ) {
                        alt106=1;
                    }


                }
                else if ( ((LA106_0>=RULE_ID && LA106_0<=RULE_FLOAT_LIT)||LA106_0==RULE_LITERAL_TYPE||(LA106_0>=RULE_UNARY_OP && LA106_0<=RULE_BOOLEAN_LIT)||LA106_0==41||LA106_0==43||(LA106_0>=45 && LA106_0<=46)||LA106_0==49||(LA106_0>=51 && LA106_0<=52)||LA106_0==56||(LA106_0>=58 && LA106_0<=61)) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalGo.g:7846:4: (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    {
            	    // InternalGo.g:7846:4: (otherlv_1= ',' )?
            	    int alt105=2;
            	    int LA105_0 = input.LA(1);

            	    if ( (LA105_0==55) ) {
            	        alt105=1;
            	    }
            	    switch (alt105) {
            	        case 1 :
            	            // InternalGo.g:7847:5: otherlv_1= ','
            	            {
            	            otherlv_1=(Token)match(input,55,FOLLOW_58); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalGo.g:7852:4: ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    // InternalGo.g:7853:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    {
            	    // InternalGo.g:7853:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    // InternalGo.g:7854:6: lv_keyedelement_2_0= ruleKeyedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedelementKeyedElementParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_keyedelement_2_0=ruleKeyedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getElementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"keyedelement",
            	      							lv_keyedelement_2_0,
            	      							"org.xtext.example.mydsl.Go.KeyedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementList"


    // $ANTLR start "entryRuleKeyedElement"
    // InternalGo.g:7876:1: entryRuleKeyedElement returns [EObject current=null] : iv_ruleKeyedElement= ruleKeyedElement EOF ;
    public final EObject entryRuleKeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyedElement = null;


        try {
            // InternalGo.g:7876:53: (iv_ruleKeyedElement= ruleKeyedElement EOF )
            // InternalGo.g:7877:2: iv_ruleKeyedElement= ruleKeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyedElement=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyedElement"


    // $ANTLR start "ruleKeyedElement"
    // InternalGo.g:7883:1: ruleKeyedElement returns [EObject current=null] : ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) ;
    public final EObject ruleKeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_Key_0 = null;

        EObject lv_element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7889:2: ( ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) )
            // InternalGo.g:7890:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            {
            // InternalGo.g:7890:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            // InternalGo.g:7891:3: (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) )
            {
            // InternalGo.g:7891:3: (this_Key_0= ruleKey otherlv_1= ':' )?
            int alt107=2;
            alt107 = dfa107.predict(input);
            switch (alt107) {
                case 1 :
                    // InternalGo.g:7892:4: this_Key_0= ruleKey otherlv_1= ':'
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_Key_0=ruleKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Key_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_1=(Token)match(input,62,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:7908:3: ( (lv_element_2_0= ruleElement ) )
            // InternalGo.g:7909:4: (lv_element_2_0= ruleElement )
            {
            // InternalGo.g:7909:4: (lv_element_2_0= ruleElement )
            // InternalGo.g:7910:5: lv_element_2_0= ruleElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_element_2_0=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"element",
              						lv_element_2_0,
              						"org.xtext.example.mydsl.Go.Element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyedElement"


    // $ANTLR start "entryRuleKey"
    // InternalGo.g:7931:1: entryRuleKey returns [EObject current=null] : iv_ruleKey= ruleKey EOF ;
    public final EObject entryRuleKey() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKey = null;


        try {
            // InternalGo.g:7931:44: (iv_ruleKey= ruleKey EOF )
            // InternalGo.g:7932:2: iv_ruleKey= ruleKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKey=ruleKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKey"


    // $ANTLR start "ruleKey"
    // InternalGo.g:7938:1: ruleKey returns [EObject current=null] : ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) ;
    public final EObject ruleKey() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_fieldn_1_0 = null;

        EObject this_Expression_2 = null;

        EObject this_LiteralValue_3 = null;



        	enterRule();

        try {
            // InternalGo.g:7944:2: ( ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) )
            // InternalGo.g:7945:2: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            {
            // InternalGo.g:7945:2: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            int alt108=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA108_1 = input.LA(2);

                if ( (synpred150_InternalGo()) ) {
                    alt108=1;
                }
                else if ( (synpred151_InternalGo()) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 1, input);

                    throw nvae;
                }
                }
                break;
            case 43:
                {
                int LA108_2 = input.LA(2);

                if ( (LA108_2==RULE_ID) ) {
                    int LA108_6 = input.LA(3);

                    if ( (synpred150_InternalGo()) ) {
                        alt108=1;
                    }
                    else if ( (synpred151_InternalGo()) ) {
                        alt108=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 108, 6, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DECIMALS:
            case RULE_FLOAT_LIT:
            case RULE_LITERAL_TYPE:
            case RULE_UNARY_OP:
            case RULE_INT_LIT:
            case RULE_STRING:
            case RULE_BOOLEAN_LIT:
            case 41:
            case 45:
            case 46:
            case 49:
            case 51:
            case 56:
            case 58:
            case 59:
            case 60:
            case 61:
                {
                alt108=2;
                }
                break;
            case 52:
                {
                alt108=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }

            switch (alt108) {
                case 1 :
                    // InternalGo.g:7946:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
                    {
                    // InternalGo.g:7946:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
                    // InternalGo.g:7947:4: () ( (lv_fieldn_1_0= ruleFieldName ) )
                    {
                    // InternalGo.g:7947:4: ()
                    // InternalGo.g:7948:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeyAccess().getKeyAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7957:4: ( (lv_fieldn_1_0= ruleFieldName ) )
                    // InternalGo.g:7958:5: (lv_fieldn_1_0= ruleFieldName )
                    {
                    // InternalGo.g:7958:5: (lv_fieldn_1_0= ruleFieldName )
                    // InternalGo.g:7959:6: lv_fieldn_1_0= ruleFieldName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyAccess().getFieldnFieldNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_fieldn_1_0=ruleFieldName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyRule());
                      						}
                      						set(
                      							current,
                      							"fieldn",
                      							lv_fieldn_1_0,
                      							"org.xtext.example.mydsl.Go.FieldName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7978:3: this_Expression_2= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_2=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:7990:3: this_LiteralValue_3= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_3=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKey"


    // $ANTLR start "entryRuleFieldName"
    // InternalGo.g:8005:1: entryRuleFieldName returns [String current=null] : iv_ruleFieldName= ruleFieldName EOF ;
    public final String entryRuleFieldName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFieldName = null;


        try {
            // InternalGo.g:8005:49: (iv_ruleFieldName= ruleFieldName EOF )
            // InternalGo.g:8006:2: iv_ruleFieldName= ruleFieldName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldName=ruleFieldName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldName"


    // $ANTLR start "ruleFieldName"
    // InternalGo.g:8012:1: ruleFieldName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFieldName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8018:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:8019:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFieldNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldName"


    // $ANTLR start "entryRuleElement"
    // InternalGo.g:8032:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalGo.g:8032:48: (iv_ruleElement= ruleElement EOF )
            // InternalGo.g:8033:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalGo.g:8039:1: ruleElement returns [EObject current=null] : (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;

        EObject this_LiteralValue_1 = null;



        	enterRule();

        try {
            // InternalGo.g:8045:2: ( (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) )
            // InternalGo.g:8046:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            {
            // InternalGo.g:8046:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( ((LA109_0>=RULE_ID && LA109_0<=RULE_FLOAT_LIT)||LA109_0==RULE_LITERAL_TYPE||(LA109_0>=RULE_UNARY_OP && LA109_0<=RULE_BOOLEAN_LIT)||LA109_0==41||LA109_0==43||(LA109_0>=45 && LA109_0<=46)||LA109_0==49||LA109_0==51||LA109_0==56||(LA109_0>=58 && LA109_0<=61)) ) {
                alt109=1;
            }
            else if ( (LA109_0==52) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalGo.g:8047:3: this_Expression_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:8059:3: this_LiteralValue_1= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_1=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleBasicLit"
    // InternalGo.g:8074:1: entryRuleBasicLit returns [EObject current=null] : iv_ruleBasicLit= ruleBasicLit EOF ;
    public final EObject entryRuleBasicLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicLit = null;


        try {
            // InternalGo.g:8074:49: (iv_ruleBasicLit= ruleBasicLit EOF )
            // InternalGo.g:8075:2: iv_ruleBasicLit= ruleBasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicLit=ruleBasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicLit"


    // $ANTLR start "ruleBasicLit"
    // InternalGo.g:8081:1: ruleBasicLit returns [EObject current=null] : ( ( (lv_intd_0_0= RULE_INT_LIT ) ) | ( (lv_floatd_1_0= RULE_FLOAT_LIT ) ) | ( (lv_imagd_2_0= ruleIMAGINARY_LIT ) ) | ( (lv_runed_3_0= ruleRUNE_LIT ) ) | ( (lv_strd_4_0= RULE_STRING ) ) | ( (lv_bool_5_0= RULE_BOOLEAN_LIT ) ) ) ;
    public final EObject ruleBasicLit() throws RecognitionException {
        EObject current = null;

        Token lv_intd_0_0=null;
        Token lv_floatd_1_0=null;
        Token lv_strd_4_0=null;
        Token lv_bool_5_0=null;
        AntlrDatatypeRuleToken lv_imagd_2_0 = null;

        AntlrDatatypeRuleToken lv_runed_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8087:2: ( ( ( (lv_intd_0_0= RULE_INT_LIT ) ) | ( (lv_floatd_1_0= RULE_FLOAT_LIT ) ) | ( (lv_imagd_2_0= ruleIMAGINARY_LIT ) ) | ( (lv_runed_3_0= ruleRUNE_LIT ) ) | ( (lv_strd_4_0= RULE_STRING ) ) | ( (lv_bool_5_0= RULE_BOOLEAN_LIT ) ) ) )
            // InternalGo.g:8088:2: ( ( (lv_intd_0_0= RULE_INT_LIT ) ) | ( (lv_floatd_1_0= RULE_FLOAT_LIT ) ) | ( (lv_imagd_2_0= ruleIMAGINARY_LIT ) ) | ( (lv_runed_3_0= ruleRUNE_LIT ) ) | ( (lv_strd_4_0= RULE_STRING ) ) | ( (lv_bool_5_0= RULE_BOOLEAN_LIT ) ) )
            {
            // InternalGo.g:8088:2: ( ( (lv_intd_0_0= RULE_INT_LIT ) ) | ( (lv_floatd_1_0= RULE_FLOAT_LIT ) ) | ( (lv_imagd_2_0= ruleIMAGINARY_LIT ) ) | ( (lv_runed_3_0= ruleRUNE_LIT ) ) | ( (lv_strd_4_0= RULE_STRING ) ) | ( (lv_bool_5_0= RULE_BOOLEAN_LIT ) ) )
            int alt110=6;
            switch ( input.LA(1) ) {
            case RULE_INT_LIT:
                {
                alt110=1;
                }
                break;
            case RULE_FLOAT_LIT:
                {
                int LA110_2 = input.LA(2);

                if ( (LA110_2==44) ) {
                    alt110=3;
                }
                else if ( (LA110_2==EOF||(LA110_2>=RULE_ID && LA110_2<=RULE_FLOAT_LIT)||(LA110_2>=RULE_LITERAL_TYPE && LA110_2<=RULE_BOOLEAN_LIT)||LA110_2==41||LA110_2==43||(LA110_2>=45 && LA110_2<=67)||(LA110_2>=69 && LA110_2<=78)||(LA110_2>=80 && LA110_2<=82)) ) {
                    alt110=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 110, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DECIMALS:
                {
                alt110=3;
                }
                break;
            case 45:
                {
                alt110=4;
                }
                break;
            case RULE_STRING:
                {
                alt110=5;
                }
                break;
            case RULE_BOOLEAN_LIT:
                {
                alt110=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }

            switch (alt110) {
                case 1 :
                    // InternalGo.g:8089:3: ( (lv_intd_0_0= RULE_INT_LIT ) )
                    {
                    // InternalGo.g:8089:3: ( (lv_intd_0_0= RULE_INT_LIT ) )
                    // InternalGo.g:8090:4: (lv_intd_0_0= RULE_INT_LIT )
                    {
                    // InternalGo.g:8090:4: (lv_intd_0_0= RULE_INT_LIT )
                    // InternalGo.g:8091:5: lv_intd_0_0= RULE_INT_LIT
                    {
                    lv_intd_0_0=(Token)match(input,RULE_INT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_intd_0_0, grammarAccess.getBasicLitAccess().getIntdINT_LITTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBasicLitRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"intd",
                      						lv_intd_0_0,
                      						"org.xtext.example.mydsl.Go.INT_LIT");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8108:3: ( (lv_floatd_1_0= RULE_FLOAT_LIT ) )
                    {
                    // InternalGo.g:8108:3: ( (lv_floatd_1_0= RULE_FLOAT_LIT ) )
                    // InternalGo.g:8109:4: (lv_floatd_1_0= RULE_FLOAT_LIT )
                    {
                    // InternalGo.g:8109:4: (lv_floatd_1_0= RULE_FLOAT_LIT )
                    // InternalGo.g:8110:5: lv_floatd_1_0= RULE_FLOAT_LIT
                    {
                    lv_floatd_1_0=(Token)match(input,RULE_FLOAT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_floatd_1_0, grammarAccess.getBasicLitAccess().getFloatdFLOAT_LITTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBasicLitRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"floatd",
                      						lv_floatd_1_0,
                      						"org.xtext.example.mydsl.Go.FLOAT_LIT");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:8127:3: ( (lv_imagd_2_0= ruleIMAGINARY_LIT ) )
                    {
                    // InternalGo.g:8127:3: ( (lv_imagd_2_0= ruleIMAGINARY_LIT ) )
                    // InternalGo.g:8128:4: (lv_imagd_2_0= ruleIMAGINARY_LIT )
                    {
                    // InternalGo.g:8128:4: (lv_imagd_2_0= ruleIMAGINARY_LIT )
                    // InternalGo.g:8129:5: lv_imagd_2_0= ruleIMAGINARY_LIT
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getImagdIMAGINARY_LITParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_imagd_2_0=ruleIMAGINARY_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"imagd",
                      						lv_imagd_2_0,
                      						"org.xtext.example.mydsl.Go.IMAGINARY_LIT");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:8147:3: ( (lv_runed_3_0= ruleRUNE_LIT ) )
                    {
                    // InternalGo.g:8147:3: ( (lv_runed_3_0= ruleRUNE_LIT ) )
                    // InternalGo.g:8148:4: (lv_runed_3_0= ruleRUNE_LIT )
                    {
                    // InternalGo.g:8148:4: (lv_runed_3_0= ruleRUNE_LIT )
                    // InternalGo.g:8149:5: lv_runed_3_0= ruleRUNE_LIT
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getRunedRUNE_LITParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_runed_3_0=ruleRUNE_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"runed",
                      						lv_runed_3_0,
                      						"org.xtext.example.mydsl.Go.RUNE_LIT");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:8167:3: ( (lv_strd_4_0= RULE_STRING ) )
                    {
                    // InternalGo.g:8167:3: ( (lv_strd_4_0= RULE_STRING ) )
                    // InternalGo.g:8168:4: (lv_strd_4_0= RULE_STRING )
                    {
                    // InternalGo.g:8168:4: (lv_strd_4_0= RULE_STRING )
                    // InternalGo.g:8169:5: lv_strd_4_0= RULE_STRING
                    {
                    lv_strd_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_strd_4_0, grammarAccess.getBasicLitAccess().getStrdSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBasicLitRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"strd",
                      						lv_strd_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:8186:3: ( (lv_bool_5_0= RULE_BOOLEAN_LIT ) )
                    {
                    // InternalGo.g:8186:3: ( (lv_bool_5_0= RULE_BOOLEAN_LIT ) )
                    // InternalGo.g:8187:4: (lv_bool_5_0= RULE_BOOLEAN_LIT )
                    {
                    // InternalGo.g:8187:4: (lv_bool_5_0= RULE_BOOLEAN_LIT )
                    // InternalGo.g:8188:5: lv_bool_5_0= RULE_BOOLEAN_LIT
                    {
                    lv_bool_5_0=(Token)match(input,RULE_BOOLEAN_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_bool_5_0, grammarAccess.getBasicLitAccess().getBoolBOOLEAN_LITTerminalRuleCall_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBasicLitRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"bool",
                      						lv_bool_5_0,
                      						"org.xtext.example.mydsl.Go.BOOLEAN_LIT");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicLit"


    // $ANTLR start "entryRuleReceiverType"
    // InternalGo.g:8208:1: entryRuleReceiverType returns [EObject current=null] : iv_ruleReceiverType= ruleReceiverType EOF ;
    public final EObject entryRuleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiverType = null;


        try {
            // InternalGo.g:8208:53: (iv_ruleReceiverType= ruleReceiverType EOF )
            // InternalGo.g:8209:2: iv_ruleReceiverType= ruleReceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiverType=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiverType"


    // $ANTLR start "ruleReceiverType"
    // InternalGo.g:8215:1: ruleReceiverType returns [EObject current=null] : ( (lv_type_0_0= ruleType ) ) ;
    public final EObject ruleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8221:2: ( ( (lv_type_0_0= ruleType ) ) )
            // InternalGo.g:8222:2: ( (lv_type_0_0= ruleType ) )
            {
            // InternalGo.g:8222:2: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:8223:3: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:8223:3: (lv_type_0_0= ruleType )
            // InternalGo.g:8224:4: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
              				}
              				set(
              					current,
              					"type",
              					lv_type_0_0,
              					"org.xtext.example.mydsl.Go.Type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiverType"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalGo.g:8244:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBody = null;


        try {
            // InternalGo.g:8244:53: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalGo.g:8245:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalGo.g:8251:1: ruleFunctionBody returns [EObject current=null] : ( (lv_block_0_0= ruleBlock ) ) ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject lv_block_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8257:2: ( ( (lv_block_0_0= ruleBlock ) ) )
            // InternalGo.g:8258:2: ( (lv_block_0_0= ruleBlock ) )
            {
            // InternalGo.g:8258:2: ( (lv_block_0_0= ruleBlock ) )
            // InternalGo.g:8259:3: (lv_block_0_0= ruleBlock )
            {
            // InternalGo.g:8259:3: (lv_block_0_0= ruleBlock )
            // InternalGo.g:8260:4: lv_block_0_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_block_0_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              				}
              				set(
              					current,
              					"block",
              					lv_block_0_0,
              					"org.xtext.example.mydsl.Go.Block");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleOperandName"
    // InternalGo.g:8280:1: entryRuleOperandName returns [EObject current=null] : iv_ruleOperandName= ruleOperandName EOF ;
    public final EObject entryRuleOperandName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperandName = null;


        try {
            // InternalGo.g:8280:52: (iv_ruleOperandName= ruleOperandName EOF )
            // InternalGo.g:8281:2: iv_ruleOperandName= ruleOperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperandName=ruleOperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperandName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperandName"


    // $ANTLR start "ruleOperandName"
    // InternalGo.g:8287:1: ruleOperandName returns [EObject current=null] : ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) ) ;
    public final EObject ruleOperandName() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_1_0 = null;

        AntlrDatatypeRuleToken lv_qi_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8293:2: ( ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) ) )
            // InternalGo.g:8294:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) )
            {
            // InternalGo.g:8294:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) )
            int alt111=2;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // InternalGo.g:8295:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
                    {
                    // InternalGo.g:8295:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
                    // InternalGo.g:8296:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )
                    {
                    // InternalGo.g:8296:4: ()
                    // InternalGo.g:8297:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandNameAccess().getOperandNameAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:8306:4: ( (lv_id_1_0= ruleIDENTIFIER ) )
                    // InternalGo.g:8307:5: (lv_id_1_0= ruleIDENTIFIER )
                    {
                    // InternalGo.g:8307:5: (lv_id_1_0= ruleIDENTIFIER )
                    // InternalGo.g:8308:6: lv_id_1_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandNameAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_1_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      						}
                      						set(
                      							current,
                      							"id",
                      							lv_id_1_0,
                      							"org.xtext.example.mydsl.Go.IDENTIFIER");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8327:3: ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) )
                    {
                    // InternalGo.g:8327:3: ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) )
                    // InternalGo.g:8328:4: () ( (lv_qi_3_0= ruleQualifiedIdent ) )
                    {
                    // InternalGo.g:8328:4: ()
                    // InternalGo.g:8329:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandNameAccess().getOperandNameAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:8338:4: ( (lv_qi_3_0= ruleQualifiedIdent ) )
                    // InternalGo.g:8339:5: (lv_qi_3_0= ruleQualifiedIdent )
                    {
                    // InternalGo.g:8339:5: (lv_qi_3_0= ruleQualifiedIdent )
                    // InternalGo.g:8340:6: lv_qi_3_0= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandNameAccess().getQiQualifiedIdentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_qi_3_0=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      						}
                      						set(
                      							current,
                      							"qi",
                      							lv_qi_3_0,
                      							"org.xtext.example.mydsl.Go.QualifiedIdent");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperandName"


    // $ANTLR start "entryRuleImportDecl"
    // InternalGo.g:8362:1: entryRuleImportDecl returns [EObject current=null] : iv_ruleImportDecl= ruleImportDecl EOF ;
    public final EObject entryRuleImportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDecl = null;


        try {
            // InternalGo.g:8362:51: (iv_ruleImportDecl= ruleImportDecl EOF )
            // InternalGo.g:8363:2: iv_ruleImportDecl= ruleImportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDecl=ruleImportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportDecl"


    // $ANTLR start "ruleImportDecl"
    // InternalGo.g:8369:1: ruleImportDecl returns [EObject current=null] : ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) ) ;
    public final EObject ruleImportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_imports_2_0 = null;

        EObject lv_imports2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8375:2: ( ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:8376:2: ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:8376:2: ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) )
            // InternalGo.g:8377:3: () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) )
            {
            // InternalGo.g:8377:3: ()
            // InternalGo.g:8378:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,84,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
              		
            }
            // InternalGo.g:8391:3: ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==RULE_ID||LA113_0==RULE_STRING||LA113_0==43||LA113_0==48) ) {
                alt113=1;
            }
            else if ( (LA113_0==46) ) {
                alt113=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // InternalGo.g:8392:4: ( (lv_imports_2_0= ruleImportSpec ) )
                    {
                    // InternalGo.g:8392:4: ( (lv_imports_2_0= ruleImportSpec ) )
                    // InternalGo.g:8393:5: (lv_imports_2_0= ruleImportSpec )
                    {
                    // InternalGo.g:8393:5: (lv_imports_2_0= ruleImportSpec )
                    // InternalGo.g:8394:6: lv_imports_2_0= ruleImportSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportDeclAccess().getImportsImportSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_imports_2_0=ruleImportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportDeclRule());
                      						}
                      						add(
                      							current,
                      							"imports",
                      							lv_imports_2_0,
                      							"org.xtext.example.mydsl.Go.ImportSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8412:4: (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' )
                    {
                    // InternalGo.g:8412:4: (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' )
                    // InternalGo.g:8413:5: otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,46,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:8417:5: ( (lv_imports2_4_0= ruleImportSpec ) )*
                    loop112:
                    do {
                        int alt112=2;
                        int LA112_0 = input.LA(1);

                        if ( (LA112_0==RULE_ID||LA112_0==RULE_STRING||LA112_0==43||LA112_0==48) ) {
                            alt112=1;
                        }


                        switch (alt112) {
                    	case 1 :
                    	    // InternalGo.g:8418:6: (lv_imports2_4_0= ruleImportSpec )
                    	    {
                    	    // InternalGo.g:8418:6: (lv_imports2_4_0= ruleImportSpec )
                    	    // InternalGo.g:8419:7: lv_imports2_4_0= ruleImportSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImportDeclAccess().getImports2ImportSpecParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    lv_imports2_4_0=ruleImportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImportDeclRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"imports2",
                    	      								lv_imports2_4_0,
                    	      								"org.xtext.example.mydsl.Go.ImportSpec");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop112;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportDecl"


    // $ANTLR start "entryRuleImportSpec"
    // InternalGo.g:8446:1: entryRuleImportSpec returns [EObject current=null] : iv_ruleImportSpec= ruleImportSpec EOF ;
    public final EObject entryRuleImportSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportSpec = null;


        try {
            // InternalGo.g:8446:51: (iv_ruleImportSpec= ruleImportSpec EOF )
            // InternalGo.g:8447:2: iv_ruleImportSpec= ruleImportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportSpec=ruleImportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportSpec"


    // $ANTLR start "ruleImportSpec"
    // InternalGo.g:8453:1: ruleImportSpec returns [EObject current=null] : ( (otherlv_0= '.' | ruleIDENTIFIER )? ( (lv_ip_2_0= ruleImportPath ) ) ) ;
    public final EObject ruleImportSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_ip_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8459:2: ( ( (otherlv_0= '.' | ruleIDENTIFIER )? ( (lv_ip_2_0= ruleImportPath ) ) ) )
            // InternalGo.g:8460:2: ( (otherlv_0= '.' | ruleIDENTIFIER )? ( (lv_ip_2_0= ruleImportPath ) ) )
            {
            // InternalGo.g:8460:2: ( (otherlv_0= '.' | ruleIDENTIFIER )? ( (lv_ip_2_0= ruleImportPath ) ) )
            // InternalGo.g:8461:3: (otherlv_0= '.' | ruleIDENTIFIER )? ( (lv_ip_2_0= ruleImportPath ) )
            {
            // InternalGo.g:8461:3: (otherlv_0= '.' | ruleIDENTIFIER )?
            int alt114=3;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==48) ) {
                alt114=1;
            }
            else if ( (LA114_0==RULE_ID||LA114_0==43) ) {
                alt114=2;
            }
            switch (alt114) {
                case 1 :
                    // InternalGo.g:8462:4: otherlv_0= '.'
                    {
                    otherlv_0=(Token)match(input,48,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:8467:4: ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getImportSpecAccess().getIDENTIFIERParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_77);
                    ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:8478:3: ( (lv_ip_2_0= ruleImportPath ) )
            // InternalGo.g:8479:4: (lv_ip_2_0= ruleImportPath )
            {
            // InternalGo.g:8479:4: (lv_ip_2_0= ruleImportPath )
            // InternalGo.g:8480:5: lv_ip_2_0= ruleImportPath
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportSpecAccess().getIpImportPathParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ip_2_0=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportSpecRule());
              					}
              					set(
              						current,
              						"ip",
              						lv_ip_2_0,
              						"org.xtext.example.mydsl.Go.ImportPath");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportSpec"


    // $ANTLR start "entryRuleImportPath"
    // InternalGo.g:8501:1: entryRuleImportPath returns [String current=null] : iv_ruleImportPath= ruleImportPath EOF ;
    public final String entryRuleImportPath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImportPath = null;


        try {
            // InternalGo.g:8501:50: (iv_ruleImportPath= ruleImportPath EOF )
            // InternalGo.g:8502:2: iv_ruleImportPath= ruleImportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportPath=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportPath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportPath"


    // $ANTLR start "ruleImportPath"
    // InternalGo.g:8508:1: ruleImportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleImportPath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;


        	enterRule();

        try {
            // InternalGo.g:8514:2: (this_STRING_0= RULE_STRING )
            // InternalGo.g:8515:2: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_0, grammarAccess.getImportPathAccess().getSTRINGTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportPath"

    // $ANTLR start synpred26_InternalGo
    public final void synpred26_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_id2_3_0 = null;


        // InternalGo.g:1448:4: (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )
        // InternalGo.g:1448:4: otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) )
        {
        otherlv_2=(Token)match(input,55,FOLLOW_6); if (state.failed) return ;
        // InternalGo.g:1452:4: ( (lv_id2_3_0= ruleIDENTIFIER ) )
        // InternalGo.g:1453:5: (lv_id2_3_0= ruleIDENTIFIER )
        {
        // InternalGo.g:1453:5: (lv_id2_3_0= ruleIDENTIFIER )
        // InternalGo.g:1454:6: lv_id2_3_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIdentifierListAccess().getId2IDENTIFIERParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id2_3_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred26_InternalGo

    // $ANTLR start synpred28_InternalGo
    public final void synpred28_InternalGo_fragment() throws RecognitionException {   
        EObject lv_result_1_0 = null;


        // InternalGo.g:1678:4: ( (lv_result_1_0= ruleResult ) )
        // InternalGo.g:1678:4: (lv_result_1_0= ruleResult )
        {
        // InternalGo.g:1678:4: (lv_result_1_0= ruleResult )
        // InternalGo.g:1679:5: lv_result_1_0= ruleResult
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_result_1_0=ruleResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred28_InternalGo

    // $ANTLR start synpred29_InternalGo
    public final void synpred29_InternalGo_fragment() throws RecognitionException {   
        EObject lv_parameteres_0_0 = null;


        // InternalGo.g:1715:3: ( ( (lv_parameteres_0_0= ruleParameters ) ) )
        // InternalGo.g:1715:3: ( (lv_parameteres_0_0= ruleParameters ) )
        {
        // InternalGo.g:1715:3: ( (lv_parameteres_0_0= ruleParameters ) )
        // InternalGo.g:1716:4: (lv_parameteres_0_0= ruleParameters )
        {
        // InternalGo.g:1716:4: (lv_parameteres_0_0= ruleParameters )
        // InternalGo.g:1717:5: lv_parameteres_0_0= ruleParameters
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getResultAccess().getParameteresParametersParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_parameteres_0_0=ruleParameters();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred29_InternalGo

    // $ANTLR start synpred30_InternalGo
    public final void synpred30_InternalGo_fragment() throws RecognitionException {   
        EObject lv_parameterlist_2_0 = null;


        // InternalGo.g:1788:4: ( (lv_parameterlist_2_0= ruleParameterList ) )
        // InternalGo.g:1788:4: (lv_parameterlist_2_0= ruleParameterList )
        {
        // InternalGo.g:1788:4: (lv_parameterlist_2_0= ruleParameterList )
        // InternalGo.g:1789:5: lv_parameterlist_2_0= ruleParameterList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_parameterlist_2_0=ruleParameterList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalGo

    // $ANTLR start synpred35_InternalGo
    public final void synpred35_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_id_1_0 = null;

        EObject lv_type_3_0 = null;


        // InternalGo.g:1902:3: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) )
        // InternalGo.g:1902:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? )
        {
        // InternalGo.g:1902:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? )
        // InternalGo.g:1903:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )?
        {
        // InternalGo.g:1903:4: ()
        // InternalGo.g:1904:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:1913:4: ( (lv_id_1_0= ruleIDENTIFIER ) )?
        int alt118=2;
        int LA118_0 = input.LA(1);

        if ( (LA118_0==RULE_ID||LA118_0==43) ) {
            alt118=1;
        }
        switch (alt118) {
            case 1 :
                // InternalGo.g:1914:5: (lv_id_1_0= ruleIDENTIFIER )
                {
                // InternalGo.g:1914:5: (lv_id_1_0= ruleIDENTIFIER )
                // InternalGo.g:1915:6: lv_id_1_0= ruleIDENTIFIER
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getParameterDeclAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
                  					
                }
                pushFollow(FOLLOW_26);
                lv_id_1_0=ruleIDENTIFIER();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        // InternalGo.g:1932:4: (otherlv_2= '...' )?
        int alt119=2;
        int LA119_0 = input.LA(1);

        if ( (LA119_0==57) ) {
            alt119=1;
        }
        switch (alt119) {
            case 1 :
                // InternalGo.g:1933:5: otherlv_2= '...'
                {
                otherlv_2=(Token)match(input,57,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }

        // InternalGo.g:1938:4: ( (lv_type_3_0= ruleType ) )?
        int alt120=2;
        int LA120_0 = input.LA(1);

        if ( (LA120_0==RULE_LITERAL_TYPE||LA120_0==41||LA120_0==46||LA120_0==49||LA120_0==51||LA120_0==56||(LA120_0>=58 && LA120_0<=61)) ) {
            alt120=1;
        }
        switch (alt120) {
            case 1 :
                // InternalGo.g:1939:5: (lv_type_3_0= ruleType )
                {
                // InternalGo.g:1939:5: (lv_type_3_0= ruleType )
                // InternalGo.g:1940:6: lv_type_3_0= ruleType
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_0_3_0());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_type_3_0=ruleType();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred35_InternalGo

    // $ANTLR start synpred41_InternalGo
    public final void synpred41_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;

        // InternalGo.g:2341:6: (otherlv_1= '<-' )
        // InternalGo.g:2341:6: otherlv_1= '<-'
        {
        otherlv_1=(Token)match(input,61,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred41_InternalGo

    // $ANTLR start synpred43_InternalGo
    public final void synpred43_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;

        // InternalGo.g:2474:5: (otherlv_2= ';' )
        // InternalGo.g:2474:5: otherlv_2= ';'
        {
        otherlv_2=(Token)match(input,53,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred43_InternalGo

    // $ANTLR start synpred49_InternalGo
    public final void synpred49_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotst_4_0 = null;


        // InternalGo.g:2576:3: ( ( (lv_gotst_4_0= ruleGoStmt ) ) )
        // InternalGo.g:2576:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        {
        // InternalGo.g:2576:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        // InternalGo.g:2577:4: (lv_gotst_4_0= ruleGoStmt )
        {
        // InternalGo.g:2577:4: (lv_gotst_4_0= ruleGoStmt )
        // InternalGo.g:2578:5: lv_gotst_4_0= ruleGoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotst_4_0=ruleGoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred49_InternalGo

    // $ANTLR start synpred53_InternalGo
    public final void synpred53_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotost_8_0 = null;


        // InternalGo.g:2648:3: ( ( (lv_gotost_8_0= ruleGotoStmt ) ) )
        // InternalGo.g:2648:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        {
        // InternalGo.g:2648:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        // InternalGo.g:2649:4: (lv_gotost_8_0= ruleGotoStmt )
        {
        // InternalGo.g:2649:4: (lv_gotost_8_0= ruleGotoStmt )
        // InternalGo.g:2650:5: lv_gotost_8_0= ruleGotoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotost_8_0=ruleGotoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred53_InternalGo

    // $ANTLR start synpred62_InternalGo
    public final void synpred62_InternalGo_fragment() throws RecognitionException {   
        EObject lv_inc_0_0 = null;


        // InternalGo.g:2965:3: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) )
        // InternalGo.g:2965:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
        {
        // InternalGo.g:2965:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
        // InternalGo.g:2966:4: (lv_inc_0_0= ruleIncDecStmt )
        {
        // InternalGo.g:2966:4: (lv_inc_0_0= ruleIncDecStmt )
        // InternalGo.g:2967:5: lv_inc_0_0= ruleIncDecStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncIncDecStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_inc_0_0=ruleIncDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred62_InternalGo

    // $ANTLR start synpred63_InternalGo
    public final void synpred63_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ass_1_0 = null;


        // InternalGo.g:2985:3: ( ( (lv_ass_1_0= ruleAssignment ) ) )
        // InternalGo.g:2985:3: ( (lv_ass_1_0= ruleAssignment ) )
        {
        // InternalGo.g:2985:3: ( (lv_ass_1_0= ruleAssignment ) )
        // InternalGo.g:2986:4: (lv_ass_1_0= ruleAssignment )
        {
        // InternalGo.g:2986:4: (lv_ass_1_0= ruleAssignment )
        // InternalGo.g:2987:5: lv_ass_1_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssAssignmentParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ass_1_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred63_InternalGo

    // $ANTLR start synpred64_InternalGo
    public final void synpred64_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ss_2_0 = null;


        // InternalGo.g:3005:3: ( ( (lv_ss_2_0= ruleSendStmt ) ) )
        // InternalGo.g:3005:3: ( (lv_ss_2_0= ruleSendStmt ) )
        {
        // InternalGo.g:3005:3: ( (lv_ss_2_0= ruleSendStmt ) )
        // InternalGo.g:3006:4: (lv_ss_2_0= ruleSendStmt )
        {
        // InternalGo.g:3006:4: (lv_ss_2_0= ruleSendStmt )
        // InternalGo.g:3007:5: lv_ss_2_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSsSendStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ss_2_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred64_InternalGo

    // $ANTLR start synpred65_InternalGo
    public final void synpred65_InternalGo_fragment() throws RecognitionException {   
        EObject lv_svd_3_0 = null;


        // InternalGo.g:3025:3: ( ( (lv_svd_3_0= ruleShortVarDecl ) ) )
        // InternalGo.g:3025:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
        {
        // InternalGo.g:3025:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
        // InternalGo.g:3026:4: (lv_svd_3_0= ruleShortVarDecl )
        {
        // InternalGo.g:3026:4: (lv_svd_3_0= ruleShortVarDecl )
        // InternalGo.g:3027:5: lv_svd_3_0= ruleShortVarDecl
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSvdShortVarDeclParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_svd_3_0=ruleShortVarDecl();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred65_InternalGo

    // $ANTLR start synpred66_InternalGo
    public final void synpred66_InternalGo_fragment() throws RecognitionException {   
        EObject lv_es_4_0 = null;


        // InternalGo.g:3045:3: ( ( (lv_es_4_0= ruleExpressionStmt ) ) )
        // InternalGo.g:3045:3: ( (lv_es_4_0= ruleExpressionStmt ) )
        {
        // InternalGo.g:3045:3: ( (lv_es_4_0= ruleExpressionStmt ) )
        // InternalGo.g:3046:4: (lv_es_4_0= ruleExpressionStmt )
        {
        // InternalGo.g:3046:4: (lv_es_4_0= ruleExpressionStmt )
        // InternalGo.g:3047:5: lv_es_4_0= ruleExpressionStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEsExpressionStmtParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_es_4_0=ruleExpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred66_InternalGo

    // $ANTLR start synpred67_InternalGo
    public final void synpred67_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionlist_2_0 = null;


        // InternalGo.g:3152:4: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        // InternalGo.g:3152:4: (lv_expressionlist_2_0= ruleExpressionList )
        {
        // InternalGo.g:3152:4: (lv_expressionlist_2_0= ruleExpressionList )
        // InternalGo.g:3153:5: lv_expressionlist_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred67_InternalGo

    // $ANTLR start synpred68_InternalGo
    public final void synpred68_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_Label_1 = null;


        // InternalGo.g:3195:4: (this_Label_1= ruleLabel )
        // InternalGo.g:3195:4: this_Label_1= ruleLabel
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
          			
        }
        pushFollow(FOLLOW_2);
        this_Label_1=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred68_InternalGo

    // $ANTLR start synpred69_InternalGo
    public final void synpred69_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_Label_1 = null;


        // InternalGo.g:3231:4: (this_Label_1= ruleLabel )
        // InternalGo.g:3231:4: this_Label_1= ruleLabel
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
          			
        }
        pushFollow(FOLLOW_2);
        this_Label_1=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_InternalGo

    // $ANTLR start synpred70_InternalGo
    public final void synpred70_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simst_1_0 = null;


        // InternalGo.g:3300:4: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:3300:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:3300:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
        // InternalGo.g:3301:5: (lv_simst_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:3301:5: (lv_simst_1_0= ruleSimpleStmt )
        // InternalGo.g:3302:6: lv_simst_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_41);
        lv_simst_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,53,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_InternalGo

    // $ANTLR start synpred73_InternalGo
    public final void synpred73_InternalGo_fragment() throws RecognitionException {   
        EObject lv_tss_1_0 = null;


        // InternalGo.g:3450:3: ( ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) ) )
        // InternalGo.g:3450:3: ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) )
        {
        // InternalGo.g:3450:3: ( () ( (lv_tss_1_0= ruleTypeSwitchStmt ) ) )
        // InternalGo.g:3451:4: () ( (lv_tss_1_0= ruleTypeSwitchStmt ) )
        {
        // InternalGo.g:3451:4: ()
        // InternalGo.g:3452:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:3461:4: ( (lv_tss_1_0= ruleTypeSwitchStmt ) )
        // InternalGo.g:3462:5: (lv_tss_1_0= ruleTypeSwitchStmt )
        {
        // InternalGo.g:3462:5: (lv_tss_1_0= ruleTypeSwitchStmt )
        // InternalGo.g:3463:6: lv_tss_1_0= ruleTypeSwitchStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSwitchStmtAccess().getTssTypeSwitchStmtParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_tss_1_0=ruleTypeSwitchStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred73_InternalGo

    // $ANTLR start synpred75_InternalGo
    public final void synpred75_InternalGo_fragment() throws RecognitionException {   
        EObject lv_condition_2_0 = null;


        // InternalGo.g:3607:4: ( ( (lv_condition_2_0= ruleCondition ) ) )
        // InternalGo.g:3607:4: ( (lv_condition_2_0= ruleCondition ) )
        {
        // InternalGo.g:3607:4: ( (lv_condition_2_0= ruleCondition ) )
        // InternalGo.g:3608:5: (lv_condition_2_0= ruleCondition )
        {
        // InternalGo.g:3608:5: (lv_condition_2_0= ruleCondition )
        // InternalGo.g:3609:6: lv_condition_2_0= ruleCondition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_2_0=ruleCondition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred75_InternalGo

    // $ANTLR start synpred76_InternalGo
    public final void synpred76_InternalGo_fragment() throws RecognitionException {   
        EObject lv_for_3_0 = null;


        // InternalGo.g:3627:4: ( ( (lv_for_3_0= ruleForClause ) ) )
        // InternalGo.g:3627:4: ( (lv_for_3_0= ruleForClause ) )
        {
        // InternalGo.g:3627:4: ( (lv_for_3_0= ruleForClause ) )
        // InternalGo.g:3628:5: (lv_for_3_0= ruleForClause )
        {
        // InternalGo.g:3628:5: (lv_for_3_0= ruleForClause )
        // InternalGo.g:3629:6: lv_for_3_0= ruleForClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_for_3_0=ruleForClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalGo

    // $ANTLR start synpred77_InternalGo
    public final void synpred77_InternalGo_fragment() throws RecognitionException {   
        EObject lv_range_4_0 = null;


        // InternalGo.g:3647:4: ( ( (lv_range_4_0= ruleRangeClause ) ) )
        // InternalGo.g:3647:4: ( (lv_range_4_0= ruleRangeClause ) )
        {
        // InternalGo.g:3647:4: ( (lv_range_4_0= ruleRangeClause ) )
        // InternalGo.g:3648:5: (lv_range_4_0= ruleRangeClause )
        {
        // InternalGo.g:3648:5: (lv_range_4_0= ruleRangeClause )
        // InternalGo.g:3649:6: lv_range_4_0= ruleRangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_2_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_range_4_0=ruleRangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred77_InternalGo

    // $ANTLR start synpred81_InternalGo
    public final void synpred81_InternalGo_fragment() throws RecognitionException {   
        EObject lv_tp_1_0 = null;


        // InternalGo.g:3851:4: ( (lv_tp_1_0= ruleType ) )
        // InternalGo.g:3851:4: (lv_tp_1_0= ruleType )
        {
        // InternalGo.g:3851:4: (lv_tp_1_0= ruleType )
        // InternalGo.g:3852:5: lv_tp_1_0= ruleType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConstSpecAccess().getTpTypeParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_tp_1_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred81_InternalGo

    // $ANTLR start synpred89_InternalGo
    public final void synpred89_InternalGo_fragment() throws RecognitionException {   
        EObject lv_tp2_1_0 = null;


        // InternalGo.g:4285:4: ( (lv_tp2_1_0= ruleType ) )
        // InternalGo.g:4285:4: (lv_tp2_1_0= ruleType )
        {
        // InternalGo.g:4285:4: (lv_tp2_1_0= ruleType )
        // InternalGo.g:4286:5: lv_tp2_1_0= ruleType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getVarSpecAccess().getTp2TypeParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_tp2_1_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred89_InternalGo

    // $ANTLR start synpred91_InternalGo
    public final void synpred91_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_exp_1_0 = null;


        // InternalGo.g:4524:3: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) )
        // InternalGo.g:4524:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
        {
        // InternalGo.g:4524:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
        // InternalGo.g:4525:4: () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++'
        {
        // InternalGo.g:4525:4: ()
        // InternalGo.g:4526:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:4535:4: ( (lv_exp_1_0= ruleExpression ) )
        // InternalGo.g:4536:5: (lv_exp_1_0= ruleExpression )
        {
        // InternalGo.g:4536:5: (lv_exp_1_0= ruleExpression )
        // InternalGo.g:4537:6: lv_exp_1_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_53);
        lv_exp_1_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,77,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred91_InternalGo

    // $ANTLR start synpred94_InternalGo
    public final void synpred94_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_simplestmt_2_0 = null;


        // InternalGo.g:4788:4: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )
        // InternalGo.g:4788:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )?
        {
        // InternalGo.g:4788:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
        // InternalGo.g:4789:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        {
        // InternalGo.g:4789:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        // InternalGo.g:4790:6: lv_simplestmt_2_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_78);
        lv_simplestmt_2_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:4807:4: (otherlv_3= ';' )?
        int alt127=2;
        int LA127_0 = input.LA(1);

        if ( (LA127_0==53) ) {
            alt127=1;
        }
        switch (alt127) {
            case 1 :
                // InternalGo.g:4808:5: otherlv_3= ';'
                {
                otherlv_3=(Token)match(input,53,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred94_InternalGo

    // $ANTLR start synpred99_InternalGo
    public final void synpred99_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simplestm_1_0 = null;


        // InternalGo.g:5026:4: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )
        // InternalGo.g:5026:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )?
        {
        // InternalGo.g:5026:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) )
        // InternalGo.g:5027:5: (lv_simplestm_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:5027:5: (lv_simplestm_1_0= ruleSimpleStmt )
        // InternalGo.g:5028:6: lv_simplestm_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimplestmSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_78);
        lv_simplestm_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5045:4: (otherlv_2= ';' )?
        int alt128=2;
        int LA128_0 = input.LA(1);

        if ( (LA128_0==53) ) {
            alt128=1;
        }
        switch (alt128) {
            case 1 :
                // InternalGo.g:5046:5: otherlv_2= ';'
                {
                otherlv_2=(Token)match(input,53,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred99_InternalGo

    // $ANTLR start synpred104_InternalGo
    public final void synpred104_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sendstmt_2_0 = null;


        // InternalGo.g:5462:5: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) )
        // InternalGo.g:5462:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        {
        // InternalGo.g:5462:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        // InternalGo.g:5463:6: (lv_sendstmt_2_0= ruleSendStmt )
        {
        // InternalGo.g:5463:6: (lv_sendstmt_2_0= ruleSendStmt )
        // InternalGo.g:5464:7: lv_sendstmt_2_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_sendstmt_2_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred104_InternalGo

    // $ANTLR start synpred106_InternalGo
    public final void synpred106_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_ExpressionList_0 = null;


        // InternalGo.g:5540:4: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) )
        // InternalGo.g:5540:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        {
        // InternalGo.g:5540:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        // InternalGo.g:5541:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }
        pushFollow(FOLLOW_51);
        this_ExpressionList_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,74,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred106_InternalGo

    // $ANTLR start synpred107_InternalGo
    public final void synpred107_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_idl_2_0 = null;


        // InternalGo.g:5558:4: ( ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )
        // InternalGo.g:5558:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        {
        // InternalGo.g:5558:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        // InternalGo.g:5559:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
        {
        // InternalGo.g:5559:5: ( (lv_idl_2_0= ruleIdentifierList ) )
        // InternalGo.g:5560:6: (lv_idl_2_0= ruleIdentifierList )
        {
        // InternalGo.g:5560:6: (lv_idl_2_0= ruleIdentifierList )
        // InternalGo.g:5561:7: lv_idl_2_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_56);
        lv_idl_2_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,79,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred107_InternalGo

    // $ANTLR start synpred108_InternalGo
    public final void synpred108_InternalGo_fragment() throws RecognitionException {   
        EObject lv_init_1_0 = null;


        // InternalGo.g:5717:4: ( (lv_init_1_0= ruleInitStmt ) )
        // InternalGo.g:5717:4: (lv_init_1_0= ruleInitStmt )
        {
        // InternalGo.g:5717:4: (lv_init_1_0= ruleInitStmt )
        // InternalGo.g:5718:5: lv_init_1_0= ruleInitStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getInitInitStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_init_1_0=ruleInitStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred108_InternalGo

    // $ANTLR start synpred113_InternalGo
    public final void synpred113_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_expression2_3_0 = null;


        // InternalGo.g:6036:4: (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )
        // InternalGo.g:6036:4: otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) )
        {
        otherlv_2=(Token)match(input,55,FOLLOW_15); if (state.failed) return ;
        // InternalGo.g:6040:4: ( (lv_expression2_3_0= ruleExpression ) )
        // InternalGo.g:6041:5: (lv_expression2_3_0= ruleExpression )
        {
        // InternalGo.g:6041:5: (lv_expression2_3_0= ruleExpression )
        // InternalGo.g:6042:6: lv_expression2_3_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression2_3_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred113_InternalGo

    // $ANTLR start synpred115_InternalGo
    public final void synpred115_InternalGo_fragment() throws RecognitionException {   
        Token lv_bop_1_1=null;
        Token lv_bop_1_2=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;


        // InternalGo.g:6157:4: ( ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )
        // InternalGo.g:6157:4: ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
        {
        // InternalGo.g:6157:4: ( ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) ) )
        // InternalGo.g:6158:5: ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) )
        {
        // InternalGo.g:6158:5: ( (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' ) )
        // InternalGo.g:6159:6: (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' )
        {
        // InternalGo.g:6159:6: (lv_bop_1_1= RULE_BINARY_OP | lv_bop_1_2= '*' )
        int alt130=2;
        int LA130_0 = input.LA(1);

        if ( (LA130_0==RULE_BINARY_OP) ) {
            alt130=1;
        }
        else if ( (LA130_0==56) ) {
            alt130=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 130, 0, input);

            throw nvae;
        }
        switch (alt130) {
            case 1 :
                // InternalGo.g:6160:7: lv_bop_1_1= RULE_BINARY_OP
                {
                lv_bop_1_1=(Token)match(input,RULE_BINARY_OP,FOLLOW_15); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalGo.g:6175:7: lv_bop_1_2= '*'
                {
                lv_bop_1_2=(Token)match(input,56,FOLLOW_15); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalGo.g:6188:4: ( (lv_expression_2_0= ruleExpression ) )
        // InternalGo.g:6189:5: (lv_expression_2_0= ruleExpression )
        {
        // InternalGo.g:6189:5: (lv_expression_2_0= ruleExpression )
        // InternalGo.g:6190:6: lv_expression_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_63);
        lv_expression_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6207:4: ( (lv_expression2_3_0= ruleExpression2 ) )
        // InternalGo.g:6208:5: (lv_expression2_3_0= ruleExpression2 )
        {
        // InternalGo.g:6208:5: (lv_expression2_3_0= ruleExpression2 )
        // InternalGo.g:6209:6: lv_expression2_3_0= ruleExpression2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression2_3_0=ruleExpression2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred115_InternalGo

    // $ANTLR start synpred116_InternalGo
    public final void synpred116_InternalGo_fragment() throws RecognitionException {   
        EObject lv_pr_1_0 = null;


        // InternalGo.g:6246:3: ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) )
        // InternalGo.g:6246:3: ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) )
        {
        // InternalGo.g:6246:3: ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) )
        // InternalGo.g:6247:4: () ( (lv_pr_1_0= rulePrimaryExpr ) )
        {
        // InternalGo.g:6247:4: ()
        // InternalGo.g:6248:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:6257:4: ( (lv_pr_1_0= rulePrimaryExpr ) )
        // InternalGo.g:6258:5: (lv_pr_1_0= rulePrimaryExpr )
        {
        // InternalGo.g:6258:5: (lv_pr_1_0= rulePrimaryExpr )
        // InternalGo.g:6259:6: lv_pr_1_0= rulePrimaryExpr
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUnaryExprAccess().getPrPrimaryExprParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_1_0=rulePrimaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred116_InternalGo

    // $ANTLR start synpred118_InternalGo
    public final void synpred118_InternalGo_fragment() throws RecognitionException {   
        EObject lv_op_1_0 = null;

        EObject lv_pr_2_0 = null;


        // InternalGo.g:6349:3: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6349:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6349:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6350:4: () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6350:4: ()
        // InternalGo.g:6351:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:6360:4: ( (lv_op_1_0= ruleOperand ) )
        // InternalGo.g:6361:5: (lv_op_1_0= ruleOperand )
        {
        // InternalGo.g:6361:5: (lv_op_1_0= ruleOperand )
        // InternalGo.g:6362:6: lv_op_1_0= ruleOperand
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOpOperandParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_64);
        lv_op_1_0=ruleOperand();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6379:4: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6380:5: (lv_pr_2_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6380:5: (lv_pr_2_0= rulePrimaryExpr2 )
        // InternalGo.g:6381:6: lv_pr_2_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_2_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred118_InternalGo

    // $ANTLR start synpred119_InternalGo
    public final void synpred119_InternalGo_fragment() throws RecognitionException {   
        EObject lv_con_3_0 = null;

        EObject lv_pr_4_0 = null;


        // InternalGo.g:6400:3: ( ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6400:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6400:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6401:4: ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6401:4: ( (lv_con_3_0= ruleConversion ) )
        // InternalGo.g:6402:5: (lv_con_3_0= ruleConversion )
        {
        // InternalGo.g:6402:5: (lv_con_3_0= ruleConversion )
        // InternalGo.g:6403:6: lv_con_3_0= ruleConversion
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConConversionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_64);
        lv_con_3_0=ruleConversion();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6420:4: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6421:5: (lv_pr_4_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6421:5: (lv_pr_4_0= rulePrimaryExpr2 )
        // InternalGo.g:6422:6: lv_pr_4_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_4_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred119_InternalGo

    // $ANTLR start synpred120_InternalGo
    public final void synpred120_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_selector_1_0 = null;

        EObject lv_pr_2_0 = null;


        // InternalGo.g:6511:4: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6511:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6511:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6512:5: ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6512:5: ( (lv_selector_1_0= ruleSelector ) )
        // InternalGo.g:6513:6: (lv_selector_1_0= ruleSelector )
        {
        // InternalGo.g:6513:6: (lv_selector_1_0= ruleSelector )
        // InternalGo.g:6514:7: lv_selector_1_0= ruleSelector
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorSelectorParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_64);
        lv_selector_1_0=ruleSelector();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6531:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6532:6: (lv_pr_2_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6532:6: (lv_pr_2_0= rulePrimaryExpr2 )
        // InternalGo.g:6533:7: lv_pr_2_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_2_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred120_InternalGo

    // $ANTLR start synpred121_InternalGo
    public final void synpred121_InternalGo_fragment() throws RecognitionException {   
        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;


        // InternalGo.g:6552:4: ( ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6552:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6552:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6553:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6553:5: ( (lv_index_3_0= ruleIndex ) )
        // InternalGo.g:6554:6: (lv_index_3_0= ruleIndex )
        {
        // InternalGo.g:6554:6: (lv_index_3_0= ruleIndex )
        // InternalGo.g:6555:7: lv_index_3_0= ruleIndex
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FOLLOW_64);
        lv_index_3_0=ruleIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6572:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6573:6: (lv_pr_4_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6573:6: (lv_pr_4_0= rulePrimaryExpr2 )
        // InternalGo.g:6574:7: lv_pr_4_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_4_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred121_InternalGo

    // $ANTLR start synpred122_InternalGo
    public final void synpred122_InternalGo_fragment() throws RecognitionException {   
        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;


        // InternalGo.g:6593:4: ( ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6593:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6593:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6594:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6594:5: ( (lv_slice_5_0= ruleSlice ) )
        // InternalGo.g:6595:6: (lv_slice_5_0= ruleSlice )
        {
        // InternalGo.g:6595:6: (lv_slice_5_0= ruleSlice )
        // InternalGo.g:6596:7: lv_slice_5_0= ruleSlice
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
          						
        }
        pushFollow(FOLLOW_64);
        lv_slice_5_0=ruleSlice();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6613:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6614:6: (lv_pr_6_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6614:6: (lv_pr_6_0= rulePrimaryExpr2 )
        // InternalGo.g:6615:7: lv_pr_6_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_6_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred122_InternalGo

    // $ANTLR start synpred123_InternalGo
    public final void synpred123_InternalGo_fragment() throws RecognitionException {   
        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;


        // InternalGo.g:6634:4: ( ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6634:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6634:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6635:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6635:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
        // InternalGo.g:6636:6: (lv_typeass_7_0= ruleTypeAssertion )
        {
        // InternalGo.g:6636:6: (lv_typeass_7_0= ruleTypeAssertion )
        // InternalGo.g:6637:7: lv_typeass_7_0= ruleTypeAssertion
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
          						
        }
        pushFollow(FOLLOW_64);
        lv_typeass_7_0=ruleTypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6654:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6655:6: (lv_pr_8_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6655:6: (lv_pr_8_0= rulePrimaryExpr2 )
        // InternalGo.g:6656:7: lv_pr_8_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_8_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred123_InternalGo

    // $ANTLR start synpred124_InternalGo
    public final void synpred124_InternalGo_fragment() throws RecognitionException {   
        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;


        // InternalGo.g:6675:4: ( ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6675:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6675:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6676:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6676:5: ( (lv_arguments_9_0= ruleArguments ) )
        // InternalGo.g:6677:6: (lv_arguments_9_0= ruleArguments )
        {
        // InternalGo.g:6677:6: (lv_arguments_9_0= ruleArguments )
        // InternalGo.g:6678:7: lv_arguments_9_0= ruleArguments
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
          						
        }
        pushFollow(FOLLOW_64);
        lv_arguments_9_0=ruleArguments();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6695:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6696:6: (lv_pr_10_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6696:6: (lv_pr_10_0= rulePrimaryExpr2 )
        // InternalGo.g:6697:7: lv_pr_10_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_10_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred124_InternalGo

    // $ANTLR start synpred125_InternalGo
    public final void synpred125_InternalGo_fragment() throws RecognitionException {   
        EObject lv_literal_1_0 = null;


        // InternalGo.g:6735:3: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) )
        // InternalGo.g:6735:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        {
        // InternalGo.g:6735:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        // InternalGo.g:6736:4: () ( (lv_literal_1_0= ruleLiteral ) )
        {
        // InternalGo.g:6736:4: ()
        // InternalGo.g:6737:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:6746:4: ( (lv_literal_1_0= ruleLiteral ) )
        // InternalGo.g:6747:5: (lv_literal_1_0= ruleLiteral )
        {
        // InternalGo.g:6747:5: (lv_literal_1_0= ruleLiteral )
        // InternalGo.g:6748:6: lv_literal_1_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_literal_1_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred125_InternalGo

    // $ANTLR start synpred126_InternalGo
    public final void synpred126_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_exp_4_0 = null;


        // InternalGo.g:6788:5: (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )
        // InternalGo.g:6788:5: otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')'
        {
        otherlv_3=(Token)match(input,46,FOLLOW_15); if (state.failed) return ;
        // InternalGo.g:6792:5: ( (lv_exp_4_0= ruleExpressionList ) )
        // InternalGo.g:6793:6: (lv_exp_4_0= ruleExpressionList )
        {
        // InternalGo.g:6793:6: (lv_exp_4_0= ruleExpressionList )
        // InternalGo.g:6794:7: lv_exp_4_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getOperandAccess().getExpExpressionListParserRuleCall_1_1_1_0());
          						
        }
        pushFollow(FOLLOW_13);
        lv_exp_4_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_operandn_2_0 = null;

        EObject lv_exp_4_0 = null;


        // InternalGo.g:6767:3: ( ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? ) )
        // InternalGo.g:6767:3: ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? )
        {
        // InternalGo.g:6767:3: ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? )
        // InternalGo.g:6768:4: ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )?
        {
        // InternalGo.g:6768:4: ( (lv_operandn_2_0= ruleOperandName ) )
        // InternalGo.g:6769:5: (lv_operandn_2_0= ruleOperandName )
        {
        // InternalGo.g:6769:5: (lv_operandn_2_0= ruleOperandName )
        // InternalGo.g:6770:6: lv_operandn_2_0= ruleOperandName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_65);
        lv_operandn_2_0=ruleOperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6787:4: (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )?
        int alt131=2;
        int LA131_0 = input.LA(1);

        if ( (LA131_0==46) ) {
            alt131=1;
        }
        switch (alt131) {
            case 1 :
                // InternalGo.g:6788:5: otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')'
                {
                otherlv_3=(Token)match(input,46,FOLLOW_15); if (state.failed) return ;
                // InternalGo.g:6792:5: ( (lv_exp_4_0= ruleExpressionList ) )
                // InternalGo.g:6793:6: (lv_exp_4_0= ruleExpressionList )
                {
                // InternalGo.g:6793:6: (lv_exp_4_0= ruleExpressionList )
                // InternalGo.g:6794:7: lv_exp_4_0= ruleExpressionList
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getOperandAccess().getExpExpressionListParserRuleCall_1_1_1_0());
                  						
                }
                pushFollow(FOLLOW_13);
                lv_exp_4_0=ruleExpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_5=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred131_InternalGo
    public final void synpred131_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;


        // InternalGo.g:7080:3: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) )
        // InternalGo.g:7080:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        {
        // InternalGo.g:7080:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        // InternalGo.g:7081:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
        {
        // InternalGo.g:7081:4: ()
        // InternalGo.g:7082:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        otherlv_1=(Token)match(input,49,FOLLOW_67); if (state.failed) return ;
        // InternalGo.g:7095:4: ( (lv_expression_2_0= ruleExpression ) )?
        int alt132=2;
        int LA132_0 = input.LA(1);

        if ( ((LA132_0>=RULE_ID && LA132_0<=RULE_FLOAT_LIT)||LA132_0==RULE_LITERAL_TYPE||(LA132_0>=RULE_UNARY_OP && LA132_0<=RULE_BOOLEAN_LIT)||LA132_0==41||LA132_0==43||(LA132_0>=45 && LA132_0<=46)||LA132_0==49||LA132_0==51||LA132_0==56||(LA132_0>=58 && LA132_0<=61)) ) {
            alt132=1;
        }
        switch (alt132) {
            case 1 :
                // InternalGo.g:7096:5: (lv_expression_2_0= ruleExpression )
                {
                // InternalGo.g:7096:5: (lv_expression_2_0= ruleExpression )
                // InternalGo.g:7097:6: lv_expression_2_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                  					
                }
                pushFollow(FOLLOW_36);
                lv_expression_2_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,62,FOLLOW_68); if (state.failed) return ;
        // InternalGo.g:7118:4: ( (lv_expression2_4_0= ruleExpression ) )?
        int alt133=2;
        int LA133_0 = input.LA(1);

        if ( ((LA133_0>=RULE_ID && LA133_0<=RULE_FLOAT_LIT)||LA133_0==RULE_LITERAL_TYPE||(LA133_0>=RULE_UNARY_OP && LA133_0<=RULE_BOOLEAN_LIT)||LA133_0==41||LA133_0==43||(LA133_0>=45 && LA133_0<=46)||LA133_0==49||LA133_0==51||LA133_0==56||(LA133_0>=58 && LA133_0<=61)) ) {
            alt133=1;
        }
        switch (alt133) {
            case 1 :
                // InternalGo.g:7119:5: (lv_expression2_4_0= ruleExpression )
                {
                // InternalGo.g:7119:5: (lv_expression2_4_0= ruleExpression )
                // InternalGo.g:7120:6: lv_expression2_4_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                  					
                }
                pushFollow(FOLLOW_16);
                lv_expression2_4_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_5=(Token)match(input,50,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred131_InternalGo

    // $ANTLR start synpred133_InternalGo
    public final void synpred133_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionlist_2_0 = null;


        // InternalGo.g:7295:5: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
        // InternalGo.g:7295:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        {
        // InternalGo.g:7295:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        // InternalGo.g:7296:6: (lv_expressionlist_2_0= ruleExpressionList )
        {
        // InternalGo.g:7296:6: (lv_expressionlist_2_0= ruleExpressionList )
        // InternalGo.g:7297:7: lv_expressionlist_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred133_InternalGo

    // $ANTLR start synpred149_InternalGo
    public final void synpred149_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_Key_0 = null;


        // InternalGo.g:7892:4: (this_Key_0= ruleKey otherlv_1= ':' )
        // InternalGo.g:7892:4: this_Key_0= ruleKey otherlv_1= ':'
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_36);
        this_Key_0=ruleKey();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,62,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalGo

    // $ANTLR start synpred150_InternalGo
    public final void synpred150_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_fieldn_1_0 = null;


        // InternalGo.g:7946:3: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) )
        // InternalGo.g:7946:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
        {
        // InternalGo.g:7946:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
        // InternalGo.g:7947:4: () ( (lv_fieldn_1_0= ruleFieldName ) )
        {
        // InternalGo.g:7947:4: ()
        // InternalGo.g:7948:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:7957:4: ( (lv_fieldn_1_0= ruleFieldName ) )
        // InternalGo.g:7958:5: (lv_fieldn_1_0= ruleFieldName )
        {
        // InternalGo.g:7958:5: (lv_fieldn_1_0= ruleFieldName )
        // InternalGo.g:7959:6: lv_fieldn_1_0= ruleFieldName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyAccess().getFieldnFieldNameParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_fieldn_1_0=ruleFieldName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred150_InternalGo

    // $ANTLR start synpred151_InternalGo
    public final void synpred151_InternalGo_fragment() throws RecognitionException {   
        EObject this_Expression_2 = null;


        // InternalGo.g:7978:3: (this_Expression_2= ruleExpression )
        // InternalGo.g:7978:3: this_Expression_2= ruleExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Expression_2=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalGo

    // $ANTLR start synpred158_InternalGo
    public final void synpred158_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_1_0 = null;


        // InternalGo.g:8295:3: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) )
        // InternalGo.g:8295:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
        {
        // InternalGo.g:8295:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
        // InternalGo.g:8296:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )
        {
        // InternalGo.g:8296:4: ()
        // InternalGo.g:8297:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:8306:4: ( (lv_id_1_0= ruleIDENTIFIER ) )
        // InternalGo.g:8307:5: (lv_id_1_0= ruleIDENTIFIER )
        {
        // InternalGo.g:8307:5: (lv_id_1_0= ruleIDENTIFIER )
        // InternalGo.g:8308:6: lv_id_1_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandNameAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_1_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred158_InternalGo

    // Delegated rules

    public final boolean synpred150_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA13 dfa13 = new DFA13(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA107 dfa107 = new DFA107(this);
    protected DFA111 dfa111 = new DFA111(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\51\1\4\10\uffff";
    static final String dfa_3s = "\2\75\10\uffff";
    static final String dfa_4s = "\2\uffff\1\2\1\3\1\4\1\6\1\7\1\10\1\5\1\1";
    static final String dfa_5s = "\12\uffff}>";
    static final String[] dfa_6s = {
            "\1\3\7\uffff\1\1\1\uffff\1\2\4\uffff\1\7\1\uffff\1\4\1\5\2\6",
            "\3\11\4\uffff\1\11\2\uffff\4\11\27\uffff\1\11\1\uffff\1\11\1\uffff\2\11\2\uffff\1\11\1\10\1\11\4\uffff\1\11\1\uffff\4\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "958:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType )";
        }
    }
    static final String dfa_7s = "\61\uffff";
    static final String dfa_8s = "\1\13\60\uffff";
    static final String dfa_9s = "\1\4\12\0\46\uffff";
    static final String dfa_10s = "\1\122\12\0\46\uffff";
    static final String dfa_11s = "\13\uffff\1\2\44\uffff\1\1";
    static final String dfa_12s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\46\uffff}>";
    static final String[] dfa_13s = {
            "\3\13\2\uffff\2\13\1\2\2\uffff\4\13\27\uffff\1\5\1\uffff\1\13\1\uffff\1\13\1\1\2\13\1\3\1\13\1\4\4\13\1\12\1\13\1\6\1\7\1\10\1\11\6\13\1\uffff\10\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1677:3: ( (lv_result_1_0= ruleResult ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_1 = input.LA(1);

                         
                        int index20_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA20_2 = input.LA(1);

                         
                        int index20_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA20_3 = input.LA(1);

                         
                        int index20_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA20_4 = input.LA(1);

                         
                        int index20_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA20_5 = input.LA(1);

                         
                        int index20_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA20_6 = input.LA(1);

                         
                        int index20_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA20_7 = input.LA(1);

                         
                        int index20_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA20_8 = input.LA(1);

                         
                        int index20_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA20_9 = input.LA(1);

                         
                        int index20_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA20_10 = input.LA(1);

                         
                        int index20_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index20_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\14\uffff";
    static final String dfa_15s = "\1\13\1\0\12\uffff";
    static final String dfa_16s = "\1\75\1\0\12\uffff";
    static final String dfa_17s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_18s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\35\uffff\1\2\4\uffff\1\1\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "1714:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_1 = input.LA(1);

                         
                        int index21_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index21_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\22\uffff";
    static final String dfa_21s = "\1\16\21\uffff";
    static final String dfa_22s = "\1\4\15\0\4\uffff";
    static final String dfa_23s = "\1\75\15\0\4\uffff";
    static final String dfa_24s = "\16\uffff\1\1\2\uffff\1\2";
    static final String dfa_25s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\4\uffff}>";
    static final String[] dfa_26s = {
            "\1\1\6\uffff\1\4\35\uffff\1\7\1\uffff\1\2\2\uffff\1\15\1\16\1\uffff\1\5\1\uffff\1\6\3\uffff\1\16\1\14\1\3\1\10\1\11\1\12\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "1901:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) | ( ( (lv_id_4_0= ruleIDENTIFIER ) )? (otherlv_5= '...' )? ( (lv_type_6_0= ruleType ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_1 = input.LA(1);

                         
                        int index29_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA29_2 = input.LA(1);

                         
                        int index29_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA29_3 = input.LA(1);

                         
                        int index29_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA29_4 = input.LA(1);

                         
                        int index29_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA29_5 = input.LA(1);

                         
                        int index29_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA29_6 = input.LA(1);

                         
                        int index29_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA29_7 = input.LA(1);

                         
                        int index29_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA29_8 = input.LA(1);

                         
                        int index29_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA29_9 = input.LA(1);

                         
                        int index29_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA29_10 = input.LA(1);

                         
                        int index29_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA29_11 = input.LA(1);

                         
                        int index29_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA29_12 = input.LA(1);

                         
                        int index29_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA29_13 = input.LA(1);

                         
                        int index29_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 14;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_27s = {
            "\1\2\35\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\3\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "2340:5: (otherlv_1= '<-' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\27\uffff";
    static final String dfa_29s = "\2\uffff\1\4\16\uffff\1\4\5\uffff";
    static final String dfa_30s = "\1\4\1\uffff\2\4\1\uffff\1\4\13\uffff\1\4\1\0\1\4\2\uffff\1\0";
    static final String dfa_31s = "\1\120\1\uffff\1\122\1\4\1\uffff\1\53\13\uffff\1\122\1\0\1\4\2\uffff\1\0";
    static final String dfa_32s = "\1\uffff\1\1\2\uffff\1\3\1\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\2\3\uffff\1\4\1\10\1\uffff";
    static final String dfa_33s = "\22\uffff\1\0\3\uffff\1\1}>";
    static final String[] dfa_34s = {
            "\1\2\2\4\4\uffff\1\4\2\uffff\4\4\27\uffff\1\4\1\uffff\1\3\1\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\12\1\4\2\uffff\1\4\1\uffff\4\4\1\uffff\1\5\1\6\1\7\1\10\1\13\1\uffff\1\11\1\15\1\16\1\17\1\1\1\uffff\2\1\3\uffff\1\14",
            "",
            "\3\4\4\uffff\7\4\27\uffff\1\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\6\4\1\uffff\4\4\1\20\5\4\1\uffff\16\4",
            "\1\21",
            "",
            "\1\22\46\uffff\1\23",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\3\4\4\uffff\7\4\27\uffff\1\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\6\4\1\uffff\4\4\1\20\5\4\1\uffff\16\4",
            "\1\uffff",
            "\1\26",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_28;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "2503:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_18 = input.LA(1);

                         
                        int index37_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalGo()) ) {s = 20;}

                        else if ( (synpred53_InternalGo()) ) {s = 21;}

                         
                        input.seek(index37_18);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_22 = input.LA(1);

                         
                        int index37_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalGo()) ) {s = 20;}

                        else if ( (synpred53_InternalGo()) ) {s = 21;}

                         
                        input.seek(index37_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_35s = "\32\uffff";
    static final String dfa_36s = "\1\4\23\0\6\uffff";
    static final String dfa_37s = "\1\75\23\0\6\uffff";
    static final String dfa_38s = "\24\uffff\1\6\1\1\1\2\1\3\1\5\1\4";
    static final String dfa_39s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\6\uffff}>";
    static final String[] dfa_40s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\1\uffff\1\24\2\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "2964:2: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_1 = input.LA(1);

                         
                        int index39_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA39_2 = input.LA(1);

                         
                        int index39_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA39_3 = input.LA(1);

                         
                        int index39_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA39_4 = input.LA(1);

                         
                        int index39_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA39_5 = input.LA(1);

                         
                        int index39_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA39_6 = input.LA(1);

                         
                        int index39_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA39_7 = input.LA(1);

                         
                        int index39_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA39_8 = input.LA(1);

                         
                        int index39_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA39_9 = input.LA(1);

                         
                        int index39_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA39_10 = input.LA(1);

                         
                        int index39_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred65_InternalGo()) ) {s = 25;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA39_11 = input.LA(1);

                         
                        int index39_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred65_InternalGo()) ) {s = 25;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA39_12 = input.LA(1);

                         
                        int index39_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA39_13 = input.LA(1);

                         
                        int index39_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA39_14 = input.LA(1);

                         
                        int index39_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA39_15 = input.LA(1);

                         
                        int index39_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA39_16 = input.LA(1);

                         
                        int index39_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA39_17 = input.LA(1);

                         
                        int index39_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA39_18 = input.LA(1);

                         
                        int index39_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA39_19 = input.LA(1);

                         
                        int index39_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 21;}

                        else if ( (synpred63_InternalGo()) ) {s = 22;}

                        else if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index39_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\51\uffff";
    static final String dfa_42s = "\1\24\50\uffff";
    static final String dfa_43s = "\1\4\23\0\25\uffff";
    static final String dfa_44s = "\1\122\23\0\25\uffff";
    static final String dfa_45s = "\24\uffff\1\2\23\uffff\1\1";
    static final String dfa_46s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\25\uffff}>";
    static final String[] dfa_47s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\4\24\1\22\1\uffff\1\17\1\11\1\20\1\21\1\uffff\5\24\1\uffff\5\24\1\uffff\2\24\3\uffff\3\24",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "3151:3: ( (lv_expressionlist_2_0= ruleExpressionList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA40_2 = input.LA(1);

                         
                        int index40_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA40_3 = input.LA(1);

                         
                        int index40_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA40_4 = input.LA(1);

                         
                        int index40_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA40_5 = input.LA(1);

                         
                        int index40_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA40_6 = input.LA(1);

                         
                        int index40_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA40_7 = input.LA(1);

                         
                        int index40_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA40_8 = input.LA(1);

                         
                        int index40_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA40_9 = input.LA(1);

                         
                        int index40_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA40_10 = input.LA(1);

                         
                        int index40_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA40_11 = input.LA(1);

                         
                        int index40_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA40_12 = input.LA(1);

                         
                        int index40_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA40_13 = input.LA(1);

                         
                        int index40_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA40_14 = input.LA(1);

                         
                        int index40_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA40_15 = input.LA(1);

                         
                        int index40_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA40_16 = input.LA(1);

                         
                        int index40_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA40_17 = input.LA(1);

                         
                        int index40_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA40_18 = input.LA(1);

                         
                        int index40_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA40_19 = input.LA(1);

                         
                        int index40_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 40;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index40_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\26\uffff";
    static final String dfa_49s = "\1\4\23\0\2\uffff";
    static final String dfa_50s = "\1\75\23\0\2\uffff";
    static final String dfa_51s = "\24\uffff\1\1\1\2";
    static final String dfa_52s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\2\uffff}>";
    static final String[] dfa_53s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\1\uffff\1\24\2\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "3299:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_1 = input.LA(1);

                         
                        int index43_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_2 = input.LA(1);

                         
                        int index43_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_3 = input.LA(1);

                         
                        int index43_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_4 = input.LA(1);

                         
                        int index43_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_5 = input.LA(1);

                         
                        int index43_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA43_6 = input.LA(1);

                         
                        int index43_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA43_7 = input.LA(1);

                         
                        int index43_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA43_10 = input.LA(1);

                         
                        int index43_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA43_11 = input.LA(1);

                         
                        int index43_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA43_12 = input.LA(1);

                         
                        int index43_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA43_13 = input.LA(1);

                         
                        int index43_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA43_14 = input.LA(1);

                         
                        int index43_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA43_15 = input.LA(1);

                         
                        int index43_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA43_16 = input.LA(1);

                         
                        int index43_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA43_17 = input.LA(1);

                         
                        int index43_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA43_18 = input.LA(1);

                         
                        int index43_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA43_19 = input.LA(1);

                         
                        int index43_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index43_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\30\uffff";
    static final String dfa_55s = "\1\4\23\0\4\uffff";
    static final String dfa_56s = "\1\123\23\0\4\uffff";
    static final String dfa_57s = "\24\uffff\1\2\1\3\1\4\1\1";
    static final String dfa_58s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\4\uffff}>";
    static final String[] dfa_59s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\1\26\1\24\2\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21\25\uffff\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_54;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "3606:3: ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_4 = input.LA(1);

                         
                        int index48_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_5 = input.LA(1);

                         
                        int index48_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA48_6 = input.LA(1);

                         
                        int index48_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA48_8 = input.LA(1);

                         
                        int index48_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA48_9 = input.LA(1);

                         
                        int index48_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA48_11 = input.LA(1);

                         
                        int index48_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA48_12 = input.LA(1);

                         
                        int index48_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA48_13 = input.LA(1);

                         
                        int index48_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA48_14 = input.LA(1);

                         
                        int index48_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA48_15 = input.LA(1);

                         
                        int index48_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA48_16 = input.LA(1);

                         
                        int index48_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA48_17 = input.LA(1);

                         
                        int index48_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA48_18 = input.LA(1);

                         
                        int index48_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA48_19 = input.LA(1);

                         
                        int index48_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 21;}

                         
                        input.seek(index48_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\53\uffff";
    static final String dfa_61s = "\1\13\52\uffff";
    static final String dfa_62s = "\1\4\12\0\40\uffff";
    static final String dfa_63s = "\1\122\12\0\40\uffff";
    static final String dfa_64s = "\13\uffff\1\2\36\uffff\1\1";
    static final String dfa_65s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\40\uffff}>";
    static final String[] dfa_66s = {
            "\3\13\4\uffff\1\1\2\uffff\4\13\27\uffff\1\4\1\uffff\1\13\1\uffff\1\13\1\12\1\13\1\uffff\1\2\1\uffff\1\3\4\13\1\11\1\uffff\1\5\1\6\1\7\1\10\1\uffff\5\13\1\uffff\10\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "3850:3: ( (lv_tp_1_0= ruleType ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_1 = input.LA(1);

                         
                        int index52_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA52_2 = input.LA(1);

                         
                        int index52_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA52_3 = input.LA(1);

                         
                        int index52_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA52_4 = input.LA(1);

                         
                        int index52_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA52_5 = input.LA(1);

                         
                        int index52_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA52_6 = input.LA(1);

                         
                        int index52_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA52_7 = input.LA(1);

                         
                        int index52_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA52_8 = input.LA(1);

                         
                        int index52_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA52_9 = input.LA(1);

                         
                        int index52_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA52_10 = input.LA(1);

                         
                        int index52_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index52_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "4284:3: ( (lv_tp2_1_0= ruleType ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_2 = input.LA(1);

                         
                        int index60_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_3 = input.LA(1);

                         
                        int index60_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA60_4 = input.LA(1);

                         
                        int index60_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA60_5 = input.LA(1);

                         
                        int index60_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA60_6 = input.LA(1);

                         
                        int index60_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA60_7 = input.LA(1);

                         
                        int index60_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA60_8 = input.LA(1);

                         
                        int index60_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA60_9 = input.LA(1);

                         
                        int index60_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA60_10 = input.LA(1);

                         
                        int index60_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 42;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_67s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\4\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "4523:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_2 = input.LA(1);

                         
                        int index62_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_3 = input.LA(1);

                         
                        int index62_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA62_4 = input.LA(1);

                         
                        int index62_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA62_5 = input.LA(1);

                         
                        int index62_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA62_6 = input.LA(1);

                         
                        int index62_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA62_7 = input.LA(1);

                         
                        int index62_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA62_8 = input.LA(1);

                         
                        int index62_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA62_9 = input.LA(1);

                         
                        int index62_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA62_10 = input.LA(1);

                         
                        int index62_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA62_11 = input.LA(1);

                         
                        int index62_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA62_12 = input.LA(1);

                         
                        int index62_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA62_13 = input.LA(1);

                         
                        int index62_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA62_14 = input.LA(1);

                         
                        int index62_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA62_15 = input.LA(1);

                         
                        int index62_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA62_16 = input.LA(1);

                         
                        int index62_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA62_17 = input.LA(1);

                         
                        int index62_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA62_18 = input.LA(1);

                         
                        int index62_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA62_19 = input.LA(1);

                         
                        int index62_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index62_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_68s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\1\25\1\24\2\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "4787:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) (otherlv_3= ';' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_1 = input.LA(1);

                         
                        int index65_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_2 = input.LA(1);

                         
                        int index65_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA65_3 = input.LA(1);

                         
                        int index65_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA65_4 = input.LA(1);

                         
                        int index65_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA65_5 = input.LA(1);

                         
                        int index65_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA65_6 = input.LA(1);

                         
                        int index65_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA65_7 = input.LA(1);

                         
                        int index65_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA65_8 = input.LA(1);

                         
                        int index65_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA65_9 = input.LA(1);

                         
                        int index65_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA65_10 = input.LA(1);

                         
                        int index65_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA65_11 = input.LA(1);

                         
                        int index65_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA65_12 = input.LA(1);

                         
                        int index65_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA65_13 = input.LA(1);

                         
                        int index65_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA65_14 = input.LA(1);

                         
                        int index65_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA65_15 = input.LA(1);

                         
                        int index65_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA65_16 = input.LA(1);

                         
                        int index65_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA65_17 = input.LA(1);

                         
                        int index65_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA65_18 = input.LA(1);

                         
                        int index65_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA65_19 = input.LA(1);

                         
                        int index65_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index65_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_69s = "\1\4\22\0\3\uffff";
    static final String dfa_70s = "\1\75\22\0\3\uffff";
    static final String dfa_71s = "\23\uffff\1\1\1\uffff\1\2";
    static final String dfa_72s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\3\uffff}>";
    static final String[] dfa_73s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\1\uffff\1\23\2\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "5025:3: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) (otherlv_2= ';' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_1 = input.LA(1);

                         
                        int index70_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA70_2 = input.LA(1);

                         
                        int index70_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA70_3 = input.LA(1);

                         
                        int index70_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA70_4 = input.LA(1);

                         
                        int index70_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA70_5 = input.LA(1);

                         
                        int index70_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA70_6 = input.LA(1);

                         
                        int index70_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA70_7 = input.LA(1);

                         
                        int index70_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA70_8 = input.LA(1);

                         
                        int index70_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA70_9 = input.LA(1);

                         
                        int index70_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA70_10 = input.LA(1);

                         
                        int index70_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA70_11 = input.LA(1);

                         
                        int index70_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA70_12 = input.LA(1);

                         
                        int index70_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA70_13 = input.LA(1);

                         
                        int index70_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA70_14 = input.LA(1);

                         
                        int index70_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA70_15 = input.LA(1);

                         
                        int index70_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA70_16 = input.LA(1);

                         
                        int index70_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA70_17 = input.LA(1);

                         
                        int index70_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA70_18 = input.LA(1);

                         
                        int index70_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "5461:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA75_2 = input.LA(1);

                         
                        int index75_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA75_3 = input.LA(1);

                         
                        int index75_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA75_4 = input.LA(1);

                         
                        int index75_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA75_5 = input.LA(1);

                         
                        int index75_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA75_6 = input.LA(1);

                         
                        int index75_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA75_7 = input.LA(1);

                         
                        int index75_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA75_8 = input.LA(1);

                         
                        int index75_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA75_9 = input.LA(1);

                         
                        int index75_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA75_10 = input.LA(1);

                         
                        int index75_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA75_11 = input.LA(1);

                         
                        int index75_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA75_12 = input.LA(1);

                         
                        int index75_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA75_13 = input.LA(1);

                         
                        int index75_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA75_14 = input.LA(1);

                         
                        int index75_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA75_15 = input.LA(1);

                         
                        int index75_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA75_16 = input.LA(1);

                         
                        int index75_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA75_17 = input.LA(1);

                         
                        int index75_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA75_18 = input.LA(1);

                         
                        int index75_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA75_19 = input.LA(1);

                         
                        int index75_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_74s = "\1\4\23\0\3\uffff";
    static final String dfa_75s = "\1\75\23\0\3\uffff";
    static final String dfa_76s = "\24\uffff\1\1\1\3\1\2";
    static final String dfa_77s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\3\uffff}>";
    static final String[] dfa_78s = {
            "\1\12\1\3\1\2\4\uffff\1\16\2\uffff\1\23\1\1\1\5\1\6\27\uffff\1\14\1\uffff\1\13\1\uffff\1\4\1\15\2\uffff\1\10\1\uffff\1\7\4\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "5539:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_2 = input.LA(1);

                         
                        int index77_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_3 = input.LA(1);

                         
                        int index77_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_4 = input.LA(1);

                         
                        int index77_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_5 = input.LA(1);

                         
                        int index77_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_6 = input.LA(1);

                         
                        int index77_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA77_7 = input.LA(1);

                         
                        int index77_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA77_8 = input.LA(1);

                         
                        int index77_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA77_10 = input.LA(1);

                         
                        int index77_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (synpred107_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA77_11 = input.LA(1);

                         
                        int index77_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (synpred107_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA77_12 = input.LA(1);

                         
                        int index77_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA77_13 = input.LA(1);

                         
                        int index77_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA77_14 = input.LA(1);

                         
                        int index77_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA77_15 = input.LA(1);

                         
                        int index77_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA77_16 = input.LA(1);

                         
                        int index77_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA77_17 = input.LA(1);

                         
                        int index77_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA77_18 = input.LA(1);

                         
                        int index77_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA77_19 = input.LA(1);

                         
                        int index77_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\1\4\23\uffff\1\0\1\uffff";
    static final String dfa_80s = "\1\75\23\uffff\1\0\1\uffff";
    static final String dfa_81s = "\1\uffff\1\1\23\uffff\1\2";
    static final String dfa_82s = "\24\uffff\1\0\1\uffff}>";
    static final String[] dfa_83s = {
            "\3\1\4\uffff\1\1\2\uffff\4\1\27\uffff\1\1\1\uffff\1\1\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\24\2\uffff\1\1\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "5716:3: ( (lv_init_1_0= ruleInitStmt ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_20 = input.LA(1);

                         
                        int index78_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_84s = "\13\uffff";
    static final String dfa_85s = "\1\4\1\uffff\1\15\1\4\1\uffff\1\4\1\uffff\2\15\1\4\1\15";
    static final String dfa_86s = "\1\123\1\uffff\1\117\1\4\1\uffff\1\75\1\uffff\2\117\1\4\1\117";
    static final String dfa_87s = "\1\uffff\1\1\2\uffff\1\3\1\uffff\1\2\4\uffff";
    static final String dfa_88s = "\13\uffff}>";
    static final String[] dfa_89s = {
            "\1\2\2\1\4\uffff\1\1\2\uffff\4\1\27\uffff\1\1\1\uffff\1\3\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\uffff\4\1\25\uffff\1\4",
            "",
            "\1\1\40\uffff\1\1\1\uffff\2\1\2\uffff\1\1\2\uffff\1\5\1\1\21\uffff\1\1\4\uffff\1\6",
            "\1\7",
            "",
            "\1\10\2\1\4\uffff\1\1\2\uffff\4\1\27\uffff\1\1\1\uffff\1\11\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\uffff\4\1",
            "",
            "\1\1\40\uffff\1\1\1\uffff\2\1\2\uffff\1\1\2\uffff\1\5\1\1\21\uffff\1\1\4\uffff\1\6",
            "\1\1\40\uffff\1\1\1\uffff\2\1\2\uffff\1\1\2\uffff\1\5\1\1\21\uffff\1\1\4\uffff\1\6",
            "\1\12",
            "\1\1\40\uffff\1\1\1\uffff\2\1\2\uffff\1\1\2\uffff\1\5\1\1\21\uffff\1\1\4\uffff\1\6"
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "5800:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_90s = "\56\uffff";
    static final String dfa_91s = "\1\1\55\uffff";
    static final String dfa_92s = "\1\4\1\uffff\1\0\53\uffff";
    static final String dfa_93s = "\1\122\1\uffff\1\0\53\uffff";
    static final String dfa_94s = "\1\uffff\1\2\53\uffff\1\1";
    static final String dfa_95s = "\2\uffff\1\0\53\uffff}>";
    static final String[] dfa_96s = {
            "\3\1\4\uffff\2\1\1\uffff\4\1\27\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\1\1\1\uffff\4\1\1\2\14\1\1\uffff\10\1\3\uffff\3\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_90;
            this.eof = dfa_91;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_94;
            this.special = dfa_95;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "()* loopback of 6035:3: (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_2 = input.LA(1);

                         
                        int index82_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_97s = "\24\uffff";
    static final String dfa_98s = "\1\4\21\uffff\1\0\1\uffff";
    static final String dfa_99s = "\1\75\21\uffff\1\0\1\uffff";
    static final String dfa_100s = "\1\uffff\1\1\21\uffff\1\2";
    static final String dfa_101s = "\22\uffff\1\0\1\uffff}>";
    static final String[] dfa_102s = {
            "\3\1\4\uffff\1\1\2\uffff\1\23\3\1\27\uffff\1\1\1\uffff\1\1\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\4\uffff\1\22\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_97;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "6245:2: ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( ( (lv_up_2_1= RULE_UNARY_OP | lv_up_2_2= '*' ) ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_18 = input.LA(1);

                         
                        int index86_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index86_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_103s = "\25\uffff";
    static final String dfa_104s = "\1\4\6\uffff\3\0\2\uffff\7\0\2\uffff";
    static final String dfa_105s = "\1\75\6\uffff\3\0\2\uffff\7\0\2\uffff";
    static final String dfa_106s = "\1\uffff\1\1\21\uffff\1\2\1\3";
    static final String dfa_107s = "\7\uffff\1\0\1\1\1\2\2\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff}>";
    static final String[] dfa_108s = {
            "\3\1\4\uffff\1\16\3\uffff\3\1\27\uffff\1\14\1\uffff\1\1\1\uffff\1\1\1\15\2\uffff\1\10\1\uffff\1\7\4\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_103;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "6348:2: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred118_InternalGo()) ) {s = 1;}

                        else if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_8 = input.LA(1);

                         
                        int index87_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred118_InternalGo()) ) {s = 1;}

                        else if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_9 = input.LA(1);

                         
                        int index87_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred118_InternalGo()) ) {s = 1;}

                        else if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_12 = input.LA(1);

                         
                        int index87_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred118_InternalGo()) ) {s = 1;}

                        else if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_13 = input.LA(1);

                         
                        int index87_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred118_InternalGo()) ) {s = 1;}

                        else if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_14 = input.LA(1);

                         
                        int index87_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA87_15 = input.LA(1);

                         
                        int index87_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_15);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA87_16 = input.LA(1);

                         
                        int index87_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA87_17 = input.LA(1);

                         
                        int index87_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_17);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA87_18 = input.LA(1);

                         
                        int index87_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index87_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\67\uffff";
    static final String dfa_110s = "\1\4\66\uffff";
    static final String dfa_111s = "\1\4\3\0\63\uffff";
    static final String dfa_112s = "\1\122\3\0\63\uffff";
    static final String dfa_113s = "\4\uffff\1\6\55\uffff\1\1\1\4\1\2\1\3\1\5";
    static final String dfa_114s = "\1\uffff\1\0\1\1\1\2\63\uffff}>";
    static final String[] dfa_115s = {
            "\3\4\4\uffff\7\4\27\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\3\1\4\1\1\1\2\22\4\1\uffff\12\4\1\uffff\3\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_109;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "6510:3: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_1 = input.LA(1);

                         
                        int index88_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalGo()) ) {s = 50;}

                        else if ( (synpred123_InternalGo()) ) {s = 51;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index88_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_2 = input.LA(1);

                         
                        int index88_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 52;}

                        else if ( (synpred122_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index88_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA88_3 = input.LA(1);

                         
                        int index88_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index88_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_116s = "\17\uffff";
    static final String dfa_117s = "\1\4\11\uffff\2\0\3\uffff";
    static final String dfa_118s = "\1\73\11\uffff\2\0\3\uffff";
    static final String dfa_119s = "\1\uffff\1\1\13\uffff\1\3\1\2";
    static final String dfa_120s = "\12\uffff\1\0\1\1\3\uffff}>";
    static final String[] dfa_121s = {
            "\1\12\2\1\10\uffff\3\1\27\uffff\1\1\1\uffff\1\13\1\uffff\1\1\1\15\2\uffff\1\1\1\uffff\1\1\7\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[][] dfa_121 = unpackEncodedStringArray(dfa_121s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_116;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "6734:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( ( (lv_operandn_2_0= ruleOperandName ) ) (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )? ) | (otherlv_6= '(' ( (lv_expression_7_0= ruleExpression ) ) otherlv_8= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_10 = input.LA(1);

                         
                        int index90_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 14;}

                         
                        input.seek(index90_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_11 = input.LA(1);

                         
                        int index90_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 14;}

                         
                        input.seek(index90_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_122s = "\63\uffff";
    static final String dfa_123s = "\1\2\62\uffff";
    static final String dfa_124s = "\1\4\1\0\61\uffff";
    static final String dfa_125s = "\1\122\1\0\61\uffff";
    static final String dfa_126s = "\2\uffff\1\2\57\uffff\1\1";
    static final String dfa_127s = "\1\uffff\1\0\61\uffff}>";
    static final String[] dfa_128s = {
            "\3\2\4\uffff\7\2\27\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\1\25\2\1\uffff\12\2\1\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[][] dfa_128 = unpackEncodedStringArray(dfa_128s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_122;
            this.eof = dfa_123;
            this.min = dfa_124;
            this.max = dfa_125;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_128;
        }
        public String getDescription() {
            return "6787:4: (otherlv_3= '(' ( (lv_exp_4_0= ruleExpressionList ) ) otherlv_5= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_1 = input.LA(1);

                         
                        int index89_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalGo()) ) {s = 50;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index89_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_129s = "\1\uffff\1\1\22\uffff\1\2";
    static final String[] dfa_130s = {
            "\3\1\4\uffff\1\16\2\uffff\4\1\27\uffff\1\14\1\uffff\1\1\1\uffff\1\1\1\15\2\uffff\1\10\1\uffff\1\7\4\uffff\1\22\1\uffff\1\17\1\11\1\20\1\21",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_103;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_129;
            this.special = dfa_107;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "7294:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_7 = input.LA(1);

                         
                        int index97_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA97_8 = input.LA(1);

                         
                        int index97_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA97_9 = input.LA(1);

                         
                        int index97_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA97_12 = input.LA(1);

                         
                        int index97_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA97_13 = input.LA(1);

                         
                        int index97_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA97_14 = input.LA(1);

                         
                        int index97_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA97_15 = input.LA(1);

                         
                        int index97_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_15);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA97_16 = input.LA(1);

                         
                        int index97_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA97_17 = input.LA(1);

                         
                        int index97_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_17);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA97_18 = input.LA(1);

                         
                        int index97_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index97_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_131s = "\1\4\24\0\2\uffff";
    static final String dfa_132s = "\1\75\24\0\2\uffff";
    static final String dfa_133s = "\25\uffff\1\1\1\2";
    static final String dfa_134s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\2\uffff}>";
    static final String[] dfa_135s = {
            "\1\1\1\5\1\4\4\uffff\1\16\2\uffff\1\23\1\3\1\7\1\10\27\uffff\1\14\1\uffff\1\2\1\uffff\1\6\1\15\2\uffff\1\12\1\uffff\1\11\1\24\3\uffff\1\22\1\uffff\1\17\1\13\1\20\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_131 = DFA.unpackEncodedStringToUnsignedChars(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[][] dfa_135 = unpackEncodedStringArray(dfa_135s);

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_131;
            this.max = dfa_132;
            this.accept = dfa_133;
            this.special = dfa_134;
            this.transition = dfa_135;
        }
        public String getDescription() {
            return "7891:3: (this_Key_0= ruleKey otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA107_1 = input.LA(1);

                         
                        int index107_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA107_2 = input.LA(1);

                         
                        int index107_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA107_3 = input.LA(1);

                         
                        int index107_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA107_4 = input.LA(1);

                         
                        int index107_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA107_5 = input.LA(1);

                         
                        int index107_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA107_6 = input.LA(1);

                         
                        int index107_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA107_7 = input.LA(1);

                         
                        int index107_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA107_8 = input.LA(1);

                         
                        int index107_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA107_9 = input.LA(1);

                         
                        int index107_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA107_10 = input.LA(1);

                         
                        int index107_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA107_11 = input.LA(1);

                         
                        int index107_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA107_12 = input.LA(1);

                         
                        int index107_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA107_13 = input.LA(1);

                         
                        int index107_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA107_14 = input.LA(1);

                         
                        int index107_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA107_15 = input.LA(1);

                         
                        int index107_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA107_16 = input.LA(1);

                         
                        int index107_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA107_17 = input.LA(1);

                         
                        int index107_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA107_18 = input.LA(1);

                         
                        int index107_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA107_19 = input.LA(1);

                         
                        int index107_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA107_20 = input.LA(1);

                         
                        int index107_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index107_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 107, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_136s = "\1\uffff\1\4\3\uffff\1\4\4\uffff";
    static final String dfa_137s = "\4\4\1\uffff\1\4\1\0\1\4\1\uffff\1\0";
    static final String dfa_138s = "\1\53\1\122\1\4\1\56\1\uffff\1\122\1\0\1\4\1\uffff\1\0";
    static final String dfa_139s = "\4\uffff\1\1\3\uffff\1\2\1\uffff";
    static final String dfa_140s = "\6\uffff\1\1\2\uffff\1\0}>";
    static final String[] dfa_141s = {
            "\1\1\46\uffff\1\2",
            "\3\4\4\uffff\7\4\27\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\3\23\4\1\uffff\12\4\1\uffff\3\4",
            "\1\5",
            "\1\6\46\uffff\1\7\2\uffff\1\4",
            "",
            "\3\4\4\uffff\7\4\27\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\3\23\4\1\uffff\12\4\1\uffff\3\4",
            "\1\uffff",
            "\1\11",
            "",
            "\1\uffff"
    };
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[][] dfa_141 = unpackEncodedStringArray(dfa_141s);

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_1;
            this.eof = dfa_136;
            this.min = dfa_137;
            this.max = dfa_138;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_141;
        }
        public String getDescription() {
            return "8294:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_9 = input.LA(1);

                         
                        int index111_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 4;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index111_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_6 = input.LA(1);

                         
                        int index111_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 4;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index111_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000020000000002L,0x0000000000101A00L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000020000000002L,0x0000000000001A00L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000080000000010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x3D0A420000000800L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x3D0A6A000003C870L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x094A080000000010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x096A080000000010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000602L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x080A080000000010L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x3D0A420000000802L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x3F8ACA0000000810L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x3F8A4A0000000810L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x3F0A420000000802L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x3F0A420000000800L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x084A080000000010L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x086A080000000010L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xBD7A6A000003C870L,0x0000000000011BEFL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0xBDBA6A000003C872L,0x0000000000011BEFL});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0xBD3A6A000003C872L,0x0000000000011BEFL});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0xBD3A6A000003C870L,0x0000000000011BEFL});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x3D0A6A000003C872L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000080000000012L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x3D2A6A000003C870L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0040000000000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x3D3A6A000003C870L,0x0000000000080000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000480000000010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000880000000010L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0020880000000010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x3D0A420000000802L,0x0000000000000400L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000400L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x3D3A6A000003C870L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x3D1A6A000003C870L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x3D0A6A0000038870L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x3D2A6A000003C872L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0100000000002000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0003400000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0080800000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x7D0A6A000003C870L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x3D0E6A000003C870L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x3D0AEA000003C870L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0280800000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x3D5A6A000003C870L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x00C0000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x3D9A6A000003C872L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0001480000010010L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0001880000010010L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0001080000010010L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0020000000000002L});

}