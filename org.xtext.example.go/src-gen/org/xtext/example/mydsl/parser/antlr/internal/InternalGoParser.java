package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_DECIMALS", "RULE_FLOAT_LIT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_ASSING_OP", "RULE_BINARY_OP", "RULE_UNARY_OP", "RULE_INT_LIT", "RULE_STRING", "RULE_NEWLINE", "RULE_UNICODE_CHAR", "RULE_UNICODE_LETTER", "RULE_REL_OP", "RULE_MUL_OP", "RULE_ADD_OP", "RULE_MUL", "RULE_EQUALS", "RULE_INT", "RULE_DECIMAL_DIGIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_DECIMAL_LIT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_EXPOENT", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'func'", "'package'", "'\\u00EF'", "'\\''", "'('", "')'", "'.'", "'['", "']'", "'struct'", "'{'", "';'", "'}'", "','", "'...'", "'interface'", "'map'", "'chan'", "'<-'", "':'", "'goto'", "'return'", "'break'", "'continue'", "'if'", "'else'", "'fallthrough'", "'select'", "'for'", "'defer'", "'const'", "'type'", "'var'", "'++'", "'--'", "':='", "'switch'", "'case'", "'default'", "'range'", "'import'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=25;
    public static final int RULE_EQUALS=23;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int RULE_BINARY_OP=12;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INTERPRETED_STRING_LIT=10;
    public static final int RULE_UNICODE_VALUE=7;
    public static final int RULE_LITTLE_U_VALUE=32;
    public static final int RULE_ASSING_OP=11;
    public static final int RULE_HEX_BYTE_VALUE=36;
    public static final int RULE_OCTAL_BYTE_VALUE=35;
    public static final int RULE_MUL_OP=20;
    public static final int RULE_INT=24;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=37;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int RULE_EXPOENT=31;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=5;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_NEWLINE=16;
    public static final int RULE_BIG_U_VALUE=33;
    public static final int RULE_ESCAPED_CHAR=34;
    public static final int RULE_STRING=15;
    public static final int RULE_BYTE_VALUE=8;
    public static final int RULE_SL_COMMENT=38;
    public static final int RULE_UNICODE_LETTER=18;
    public static final int T__77=77;
    public static final int RULE_UNICODE_CHAR=17;
    public static final int RULE_HEX_LIT=30;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int RULE_MUL=22;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=21;
    public static final int RULE_OCTAL_DIGIT=26;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int RULE_WS=39;
    public static final int RULE_ANY_OTHER=40;
    public static final int RULE_OCTAL_LIT=29;
    public static final int RULE_FLOAT_LIT=6;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=9;
    public static final int RULE_INT_LIT=14;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=13;
    public static final int T__45=45;
    public static final int RULE_REL_OP=19;
    public static final int RULE_HEX_DIGIT=27;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int RULE_DECIMAL_LIT=28;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalGo.g:70:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalGo.g:70:46: (iv_ruleModel= ruleModel EOF )
            // InternalGo.g:71:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:77:1: ruleModel returns [EObject current=null] : ( (lv_greetings_0_0= ruleCompilation_initial ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_greetings_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( (lv_greetings_0_0= ruleCompilation_initial ) ) )
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            {
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            {
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            // InternalGo.g:86:4: lv_greetings_0_0= ruleCompilation_initial
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getGreetingsCompilation_initialParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_greetings_0_0=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"greetings",
              					lv_greetings_0_0,
              					"org.xtext.example.mydsl.Go.Compilation_initial");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleCompilation_initial"
    // InternalGo.g:106:1: entryRuleCompilation_initial returns [EObject current=null] : iv_ruleCompilation_initial= ruleCompilation_initial EOF ;
    public final EObject entryRuleCompilation_initial() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompilation_initial = null;


        try {
            // InternalGo.g:106:60: (iv_ruleCompilation_initial= ruleCompilation_initial EOF )
            // InternalGo.g:107:2: iv_ruleCompilation_initial= ruleCompilation_initial EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompilation_initialRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompilation_initial=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompilation_initial; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompilation_initial"


    // $ANTLR start "ruleCompilation_initial"
    // InternalGo.g:113:1: ruleCompilation_initial returns [EObject current=null] : ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? ) ;
    public final EObject ruleCompilation_initial() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_initial_1_0 = null;

        EObject lv_importdecl_2_0 = null;

        EObject lv_toplevel_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:119:2: ( ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? ) )
            // InternalGo.g:120:2: ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? )
            {
            // InternalGo.g:120:2: ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? )
            // InternalGo.g:121:3: () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )?
            {
            // InternalGo.g:121:3: ()
            // InternalGo.g:122:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCompilation_initialAccess().getCompilation_initialAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:131:3: ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==42) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalGo.g:132:4: ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )*
                    {
                    // InternalGo.g:132:4: ( (lv_initial_1_0= rulePackageClause ) )
                    // InternalGo.g:133:5: (lv_initial_1_0= rulePackageClause )
                    {
                    // InternalGo.g:133:5: (lv_initial_1_0= rulePackageClause )
                    // InternalGo.g:134:6: lv_initial_1_0= rulePackageClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getInitialPackageClauseParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_initial_1_0=rulePackageClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                      						}
                      						set(
                      							current,
                      							"initial",
                      							lv_initial_1_0,
                      							"org.xtext.example.mydsl.Go.PackageClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:151:4: ( (lv_importdecl_2_0= ruleImportDecl ) )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==81) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalGo.g:152:5: (lv_importdecl_2_0= ruleImportDecl )
                    	    {
                    	    // InternalGo.g:152:5: (lv_importdecl_2_0= ruleImportDecl )
                    	    // InternalGo.g:153:6: lv_importdecl_2_0= ruleImportDecl
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getImportdeclImportDeclParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_importdecl_2_0=ruleImportDecl();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"importdecl",
                    	      							lv_importdecl_2_0,
                    	      							"org.xtext.example.mydsl.Go.ImportDecl");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                    // InternalGo.g:170:4: ( (lv_toplevel_3_0= ruleTopLevelDecl ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==41||(LA2_0>=71 && LA2_0<=73)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalGo.g:171:5: (lv_toplevel_3_0= ruleTopLevelDecl )
                    	    {
                    	    // InternalGo.g:171:5: (lv_toplevel_3_0= ruleTopLevelDecl )
                    	    // InternalGo.g:172:6: lv_toplevel_3_0= ruleTopLevelDecl
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getToplevelTopLevelDeclParserRuleCall_1_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_toplevel_3_0=ruleTopLevelDecl();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"toplevel",
                    	      							lv_toplevel_3_0,
                    	      							"org.xtext.example.mydsl.Go.TopLevelDecl");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompilation_initial"


    // $ANTLR start "entryRuleTopLevelDecl"
    // InternalGo.g:194:1: entryRuleTopLevelDecl returns [EObject current=null] : iv_ruleTopLevelDecl= ruleTopLevelDecl EOF ;
    public final EObject entryRuleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelDecl = null;


        try {
            // InternalGo.g:194:53: (iv_ruleTopLevelDecl= ruleTopLevelDecl EOF )
            // InternalGo.g:195:2: iv_ruleTopLevelDecl= ruleTopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTopLevelDecl=ruleTopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelDecl"


    // $ANTLR start "ruleTopLevelDecl"
    // InternalGo.g:201:1: ruleTopLevelDecl returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl ) ;
    public final EObject ruleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_FunctionDecl_1 = null;

        EObject this_MethodDecl_2 = null;



        	enterRule();

        try {
            // InternalGo.g:207:2: ( (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl ) )
            // InternalGo.g:208:2: (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl )
            {
            // InternalGo.g:208:2: (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl )
            int alt4=3;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=71 && LA4_0<=73)) ) {
                alt4=1;
            }
            else if ( (LA4_0==41) ) {
                int LA4_2 = input.LA(2);

                if ( (LA4_2==45) ) {
                    alt4=3;
                }
                else if ( (LA4_2==RULE_ID) ) {
                    alt4=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalGo.g:209:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:221:3: this_FunctionDecl_1= ruleFunctionDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFunctionDeclParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDecl_1=ruleFunctionDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionDecl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:233:3: this_MethodDecl_2= ruleMethodDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMethodDeclParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MethodDecl_2=ruleMethodDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDecl_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelDecl"


    // $ANTLR start "entryRuleMethodDecl"
    // InternalGo.g:248:1: entryRuleMethodDecl returns [EObject current=null] : iv_ruleMethodDecl= ruleMethodDecl EOF ;
    public final EObject entryRuleMethodDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDecl = null;


        try {
            // InternalGo.g:248:51: (iv_ruleMethodDecl= ruleMethodDecl EOF )
            // InternalGo.g:249:2: iv_ruleMethodDecl= ruleMethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodDecl=ruleMethodDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDecl"


    // $ANTLR start "ruleMethodDecl"
    // InternalGo.g:255:1: ruleMethodDecl returns [EObject current=null] : ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleMethodDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_receiver_2_0 = null;

        AntlrDatatypeRuleToken lv_method_3_0 = null;

        EObject lv_signature_4_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:261:2: ( ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:262:2: ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:262:2: ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? )
            // InternalGo.g:263:3: () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )?
            {
            // InternalGo.g:263:3: ()
            // InternalGo.g:264:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclAccess().getMethodDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodDeclAccess().getFuncKeyword_1());
              		
            }
            // InternalGo.g:277:3: ( (lv_receiver_2_0= ruleReceiver ) )
            // InternalGo.g:278:4: (lv_receiver_2_0= ruleReceiver )
            {
            // InternalGo.g:278:4: (lv_receiver_2_0= ruleReceiver )
            // InternalGo.g:279:5: lv_receiver_2_0= ruleReceiver
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_receiver_2_0=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"receiver",
              						lv_receiver_2_0,
              						"org.xtext.example.mydsl.Go.Receiver");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:296:3: ( (lv_method_3_0= ruleMethodName ) )
            // InternalGo.g:297:4: (lv_method_3_0= ruleMethodName )
            {
            // InternalGo.g:297:4: (lv_method_3_0= ruleMethodName )
            // InternalGo.g:298:5: lv_method_3_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getMethodMethodNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_method_3_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"method",
              						lv_method_3_0,
              						"org.xtext.example.mydsl.Go.MethodName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:315:3: ( (lv_signature_4_0= ruleSignature ) )
            // InternalGo.g:316:4: (lv_signature_4_0= ruleSignature )
            {
            // InternalGo.g:316:4: (lv_signature_4_0= ruleSignature )
            // InternalGo.g:317:5: lv_signature_4_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_signature_4_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_4_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:334:3: ( (lv_body_5_0= ruleFunctionBody ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==51) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalGo.g:335:4: (lv_body_5_0= ruleFunctionBody )
                    {
                    // InternalGo.g:335:4: (lv_body_5_0= ruleFunctionBody )
                    // InternalGo.g:336:5: lv_body_5_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclAccess().getBodyFunctionBodyParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_5_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_5_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDecl"


    // $ANTLR start "entryRuleReceiver"
    // InternalGo.g:357:1: entryRuleReceiver returns [EObject current=null] : iv_ruleReceiver= ruleReceiver EOF ;
    public final EObject entryRuleReceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiver = null;


        try {
            // InternalGo.g:357:49: (iv_ruleReceiver= ruleReceiver EOF )
            // InternalGo.g:358:2: iv_ruleReceiver= ruleReceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiver=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiver"


    // $ANTLR start "ruleReceiver"
    // InternalGo.g:364:1: ruleReceiver returns [EObject current=null] : this_Parameters_0= ruleParameters ;
    public final EObject ruleReceiver() throws RecognitionException {
        EObject current = null;

        EObject this_Parameters_0 = null;



        	enterRule();

        try {
            // InternalGo.g:370:2: (this_Parameters_0= ruleParameters )
            // InternalGo.g:371:2: this_Parameters_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Parameters_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Parameters_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiver"


    // $ANTLR start "entryRuleFunctionName"
    // InternalGo.g:385:1: entryRuleFunctionName returns [String current=null] : iv_ruleFunctionName= ruleFunctionName EOF ;
    public final String entryRuleFunctionName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFunctionName = null;


        try {
            // InternalGo.g:385:52: (iv_ruleFunctionName= ruleFunctionName EOF )
            // InternalGo.g:386:2: iv_ruleFunctionName= ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionName=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalGo.g:392:1: ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFunctionName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:398:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:399:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFunctionNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleFunctionDecl"
    // InternalGo.g:412:1: entryRuleFunctionDecl returns [EObject current=null] : iv_ruleFunctionDecl= ruleFunctionDecl EOF ;
    public final EObject entryRuleFunctionDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDecl = null;


        try {
            // InternalGo.g:412:53: (iv_ruleFunctionDecl= ruleFunctionDecl EOF )
            // InternalGo.g:413:2: iv_ruleFunctionDecl= ruleFunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDecl=ruleFunctionDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDecl"


    // $ANTLR start "ruleFunctionDecl"
    // InternalGo.g:419:1: ruleFunctionDecl returns [EObject current=null] : ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleFunctionDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_functionn_2_0 = null;

        EObject lv_signature_3_0 = null;

        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:425:2: ( ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:426:2: ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:426:2: ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            // InternalGo.g:427:3: () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )?
            {
            // InternalGo.g:427:3: ()
            // InternalGo.g:428:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionDeclAccess().getFunctionDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,41,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionDeclAccess().getFuncKeyword_1());
              		
            }
            // InternalGo.g:441:3: ( (lv_functionn_2_0= ruleFunctionName ) )
            // InternalGo.g:442:4: (lv_functionn_2_0= ruleFunctionName )
            {
            // InternalGo.g:442:4: (lv_functionn_2_0= ruleFunctionName )
            // InternalGo.g:443:5: lv_functionn_2_0= ruleFunctionName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionnFunctionNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_functionn_2_0=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
              					}
              					set(
              						current,
              						"functionn",
              						lv_functionn_2_0,
              						"org.xtext.example.mydsl.Go.FunctionName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:460:3: ( (lv_signature_3_0= ruleSignature ) )
            // InternalGo.g:461:4: (lv_signature_3_0= ruleSignature )
            {
            // InternalGo.g:461:4: (lv_signature_3_0= ruleSignature )
            // InternalGo.g:462:5: lv_signature_3_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_signature_3_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_3_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:479:3: ( (lv_body_4_0= ruleFunctionBody ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==51) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalGo.g:480:4: (lv_body_4_0= ruleFunctionBody )
                    {
                    // InternalGo.g:480:4: (lv_body_4_0= ruleFunctionBody )
                    // InternalGo.g:481:5: lv_body_4_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionDeclAccess().getBodyFunctionBodyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_4_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_4_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDecl"


    // $ANTLR start "entryRulePackageClause"
    // InternalGo.g:502:1: entryRulePackageClause returns [String current=null] : iv_rulePackageClause= rulePackageClause EOF ;
    public final String entryRulePackageClause() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePackageClause = null;


        try {
            // InternalGo.g:502:53: (iv_rulePackageClause= rulePackageClause EOF )
            // InternalGo.g:503:2: iv_rulePackageClause= rulePackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageClause=rulePackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageClause.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageClause"


    // $ANTLR start "rulePackageClause"
    // InternalGo.g:509:1: rulePackageClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'package' this_PackageName_1= rulePackageName ) ;
    public final AntlrDatatypeRuleToken rulePackageClause() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_PackageName_1 = null;



        	enterRule();

        try {
            // InternalGo.g:515:2: ( (kw= 'package' this_PackageName_1= rulePackageName ) )
            // InternalGo.g:516:2: (kw= 'package' this_PackageName_1= rulePackageName )
            {
            // InternalGo.g:516:2: (kw= 'package' this_PackageName_1= rulePackageName )
            // InternalGo.g:517:3: kw= 'package' this_PackageName_1= rulePackageName
            {
            kw=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageName_1=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PackageName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageClause"


    // $ANTLR start "entryRuleIDENTIFIER"
    // InternalGo.g:536:1: entryRuleIDENTIFIER returns [String current=null] : iv_ruleIDENTIFIER= ruleIDENTIFIER EOF ;
    public final String entryRuleIDENTIFIER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIDENTIFIER = null;


        try {
            // InternalGo.g:536:50: (iv_ruleIDENTIFIER= ruleIDENTIFIER EOF )
            // InternalGo.g:537:2: iv_ruleIDENTIFIER= ruleIDENTIFIER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDENTIFIERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIDENTIFIER=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIDENTIFIER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIDENTIFIER"


    // $ANTLR start "ruleIDENTIFIER"
    // InternalGo.g:543:1: ruleIDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleIDENTIFIER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalGo.g:549:2: (this_ID_0= RULE_ID )
            // InternalGo.g:550:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getIDENTIFIERAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIDENTIFIER"


    // $ANTLR start "entryRuleIMAGINARY_LIT"
    // InternalGo.g:560:1: entryRuleIMAGINARY_LIT returns [String current=null] : iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF ;
    public final String entryRuleIMAGINARY_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIMAGINARY_LIT = null;


        try {
            // InternalGo.g:560:53: (iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF )
            // InternalGo.g:561:2: iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIMAGINARY_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIMAGINARY_LIT=ruleIMAGINARY_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIMAGINARY_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIMAGINARY_LIT"


    // $ANTLR start "ruleIMAGINARY_LIT"
    // InternalGo.g:567:1: ruleIMAGINARY_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' ) ;
    public final AntlrDatatypeRuleToken ruleIMAGINARY_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMALS_0=null;
        Token this_FLOAT_LIT_1=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:573:2: ( ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' ) )
            // InternalGo.g:574:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' )
            {
            // InternalGo.g:574:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF' )
            // InternalGo.g:575:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT ) kw= '\\u00EF'
            {
            // InternalGo.g:575:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= RULE_FLOAT_LIT )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_DECIMALS) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_FLOAT_LIT) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalGo.g:576:4: this_DECIMALS_0= RULE_DECIMALS
                    {
                    this_DECIMALS_0=(Token)match(input,RULE_DECIMALS,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_0, grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:584:4: this_FLOAT_LIT_1= RULE_FLOAT_LIT
                    {
                    this_FLOAT_LIT_1=(Token)match(input,RULE_FLOAT_LIT,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_FLOAT_LIT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_FLOAT_LIT_1, grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getIMAGINARY_LITAccess().getLatinSmallLetterIWithDiaeresisKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIMAGINARY_LIT"


    // $ANTLR start "entryRuleRUNE_LIT"
    // InternalGo.g:601:1: entryRuleRUNE_LIT returns [String current=null] : iv_ruleRUNE_LIT= ruleRUNE_LIT EOF ;
    public final String entryRuleRUNE_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRUNE_LIT = null;


        try {
            // InternalGo.g:601:48: (iv_ruleRUNE_LIT= ruleRUNE_LIT EOF )
            // InternalGo.g:602:2: iv_ruleRUNE_LIT= ruleRUNE_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRUNE_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRUNE_LIT=ruleRUNE_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRUNE_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRUNE_LIT"


    // $ANTLR start "ruleRUNE_LIT"
    // InternalGo.g:608:1: ruleRUNE_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) ;
    public final AntlrDatatypeRuleToken ruleRUNE_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_UNICODE_VALUE_1=null;
        Token this_BYTE_VALUE_2=null;


        	enterRule();

        try {
            // InternalGo.g:614:2: ( (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) )
            // InternalGo.g:615:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            {
            // InternalGo.g:615:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            // InternalGo.g:616:3: kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\''
            {
            kw=(Token)match(input,44,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_0());
              		
            }
            // InternalGo.g:621:3: (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_UNICODE_VALUE) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_BYTE_VALUE) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalGo.g:622:4: this_UNICODE_VALUE_1= RULE_UNICODE_VALUE
                    {
                    this_UNICODE_VALUE_1=(Token)match(input,RULE_UNICODE_VALUE,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UNICODE_VALUE_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UNICODE_VALUE_1, grammarAccess.getRUNE_LITAccess().getUNICODE_VALUETerminalRuleCall_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:630:4: this_BYTE_VALUE_2= RULE_BYTE_VALUE
                    {
                    this_BYTE_VALUE_2=(Token)match(input,RULE_BYTE_VALUE,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BYTE_VALUE_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BYTE_VALUE_2, grammarAccess.getRUNE_LITAccess().getBYTE_VALUETerminalRuleCall_1_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRUNE_LIT"


    // $ANTLR start "entryRuleSTRING_LIT"
    // InternalGo.g:647:1: entryRuleSTRING_LIT returns [String current=null] : iv_ruleSTRING_LIT= ruleSTRING_LIT EOF ;
    public final String entryRuleSTRING_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSTRING_LIT = null;


        try {
            // InternalGo.g:647:50: (iv_ruleSTRING_LIT= ruleSTRING_LIT EOF )
            // InternalGo.g:648:2: iv_ruleSTRING_LIT= ruleSTRING_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSTRING_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSTRING_LIT=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSTRING_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_LIT"


    // $ANTLR start "ruleSTRING_LIT"
    // InternalGo.g:654:1: ruleSTRING_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) ;
    public final AntlrDatatypeRuleToken ruleSTRING_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RAW_STRING_LIT_0=null;
        Token this_INTERPRETED_STRING_LIT_1=null;


        	enterRule();

        try {
            // InternalGo.g:660:2: ( (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) )
            // InternalGo.g:661:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            {
            // InternalGo.g:661:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_RAW_STRING_LIT) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_INTERPRETED_STRING_LIT) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalGo.g:662:3: this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT
                    {
                    this_RAW_STRING_LIT_0=(Token)match(input,RULE_RAW_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RAW_STRING_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RAW_STRING_LIT_0, grammarAccess.getSTRING_LITAccess().getRAW_STRING_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:670:3: this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT
                    {
                    this_INTERPRETED_STRING_LIT_1=(Token)match(input,RULE_INTERPRETED_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTERPRETED_STRING_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INTERPRETED_STRING_LIT_1, grammarAccess.getSTRING_LITAccess().getINTERPRETED_STRING_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_LIT"


    // $ANTLR start "entryRuleType"
    // InternalGo.g:681:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalGo.g:681:45: (iv_ruleType= ruleType EOF )
            // InternalGo.g:682:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalGo.g:688:1: ruleType returns [EObject current=null] : ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_tp_1_0 = null;

        EObject lv_tp2_2_0 = null;

        EObject lv_tp3_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:694:2: ( ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:695:2: ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:695:2: ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt10=1;
                }
                break;
            case RULE_MUL:
            case 41:
            case 48:
            case 50:
            case 56:
            case 57:
            case 58:
            case 59:
                {
                alt10=2;
                }
                break;
            case 45:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalGo.g:696:3: ( () ( (lv_tp_1_0= ruleTypeName ) ) )
                    {
                    // InternalGo.g:696:3: ( () ( (lv_tp_1_0= ruleTypeName ) ) )
                    // InternalGo.g:697:4: () ( (lv_tp_1_0= ruleTypeName ) )
                    {
                    // InternalGo.g:697:4: ()
                    // InternalGo.g:698:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeAccess().getTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:707:4: ( (lv_tp_1_0= ruleTypeName ) )
                    // InternalGo.g:708:5: (lv_tp_1_0= ruleTypeName )
                    {
                    // InternalGo.g:708:5: (lv_tp_1_0= ruleTypeName )
                    // InternalGo.g:709:6: lv_tp_1_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getTpTypeNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_tp_1_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"tp",
                      							lv_tp_1_0,
                      							"org.xtext.example.mydsl.Go.TypeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:728:3: ( (lv_tp2_2_0= ruleTypeLit ) )
                    {
                    // InternalGo.g:728:3: ( (lv_tp2_2_0= ruleTypeLit ) )
                    // InternalGo.g:729:4: (lv_tp2_2_0= ruleTypeLit )
                    {
                    // InternalGo.g:729:4: (lv_tp2_2_0= ruleTypeLit )
                    // InternalGo.g:730:5: lv_tp2_2_0= ruleTypeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getTp2TypeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tp2_2_0=ruleTypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"tp2",
                      						lv_tp2_2_0,
                      						"org.xtext.example.mydsl.Go.TypeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:748:3: (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:748:3: (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' )
                    // InternalGo.g:749:4: otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:753:4: ( (lv_tp3_4_0= ruleType ) )
                    // InternalGo.g:754:5: (lv_tp3_4_0= ruleType )
                    {
                    // InternalGo.g:754:5: (lv_tp3_4_0= ruleType )
                    // InternalGo.g:755:6: lv_tp3_4_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getTp3TypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_tp3_4_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"tp3",
                      							lv_tp3_4_0,
                      							"org.xtext.example.mydsl.Go.Type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleTypeName"
    // InternalGo.g:781:1: entryRuleTypeName returns [String current=null] : iv_ruleTypeName= ruleTypeName EOF ;
    public final String entryRuleTypeName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeName = null;


        try {
            // InternalGo.g:781:48: (iv_ruleTypeName= ruleTypeName EOF )
            // InternalGo.g:782:2: iv_ruleTypeName= ruleTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeName=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeName"


    // $ANTLR start "ruleTypeName"
    // InternalGo.g:788:1: ruleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) ;
    public final AntlrDatatypeRuleToken ruleTypeName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;

        AntlrDatatypeRuleToken this_QualifiedIdent_1 = null;



        	enterRule();

        try {
            // InternalGo.g:794:2: ( (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) )
            // InternalGo.g:795:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            {
            // InternalGo.g:795:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID) ) {
                int LA11_1 = input.LA(2);

                if ( (LA11_1==EOF||(LA11_1>=RULE_ID && LA11_1<=RULE_FLOAT_LIT)||(LA11_1>=RULE_RAW_STRING_LIT && LA11_1<=RULE_INTERPRETED_STRING_LIT)||(LA11_1>=RULE_UNARY_OP && LA11_1<=RULE_STRING)||(LA11_1>=RULE_MUL && LA11_1<=RULE_EQUALS)||LA11_1==41||(LA11_1>=44 && LA11_1<=46)||(LA11_1>=48 && LA11_1<=65)||(LA11_1>=67 && LA11_1<=73)||(LA11_1>=77 && LA11_1<=79)) ) {
                    alt11=1;
                }
                else if ( (LA11_1==47) ) {
                    int LA11_3 = input.LA(3);

                    if ( (LA11_3==RULE_ID) ) {
                        int LA11_4 = input.LA(4);

                        if ( (synpred13_InternalGo()) ) {
                            alt11=1;
                        }
                        else if ( (true) ) {
                            alt11=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 11, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalGo.g:796:3: this_IDENTIFIER_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IDENTIFIER_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IDENTIFIER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:807:3: this_QualifiedIdent_1= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedIdent_1=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QualifiedIdent_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeName"


    // $ANTLR start "entryRuleQualifiedIdent"
    // InternalGo.g:821:1: entryRuleQualifiedIdent returns [String current=null] : iv_ruleQualifiedIdent= ruleQualifiedIdent EOF ;
    public final String entryRuleQualifiedIdent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedIdent = null;


        try {
            // InternalGo.g:821:54: (iv_ruleQualifiedIdent= ruleQualifiedIdent EOF )
            // InternalGo.g:822:2: iv_ruleQualifiedIdent= ruleQualifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedIdent=ruleQualifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedIdent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedIdent"


    // $ANTLR start "ruleQualifiedIdent"
    // InternalGo.g:828:1: ruleQualifiedIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedIdent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_PackageName_0 = null;

        AntlrDatatypeRuleToken this_IDENTIFIER_2 = null;



        	enterRule();

        try {
            // InternalGo.g:834:2: ( (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER ) )
            // InternalGo.g:835:2: (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER )
            {
            // InternalGo.g:835:2: (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER )
            // InternalGo.g:836:3: this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_PackageName_0=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PackageName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,47,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_2=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedIdent"


    // $ANTLR start "entryRulePackageName"
    // InternalGo.g:865:1: entryRulePackageName returns [String current=null] : iv_rulePackageName= rulePackageName EOF ;
    public final String entryRulePackageName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePackageName = null;


        try {
            // InternalGo.g:865:51: (iv_rulePackageName= rulePackageName EOF )
            // InternalGo.g:866:2: iv_rulePackageName= rulePackageName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageName=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageName"


    // $ANTLR start "rulePackageName"
    // InternalGo.g:872:1: rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken rulePackageName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:878:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:879:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getPackageNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageName"


    // $ANTLR start "entryRuleTypeLit"
    // InternalGo.g:892:1: entryRuleTypeLit returns [EObject current=null] : iv_ruleTypeLit= ruleTypeLit EOF ;
    public final EObject entryRuleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLit = null;


        try {
            // InternalGo.g:892:48: (iv_ruleTypeLit= ruleTypeLit EOF )
            // InternalGo.g:893:2: iv_ruleTypeLit= ruleTypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeLit=ruleTypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLit"


    // $ANTLR start "ruleTypeLit"
    // InternalGo.g:899:1: ruleTypeLit returns [EObject current=null] : (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType ) ;
    public final EObject ruleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayType_0 = null;

        EObject this_StructType_1 = null;

        EObject this_FunctionType_2 = null;

        EObject this_InterfaceType_3 = null;

        EObject this_SliceType_4 = null;

        EObject this_MapType_5 = null;

        EObject this_ChannelType_6 = null;

        EObject this_PointerType_7 = null;



        	enterRule();

        try {
            // InternalGo.g:905:2: ( (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType ) )
            // InternalGo.g:906:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType )
            {
            // InternalGo.g:906:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType )
            int alt12=8;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalGo.g:907:3: this_ArrayType_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayType_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ArrayType_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:919:3: this_StructType_1= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructType_1=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructType_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:931:3: this_FunctionType_2= ruleFunctionType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionType_2=ruleFunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionType_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:943:3: this_InterfaceType_3= ruleInterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InterfaceType_3=ruleInterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InterfaceType_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:955:3: this_SliceType_4= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SliceType_4=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SliceType_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:967:3: this_MapType_5= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapType_5=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapType_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:979:3: this_ChannelType_6= ruleChannelType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChannelType_6=ruleChannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChannelType_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:991:3: this_PointerType_7= rulePointerType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PointerType_7=rulePointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PointerType_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLit"


    // $ANTLR start "entryRuleArrayType"
    // InternalGo.g:1006:1: entryRuleArrayType returns [EObject current=null] : iv_ruleArrayType= ruleArrayType EOF ;
    public final EObject entryRuleArrayType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayType = null;


        try {
            // InternalGo.g:1006:50: (iv_ruleArrayType= ruleArrayType EOF )
            // InternalGo.g:1007:2: iv_ruleArrayType= ruleArrayType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayType=ruleArrayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayType"


    // $ANTLR start "ruleArrayType"
    // InternalGo.g:1013:1: ruleArrayType returns [EObject current=null] : (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) ;
    public final EObject ruleArrayType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_ArrayLength_1 = null;

        EObject lv_elemtype_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1019:2: ( (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) )
            // InternalGo.g:1020:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            {
            // InternalGo.g:1020:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            // InternalGo.g:1021:3: otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_15);
            this_ArrayLength_1=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArrayLength_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,49,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalGo.g:1040:3: ( (lv_elemtype_3_0= ruleElementType ) )
            // InternalGo.g:1041:4: (lv_elemtype_3_0= ruleElementType )
            {
            // InternalGo.g:1041:4: (lv_elemtype_3_0= ruleElementType )
            // InternalGo.g:1042:5: lv_elemtype_3_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getElemtypeElementTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_3_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_3_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayType"


    // $ANTLR start "entryRuleArrayLength"
    // InternalGo.g:1063:1: entryRuleArrayLength returns [EObject current=null] : iv_ruleArrayLength= ruleArrayLength EOF ;
    public final EObject entryRuleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLength = null;


        try {
            // InternalGo.g:1063:52: (iv_ruleArrayLength= ruleArrayLength EOF )
            // InternalGo.g:1064:2: iv_ruleArrayLength= ruleArrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLength=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayLength"


    // $ANTLR start "ruleArrayLength"
    // InternalGo.g:1070:1: ruleArrayLength returns [EObject current=null] : ( (lv_exp_0_0= ruleExpression ) ) ;
    public final EObject ruleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1076:2: ( ( (lv_exp_0_0= ruleExpression ) ) )
            // InternalGo.g:1077:2: ( (lv_exp_0_0= ruleExpression ) )
            {
            // InternalGo.g:1077:2: ( (lv_exp_0_0= ruleExpression ) )
            // InternalGo.g:1078:3: (lv_exp_0_0= ruleExpression )
            {
            // InternalGo.g:1078:3: (lv_exp_0_0= ruleExpression )
            // InternalGo.g:1079:4: lv_exp_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArrayLengthAccess().getExpExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArrayLengthRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.xtext.example.mydsl.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayLength"


    // $ANTLR start "entryRuleElementType"
    // InternalGo.g:1099:1: entryRuleElementType returns [EObject current=null] : iv_ruleElementType= ruleElementType EOF ;
    public final EObject entryRuleElementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementType = null;


        try {
            // InternalGo.g:1099:52: (iv_ruleElementType= ruleElementType EOF )
            // InternalGo.g:1100:2: iv_ruleElementType= ruleElementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementType=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementType"


    // $ANTLR start "ruleElementType"
    // InternalGo.g:1106:1: ruleElementType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleElementType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1112:2: (this_Type_0= ruleType )
            // InternalGo.g:1113:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getElementTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementType"


    // $ANTLR start "entryRuleSliceType"
    // InternalGo.g:1127:1: entryRuleSliceType returns [EObject current=null] : iv_ruleSliceType= ruleSliceType EOF ;
    public final EObject entryRuleSliceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSliceType = null;


        try {
            // InternalGo.g:1127:50: (iv_ruleSliceType= ruleSliceType EOF )
            // InternalGo.g:1128:2: iv_ruleSliceType= ruleSliceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSliceType=ruleSliceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSliceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSliceType"


    // $ANTLR start "ruleSliceType"
    // InternalGo.g:1134:1: ruleSliceType returns [EObject current=null] : (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) ;
    public final EObject ruleSliceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_elemtype_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1140:2: ( (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) )
            // InternalGo.g:1141:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            {
            // InternalGo.g:1141:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            // InternalGo.g:1142:3: otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,49,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:1150:3: ( (lv_elemtype_2_0= ruleElementType ) )
            // InternalGo.g:1151:4: (lv_elemtype_2_0= ruleElementType )
            {
            // InternalGo.g:1151:4: (lv_elemtype_2_0= ruleElementType )
            // InternalGo.g:1152:5: lv_elemtype_2_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceTypeAccess().getElemtypeElementTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_2_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_2_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSliceType"


    // $ANTLR start "entryRuleStructType"
    // InternalGo.g:1173:1: entryRuleStructType returns [EObject current=null] : iv_ruleStructType= ruleStructType EOF ;
    public final EObject entryRuleStructType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructType = null;


        try {
            // InternalGo.g:1173:51: (iv_ruleStructType= ruleStructType EOF )
            // InternalGo.g:1174:2: iv_ruleStructType= ruleStructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructType=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructType"


    // $ANTLR start "ruleStructType"
    // InternalGo.g:1180:1: ruleStructType returns [EObject current=null] : ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' ) ;
    public final EObject ruleStructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_fielddecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1186:2: ( ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' ) )
            // InternalGo.g:1187:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' )
            {
            // InternalGo.g:1187:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}' )
            // InternalGo.g:1188:3: () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )* otherlv_5= '}'
            {
            // InternalGo.g:1188:3: ()
            // InternalGo.g:1189:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,51,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:1206:3: ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )? )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==RULE_ID||LA14_0==RULE_MUL) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalGo.g:1207:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) ) (otherlv_4= ';' )?
            	    {
            	    // InternalGo.g:1207:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) )
            	    // InternalGo.g:1208:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    {
            	    // InternalGo.g:1208:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    // InternalGo.g:1209:6: lv_fielddecl_3_0= ruleFieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFielddeclFieldDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_fielddecl_3_0=ruleFieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"fielddecl",
            	      							lv_fielddecl_3_0,
            	      							"org.xtext.example.mydsl.Go.FieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:1226:4: (otherlv_4= ';' )?
            	    int alt13=2;
            	    int LA13_0 = input.LA(1);

            	    if ( (LA13_0==52) ) {
            	        alt13=1;
            	    }
            	    switch (alt13) {
            	        case 1 :
            	            // InternalGo.g:1227:5: otherlv_4= ';'
            	            {
            	            otherlv_4=(Token)match(input,52,FOLLOW_17); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            otherlv_5=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalGo.g:1241:1: entryRuleFieldDecl returns [EObject current=null] : iv_ruleFieldDecl= ruleFieldDecl EOF ;
    public final EObject entryRuleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldDecl = null;


        try {
            // InternalGo.g:1241:50: (iv_ruleFieldDecl= ruleFieldDecl EOF )
            // InternalGo.g:1242:2: iv_ruleFieldDecl= ruleFieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldDecl=ruleFieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalGo.g:1248:1: ruleFieldDecl returns [EObject current=null] : ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? ) ;
    public final EObject ruleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject lv_indentifierL_1_0 = null;

        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_embedded_3_0 = null;

        AntlrDatatypeRuleToken lv_tag_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1254:2: ( ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? ) )
            // InternalGo.g:1255:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? )
            {
            // InternalGo.g:1255:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? )
            // InternalGo.g:1256:3: () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )?
            {
            // InternalGo.g:1256:3: ()
            // InternalGo.g:1257:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFieldDeclAccess().getFieldDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1266:3: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ID) ) {
                switch ( input.LA(2) ) {
                case EOF:
                case RULE_RAW_STRING_LIT:
                case RULE_INTERPRETED_STRING_LIT:
                case 47:
                case 52:
                case 53:
                    {
                    alt15=2;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA15_3 = input.LA(3);

                    if ( (synpred23_InternalGo()) ) {
                        alt15=1;
                    }
                    else if ( (true) ) {
                        alt15=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_MUL:
                    {
                    int LA15_4 = input.LA(3);

                    if ( (LA15_4==RULE_ID) ) {
                        int LA15_6 = input.LA(4);

                        if ( (synpred23_InternalGo()) ) {
                            alt15=1;
                        }
                        else if ( (true) ) {
                            alt15=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA15_4==RULE_MUL||LA15_4==41||LA15_4==45||LA15_4==48||LA15_4==50||(LA15_4>=56 && LA15_4<=59)) ) {
                        alt15=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                case 45:
                case 48:
                case 50:
                case 54:
                case 56:
                case 57:
                case 58:
                case 59:
                    {
                    alt15=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA15_0==RULE_MUL) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalGo.g:1267:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    {
                    // InternalGo.g:1267:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    // InternalGo.g:1268:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) )
                    {
                    // InternalGo.g:1268:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) )
                    // InternalGo.g:1269:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1269:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    // InternalGo.g:1270:7: lv_indentifierL_1_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_11);
                    lv_indentifierL_1_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"indentifierL",
                      								lv_indentifierL_1_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:1287:5: ( (lv_type_2_0= ruleType ) )
                    // InternalGo.g:1288:6: (lv_type_2_0= ruleType )
                    {
                    // InternalGo.g:1288:6: (lv_type_2_0= ruleType )
                    // InternalGo.g:1289:7: lv_type_2_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_19);
                    lv_type_2_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"org.xtext.example.mydsl.Go.Type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1308:4: ( (lv_embedded_3_0= ruleEmbeddedField ) )
                    {
                    // InternalGo.g:1308:4: ( (lv_embedded_3_0= ruleEmbeddedField ) )
                    // InternalGo.g:1309:5: (lv_embedded_3_0= ruleEmbeddedField )
                    {
                    // InternalGo.g:1309:5: (lv_embedded_3_0= ruleEmbeddedField )
                    // InternalGo.g:1310:6: lv_embedded_3_0= ruleEmbeddedField
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedEmbeddedFieldParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_embedded_3_0=ruleEmbeddedField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      						}
                      						set(
                      							current,
                      							"embedded",
                      							lv_embedded_3_0,
                      							"org.xtext.example.mydsl.Go.EmbeddedField");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:1328:3: ( (lv_tag_4_0= ruleTag ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( ((LA16_0>=RULE_RAW_STRING_LIT && LA16_0<=RULE_INTERPRETED_STRING_LIT)) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalGo.g:1329:4: (lv_tag_4_0= ruleTag )
                    {
                    // InternalGo.g:1329:4: (lv_tag_4_0= ruleTag )
                    // InternalGo.g:1330:5: lv_tag_4_0= ruleTag
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tag_4_0=ruleTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      					}
                      					set(
                      						current,
                      						"tag",
                      						lv_tag_4_0,
                      						"org.xtext.example.mydsl.Go.Tag");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleIdentifierList"
    // InternalGo.g:1351:1: entryRuleIdentifierList returns [EObject current=null] : iv_ruleIdentifierList= ruleIdentifierList EOF ;
    public final EObject entryRuleIdentifierList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierList = null;


        try {
            // InternalGo.g:1351:55: (iv_ruleIdentifierList= ruleIdentifierList EOF )
            // InternalGo.g:1352:2: iv_ruleIdentifierList= ruleIdentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierList=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierList"


    // $ANTLR start "ruleIdentifierList"
    // InternalGo.g:1358:1: ruleIdentifierList returns [EObject current=null] : ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* ) ;
    public final EObject ruleIdentifierList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_id_1_0 = null;

        AntlrDatatypeRuleToken lv_id2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1364:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* ) )
            // InternalGo.g:1365:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* )
            {
            // InternalGo.g:1365:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )* )
            // InternalGo.g:1366:3: () ( (lv_id_1_0= ruleIDENTIFIER ) ) (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )*
            {
            // InternalGo.g:1366:3: ()
            // InternalGo.g:1367:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIdentifierListAccess().getIdentifierListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1376:3: ( (lv_id_1_0= ruleIDENTIFIER ) )
            // InternalGo.g:1377:4: (lv_id_1_0= ruleIDENTIFIER )
            {
            // InternalGo.g:1377:4: (lv_id_1_0= ruleIDENTIFIER )
            // InternalGo.g:1378:5: lv_id_1_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIdentifierListAccess().getIdIDENTIFIERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_id_1_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIdentifierListRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_1_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1395:3: (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==54) ) {
                    int LA17_2 = input.LA(2);

                    if ( (LA17_2==RULE_ID) ) {
                        int LA17_3 = input.LA(3);

                        if ( (synpred25_InternalGo()) ) {
                            alt17=1;
                        }


                    }


                }


                switch (alt17) {
            	case 1 :
            	    // InternalGo.g:1396:4: otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) )
            	    {
            	    otherlv_2=(Token)match(input,54,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getIdentifierListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:1400:4: ( (lv_id2_3_0= ruleIDENTIFIER ) )
            	    // InternalGo.g:1401:5: (lv_id2_3_0= ruleIDENTIFIER )
            	    {
            	    // InternalGo.g:1401:5: (lv_id2_3_0= ruleIDENTIFIER )
            	    // InternalGo.g:1402:6: lv_id2_3_0= ruleIDENTIFIER
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getIdentifierListAccess().getId2IDENTIFIERParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_id2_3_0=ruleIDENTIFIER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getIdentifierListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"id2",
            	      							lv_id2_3_0,
            	      							"org.xtext.example.mydsl.Go.IDENTIFIER");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierList"


    // $ANTLR start "entryRuleEmbeddedField"
    // InternalGo.g:1424:1: entryRuleEmbeddedField returns [String current=null] : iv_ruleEmbeddedField= ruleEmbeddedField EOF ;
    public final String entryRuleEmbeddedField() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmbeddedField = null;


        try {
            // InternalGo.g:1424:53: (iv_ruleEmbeddedField= ruleEmbeddedField EOF )
            // InternalGo.g:1425:2: iv_ruleEmbeddedField= ruleEmbeddedField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmbeddedFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmbeddedField=ruleEmbeddedField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmbeddedField.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmbeddedField"


    // $ANTLR start "ruleEmbeddedField"
    // InternalGo.g:1431:1: ruleEmbeddedField returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '*' )? this_TypeName_1= ruleTypeName ) ;
    public final AntlrDatatypeRuleToken ruleEmbeddedField() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_TypeName_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1437:2: ( ( (kw= '*' )? this_TypeName_1= ruleTypeName ) )
            // InternalGo.g:1438:2: ( (kw= '*' )? this_TypeName_1= ruleTypeName )
            {
            // InternalGo.g:1438:2: ( (kw= '*' )? this_TypeName_1= ruleTypeName )
            // InternalGo.g:1439:3: (kw= '*' )? this_TypeName_1= ruleTypeName
            {
            // InternalGo.g:1439:3: (kw= '*' )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_MUL) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalGo.g:1440:4: kw= '*'
                    {
                    kw=(Token)match(input,RULE_MUL,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeName_1=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_TypeName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmbeddedField"


    // $ANTLR start "entryRuleTag"
    // InternalGo.g:1460:1: entryRuleTag returns [String current=null] : iv_ruleTag= ruleTag EOF ;
    public final String entryRuleTag() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTag = null;


        try {
            // InternalGo.g:1460:43: (iv_ruleTag= ruleTag EOF )
            // InternalGo.g:1461:2: iv_ruleTag= ruleTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTag=ruleTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTag.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTag"


    // $ANTLR start "ruleTag"
    // InternalGo.g:1467:1: ruleTag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= ruleSTRING_LIT ;
    public final AntlrDatatypeRuleToken ruleTag() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_STRING_LIT_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1473:2: (this_STRING_LIT_0= ruleSTRING_LIT )
            // InternalGo.g:1474:2: this_STRING_LIT_0= ruleSTRING_LIT
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getTagAccess().getSTRING_LITParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_STRING_LIT_0=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTag"


    // $ANTLR start "entryRulePointerType"
    // InternalGo.g:1487:1: entryRulePointerType returns [EObject current=null] : iv_rulePointerType= rulePointerType EOF ;
    public final EObject entryRulePointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePointerType = null;


        try {
            // InternalGo.g:1487:52: (iv_rulePointerType= rulePointerType EOF )
            // InternalGo.g:1488:2: iv_rulePointerType= rulePointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePointerType=rulePointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePointerType"


    // $ANTLR start "rulePointerType"
    // InternalGo.g:1494:1: rulePointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) ;
    public final EObject rulePointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_basetype_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1500:2: ( (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) )
            // InternalGo.g:1501:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            {
            // InternalGo.g:1501:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            // InternalGo.g:1502:3: otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) )
            {
            otherlv_0=(Token)match(input,RULE_MUL,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:1506:3: ( (lv_basetype_1_0= ruleBaseType ) )
            // InternalGo.g:1507:4: (lv_basetype_1_0= ruleBaseType )
            {
            // InternalGo.g:1507:4: (lv_basetype_1_0= ruleBaseType )
            // InternalGo.g:1508:5: lv_basetype_1_0= ruleBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getBasetypeBaseTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_basetype_1_0=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"basetype",
              						lv_basetype_1_0,
              						"org.xtext.example.mydsl.Go.BaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePointerType"


    // $ANTLR start "entryRuleBaseType"
    // InternalGo.g:1529:1: entryRuleBaseType returns [EObject current=null] : iv_ruleBaseType= ruleBaseType EOF ;
    public final EObject entryRuleBaseType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseType = null;


        try {
            // InternalGo.g:1529:49: (iv_ruleBaseType= ruleBaseType EOF )
            // InternalGo.g:1530:2: iv_ruleBaseType= ruleBaseType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseType=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseType"


    // $ANTLR start "ruleBaseType"
    // InternalGo.g:1536:1: ruleBaseType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleBaseType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1542:2: (this_Type_0= ruleType )
            // InternalGo.g:1543:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseType"


    // $ANTLR start "entryRuleFunctionType"
    // InternalGo.g:1557:1: entryRuleFunctionType returns [EObject current=null] : iv_ruleFunctionType= ruleFunctionType EOF ;
    public final EObject entryRuleFunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionType = null;


        try {
            // InternalGo.g:1557:53: (iv_ruleFunctionType= ruleFunctionType EOF )
            // InternalGo.g:1558:2: iv_ruleFunctionType= ruleFunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionType=ruleFunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionType"


    // $ANTLR start "ruleFunctionType"
    // InternalGo.g:1564:1: ruleFunctionType returns [EObject current=null] : (otherlv_0= 'func' this_Signature_1= ruleSignature ) ;
    public final EObject ruleFunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Signature_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1570:2: ( (otherlv_0= 'func' this_Signature_1= ruleSignature ) )
            // InternalGo.g:1571:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            {
            // InternalGo.g:1571:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            // InternalGo.g:1572:3: otherlv_0= 'func' this_Signature_1= ruleSignature
            {
            otherlv_0=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Signature_1=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Signature_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionType"


    // $ANTLR start "entryRuleSignature"
    // InternalGo.g:1591:1: entryRuleSignature returns [EObject current=null] : iv_ruleSignature= ruleSignature EOF ;
    public final EObject entryRuleSignature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignature = null;


        try {
            // InternalGo.g:1591:50: (iv_ruleSignature= ruleSignature EOF )
            // InternalGo.g:1592:2: iv_ruleSignature= ruleSignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignature=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignature"


    // $ANTLR start "ruleSignature"
    // InternalGo.g:1598:1: ruleSignature returns [EObject current=null] : ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? ) ;
    public final EObject ruleSignature() throws RecognitionException {
        EObject current = null;

        EObject lv_parameters_0_0 = null;

        EObject lv_result_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1604:2: ( ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? ) )
            // InternalGo.g:1605:2: ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? )
            {
            // InternalGo.g:1605:2: ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? )
            // InternalGo.g:1606:3: ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )?
            {
            // InternalGo.g:1606:3: ( (lv_parameters_0_0= ruleParameters ) )
            // InternalGo.g:1607:4: (lv_parameters_0_0= ruleParameters )
            {
            // InternalGo.g:1607:4: (lv_parameters_0_0= ruleParameters )
            // InternalGo.g:1608:5: lv_parameters_0_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_parameters_0_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignatureRule());
              					}
              					set(
              						current,
              						"parameters",
              						lv_parameters_0_0,
              						"org.xtext.example.mydsl.Go.Parameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1625:3: ( (lv_result_1_0= ruleResult ) )?
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1626:4: (lv_result_1_0= ruleResult )
                    {
                    // InternalGo.g:1626:4: (lv_result_1_0= ruleResult )
                    // InternalGo.g:1627:5: lv_result_1_0= ruleResult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_result_1_0=ruleResult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"result",
                      						lv_result_1_0,
                      						"org.xtext.example.mydsl.Go.Result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignature"


    // $ANTLR start "entryRuleResult"
    // InternalGo.g:1648:1: entryRuleResult returns [EObject current=null] : iv_ruleResult= ruleResult EOF ;
    public final EObject entryRuleResult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResult = null;


        try {
            // InternalGo.g:1648:47: (iv_ruleResult= ruleResult EOF )
            // InternalGo.g:1649:2: iv_ruleResult= ruleResult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResult=ruleResult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResult"


    // $ANTLR start "ruleResult"
    // InternalGo.g:1655:1: ruleResult returns [EObject current=null] : ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) ) ;
    public final EObject ruleResult() throws RecognitionException {
        EObject current = null;

        EObject lv_parameteres_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1661:2: ( ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) ) )
            // InternalGo.g:1662:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )
            {
            // InternalGo.g:1662:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalGo.g:1663:3: ( (lv_parameteres_0_0= ruleParameters ) )
                    {
                    // InternalGo.g:1663:3: ( (lv_parameteres_0_0= ruleParameters ) )
                    // InternalGo.g:1664:4: (lv_parameteres_0_0= ruleParameters )
                    {
                    // InternalGo.g:1664:4: (lv_parameteres_0_0= ruleParameters )
                    // InternalGo.g:1665:5: lv_parameteres_0_0= ruleParameters
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getParameteresParametersParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameteres_0_0=ruleParameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"parameteres",
                      						lv_parameteres_0_0,
                      						"org.xtext.example.mydsl.Go.Parameters");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1683:3: ( (lv_type_1_0= ruleType ) )
                    {
                    // InternalGo.g:1683:3: ( (lv_type_1_0= ruleType ) )
                    // InternalGo.g:1684:4: (lv_type_1_0= ruleType )
                    {
                    // InternalGo.g:1684:4: (lv_type_1_0= ruleType )
                    // InternalGo.g:1685:5: lv_type_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.example.mydsl.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResult"


    // $ANTLR start "entryRuleParameters"
    // InternalGo.g:1706:1: entryRuleParameters returns [EObject current=null] : iv_ruleParameters= ruleParameters EOF ;
    public final EObject entryRuleParameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameters = null;


        try {
            // InternalGo.g:1706:51: (iv_ruleParameters= ruleParameters EOF )
            // InternalGo.g:1707:2: iv_ruleParameters= ruleParameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameters=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameters"


    // $ANTLR start "ruleParameters"
    // InternalGo.g:1713:1: ruleParameters returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleParameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameterlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1719:2: ( ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalGo.g:1720:2: ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalGo.g:1720:2: ( () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalGo.g:1721:3: () otherlv_1= '(' ( (lv_parameterlist_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalGo.g:1721:3: ()
            // InternalGo.g:1722:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParametersAccess().getParametersAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:1735:3: ( (lv_parameterlist_2_0= ruleParameterList ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID||LA21_0==RULE_MUL||LA21_0==41||LA21_0==45||LA21_0==48||LA21_0==50||(LA21_0>=54 && LA21_0<=59)) ) {
                alt21=1;
            }
            else if ( (LA21_0==46) ) {
                int LA21_2 = input.LA(2);

                if ( (synpred29_InternalGo()) ) {
                    alt21=1;
                }
            }
            switch (alt21) {
                case 1 :
                    // InternalGo.g:1736:4: (lv_parameterlist_2_0= ruleParameterList )
                    {
                    // InternalGo.g:1736:4: (lv_parameterlist_2_0= ruleParameterList )
                    // InternalGo.g:1737:5: lv_parameterlist_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_12);
                    lv_parameterlist_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParametersRule());
                      					}
                      					set(
                      						current,
                      						"parameterlist",
                      						lv_parameterlist_2_0,
                      						"org.xtext.example.mydsl.Go.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameters"


    // $ANTLR start "entryRuleParameterList"
    // InternalGo.g:1762:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalGo.g:1762:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalGo.g:1763:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalGo.g:1769:1: ruleParameterList returns [EObject current=null] : ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_parameterDecl1_1_0 = null;

        EObject lv_parameterdecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1775:2: ( ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* ) )
            // InternalGo.g:1776:2: ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* )
            {
            // InternalGo.g:1776:2: ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* )
            // InternalGo.g:1777:3: () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )*
            {
            // InternalGo.g:1777:3: ()
            // InternalGo.g:1778:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParameterListAccess().getParameterListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1787:3: ( (lv_parameterDecl1_1_0= ruleParameterDecl ) )
            // InternalGo.g:1788:4: (lv_parameterDecl1_1_0= ruleParameterDecl )
            {
            // InternalGo.g:1788:4: (lv_parameterDecl1_1_0= ruleParameterDecl )
            // InternalGo.g:1789:5: lv_parameterDecl1_1_0= ruleParameterDecl
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDecl1ParameterDeclParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_parameterDecl1_1_0=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterListRule());
              					}
              					set(
              						current,
              						"parameterDecl1",
              						lv_parameterDecl1_1_0,
              						"org.xtext.example.mydsl.Go.ParameterDecl");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1806:3: (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==54) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalGo.g:1807:4: otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) )
            	    {
            	    otherlv_2=(Token)match(input,54,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:1811:4: ( (lv_parameterdecl_3_0= ruleParameterDecl ) )
            	    // InternalGo.g:1812:5: (lv_parameterdecl_3_0= ruleParameterDecl )
            	    {
            	    // InternalGo.g:1812:5: (lv_parameterdecl_3_0= ruleParameterDecl )
            	    // InternalGo.g:1813:6: lv_parameterdecl_3_0= ruleParameterDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameterListAccess().getParameterdeclParameterDeclParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_parameterdecl_3_0=ruleParameterDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameterListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"parameterdecl",
            	      							lv_parameterdecl_3_0,
            	      							"org.xtext.example.mydsl.Go.ParameterDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleParameterDecl"
    // InternalGo.g:1835:1: entryRuleParameterDecl returns [EObject current=null] : iv_ruleParameterDecl= ruleParameterDecl EOF ;
    public final EObject entryRuleParameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterDecl = null;


        try {
            // InternalGo.g:1835:54: (iv_ruleParameterDecl= ruleParameterDecl EOF )
            // InternalGo.g:1836:2: iv_ruleParameterDecl= ruleParameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterDecl=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterDecl"


    // $ANTLR start "ruleParameterDecl"
    // InternalGo.g:1842:1: ruleParameterDecl returns [EObject current=null] : ( () ( (lv_identifierL_1_0= ruleIdentifierList ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) ;
    public final EObject ruleParameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_identifierL_1_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1848:2: ( ( () ( (lv_identifierL_1_0= ruleIdentifierList ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? ) )
            // InternalGo.g:1849:2: ( () ( (lv_identifierL_1_0= ruleIdentifierList ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? )
            {
            // InternalGo.g:1849:2: ( () ( (lv_identifierL_1_0= ruleIdentifierList ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )? )
            // InternalGo.g:1850:3: () ( (lv_identifierL_1_0= ruleIdentifierList ) )? (otherlv_2= '...' )? ( (lv_type_3_0= ruleType ) )?
            {
            // InternalGo.g:1850:3: ()
            // InternalGo.g:1851:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParameterDeclAccess().getParameterDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1860:3: ( (lv_identifierL_1_0= ruleIdentifierList ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                int LA23_1 = input.LA(2);

                if ( (synpred31_InternalGo()) ) {
                    alt23=1;
                }
            }
            switch (alt23) {
                case 1 :
                    // InternalGo.g:1861:4: (lv_identifierL_1_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1861:4: (lv_identifierL_1_0= ruleIdentifierList )
                    // InternalGo.g:1862:5: lv_identifierL_1_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierLIdentifierListParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_24);
                    lv_identifierL_1_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"identifierL",
                      						lv_identifierL_1_0,
                      						"org.xtext.example.mydsl.Go.IdentifierList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:1879:3: (otherlv_2= '...' )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==55) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalGo.g:1880:4: otherlv_2= '...'
                    {
                    otherlv_2=(Token)match(input,55,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:1885:3: ( (lv_type_3_0= ruleType ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_ID||LA25_0==RULE_MUL||LA25_0==41||LA25_0==45||LA25_0==48||LA25_0==50||(LA25_0>=56 && LA25_0<=59)) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalGo.g:1886:4: (lv_type_3_0= ruleType )
                    {
                    // InternalGo.g:1886:4: (lv_type_3_0= ruleType )
                    // InternalGo.g:1887:5: lv_type_3_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_3_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_3_0,
                      						"org.xtext.example.mydsl.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterDecl"


    // $ANTLR start "entryRuleInterfaceType"
    // InternalGo.g:1908:1: entryRuleInterfaceType returns [EObject current=null] : iv_ruleInterfaceType= ruleInterfaceType EOF ;
    public final EObject entryRuleInterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceType = null;


        try {
            // InternalGo.g:1908:54: (iv_ruleInterfaceType= ruleInterfaceType EOF )
            // InternalGo.g:1909:2: iv_ruleInterfaceType= ruleInterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceType=ruleInterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceType"


    // $ANTLR start "ruleInterfaceType"
    // InternalGo.g:1915:1: ruleInterfaceType returns [EObject current=null] : ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' ) ;
    public final EObject ruleInterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_methodspec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1921:2: ( ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' ) )
            // InternalGo.g:1922:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' )
            {
            // InternalGo.g:1922:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' )
            // InternalGo.g:1923:3: () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}'
            {
            // InternalGo.g:1923:3: ()
            // InternalGo.g:1924:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,56,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:1941:3: ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==RULE_ID) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalGo.g:1942:4: ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:1942:4: ( (lv_methodspec_3_0= ruleMethodSpec ) )
            	    // InternalGo.g:1943:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    {
            	    // InternalGo.g:1943:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    // InternalGo.g:1944:6: lv_methodspec_3_0= ruleMethodSpec
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodspecMethodSpecParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_methodspec_3_0=ruleMethodSpec();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"methodspec",
            	      							lv_methodspec_3_0,
            	      							"org.xtext.example.mydsl.Go.MethodSpec");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,52,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            otherlv_5=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceType"


    // $ANTLR start "entryRuleMethodSpec"
    // InternalGo.g:1974:1: entryRuleMethodSpec returns [EObject current=null] : iv_ruleMethodSpec= ruleMethodSpec EOF ;
    public final EObject entryRuleMethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodSpec = null;


        try {
            // InternalGo.g:1974:51: (iv_ruleMethodSpec= ruleMethodSpec EOF )
            // InternalGo.g:1975:2: iv_ruleMethodSpec= ruleMethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodSpec=ruleMethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodSpec"


    // $ANTLR start "ruleMethodSpec"
    // InternalGo.g:1981:1: ruleMethodSpec returns [EObject current=null] : ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) ) ;
    public final EObject ruleMethodSpec() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_mn_0_0 = null;

        EObject lv_signature_1_0 = null;

        AntlrDatatypeRuleToken lv_itn_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1987:2: ( ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) ) )
            // InternalGo.g:1988:2: ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) )
            {
            // InternalGo.g:1988:2: ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_ID) ) {
                int LA27_1 = input.LA(2);

                if ( (LA27_1==EOF||LA27_1==47||LA27_1==52) ) {
                    alt27=2;
                }
                else if ( (LA27_1==45) ) {
                    alt27=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalGo.g:1989:3: ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) )
                    {
                    // InternalGo.g:1989:3: ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) )
                    // InternalGo.g:1990:4: ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) )
                    {
                    // InternalGo.g:1990:4: ( (lv_mn_0_0= ruleMethodName ) )
                    // InternalGo.g:1991:5: (lv_mn_0_0= ruleMethodName )
                    {
                    // InternalGo.g:1991:5: (lv_mn_0_0= ruleMethodName )
                    // InternalGo.g:1992:6: lv_mn_0_0= ruleMethodName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getMnMethodNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_mn_0_0=ruleMethodName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"mn",
                      							lv_mn_0_0,
                      							"org.xtext.example.mydsl.Go.MethodName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2009:4: ( (lv_signature_1_0= ruleSignature ) )
                    // InternalGo.g:2010:5: (lv_signature_1_0= ruleSignature )
                    {
                    // InternalGo.g:2010:5: (lv_signature_1_0= ruleSignature )
                    // InternalGo.g:2011:6: lv_signature_1_0= ruleSignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_signature_1_0=ruleSignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"signature",
                      							lv_signature_1_0,
                      							"org.xtext.example.mydsl.Go.Signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2030:3: ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) )
                    {
                    // InternalGo.g:2030:3: ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) )
                    // InternalGo.g:2031:4: () ( (lv_itn_3_0= ruleInterfaceTypeName ) )
                    {
                    // InternalGo.g:2031:4: ()
                    // InternalGo.g:2032:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getMethodSpecAccess().getMethodSpecAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2041:4: ( (lv_itn_3_0= ruleInterfaceTypeName ) )
                    // InternalGo.g:2042:5: (lv_itn_3_0= ruleInterfaceTypeName )
                    {
                    // InternalGo.g:2042:5: (lv_itn_3_0= ruleInterfaceTypeName )
                    // InternalGo.g:2043:6: lv_itn_3_0= ruleInterfaceTypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getItnInterfaceTypeNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_itn_3_0=ruleInterfaceTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"itn",
                      							lv_itn_3_0,
                      							"org.xtext.example.mydsl.Go.InterfaceTypeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodSpec"


    // $ANTLR start "entryRuleMethodName"
    // InternalGo.g:2065:1: entryRuleMethodName returns [String current=null] : iv_ruleMethodName= ruleMethodName EOF ;
    public final String entryRuleMethodName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethodName = null;


        try {
            // InternalGo.g:2065:50: (iv_ruleMethodName= ruleMethodName EOF )
            // InternalGo.g:2066:2: iv_ruleMethodName= ruleMethodName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodName=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodName"


    // $ANTLR start "ruleMethodName"
    // InternalGo.g:2072:1: ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleMethodName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2078:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:2079:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getMethodNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodName"


    // $ANTLR start "entryRuleInterfaceTypeName"
    // InternalGo.g:2092:1: entryRuleInterfaceTypeName returns [String current=null] : iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF ;
    public final String entryRuleInterfaceTypeName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInterfaceTypeName = null;


        try {
            // InternalGo.g:2092:57: (iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF )
            // InternalGo.g:2093:2: iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceTypeName=ruleInterfaceTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceTypeName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceTypeName"


    // $ANTLR start "ruleInterfaceTypeName"
    // InternalGo.g:2099:1: ruleInterfaceTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_TypeName_0= ruleTypeName ;
    public final AntlrDatatypeRuleToken ruleInterfaceTypeName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_TypeName_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2105:2: (this_TypeName_0= ruleTypeName )
            // InternalGo.g:2106:2: this_TypeName_0= ruleTypeName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_TypeName_0=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_TypeName_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceTypeName"


    // $ANTLR start "entryRuleMapType"
    // InternalGo.g:2119:1: entryRuleMapType returns [EObject current=null] : iv_ruleMapType= ruleMapType EOF ;
    public final EObject entryRuleMapType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapType = null;


        try {
            // InternalGo.g:2119:48: (iv_ruleMapType= ruleMapType EOF )
            // InternalGo.g:2120:2: iv_ruleMapType= ruleMapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapType=ruleMapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapType"


    // $ANTLR start "ruleMapType"
    // InternalGo.g:2126:1: ruleMapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleMapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_keytype_2_0 = null;

        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2132:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2133:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2133:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2134:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,57,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,48,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:2142:3: ( (lv_keytype_2_0= ruleKeyType ) )
            // InternalGo.g:2143:4: (lv_keytype_2_0= ruleKeyType )
            {
            // InternalGo.g:2143:4: (lv_keytype_2_0= ruleKeyType )
            // InternalGo.g:2144:5: lv_keytype_2_0= ruleKeyType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getKeytypeKeyTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_keytype_2_0=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"keytype",
              						lv_keytype_2_0,
              						"org.xtext.example.mydsl.Go.KeyType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,49,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:2165:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2166:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2166:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2167:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElemtypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapType"


    // $ANTLR start "entryRuleKeyType"
    // InternalGo.g:2188:1: entryRuleKeyType returns [EObject current=null] : iv_ruleKeyType= ruleKeyType EOF ;
    public final EObject entryRuleKeyType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyType = null;


        try {
            // InternalGo.g:2188:48: (iv_ruleKeyType= ruleKeyType EOF )
            // InternalGo.g:2189:2: iv_ruleKeyType= ruleKeyType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyType=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyType"


    // $ANTLR start "ruleKeyType"
    // InternalGo.g:2195:1: ruleKeyType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleKeyType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2201:2: (this_Type_0= ruleType )
            // InternalGo.g:2202:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyType"


    // $ANTLR start "entryRuleChannelType"
    // InternalGo.g:2216:1: entryRuleChannelType returns [EObject current=null] : iv_ruleChannelType= ruleChannelType EOF ;
    public final EObject entryRuleChannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelType = null;


        try {
            // InternalGo.g:2216:52: (iv_ruleChannelType= ruleChannelType EOF )
            // InternalGo.g:2217:2: iv_ruleChannelType= ruleChannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelType=ruleChannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelType"


    // $ANTLR start "ruleChannelType"
    // InternalGo.g:2223:1: ruleChannelType returns [EObject current=null] : ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleChannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2229:2: ( ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2230:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2230:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2231:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) )
            {
            // InternalGo.g:2231:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==58) ) {
                alt29=1;
            }
            else if ( (LA29_0==59) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalGo.g:2232:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    {
                    // InternalGo.g:2232:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    // InternalGo.g:2233:5: otherlv_0= 'chan' (otherlv_1= '<-' )?
                    {
                    otherlv_0=(Token)match(input,58,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0_0());
                      				
                    }
                    // InternalGo.g:2237:5: (otherlv_1= '<-' )?
                    int alt28=2;
                    alt28 = dfa28.predict(input);
                    switch (alt28) {
                        case 1 :
                            // InternalGo.g:2238:6: otherlv_1= '<-'
                            {
                            otherlv_1=(Token)match(input,59,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_0_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2245:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    {
                    // InternalGo.g:2245:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    // InternalGo.g:2246:5: otherlv_2= '<-' otherlv_3= 'chan'
                    {
                    otherlv_2=(Token)match(input,59,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0());
                      				
                    }
                    otherlv_3=(Token)match(input,58,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:2256:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2257:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2257:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2258:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElemtypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelType"


    // $ANTLR start "entryRuleBlock"
    // InternalGo.g:2279:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalGo.g:2279:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalGo.g:2280:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalGo.g:2286:1: ruleBlock returns [EObject current=null] : (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_StatementList_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2292:2: ( (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' ) )
            // InternalGo.g:2293:2: (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' )
            {
            // InternalGo.g:2293:2: (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' )
            // InternalGo.g:2294:3: otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,51,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_30);
            this_StatementList_1=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StatementList_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleStatementList"
    // InternalGo.g:2317:1: entryRuleStatementList returns [EObject current=null] : iv_ruleStatementList= ruleStatementList EOF ;
    public final EObject entryRuleStatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatementList = null;


        try {
            // InternalGo.g:2317:54: (iv_ruleStatementList= ruleStatementList EOF )
            // InternalGo.g:2318:2: iv_ruleStatementList= ruleStatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatementList=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementList"


    // $ANTLR start "ruleStatementList"
    // InternalGo.g:2324:1: ruleStatementList returns [EObject current=null] : ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleStatementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_statment_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2330:2: ( ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* ) )
            // InternalGo.g:2331:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* )
            {
            // InternalGo.g:2331:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* )
            // InternalGo.g:2332:3: () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )*
            {
            // InternalGo.g:2332:3: ()
            // InternalGo.g:2333:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStatementListAccess().getStatementListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:2342:3: ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( ((LA31_0>=RULE_ID && LA31_0<=RULE_FLOAT_LIT)||(LA31_0>=RULE_UNARY_OP && LA31_0<=RULE_STRING)||LA31_0==RULE_MUL||LA31_0==41||(LA31_0>=44 && LA31_0<=45)||LA31_0==48||(LA31_0>=50 && LA31_0<=52)||(LA31_0>=56 && LA31_0<=59)||(LA31_0>=61 && LA31_0<=65)||(LA31_0>=67 && LA31_0<=73)||LA31_0==77) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalGo.g:2343:4: ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalGo.g:2343:4: ( (lv_statment_1_0= ruleStatement ) )
            	    // InternalGo.g:2344:5: (lv_statment_1_0= ruleStatement )
            	    {
            	    // InternalGo.g:2344:5: (lv_statment_1_0= ruleStatement )
            	    // InternalGo.g:2345:6: lv_statment_1_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStatementListAccess().getStatmentStatementParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_statment_1_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"statment",
            	      							lv_statment_1_0,
            	      							"org.xtext.example.mydsl.Go.Statement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:2362:4: (otherlv_2= ';' )?
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( (LA30_0==52) ) {
            	        int LA30_1 = input.LA(2);

            	        if ( (synpred38_InternalGo()) ) {
            	            alt30=1;
            	        }
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // InternalGo.g:2363:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,52,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementList"


    // $ANTLR start "entryRuleStatement"
    // InternalGo.g:2373:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalGo.g:2373:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalGo.g:2374:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalGo.g:2380:1: ruleStatement returns [EObject current=null] : ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_0 = null;

        EObject lv_labest_2_0 = null;

        EObject lv_simplest_3_0 = null;

        AntlrDatatypeRuleToken lv_gotst_4_0 = null;

        EObject this_ReturnStmt_5 = null;

        AntlrDatatypeRuleToken lv_breakst_6_0 = null;

        AntlrDatatypeRuleToken lv_continuest_7_0 = null;

        AntlrDatatypeRuleToken lv_gotost_8_0 = null;

        AntlrDatatypeRuleToken lv_falltst_9_0 = null;

        EObject lv_block1_10_0 = null;

        EObject lv_if_11_0 = null;

        EObject lv_switch_12_0 = null;

        EObject lv_selectst_13_0 = null;

        EObject lv_forst_14_0 = null;

        EObject lv_deferst_15_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2386:2: ( ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) )
            // InternalGo.g:2387:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            {
            // InternalGo.g:2387:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            int alt32=15;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalGo.g:2388:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    {
                    // InternalGo.g:2388:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    // InternalGo.g:2389:4: () ( (lv_declaration_1_0= ruleDeclaration ) )
                    {
                    // InternalGo.g:2389:4: ()
                    // InternalGo.g:2390:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getStatementAccess().getStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2399:4: ( (lv_declaration_1_0= ruleDeclaration ) )
                    // InternalGo.g:2400:5: (lv_declaration_1_0= ruleDeclaration )
                    {
                    // InternalGo.g:2400:5: (lv_declaration_1_0= ruleDeclaration )
                    // InternalGo.g:2401:6: lv_declaration_1_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_1_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_1_0,
                      							"org.xtext.example.mydsl.Go.Declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2420:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    {
                    // InternalGo.g:2420:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    // InternalGo.g:2421:4: (lv_labest_2_0= ruleLabeledStmt )
                    {
                    // InternalGo.g:2421:4: (lv_labest_2_0= ruleLabeledStmt )
                    // InternalGo.g:2422:5: lv_labest_2_0= ruleLabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_labest_2_0=ruleLabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"labest",
                      						lv_labest_2_0,
                      						"org.xtext.example.mydsl.Go.LabeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2440:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    {
                    // InternalGo.g:2440:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    // InternalGo.g:2441:4: (lv_simplest_3_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:2441:4: (lv_simplest_3_0= ruleSimpleStmt )
                    // InternalGo.g:2442:5: lv_simplest_3_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simplest_3_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"simplest",
                      						lv_simplest_3_0,
                      						"org.xtext.example.mydsl.Go.SimpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:2460:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    {
                    // InternalGo.g:2460:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    // InternalGo.g:2461:4: (lv_gotst_4_0= ruleGoStmt )
                    {
                    // InternalGo.g:2461:4: (lv_gotst_4_0= ruleGoStmt )
                    // InternalGo.g:2462:5: lv_gotst_4_0= ruleGoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotst_4_0=ruleGoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotst",
                      						lv_gotst_4_0,
                      						"org.xtext.example.mydsl.Go.GoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:2480:3: this_ReturnStmt_5= ruleReturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStmt_5=ruleReturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReturnStmt_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2492:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    {
                    // InternalGo.g:2492:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    // InternalGo.g:2493:4: (lv_breakst_6_0= ruleBreakStmt )
                    {
                    // InternalGo.g:2493:4: (lv_breakst_6_0= ruleBreakStmt )
                    // InternalGo.g:2494:5: lv_breakst_6_0= ruleBreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBreakstBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_breakst_6_0=ruleBreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"breakst",
                      						lv_breakst_6_0,
                      						"org.xtext.example.mydsl.Go.BreakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:2512:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    {
                    // InternalGo.g:2512:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    // InternalGo.g:2513:4: (lv_continuest_7_0= ruleContinueStmt )
                    {
                    // InternalGo.g:2513:4: (lv_continuest_7_0= ruleContinueStmt )
                    // InternalGo.g:2514:5: lv_continuest_7_0= ruleContinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContinuestContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_continuest_7_0=ruleContinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"continuest",
                      						lv_continuest_7_0,
                      						"org.xtext.example.mydsl.Go.ContinueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:2532:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    {
                    // InternalGo.g:2532:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    // InternalGo.g:2533:4: (lv_gotost_8_0= ruleGotoStmt )
                    {
                    // InternalGo.g:2533:4: (lv_gotost_8_0= ruleGotoStmt )
                    // InternalGo.g:2534:5: lv_gotost_8_0= ruleGotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotost_8_0=ruleGotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotost",
                      						lv_gotost_8_0,
                      						"org.xtext.example.mydsl.Go.GotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:2552:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    {
                    // InternalGo.g:2552:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    // InternalGo.g:2553:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    {
                    // InternalGo.g:2553:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    // InternalGo.g:2554:5: lv_falltst_9_0= ruleFallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getFalltstFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_falltst_9_0=ruleFallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"falltst",
                      						lv_falltst_9_0,
                      						"org.xtext.example.mydsl.Go.FallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:2572:3: ( (lv_block1_10_0= ruleBlock ) )
                    {
                    // InternalGo.g:2572:3: ( (lv_block1_10_0= ruleBlock ) )
                    // InternalGo.g:2573:4: (lv_block1_10_0= ruleBlock )
                    {
                    // InternalGo.g:2573:4: (lv_block1_10_0= ruleBlock )
                    // InternalGo.g:2574:5: lv_block1_10_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBlock1BlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block1_10_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"block1",
                      						lv_block1_10_0,
                      						"org.xtext.example.mydsl.Go.Block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:2592:3: ( (lv_if_11_0= ruleIfStmt ) )
                    {
                    // InternalGo.g:2592:3: ( (lv_if_11_0= ruleIfStmt ) )
                    // InternalGo.g:2593:4: (lv_if_11_0= ruleIfStmt )
                    {
                    // InternalGo.g:2593:4: (lv_if_11_0= ruleIfStmt )
                    // InternalGo.g:2594:5: lv_if_11_0= ruleIfStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIfIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_if_11_0=ruleIfStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"if",
                      						lv_if_11_0,
                      						"org.xtext.example.mydsl.Go.IfStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:2612:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    {
                    // InternalGo.g:2612:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    // InternalGo.g:2613:4: (lv_switch_12_0= ruleSwitchStmt )
                    {
                    // InternalGo.g:2613:4: (lv_switch_12_0= ruleSwitchStmt )
                    // InternalGo.g:2614:5: lv_switch_12_0= ruleSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSwitchSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_switch_12_0=ruleSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"switch",
                      						lv_switch_12_0,
                      						"org.xtext.example.mydsl.Go.SwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:2632:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    {
                    // InternalGo.g:2632:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    // InternalGo.g:2633:4: (lv_selectst_13_0= ruleSelectStmt )
                    {
                    // InternalGo.g:2633:4: (lv_selectst_13_0= ruleSelectStmt )
                    // InternalGo.g:2634:5: lv_selectst_13_0= ruleSelectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelectstSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selectst_13_0=ruleSelectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"selectst",
                      						lv_selectst_13_0,
                      						"org.xtext.example.mydsl.Go.SelectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:2652:3: ( (lv_forst_14_0= ruleForStmt ) )
                    {
                    // InternalGo.g:2652:3: ( (lv_forst_14_0= ruleForStmt ) )
                    // InternalGo.g:2653:4: (lv_forst_14_0= ruleForStmt )
                    {
                    // InternalGo.g:2653:4: (lv_forst_14_0= ruleForStmt )
                    // InternalGo.g:2654:5: lv_forst_14_0= ruleForStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getForstForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_forst_14_0=ruleForStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"forst",
                      						lv_forst_14_0,
                      						"org.xtext.example.mydsl.Go.ForStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:2672:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    {
                    // InternalGo.g:2672:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    // InternalGo.g:2673:4: (lv_deferst_15_0= ruleDeferStmt )
                    {
                    // InternalGo.g:2673:4: (lv_deferst_15_0= ruleDeferStmt )
                    // InternalGo.g:2674:5: lv_deferst_15_0= ruleDeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeferstDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_deferst_15_0=ruleDeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"deferst",
                      						lv_deferst_15_0,
                      						"org.xtext.example.mydsl.Go.DeferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleDeclaration"
    // InternalGo.g:2695:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalGo.g:2695:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalGo.g:2696:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalGo.g:2702:1: ruleDeclaration returns [EObject current=null] : (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ConstDecl_0 = null;

        EObject this_TypeDecl_1 = null;

        EObject this_VarDecl_2 = null;



        	enterRule();

        try {
            // InternalGo.g:2708:2: ( (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl ) )
            // InternalGo.g:2709:2: (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl )
            {
            // InternalGo.g:2709:2: (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl )
            int alt33=3;
            switch ( input.LA(1) ) {
            case 71:
                {
                alt33=1;
                }
                break;
            case 72:
                {
                alt33=2;
                }
                break;
            case 73:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalGo.g:2710:3: this_ConstDecl_0= ruleConstDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstDecl_0=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2722:3: this_TypeDecl_1= ruleTypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDecl_1=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDecl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:2734:3: this_VarDecl_2= ruleVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VarDecl_2=ruleVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VarDecl_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleLabeledStmt"
    // InternalGo.g:2749:1: entryRuleLabeledStmt returns [EObject current=null] : iv_ruleLabeledStmt= ruleLabeledStmt EOF ;
    public final EObject entryRuleLabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabeledStmt = null;


        try {
            // InternalGo.g:2749:52: (iv_ruleLabeledStmt= ruleLabeledStmt EOF )
            // InternalGo.g:2750:2: iv_ruleLabeledStmt= ruleLabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabeledStmt=ruleLabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabeledStmt"


    // $ANTLR start "ruleLabeledStmt"
    // InternalGo.g:2756:1: ruleLabeledStmt returns [EObject current=null] : ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) ;
    public final EObject ruleLabeledStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_label_0_0 = null;

        EObject lv_statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2762:2: ( ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) )
            // InternalGo.g:2763:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            {
            // InternalGo.g:2763:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            // InternalGo.g:2764:3: ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) )
            {
            // InternalGo.g:2764:3: ( (lv_label_0_0= ruleLabel ) )
            // InternalGo.g:2765:4: (lv_label_0_0= ruleLabel )
            {
            // InternalGo.g:2765:4: (lv_label_0_0= ruleLabel )
            // InternalGo.g:2766:5: lv_label_0_0= ruleLabel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_label_0_0=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"label",
              						lv_label_0_0,
              						"org.xtext.example.mydsl.Go.Label");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,60,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2787:3: ( (lv_statement_2_0= ruleStatement ) )
            // InternalGo.g:2788:4: (lv_statement_2_0= ruleStatement )
            {
            // InternalGo.g:2788:4: (lv_statement_2_0= ruleStatement )
            // InternalGo.g:2789:5: lv_statement_2_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_2_0,
              						"org.xtext.example.mydsl.Go.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabeledStmt"


    // $ANTLR start "entryRuleSimpleStmt"
    // InternalGo.g:2810:1: entryRuleSimpleStmt returns [EObject current=null] : iv_ruleSimpleStmt= ruleSimpleStmt EOF ;
    public final EObject entryRuleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStmt = null;


        try {
            // InternalGo.g:2810:51: (iv_ruleSimpleStmt= ruleSimpleStmt EOF )
            // InternalGo.g:2811:2: iv_ruleSimpleStmt= ruleSimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStmt=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStmt"


    // $ANTLR start "ruleSimpleStmt"
    // InternalGo.g:2817:1: ruleSimpleStmt returns [EObject current=null] : ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) ) ;
    public final EObject ruleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_inc_0_0 = null;

        EObject lv_ass_1_0 = null;

        EObject lv_ss_2_0 = null;

        EObject lv_svd_3_0 = null;

        EObject lv_es_4_0 = null;

        AntlrDatatypeRuleToken lv_empty_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2823:2: ( ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) ) )
            // InternalGo.g:2824:2: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) )
            {
            // InternalGo.g:2824:2: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) )
            int alt34=6;
            alt34 = dfa34.predict(input);
            switch (alt34) {
                case 1 :
                    // InternalGo.g:2825:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
                    {
                    // InternalGo.g:2825:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
                    // InternalGo.g:2826:4: (lv_inc_0_0= ruleIncDecStmt )
                    {
                    // InternalGo.g:2826:4: (lv_inc_0_0= ruleIncDecStmt )
                    // InternalGo.g:2827:5: lv_inc_0_0= ruleIncDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncIncDecStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_inc_0_0=ruleIncDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"inc",
                      						lv_inc_0_0,
                      						"org.xtext.example.mydsl.Go.IncDecStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2845:3: ( (lv_ass_1_0= ruleAssignment ) )
                    {
                    // InternalGo.g:2845:3: ( (lv_ass_1_0= ruleAssignment ) )
                    // InternalGo.g:2846:4: (lv_ass_1_0= ruleAssignment )
                    {
                    // InternalGo.g:2846:4: (lv_ass_1_0= ruleAssignment )
                    // InternalGo.g:2847:5: lv_ass_1_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssAssignmentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ass_1_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ass",
                      						lv_ass_1_0,
                      						"org.xtext.example.mydsl.Go.Assignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2865:3: ( (lv_ss_2_0= ruleSendStmt ) )
                    {
                    // InternalGo.g:2865:3: ( (lv_ss_2_0= ruleSendStmt ) )
                    // InternalGo.g:2866:4: (lv_ss_2_0= ruleSendStmt )
                    {
                    // InternalGo.g:2866:4: (lv_ss_2_0= ruleSendStmt )
                    // InternalGo.g:2867:5: lv_ss_2_0= ruleSendStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSsSendStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ss_2_0=ruleSendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ss",
                      						lv_ss_2_0,
                      						"org.xtext.example.mydsl.Go.SendStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:2885:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
                    {
                    // InternalGo.g:2885:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
                    // InternalGo.g:2886:4: (lv_svd_3_0= ruleShortVarDecl )
                    {
                    // InternalGo.g:2886:4: (lv_svd_3_0= ruleShortVarDecl )
                    // InternalGo.g:2887:5: lv_svd_3_0= ruleShortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSvdShortVarDeclParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_svd_3_0=ruleShortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"svd",
                      						lv_svd_3_0,
                      						"org.xtext.example.mydsl.Go.ShortVarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:2905:3: ( (lv_es_4_0= ruleExpressionStmt ) )
                    {
                    // InternalGo.g:2905:3: ( (lv_es_4_0= ruleExpressionStmt ) )
                    // InternalGo.g:2906:4: (lv_es_4_0= ruleExpressionStmt )
                    {
                    // InternalGo.g:2906:4: (lv_es_4_0= ruleExpressionStmt )
                    // InternalGo.g:2907:5: lv_es_4_0= ruleExpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEsExpressionStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_es_4_0=ruleExpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"es",
                      						lv_es_4_0,
                      						"org.xtext.example.mydsl.Go.ExpressionStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:2925:3: ( (lv_empty_5_0= ruleEmptyStmt ) )
                    {
                    // InternalGo.g:2925:3: ( (lv_empty_5_0= ruleEmptyStmt ) )
                    // InternalGo.g:2926:4: (lv_empty_5_0= ruleEmptyStmt )
                    {
                    // InternalGo.g:2926:4: (lv_empty_5_0= ruleEmptyStmt )
                    // InternalGo.g:2927:5: lv_empty_5_0= ruleEmptyStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyEmptyStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_empty_5_0=ruleEmptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"empty",
                      						lv_empty_5_0,
                      						"org.xtext.example.mydsl.Go.EmptyStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStmt"


    // $ANTLR start "entryRuleGoStmt"
    // InternalGo.g:2948:1: entryRuleGoStmt returns [String current=null] : iv_ruleGoStmt= ruleGoStmt EOF ;
    public final String entryRuleGoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGoStmt = null;


        try {
            // InternalGo.g:2948:46: (iv_ruleGoStmt= ruleGoStmt EOF )
            // InternalGo.g:2949:2: iv_ruleGoStmt= ruleGoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoStmt=ruleGoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoStmt"


    // $ANTLR start "ruleGoStmt"
    // InternalGo.g:2955:1: ruleGoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2961:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:2962:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:2962:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:2963:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,61,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoStmt"


    // $ANTLR start "entryRuleReturnStmt"
    // InternalGo.g:2982:1: entryRuleReturnStmt returns [EObject current=null] : iv_ruleReturnStmt= ruleReturnStmt EOF ;
    public final EObject entryRuleReturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStmt = null;


        try {
            // InternalGo.g:2982:51: (iv_ruleReturnStmt= ruleReturnStmt EOF )
            // InternalGo.g:2983:2: iv_ruleReturnStmt= ruleReturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStmt=ruleReturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStmt"


    // $ANTLR start "ruleReturnStmt"
    // InternalGo.g:2989:1: ruleReturnStmt returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) ;
    public final EObject ruleReturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2995:2: ( ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) )
            // InternalGo.g:2996:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            {
            // InternalGo.g:2996:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            // InternalGo.g:2997:3: () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            {
            // InternalGo.g:2997:3: ()
            // InternalGo.g:2998:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,62,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
              		
            }
            // InternalGo.g:3011:3: ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            int alt35=2;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalGo.g:3012:4: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:3012:4: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:3013:5: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"expressionlist",
                      						lv_expressionlist_2_0,
                      						"org.xtext.example.mydsl.Go.ExpressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStmt"


    // $ANTLR start "entryRuleBreakStmt"
    // InternalGo.g:3034:1: entryRuleBreakStmt returns [String current=null] : iv_ruleBreakStmt= ruleBreakStmt EOF ;
    public final String entryRuleBreakStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBreakStmt = null;


        try {
            // InternalGo.g:3034:49: (iv_ruleBreakStmt= ruleBreakStmt EOF )
            // InternalGo.g:3035:2: iv_ruleBreakStmt= ruleBreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStmt=ruleBreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBreakStmt"


    // $ANTLR start "ruleBreakStmt"
    // InternalGo.g:3041:1: ruleBreakStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'break' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleBreakStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3047:2: ( (kw= 'break' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:3048:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:3048:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            // InternalGo.g:3049:3: kw= 'break' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,63,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getBreakStmtAccess().getBreakKeyword_0());
              		
            }
            // InternalGo.g:3054:3: (this_Label_1= ruleLabel )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_ID) ) {
                int LA36_1 = input.LA(2);

                if ( (synpred62_InternalGo()) ) {
                    alt36=1;
                }
            }
            switch (alt36) {
                case 1 :
                    // InternalGo.g:3055:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBreakStmt"


    // $ANTLR start "entryRuleContinueStmt"
    // InternalGo.g:3070:1: entryRuleContinueStmt returns [String current=null] : iv_ruleContinueStmt= ruleContinueStmt EOF ;
    public final String entryRuleContinueStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleContinueStmt = null;


        try {
            // InternalGo.g:3070:52: (iv_ruleContinueStmt= ruleContinueStmt EOF )
            // InternalGo.g:3071:2: iv_ruleContinueStmt= ruleContinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStmt=ruleContinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContinueStmt"


    // $ANTLR start "ruleContinueStmt"
    // InternalGo.g:3077:1: ruleContinueStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'continue' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleContinueStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3083:2: ( (kw= 'continue' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:3084:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:3084:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            // InternalGo.g:3085:3: kw= 'continue' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,64,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getContinueStmtAccess().getContinueKeyword_0());
              		
            }
            // InternalGo.g:3090:3: (this_Label_1= ruleLabel )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_ID) ) {
                int LA37_1 = input.LA(2);

                if ( (synpred63_InternalGo()) ) {
                    alt37=1;
                }
            }
            switch (alt37) {
                case 1 :
                    // InternalGo.g:3091:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContinueStmt"


    // $ANTLR start "entryRuleGotoStmt"
    // InternalGo.g:3106:1: entryRuleGotoStmt returns [String current=null] : iv_ruleGotoStmt= ruleGotoStmt EOF ;
    public final String entryRuleGotoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGotoStmt = null;


        try {
            // InternalGo.g:3106:48: (iv_ruleGotoStmt= ruleGotoStmt EOF )
            // InternalGo.g:3107:2: iv_ruleGotoStmt= ruleGotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGotoStmt=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGotoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGotoStmt"


    // $ANTLR start "ruleGotoStmt"
    // InternalGo.g:3113:1: ruleGotoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGotoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3119:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:3120:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:3120:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:3121:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,61,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGotoStmt"


    // $ANTLR start "entryRuleIfStmt"
    // InternalGo.g:3140:1: entryRuleIfStmt returns [EObject current=null] : iv_ruleIfStmt= ruleIfStmt EOF ;
    public final EObject entryRuleIfStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStmt = null;


        try {
            // InternalGo.g:3140:47: (iv_ruleIfStmt= ruleIfStmt EOF )
            // InternalGo.g:3141:2: iv_ruleIfStmt= ruleIfStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStmt=ruleIfStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStmt"


    // $ANTLR start "ruleIfStmt"
    // InternalGo.g:3147:1: ruleIfStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) ;
    public final EObject ruleIfStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_simst_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_block_4_0 = null;

        EObject lv_ifs_6_0 = null;

        EObject lv_block2_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3153:2: ( (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) )
            // InternalGo.g:3154:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            {
            // InternalGo.g:3154:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            // InternalGo.g:3155:3: otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            {
            otherlv_0=(Token)match(input,65,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:3159:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?
            int alt38=2;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // InternalGo.g:3160:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:3160:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:3161:5: (lv_simst_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:3161:5: (lv_simst_1_0= ruleSimpleStmt )
                    // InternalGo.g:3162:6: lv_simst_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_simst_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"simst",
                      							lv_simst_1_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,52,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3184:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:3185:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:3185:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:3186:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3203:3: ( (lv_block_4_0= ruleBlock ) )
            // InternalGo.g:3204:4: (lv_block_4_0= ruleBlock )
            {
            // InternalGo.g:3204:4: (lv_block_4_0= ruleBlock )
            // InternalGo.g:3205:5: lv_block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_37);
            lv_block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3222:3: (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==66) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3223:4: otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    {
                    otherlv_5=(Token)match(input,66,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:3227:4: ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    int alt39=2;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==65) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==51) ) {
                        alt39=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 39, 0, input);

                        throw nvae;
                    }
                    switch (alt39) {
                        case 1 :
                            // InternalGo.g:3228:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            {
                            // InternalGo.g:3228:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            // InternalGo.g:3229:6: (lv_ifs_6_0= ruleIfStmt )
                            {
                            // InternalGo.g:3229:6: (lv_ifs_6_0= ruleIfStmt )
                            // InternalGo.g:3230:7: lv_ifs_6_0= ruleIfStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfsIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ifs_6_0=ruleIfStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"ifs",
                              								lv_ifs_6_0,
                              								"org.xtext.example.mydsl.Go.IfStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:3248:5: ( (lv_block2_7_0= ruleBlock ) )
                            {
                            // InternalGo.g:3248:5: ( (lv_block2_7_0= ruleBlock ) )
                            // InternalGo.g:3249:6: (lv_block2_7_0= ruleBlock )
                            {
                            // InternalGo.g:3249:6: (lv_block2_7_0= ruleBlock )
                            // InternalGo.g:3250:7: lv_block2_7_0= ruleBlock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getBlock2BlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_block2_7_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"block2",
                              								lv_block2_7_0,
                              								"org.xtext.example.mydsl.Go.Block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStmt"


    // $ANTLR start "entryRuleFallthroughStmt"
    // InternalGo.g:3273:1: entryRuleFallthroughStmt returns [String current=null] : iv_ruleFallthroughStmt= ruleFallthroughStmt EOF ;
    public final String entryRuleFallthroughStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFallthroughStmt = null;


        try {
            // InternalGo.g:3273:55: (iv_ruleFallthroughStmt= ruleFallthroughStmt EOF )
            // InternalGo.g:3274:2: iv_ruleFallthroughStmt= ruleFallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFallthroughStmt=ruleFallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFallthroughStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallthroughStmt"


    // $ANTLR start "ruleFallthroughStmt"
    // InternalGo.g:3280:1: ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'fallthrough' ;
    public final AntlrDatatypeRuleToken ruleFallthroughStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:3286:2: (kw= 'fallthrough' )
            // InternalGo.g:3287:2: kw= 'fallthrough'
            {
            kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallthroughStmt"


    // $ANTLR start "entryRuleSwitchStmt"
    // InternalGo.g:3295:1: entryRuleSwitchStmt returns [EObject current=null] : iv_ruleSwitchStmt= ruleSwitchStmt EOF ;
    public final EObject entryRuleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStmt = null;


        try {
            // InternalGo.g:3295:51: (iv_ruleSwitchStmt= ruleSwitchStmt EOF )
            // InternalGo.g:3296:2: iv_ruleSwitchStmt= ruleSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStmt=ruleSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchStmt"


    // $ANTLR start "ruleSwitchStmt"
    // InternalGo.g:3302:1: ruleSwitchStmt returns [EObject current=null] : (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt ) ;
    public final EObject ruleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject this_ExprSwitchStmt_0 = null;

        EObject this_TypeSwitchStmt_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3308:2: ( (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt ) )
            // InternalGo.g:3309:2: (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt )
            {
            // InternalGo.g:3309:2: (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==77) ) {
                int LA41_1 = input.LA(2);

                if ( (synpred67_InternalGo()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalGo.g:3310:3: this_ExprSwitchStmt_0= ruleExprSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExprSwitchStmt_0=ruleExprSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExprSwitchStmt_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3322:3: this_TypeSwitchStmt_1= ruleTypeSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeSwitchStmt_1=ruleTypeSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeSwitchStmt_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchStmt"


    // $ANTLR start "entryRuleSelectStmt"
    // InternalGo.g:3337:1: entryRuleSelectStmt returns [EObject current=null] : iv_ruleSelectStmt= ruleSelectStmt EOF ;
    public final EObject entryRuleSelectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectStmt = null;


        try {
            // InternalGo.g:3337:51: (iv_ruleSelectStmt= ruleSelectStmt EOF )
            // InternalGo.g:3338:2: iv_ruleSelectStmt= ruleSelectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectStmt=ruleSelectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectStmt"


    // $ANTLR start "ruleSelectStmt"
    // InternalGo.g:3344:1: ruleSelectStmt returns [EObject current=null] : ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) ;
    public final EObject ruleSelectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_commclause_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3350:2: ( ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) )
            // InternalGo.g:3351:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            {
            // InternalGo.g:3351:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            // InternalGo.g:3352:3: () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}'
            {
            // InternalGo.g:3352:3: ()
            // InternalGo.g:3353:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,68,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,51,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:3370:3: ( (lv_commclause_3_0= ruleCommClause ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=78 && LA42_0<=79)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalGo.g:3371:4: (lv_commclause_3_0= ruleCommClause )
            	    {
            	    // InternalGo.g:3371:4: (lv_commclause_3_0= ruleCommClause )
            	    // InternalGo.g:3372:5: lv_commclause_3_0= ruleCommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommclauseCommClauseParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_commclause_3_0=ruleCommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"commclause",
            	      						lv_commclause_3_0,
            	      						"org.xtext.example.mydsl.Go.CommClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            otherlv_4=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectStmt"


    // $ANTLR start "entryRuleForStmt"
    // InternalGo.g:3397:1: entryRuleForStmt returns [EObject current=null] : iv_ruleForStmt= ruleForStmt EOF ;
    public final EObject entryRuleForStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStmt = null;


        try {
            // InternalGo.g:3397:48: (iv_ruleForStmt= ruleForStmt EOF )
            // InternalGo.g:3398:2: iv_ruleForStmt= ruleForStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStmt=ruleForStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForStmt"


    // $ANTLR start "ruleForStmt"
    // InternalGo.g:3404:1: ruleForStmt returns [EObject current=null] : ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) ) ;
    public final EObject ruleForStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_condition_2_0 = null;

        EObject lv_for_3_0 = null;

        EObject lv_range_4_0 = null;

        EObject lv_block_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3410:2: ( ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) ) )
            // InternalGo.g:3411:2: ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) )
            {
            // InternalGo.g:3411:2: ( () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) ) )
            // InternalGo.g:3412:3: () otherlv_1= 'for' ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )? ( (lv_block_5_0= ruleBlock ) )
            {
            // InternalGo.g:3412:3: ()
            // InternalGo.g:3413:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getForStmtAccess().getForStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,69,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForStmtAccess().getForKeyword_1());
              		
            }
            // InternalGo.g:3426:3: ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )?
            int alt43=4;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3427:4: ( (lv_condition_2_0= ruleCondition ) )
                    {
                    // InternalGo.g:3427:4: ( (lv_condition_2_0= ruleCondition ) )
                    // InternalGo.g:3428:5: (lv_condition_2_0= ruleCondition )
                    {
                    // InternalGo.g:3428:5: (lv_condition_2_0= ruleCondition )
                    // InternalGo.g:3429:6: lv_condition_2_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_condition_2_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_2_0,
                      							"org.xtext.example.mydsl.Go.Condition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3447:4: ( (lv_for_3_0= ruleForClause ) )
                    {
                    // InternalGo.g:3447:4: ( (lv_for_3_0= ruleForClause ) )
                    // InternalGo.g:3448:5: (lv_for_3_0= ruleForClause )
                    {
                    // InternalGo.g:3448:5: (lv_for_3_0= ruleForClause )
                    // InternalGo.g:3449:6: lv_for_3_0= ruleForClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_for_3_0=ruleForClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"for",
                      							lv_for_3_0,
                      							"org.xtext.example.mydsl.Go.ForClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3467:4: ( (lv_range_4_0= ruleRangeClause ) )
                    {
                    // InternalGo.g:3467:4: ( (lv_range_4_0= ruleRangeClause ) )
                    // InternalGo.g:3468:5: (lv_range_4_0= ruleRangeClause )
                    {
                    // InternalGo.g:3468:5: (lv_range_4_0= ruleRangeClause )
                    // InternalGo.g:3469:6: lv_range_4_0= ruleRangeClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_range_4_0=ruleRangeClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"range",
                      							lv_range_4_0,
                      							"org.xtext.example.mydsl.Go.RangeClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:3487:3: ( (lv_block_5_0= ruleBlock ) )
            // InternalGo.g:3488:4: (lv_block_5_0= ruleBlock )
            {
            // InternalGo.g:3488:4: (lv_block_5_0= ruleBlock )
            // InternalGo.g:3489:5: lv_block_5_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_5_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForStmt"


    // $ANTLR start "entryRuleDeferStmt"
    // InternalGo.g:3510:1: entryRuleDeferStmt returns [EObject current=null] : iv_ruleDeferStmt= ruleDeferStmt EOF ;
    public final EObject entryRuleDeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeferStmt = null;


        try {
            // InternalGo.g:3510:50: (iv_ruleDeferStmt= ruleDeferStmt EOF )
            // InternalGo.g:3511:2: iv_ruleDeferStmt= ruleDeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeferStmt=ruleDeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeferStmt"


    // $ANTLR start "ruleDeferStmt"
    // InternalGo.g:3517:1: ruleDeferStmt returns [EObject current=null] : (otherlv_0= 'defer' this_Expression_1= ruleExpression ) ;
    public final EObject ruleDeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Expression_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3523:2: ( (otherlv_0= 'defer' this_Expression_1= ruleExpression ) )
            // InternalGo.g:3524:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            {
            // InternalGo.g:3524:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            // InternalGo.g:3525:3: otherlv_0= 'defer' this_Expression_1= ruleExpression
            {
            otherlv_0=(Token)match(input,70,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Expression_1=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeferStmt"


    // $ANTLR start "entryRuleConstDecl"
    // InternalGo.g:3544:1: entryRuleConstDecl returns [EObject current=null] : iv_ruleConstDecl= ruleConstDecl EOF ;
    public final EObject entryRuleConstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstDecl = null;


        try {
            // InternalGo.g:3544:50: (iv_ruleConstDecl= ruleConstDecl EOF )
            // InternalGo.g:3545:2: iv_ruleConstDecl= ruleConstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstDecl=ruleConstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstDecl"


    // $ANTLR start "ruleConstDecl"
    // InternalGo.g:3551:1: ruleConstDecl returns [EObject current=null] : ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleConstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_constspec_2_0 = null;

        EObject lv_constspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3557:2: ( ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3558:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3558:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            // InternalGo.g:3559:3: () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3559:3: ()
            // InternalGo.g:3560:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
              		
            }
            // InternalGo.g:3573:3: ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_ID) ) {
                alt46=1;
            }
            else if ( (LA46_0==45) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalGo.g:3574:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    {
                    // InternalGo.g:3574:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    // InternalGo.g:3575:5: (lv_constspec_2_0= ruleConstSpec )
                    {
                    // InternalGo.g:3575:5: (lv_constspec_2_0= ruleConstSpec )
                    // InternalGo.g:3576:6: lv_constspec_2_0= ruleConstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getConstspecConstSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constspec_2_0=ruleConstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						set(
                      							current,
                      							"constspec",
                      							lv_constspec_2_0,
                      							"org.xtext.example.mydsl.Go.ConstSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3594:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3594:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    // InternalGo.g:3595:5: otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3599:5: ( ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )? )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==RULE_ID) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalGo.g:3600:6: ( (lv_constspec2_4_0= ruleConstSpec ) ) (otherlv_5= ';' )?
                    	    {
                    	    // InternalGo.g:3600:6: ( (lv_constspec2_4_0= ruleConstSpec ) )
                    	    // InternalGo.g:3601:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    {
                    	    // InternalGo.g:3601:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    // InternalGo.g:3602:8: lv_constspec2_4_0= ruleConstSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getConstDeclAccess().getConstspec2ConstSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    lv_constspec2_4_0=ruleConstSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"constspec2",
                    	      									lv_constspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.ConstSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    // InternalGo.g:3619:6: (otherlv_5= ';' )?
                    	    int alt44=2;
                    	    int LA44_0 = input.LA(1);

                    	    if ( (LA44_0==52) ) {
                    	        alt44=1;
                    	    }
                    	    switch (alt44) {
                    	        case 1 :
                    	            // InternalGo.g:3620:7: otherlv_5= ';'
                    	            {
                    	            otherlv_5=(Token)match(input,52,FOLLOW_42); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	              						
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstDecl"


    // $ANTLR start "entryRuleConstSpec"
    // InternalGo.g:3636:1: entryRuleConstSpec returns [EObject current=null] : iv_ruleConstSpec= ruleConstSpec EOF ;
    public final EObject entryRuleConstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstSpec = null;


        try {
            // InternalGo.g:3636:50: (iv_ruleConstSpec= ruleConstSpec EOF )
            // InternalGo.g:3637:2: iv_ruleConstSpec= ruleConstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstSpec=ruleConstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstSpec"


    // $ANTLR start "ruleConstSpec"
    // InternalGo.g:3643:1: ruleConstSpec returns [EObject current=null] : ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) ;
    public final EObject ruleConstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_id_0_0 = null;

        EObject lv_tp_1_0 = null;

        EObject lv_expressionlist_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3649:2: ( ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) )
            // InternalGo.g:3650:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            {
            // InternalGo.g:3650:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            // InternalGo.g:3651:3: ( (lv_id_0_0= ruleIdentifierList ) ) ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            {
            // InternalGo.g:3651:3: ( (lv_id_0_0= ruleIdentifierList ) )
            // InternalGo.g:3652:4: (lv_id_0_0= ruleIdentifierList )
            {
            // InternalGo.g:3652:4: (lv_id_0_0= ruleIdentifierList )
            // InternalGo.g:3653:5: lv_id_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getIdIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_id_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3670:3: ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3671:4: ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    {
                    // InternalGo.g:3671:4: ( (lv_tp_1_0= ruleType ) )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==RULE_ID||LA47_0==RULE_MUL||LA47_0==41||LA47_0==45||LA47_0==48||LA47_0==50||(LA47_0>=56 && LA47_0<=59)) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalGo.g:3672:5: (lv_tp_1_0= ruleType )
                            {
                            // InternalGo.g:3672:5: (lv_tp_1_0= ruleType )
                            // InternalGo.g:3673:6: lv_tp_1_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstSpecAccess().getTpTypeParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_45);
                            lv_tp_1_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                              						}
                              						set(
                              							current,
                              							"tp",
                              							lv_tp_1_0,
                              							"org.xtext.example.mydsl.Go.Type");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,RULE_EQUALS,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
                      			
                    }
                    // InternalGo.g:3694:4: ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    // InternalGo.g:3695:5: (lv_expressionlist_3_0= ruleExpressionList )
                    {
                    // InternalGo.g:3695:5: (lv_expressionlist_3_0= ruleExpressionList )
                    // InternalGo.g:3696:6: lv_expressionlist_3_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_3_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_3_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstSpec"


    // $ANTLR start "entryRuleTypeDecl"
    // InternalGo.g:3718:1: entryRuleTypeDecl returns [EObject current=null] : iv_ruleTypeDecl= ruleTypeDecl EOF ;
    public final EObject entryRuleTypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDecl = null;


        try {
            // InternalGo.g:3718:49: (iv_ruleTypeDecl= ruleTypeDecl EOF )
            // InternalGo.g:3719:2: iv_ruleTypeDecl= ruleTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDecl=ruleTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDecl"


    // $ANTLR start "ruleTypeDecl"
    // InternalGo.g:3725:1: ruleTypeDecl returns [EObject current=null] : ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleTypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_typespec_2_0 = null;

        EObject lv_typespec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3731:2: ( ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3732:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3732:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:3733:3: () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3733:3: ()
            // InternalGo.g:3734:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
              		
            }
            // InternalGo.g:3747:3: ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_ID) ) {
                alt50=1;
            }
            else if ( (LA50_0==45) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalGo.g:3748:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    {
                    // InternalGo.g:3748:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    // InternalGo.g:3749:5: (lv_typespec_2_0= ruleTypeSpec )
                    {
                    // InternalGo.g:3749:5: (lv_typespec_2_0= ruleTypeSpec )
                    // InternalGo.g:3750:6: lv_typespec_2_0= ruleTypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespecTypeSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typespec_2_0=ruleTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						set(
                      							current,
                      							"typespec",
                      							lv_typespec_2_0,
                      							"org.xtext.example.mydsl.Go.TypeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3768:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3768:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:3769:5: otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3773:5: ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==RULE_ID) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    // InternalGo.g:3774:6: ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:3774:6: ( (lv_typespec2_4_0= ruleTypeSpec ) )
                    	    // InternalGo.g:3775:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    {
                    	    // InternalGo.g:3775:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    // InternalGo.g:3776:8: lv_typespec2_4_0= ruleTypeSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespec2TypeSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_26);
                    	    lv_typespec2_4_0=ruleTypeSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"typespec2",
                    	      									lv_typespec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.TypeSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,52,FOLLOW_42); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDecl"


    // $ANTLR start "entryRuleTypeSpec"
    // InternalGo.g:3808:1: entryRuleTypeSpec returns [EObject current=null] : iv_ruleTypeSpec= ruleTypeSpec EOF ;
    public final EObject entryRuleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSpec = null;


        try {
            // InternalGo.g:3808:49: (iv_ruleTypeSpec= ruleTypeSpec EOF )
            // InternalGo.g:3809:2: iv_ruleTypeSpec= ruleTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSpec=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSpec"


    // $ANTLR start "ruleTypeSpec"
    // InternalGo.g:3815:1: ruleTypeSpec returns [EObject current=null] : (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) ;
    public final EObject ruleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject this_AliasDecl_0 = null;

        EObject this_TypeDef_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3821:2: ( (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) )
            // InternalGo.g:3822:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            {
            // InternalGo.g:3822:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_ID) ) {
                int LA51_1 = input.LA(2);

                if ( (LA51_1==RULE_EQUALS) ) {
                    alt51=1;
                }
                else if ( (LA51_1==RULE_ID||LA51_1==RULE_MUL||LA51_1==41||LA51_1==45||LA51_1==48||LA51_1==50||(LA51_1>=56 && LA51_1<=59)) ) {
                    alt51=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalGo.g:3823:3: this_AliasDecl_0= ruleAliasDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AliasDecl_0=ruleAliasDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AliasDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3835:3: this_TypeDef_1= ruleTypeDef
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDef_1=ruleTypeDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSpec"


    // $ANTLR start "entryRuleTypeDef"
    // InternalGo.g:3850:1: entryRuleTypeDef returns [EObject current=null] : iv_ruleTypeDef= ruleTypeDef EOF ;
    public final EObject entryRuleTypeDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDef = null;


        try {
            // InternalGo.g:3850:48: (iv_ruleTypeDef= ruleTypeDef EOF )
            // InternalGo.g:3851:2: iv_ruleTypeDef= ruleTypeDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDef=ruleTypeDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDef"


    // $ANTLR start "ruleTypeDef"
    // InternalGo.g:3857:1: ruleTypeDef returns [EObject current=null] : ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) ) ;
    public final EObject ruleTypeDef() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_tp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3863:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) ) )
            // InternalGo.g:3864:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) )
            {
            // InternalGo.g:3864:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) )
            // InternalGo.g:3865:3: ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) )
            {
            // InternalGo.g:3865:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
            // InternalGo.g:3866:4: (lv_id_0_0= ruleIDENTIFIER )
            {
            // InternalGo.g:3866:4: (lv_id_0_0= ruleIDENTIFIER )
            // InternalGo.g:3867:5: lv_id_0_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getIdIDENTIFIERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_id_0_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3884:3: ( (lv_tp_1_0= ruleType ) )
            // InternalGo.g:3885:4: (lv_tp_1_0= ruleType )
            {
            // InternalGo.g:3885:4: (lv_tp_1_0= ruleType )
            // InternalGo.g:3886:5: lv_tp_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getTpTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_tp_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"tp",
              						lv_tp_1_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDef"


    // $ANTLR start "entryRuleAliasDecl"
    // InternalGo.g:3907:1: entryRuleAliasDecl returns [EObject current=null] : iv_ruleAliasDecl= ruleAliasDecl EOF ;
    public final EObject entryRuleAliasDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasDecl = null;


        try {
            // InternalGo.g:3907:50: (iv_ruleAliasDecl= ruleAliasDecl EOF )
            // InternalGo.g:3908:2: iv_ruleAliasDecl= ruleAliasDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasDecl=ruleAliasDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasDecl"


    // $ANTLR start "ruleAliasDecl"
    // InternalGo.g:3914:1: ruleAliasDecl returns [EObject current=null] : ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) ) ;
    public final EObject ruleAliasDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_id_1_0 = null;

        EObject lv_tp_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3920:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) ) )
            // InternalGo.g:3921:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) )
            {
            // InternalGo.g:3921:2: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) ) )
            // InternalGo.g:3922:3: () ( (lv_id_1_0= ruleIDENTIFIER ) ) otherlv_2= '=' ( (lv_tp_3_0= ruleType ) )
            {
            // InternalGo.g:3922:3: ()
            // InternalGo.g:3923:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAliasDeclAccess().getAliasDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:3932:3: ( (lv_id_1_0= ruleIDENTIFIER ) )
            // InternalGo.g:3933:4: (lv_id_1_0= ruleIDENTIFIER )
            {
            // InternalGo.g:3933:4: (lv_id_1_0= ruleIDENTIFIER )
            // InternalGo.g:3934:5: lv_id_1_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getIdIDENTIFIERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_id_1_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_1_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,RULE_EQUALS,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalGo.g:3955:3: ( (lv_tp_3_0= ruleType ) )
            // InternalGo.g:3956:4: (lv_tp_3_0= ruleType )
            {
            // InternalGo.g:3956:4: (lv_tp_3_0= ruleType )
            // InternalGo.g:3957:5: lv_tp_3_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getTpTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_tp_3_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"tp",
              						lv_tp_3_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasDecl"


    // $ANTLR start "entryRuleVarDecl"
    // InternalGo.g:3978:1: entryRuleVarDecl returns [EObject current=null] : iv_ruleVarDecl= ruleVarDecl EOF ;
    public final EObject entryRuleVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDecl = null;


        try {
            // InternalGo.g:3978:48: (iv_ruleVarDecl= ruleVarDecl EOF )
            // InternalGo.g:3979:2: iv_ruleVarDecl= ruleVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDecl=ruleVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDecl"


    // $ANTLR start "ruleVarDecl"
    // InternalGo.g:3985:1: ruleVarDecl returns [EObject current=null] : ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_varspec_2_0 = null;

        EObject lv_varspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3991:2: ( ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3992:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3992:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) ) )
            // InternalGo.g:3993:3: () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3993:3: ()
            // InternalGo.g:3994:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
              		
            }
            // InternalGo.g:4007:3: ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ID) ) {
                alt54=1;
            }
            else if ( (LA54_0==45) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalGo.g:4008:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    {
                    // InternalGo.g:4008:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    // InternalGo.g:4009:5: (lv_varspec_2_0= ruleVarSpec )
                    {
                    // InternalGo.g:4009:5: (lv_varspec_2_0= ruleVarSpec )
                    // InternalGo.g:4010:6: lv_varspec_2_0= ruleVarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getVarspecVarSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_varspec_2_0=ruleVarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						set(
                      							current,
                      							"varspec",
                      							lv_varspec_2_0,
                      							"org.xtext.example.mydsl.Go.VarSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4028:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    {
                    // InternalGo.g:4028:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')' )
                    // InternalGo.g:4029:5: otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:4033:5: ( ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )? )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==RULE_ID) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalGo.g:4034:6: ( (lv_varspec2_4_0= ruleVarSpec ) ) (otherlv_5= ';' )?
                    	    {
                    	    // InternalGo.g:4034:6: ( (lv_varspec2_4_0= ruleVarSpec ) )
                    	    // InternalGo.g:4035:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    {
                    	    // InternalGo.g:4035:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    // InternalGo.g:4036:8: lv_varspec2_4_0= ruleVarSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVarDeclAccess().getVarspec2VarSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    lv_varspec2_4_0=ruleVarSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"varspec2",
                    	      									lv_varspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.VarSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    // InternalGo.g:4053:6: (otherlv_5= ';' )?
                    	    int alt52=2;
                    	    int LA52_0 = input.LA(1);

                    	    if ( (LA52_0==52) ) {
                    	        alt52=1;
                    	    }
                    	    switch (alt52) {
                    	        case 1 :
                    	            // InternalGo.g:4054:7: otherlv_5= ';'
                    	            {
                    	            otherlv_5=(Token)match(input,52,FOLLOW_42); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	              						
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDecl"


    // $ANTLR start "entryRuleVarSpec"
    // InternalGo.g:4070:1: entryRuleVarSpec returns [EObject current=null] : iv_ruleVarSpec= ruleVarSpec EOF ;
    public final EObject entryRuleVarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarSpec = null;


        try {
            // InternalGo.g:4070:48: (iv_ruleVarSpec= ruleVarSpec EOF )
            // InternalGo.g:4071:2: iv_ruleVarSpec= ruleVarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarSpec=ruleVarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarSpec"


    // $ANTLR start "ruleVarSpec"
    // InternalGo.g:4077:1: ruleVarSpec returns [EObject current=null] : ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) ;
    public final EObject ruleVarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_id_0_0 = null;

        EObject lv_tp2_1_0 = null;

        EObject lv_expressionlist_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4083:2: ( ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) )
            // InternalGo.g:4084:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            {
            // InternalGo.g:4084:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
            // InternalGo.g:4085:3: ( (lv_id_0_0= ruleIdentifierList ) ) ( (lv_tp2_1_0= ruleType ) )? (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            {
            // InternalGo.g:4085:3: ( (lv_id_0_0= ruleIdentifierList ) )
            // InternalGo.g:4086:4: (lv_id_0_0= ruleIdentifierList )
            {
            // InternalGo.g:4086:4: (lv_id_0_0= ruleIdentifierList )
            // InternalGo.g:4087:5: lv_id_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarSpecAccess().getIdIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_id_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarSpecRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4104:3: ( (lv_tp2_1_0= ruleType ) )?
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalGo.g:4105:4: (lv_tp2_1_0= ruleType )
                    {
                    // InternalGo.g:4105:4: (lv_tp2_1_0= ruleType )
                    // InternalGo.g:4106:5: lv_tp2_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVarSpecAccess().getTp2TypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_46);
                    lv_tp2_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      					}
                      					set(
                      						current,
                      						"tp2",
                      						lv_tp2_1_0,
                      						"org.xtext.example.mydsl.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:4123:3: (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_EQUALS) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4124:4: otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    {
                    otherlv_2=(Token)match(input,RULE_EQUALS,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalGo.g:4128:4: ( (lv_expressionlist_3_0= ruleExpressionList ) )
                    // InternalGo.g:4129:5: (lv_expressionlist_3_0= ruleExpressionList )
                    {
                    // InternalGo.g:4129:5: (lv_expressionlist_3_0= ruleExpressionList )
                    // InternalGo.g:4130:6: lv_expressionlist_3_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionlistExpressionListParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_3_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_3_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarSpec"


    // $ANTLR start "entryRuleEmptyStmt"
    // InternalGo.g:4152:1: entryRuleEmptyStmt returns [String current=null] : iv_ruleEmptyStmt= ruleEmptyStmt EOF ;
    public final String entryRuleEmptyStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmptyStmt = null;


        try {
            // InternalGo.g:4152:49: (iv_ruleEmptyStmt= ruleEmptyStmt EOF )
            // InternalGo.g:4153:2: iv_ruleEmptyStmt= ruleEmptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStmt=ruleEmptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyStmt"


    // $ANTLR start "ruleEmptyStmt"
    // InternalGo.g:4159:1: ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ';' ;
    public final AntlrDatatypeRuleToken ruleEmptyStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:4165:2: (kw= ';' )
            // InternalGo.g:4166:2: kw= ';'
            {
            kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getEmptyStmtAccess().getSemicolonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyStmt"


    // $ANTLR start "entryRuleExpressionStmt"
    // InternalGo.g:4174:1: entryRuleExpressionStmt returns [EObject current=null] : iv_ruleExpressionStmt= ruleExpressionStmt EOF ;
    public final EObject entryRuleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStmt = null;


        try {
            // InternalGo.g:4174:55: (iv_ruleExpressionStmt= ruleExpressionStmt EOF )
            // InternalGo.g:4175:2: iv_ruleExpressionStmt= ruleExpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStmt=ruleExpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionStmt"


    // $ANTLR start "ruleExpressionStmt"
    // InternalGo.g:4181:1: ruleExpressionStmt returns [EObject current=null] : ( () ( (lv_exp_1_0= ruleExpression ) ) ) ;
    public final EObject ruleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4187:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) ) )
            // InternalGo.g:4188:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            {
            // InternalGo.g:4188:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            // InternalGo.g:4189:3: () ( (lv_exp_1_0= ruleExpression ) )
            {
            // InternalGo.g:4189:3: ()
            // InternalGo.g:4190:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionStmtAccess().getExpressionStmtAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4199:3: ( (lv_exp_1_0= ruleExpression ) )
            // InternalGo.g:4200:4: (lv_exp_1_0= ruleExpression )
            {
            // InternalGo.g:4200:4: (lv_exp_1_0= ruleExpression )
            // InternalGo.g:4201:5: lv_exp_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionStmt"


    // $ANTLR start "entryRuleSendStmt"
    // InternalGo.g:4222:1: entryRuleSendStmt returns [EObject current=null] : iv_ruleSendStmt= ruleSendStmt EOF ;
    public final EObject entryRuleSendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSendStmt = null;


        try {
            // InternalGo.g:4222:49: (iv_ruleSendStmt= ruleSendStmt EOF )
            // InternalGo.g:4223:2: iv_ruleSendStmt= ruleSendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSendStmt=ruleSendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSendStmt"


    // $ANTLR start "ruleSendStmt"
    // InternalGo.g:4229:1: ruleSendStmt returns [EObject current=null] : ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleSendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_ch_1_0 = null;

        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4235:2: ( ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) ) )
            // InternalGo.g:4236:2: ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) )
            {
            // InternalGo.g:4236:2: ( () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) ) )
            // InternalGo.g:4237:3: () ( (lv_ch_1_0= ruleChannel ) ) otherlv_2= '<-' ( (lv_expression_3_0= ruleExpression ) )
            {
            // InternalGo.g:4237:3: ()
            // InternalGo.g:4238:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSendStmtAccess().getSendStmtAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4247:3: ( (lv_ch_1_0= ruleChannel ) )
            // InternalGo.g:4248:4: (lv_ch_1_0= ruleChannel )
            {
            // InternalGo.g:4248:4: (lv_ch_1_0= ruleChannel )
            // InternalGo.g:4249:5: lv_ch_1_0= ruleChannel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getChChannelParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_ch_1_0=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"ch",
              						lv_ch_1_0,
              						"org.xtext.example.mydsl.Go.Channel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,59,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_2());
              		
            }
            // InternalGo.g:4270:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:4271:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:4271:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:4272:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSendStmt"


    // $ANTLR start "entryRuleChannel"
    // InternalGo.g:4293:1: entryRuleChannel returns [EObject current=null] : iv_ruleChannel= ruleChannel EOF ;
    public final EObject entryRuleChannel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannel = null;


        try {
            // InternalGo.g:4293:48: (iv_ruleChannel= ruleChannel EOF )
            // InternalGo.g:4294:2: iv_ruleChannel= ruleChannel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannel=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannel"


    // $ANTLR start "ruleChannel"
    // InternalGo.g:4300:1: ruleChannel returns [EObject current=null] : ( (lv_exp_0_0= ruleExpression ) ) ;
    public final EObject ruleChannel() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4306:2: ( ( (lv_exp_0_0= ruleExpression ) ) )
            // InternalGo.g:4307:2: ( (lv_exp_0_0= ruleExpression ) )
            {
            // InternalGo.g:4307:2: ( (lv_exp_0_0= ruleExpression ) )
            // InternalGo.g:4308:3: (lv_exp_0_0= ruleExpression )
            {
            // InternalGo.g:4308:3: (lv_exp_0_0= ruleExpression )
            // InternalGo.g:4309:4: lv_exp_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getChannelAccess().getExpExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getChannelRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.xtext.example.mydsl.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannel"


    // $ANTLR start "entryRuleIncDecStmt"
    // InternalGo.g:4329:1: entryRuleIncDecStmt returns [EObject current=null] : iv_ruleIncDecStmt= ruleIncDecStmt EOF ;
    public final EObject entryRuleIncDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncDecStmt = null;


        try {
            // InternalGo.g:4329:51: (iv_ruleIncDecStmt= ruleIncDecStmt EOF )
            // InternalGo.g:4330:2: iv_ruleIncDecStmt= ruleIncDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncDecStmt=ruleIncDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncDecStmt"


    // $ANTLR start "ruleIncDecStmt"
    // InternalGo.g:4336:1: ruleIncDecStmt returns [EObject current=null] : ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) ) ;
    public final EObject ruleIncDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_exp_1_0 = null;

        EObject lv_exp2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4342:2: ( ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) ) )
            // InternalGo.g:4343:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) )
            {
            // InternalGo.g:4343:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) )
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalGo.g:4344:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
                    {
                    // InternalGo.g:4344:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
                    // InternalGo.g:4345:4: () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++'
                    {
                    // InternalGo.g:4345:4: ()
                    // InternalGo.g:4346:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getIncDecStmtAccess().getIncDecStmtAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:4355:4: ( (lv_exp_1_0= ruleExpression ) )
                    // InternalGo.g:4356:5: (lv_exp_1_0= ruleExpression )
                    {
                    // InternalGo.g:4356:5: (lv_exp_1_0= ruleExpression )
                    // InternalGo.g:4357:6: lv_exp_1_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_exp_1_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
                      						}
                      						set(
                      							current,
                      							"exp",
                      							lv_exp_1_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4380:3: ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' )
                    {
                    // InternalGo.g:4380:3: ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' )
                    // InternalGo.g:4381:4: ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--'
                    {
                    // InternalGo.g:4381:4: ( (lv_exp2_3_0= ruleExpression ) )
                    // InternalGo.g:4382:5: (lv_exp2_3_0= ruleExpression )
                    {
                    // InternalGo.g:4382:5: (lv_exp2_3_0= ruleExpression )
                    // InternalGo.g:4383:6: lv_exp2_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIncDecStmtAccess().getExp2ExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_49);
                    lv_exp2_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
                      						}
                      						set(
                      							current,
                      							"exp2",
                      							lv_exp2_3_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncDecStmt"


    // $ANTLR start "entryRuleAssignment"
    // InternalGo.g:4409:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalGo.g:4409:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalGo.g:4410:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalGo.g:4416:1: ruleAssignment returns [EObject current=null] : ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( (lv_asop_2_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_asop_2_0=null;
        EObject lv_expressionlist_1_0 = null;

        EObject lv_expressionlist2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4422:2: ( ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( (lv_asop_2_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) ) )
            // InternalGo.g:4423:2: ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( (lv_asop_2_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:4423:2: ( () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( (lv_asop_2_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) ) )
            // InternalGo.g:4424:3: () ( (lv_expressionlist_1_0= ruleExpressionList ) ) ( (lv_asop_2_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_3_0= ruleExpressionList ) )
            {
            // InternalGo.g:4424:3: ()
            // InternalGo.g:4425:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAssignmentAccess().getAssignmentAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4434:3: ( (lv_expressionlist_1_0= ruleExpressionList ) )
            // InternalGo.g:4435:4: (lv_expressionlist_1_0= ruleExpressionList )
            {
            // InternalGo.g:4435:4: (lv_expressionlist_1_0= ruleExpressionList )
            // InternalGo.g:4436:5: lv_expressionlist_1_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlistExpressionListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_expressionlist_1_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist",
              						lv_expressionlist_1_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4453:3: ( (lv_asop_2_0= RULE_ASSING_OP ) )
            // InternalGo.g:4454:4: (lv_asop_2_0= RULE_ASSING_OP )
            {
            // InternalGo.g:4454:4: (lv_asop_2_0= RULE_ASSING_OP )
            // InternalGo.g:4455:5: lv_asop_2_0= RULE_ASSING_OP
            {
            lv_asop_2_0=(Token)match(input,RULE_ASSING_OP,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_asop_2_0, grammarAccess.getAssignmentAccess().getAsopASSING_OPTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAssignmentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"asop",
              						lv_asop_2_0,
              						"org.xtext.example.mydsl.Go.ASSING_OP");
              				
            }

            }


            }

            // InternalGo.g:4471:3: ( (lv_expressionlist2_3_0= ruleExpressionList ) )
            // InternalGo.g:4472:4: (lv_expressionlist2_3_0= ruleExpressionList )
            {
            // InternalGo.g:4472:4: (lv_expressionlist2_3_0= ruleExpressionList )
            // InternalGo.g:4473:5: lv_expressionlist2_3_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlist2ExpressionListParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionlist2_3_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist2",
              						lv_expressionlist2_3_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleShortVarDecl"
    // InternalGo.g:4494:1: entryRuleShortVarDecl returns [EObject current=null] : iv_ruleShortVarDecl= ruleShortVarDecl EOF ;
    public final EObject entryRuleShortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShortVarDecl = null;


        try {
            // InternalGo.g:4494:53: (iv_ruleShortVarDecl= ruleShortVarDecl EOF )
            // InternalGo.g:4495:2: iv_ruleShortVarDecl= ruleShortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShortVarDecl=ruleShortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShortVarDecl"


    // $ANTLR start "ruleShortVarDecl"
    // InternalGo.g:4501:1: ruleShortVarDecl returns [EObject current=null] : ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) ) ;
    public final EObject ruleShortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_idl_1_0 = null;

        EObject lv_epl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4507:2: ( ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) ) )
            // InternalGo.g:4508:2: ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:4508:2: ( () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) ) )
            // InternalGo.g:4509:3: () ( (lv_idl_1_0= ruleIdentifierList ) ) otherlv_2= ':=' ( (lv_epl_3_0= ruleExpressionList ) )
            {
            // InternalGo.g:4509:3: ()
            // InternalGo.g:4510:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getShortVarDeclAccess().getShortVarDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4519:3: ( (lv_idl_1_0= ruleIdentifierList ) )
            // InternalGo.g:4520:4: (lv_idl_1_0= ruleIdentifierList )
            {
            // InternalGo.g:4520:4: (lv_idl_1_0= ruleIdentifierList )
            // InternalGo.g:4521:5: lv_idl_1_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdlIdentifierListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_idl_1_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"idl",
              						lv_idl_1_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,76,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_2());
              		
            }
            // InternalGo.g:4542:3: ( (lv_epl_3_0= ruleExpressionList ) )
            // InternalGo.g:4543:4: (lv_epl_3_0= ruleExpressionList )
            {
            // InternalGo.g:4543:4: (lv_epl_3_0= ruleExpressionList )
            // InternalGo.g:4544:5: lv_epl_3_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getEplExpressionListParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_epl_3_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"epl",
              						lv_epl_3_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShortVarDecl"


    // $ANTLR start "entryRuleExprSwitchStmt"
    // InternalGo.g:4565:1: entryRuleExprSwitchStmt returns [EObject current=null] : iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF ;
    public final EObject entryRuleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchStmt = null;


        try {
            // InternalGo.g:4565:55: (iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF )
            // InternalGo.g:4566:2: iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchStmt=ruleExprSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchStmt"


    // $ANTLR start "ruleExprSwitchStmt"
    // InternalGo.g:4572:1: ruleExprSwitchStmt returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) ;
    public final EObject ruleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_simplestmt_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_exprcase_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4578:2: ( ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) )
            // InternalGo.g:4579:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            {
            // InternalGo.g:4579:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            // InternalGo.g:4580:3: () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}'
            {
            // InternalGo.g:4580:3: ()
            // InternalGo.g:4581:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,77,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1());
              		
            }
            // InternalGo.g:4594:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalGo.g:4595:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';'
                    {
                    // InternalGo.g:4595:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
                    // InternalGo.g:4596:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:4596:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    // InternalGo.g:4597:6: lv_simplestmt_2_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_simplestmt_2_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplestmt",
                      							lv_simplestmt_2_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,52,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4619:3: ( (lv_expression_4_0= ruleExpression ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=RULE_ID && LA59_0<=RULE_FLOAT_LIT)||(LA59_0>=RULE_UNARY_OP && LA59_0<=RULE_STRING)||LA59_0==RULE_MUL||LA59_0==41||(LA59_0>=44 && LA59_0<=45)||LA59_0==48||LA59_0==50||(LA59_0>=56 && LA59_0<=59)) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalGo.g:4620:4: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalGo.g:4620:4: (lv_expression_4_0= ruleExpression )
                    // InternalGo.g:4621:5: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_16);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_4_0,
                      						"org.xtext.example.mydsl.Go.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,51,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalGo.g:4642:3: ( (lv_exprcase_6_0= ruleExprCaseClause ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=78 && LA60_0<=79)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalGo.g:4643:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    {
            	    // InternalGo.g:4643:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    // InternalGo.g:4644:5: lv_exprcase_6_0= ruleExprCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprcaseExprCaseClauseParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_exprcase_6_0=ruleExprCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"exprcase",
            	      						lv_exprcase_6_0,
            	      						"org.xtext.example.mydsl.Go.ExprCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            otherlv_7=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchStmt"


    // $ANTLR start "entryRuleExprCaseClause"
    // InternalGo.g:4669:1: entryRuleExprCaseClause returns [EObject current=null] : iv_ruleExprCaseClause= ruleExprCaseClause EOF ;
    public final EObject entryRuleExprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprCaseClause = null;


        try {
            // InternalGo.g:4669:55: (iv_ruleExprCaseClause= ruleExprCaseClause EOF )
            // InternalGo.g:4670:2: iv_ruleExprCaseClause= ruleExprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprCaseClause=ruleExprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprCaseClause"


    // $ANTLR start "ruleExprCaseClause"
    // InternalGo.g:4676:1: ruleExprCaseClause returns [EObject current=null] : (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleExprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ExprSwitchCase_0 = null;

        EObject lv_statementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4682:2: ( (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:4683:2: (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:4683:2: (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            // InternalGo.g:4684:3: this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_32);
            this_ExprSwitchCase_0=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExprSwitchCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,60,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:4699:3: ( (lv_statementlist_2_0= ruleStatementList ) )
            // InternalGo.g:4700:4: (lv_statementlist_2_0= ruleStatementList )
            {
            // InternalGo.g:4700:4: (lv_statementlist_2_0= ruleStatementList )
            // InternalGo.g:4701:5: lv_statementlist_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprCaseClause"


    // $ANTLR start "entryRuleExprSwitchCase"
    // InternalGo.g:4722:1: entryRuleExprSwitchCase returns [EObject current=null] : iv_ruleExprSwitchCase= ruleExprSwitchCase EOF ;
    public final EObject entryRuleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchCase = null;


        try {
            // InternalGo.g:4722:55: (iv_ruleExprSwitchCase= ruleExprSwitchCase EOF )
            // InternalGo.g:4723:2: iv_ruleExprSwitchCase= ruleExprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchCase=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchCase"


    // $ANTLR start "ruleExprSwitchCase"
    // InternalGo.g:4729:1: ruleExprSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4735:2: ( ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:4736:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:4736:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==78) ) {
                alt61=1;
            }
            else if ( (LA61_0==79) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalGo.g:4737:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    {
                    // InternalGo.g:4737:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    // InternalGo.g:4738:4: () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    {
                    // InternalGo.g:4738:4: ()
                    // InternalGo.g:4739:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,78,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:4752:4: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    // InternalGo.g:4753:5: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:4753:5: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:4754:6: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionlistExpressionListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_2_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4773:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:4773:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:4774:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:4774:4: ()
                    // InternalGo.g:4775:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchCase"


    // $ANTLR start "entryRuleTypeSwitchStmt"
    // InternalGo.g:4793:1: entryRuleTypeSwitchStmt returns [EObject current=null] : iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF ;
    public final EObject entryRuleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchStmt = null;


        try {
            // InternalGo.g:4793:55: (iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF )
            // InternalGo.g:4794:2: iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchStmt=ruleTypeSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchStmt"


    // $ANTLR start "ruleTypeSwitchStmt"
    // InternalGo.g:4800:1: ruleTypeSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simplestm_1_0 = null;

        EObject lv_typesg_3_0 = null;

        EObject lv_typecc_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4806:2: ( (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:4807:2: (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:4807:2: (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:4808:3: otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,77,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:4812:3: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalGo.g:4813:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:4813:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:4814:5: (lv_simplestm_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:4814:5: (lv_simplestm_1_0= ruleSimpleStmt )
                    // InternalGo.g:4815:6: lv_simplestm_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimplestmSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_simplestm_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplestm",
                      							lv_simplestm_1_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,52,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4837:3: ( (lv_typesg_3_0= ruleTypeSwitchGuard ) )
            // InternalGo.g:4838:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            {
            // InternalGo.g:4838:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            // InternalGo.g:4839:5: lv_typesg_3_0= ruleTypeSwitchGuard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypesgTypeSwitchGuardParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_typesg_3_0=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
              					}
              					set(
              						current,
              						"typesg",
              						lv_typesg_3_0,
              						"org.xtext.example.mydsl.Go.TypeSwitchGuard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,51,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:4860:3: ( (lv_typecc_5_0= ruleTypeCaseClause ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( ((LA63_0>=78 && LA63_0<=79)) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalGo.g:4861:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    {
            	    // InternalGo.g:4861:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    // InternalGo.g:4862:5: lv_typecc_5_0= ruleTypeCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeccTypeCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_typecc_5_0=ruleTypeCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"typecc",
            	      						lv_typecc_5_0,
            	      						"org.xtext.example.mydsl.Go.TypeCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            otherlv_6=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchStmt"


    // $ANTLR start "entryRuleTypeSwitchGuard"
    // InternalGo.g:4887:1: entryRuleTypeSwitchGuard returns [EObject current=null] : iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF ;
    public final EObject entryRuleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchGuard = null;


        try {
            // InternalGo.g:4887:56: (iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF )
            // InternalGo.g:4888:2: iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchGuard"


    // $ANTLR start "ruleTypeSwitchGuard"
    // InternalGo.g:4894:1: ruleTypeSwitchGuard returns [EObject current=null] : ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_per_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4900:2: ( ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:4901:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:4901:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:4902:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:4902:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_ID) ) {
                int LA64_1 = input.LA(2);

                if ( (LA64_1==76) ) {
                    alt64=1;
                }
            }
            switch (alt64) {
                case 1 :
                    // InternalGo.g:4903:4: ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':='
                    {
                    // InternalGo.g:4903:4: ( (lv_id_0_0= ruleIDENTIFIER ) )
                    // InternalGo.g:4904:5: (lv_id_0_0= ruleIDENTIFIER )
                    {
                    // InternalGo.g:4904:5: (lv_id_0_0= ruleIDENTIFIER )
                    // InternalGo.g:4905:6: lv_id_0_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getIdIDENTIFIERParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    lv_id_0_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
                      						}
                      						set(
                      							current,
                      							"id",
                      							lv_id_0_0,
                      							"org.xtext.example.mydsl.Go.IDENTIFIER");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,76,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4927:3: ( (lv_per_2_0= rulePrimaryExpr ) )
            // InternalGo.g:4928:4: (lv_per_2_0= rulePrimaryExpr )
            {
            // InternalGo.g:4928:4: (lv_per_2_0= rulePrimaryExpr )
            // InternalGo.g:4929:5: lv_per_2_0= rulePrimaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPerPrimaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_per_2_0=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
              					}
              					set(
              						current,
              						"per",
              						lv_per_2_0,
              						"org.xtext.example.mydsl.Go.PrimaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,47,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,45,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,72,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchGuard"


    // $ANTLR start "entryRuleTypeCaseClause"
    // InternalGo.g:4966:1: entryRuleTypeCaseClause returns [EObject current=null] : iv_ruleTypeCaseClause= ruleTypeCaseClause EOF ;
    public final EObject entryRuleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeCaseClause = null;


        try {
            // InternalGo.g:4966:55: (iv_ruleTypeCaseClause= ruleTypeCaseClause EOF )
            // InternalGo.g:4967:2: iv_ruleTypeCaseClause= ruleTypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeCaseClause=ruleTypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeCaseClause"


    // $ANTLR start "ruleTypeCaseClause"
    // InternalGo.g:4973:1: ruleTypeCaseClause returns [EObject current=null] : (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypeSwitchCase_0 = null;

        EObject lv_statementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4979:2: ( (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:4980:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:4980:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            // InternalGo.g:4981:3: this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_32);
            this_TypeSwitchCase_0=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeSwitchCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,60,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:4996:3: ( (lv_statementlist_2_0= ruleStatementList ) )
            // InternalGo.g:4997:4: (lv_statementlist_2_0= ruleStatementList )
            {
            // InternalGo.g:4997:4: (lv_statementlist_2_0= ruleStatementList )
            // InternalGo.g:4998:5: lv_statementlist_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeCaseClause"


    // $ANTLR start "entryRuleTypeSwitchCase"
    // InternalGo.g:5019:1: entryRuleTypeSwitchCase returns [EObject current=null] : iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF ;
    public final EObject entryRuleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchCase = null;


        try {
            // InternalGo.g:5019:55: (iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF )
            // InternalGo.g:5020:2: iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchCase=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchCase"


    // $ANTLR start "ruleTypeSwitchCase"
    // InternalGo.g:5026:1: ruleTypeSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_typelist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5032:2: ( ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:5033:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:5033:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==78) ) {
                alt65=1;
            }
            else if ( (LA65_0==79) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalGo.g:5034:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    {
                    // InternalGo.g:5034:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    // InternalGo.g:5035:4: () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) )
                    {
                    // InternalGo.g:5035:4: ()
                    // InternalGo.g:5036:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,78,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:5049:4: ( (lv_typelist_2_0= ruleTypeList ) )
                    // InternalGo.g:5050:5: (lv_typelist_2_0= ruleTypeList )
                    {
                    // InternalGo.g:5050:5: (lv_typelist_2_0= ruleTypeList )
                    // InternalGo.g:5051:6: lv_typelist_2_0= ruleTypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypelistTypeListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typelist_2_0=ruleTypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"typelist",
                      							lv_typelist_2_0,
                      							"org.xtext.example.mydsl.Go.TypeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5070:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:5070:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:5071:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:5071:4: ()
                    // InternalGo.g:5072:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchCase"


    // $ANTLR start "entryRuleTypeList"
    // InternalGo.g:5090:1: entryRuleTypeList returns [EObject current=null] : iv_ruleTypeList= ruleTypeList EOF ;
    public final EObject entryRuleTypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeList = null;


        try {
            // InternalGo.g:5090:49: (iv_ruleTypeList= ruleTypeList EOF )
            // InternalGo.g:5091:2: iv_ruleTypeList= ruleTypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeList=ruleTypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeList"


    // $ANTLR start "ruleTypeList"
    // InternalGo.g:5097:1: ruleTypeList returns [EObject current=null] : ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* ) ;
    public final EObject ruleTypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_type_1_0 = null;

        EObject lv_type2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5103:2: ( ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* ) )
            // InternalGo.g:5104:2: ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* )
            {
            // InternalGo.g:5104:2: ( () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )* )
            // InternalGo.g:5105:3: () ( (lv_type_1_0= ruleType ) ) (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )*
            {
            // InternalGo.g:5105:3: ()
            // InternalGo.g:5106:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeListAccess().getTypeListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5115:3: ( (lv_type_1_0= ruleType ) )
            // InternalGo.g:5116:4: (lv_type_1_0= ruleType )
            {
            // InternalGo.g:5116:4: (lv_type_1_0= ruleType )
            // InternalGo.g:5117:5: lv_type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5134:3: (otherlv_2= ',' ( (lv_type2_3_0= ruleType ) ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==54) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalGo.g:5135:4: otherlv_2= ',' ( (lv_type2_3_0= ruleType ) )
            	    {
            	    otherlv_2=(Token)match(input,54,FOLLOW_11); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTypeListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:5139:4: ( (lv_type2_3_0= ruleType ) )
            	    // InternalGo.g:5140:5: (lv_type2_3_0= ruleType )
            	    {
            	    // InternalGo.g:5140:5: (lv_type2_3_0= ruleType )
            	    // InternalGo.g:5141:6: lv_type2_3_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getType2TypeParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_type2_3_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"type2",
            	      							lv_type2_3_0,
            	      							"org.xtext.example.mydsl.Go.Type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeList"


    // $ANTLR start "entryRuleCommClause"
    // InternalGo.g:5163:1: entryRuleCommClause returns [EObject current=null] : iv_ruleCommClause= ruleCommClause EOF ;
    public final EObject entryRuleCommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommClause = null;


        try {
            // InternalGo.g:5163:51: (iv_ruleCommClause= ruleCommClause EOF )
            // InternalGo.g:5164:2: iv_ruleCommClause= ruleCommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommClause=ruleCommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommClause"


    // $ANTLR start "ruleCommClause"
    // InternalGo.g:5170:1: ruleCommClause returns [EObject current=null] : (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleCommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_CommCase_0 = null;

        EObject lv_statementlist2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5176:2: ( (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:5177:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:5177:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            // InternalGo.g:5178:3: this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_32);
            this_CommCase_0=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CommCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,60,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:5193:3: ( (lv_statementlist2_2_0= ruleStatementList ) )
            // InternalGo.g:5194:4: (lv_statementlist2_2_0= ruleStatementList )
            {
            // InternalGo.g:5194:4: (lv_statementlist2_2_0= ruleStatementList )
            // InternalGo.g:5195:5: lv_statementlist2_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementlist2StatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist2_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"statementlist2",
              						lv_statementlist2_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommClause"


    // $ANTLR start "entryRuleCommCase"
    // InternalGo.g:5216:1: entryRuleCommCase returns [EObject current=null] : iv_ruleCommCase= ruleCommCase EOF ;
    public final EObject entryRuleCommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommCase = null;


        try {
            // InternalGo.g:5216:49: (iv_ruleCommCase= ruleCommCase EOF )
            // InternalGo.g:5217:2: iv_ruleCommCase= ruleCommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommCase=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommCase"


    // $ANTLR start "ruleCommCase"
    // InternalGo.g:5223:1: ruleCommCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) ;
    public final EObject ruleCommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_sendstmt_2_0 = null;

        EObject lv_recvstmt_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5229:2: ( ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) )
            // InternalGo.g:5230:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            {
            // InternalGo.g:5230:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==78) ) {
                alt68=1;
            }
            else if ( (LA68_0==79) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalGo.g:5231:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    {
                    // InternalGo.g:5231:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    // InternalGo.g:5232:4: () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    {
                    // InternalGo.g:5232:4: ()
                    // InternalGo.g:5233:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,78,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCommCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:5246:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    int alt67=2;
                    alt67 = dfa67.predict(input);
                    switch (alt67) {
                        case 1 :
                            // InternalGo.g:5247:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            {
                            // InternalGo.g:5247:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            // InternalGo.g:5248:6: (lv_sendstmt_2_0= ruleSendStmt )
                            {
                            // InternalGo.g:5248:6: (lv_sendstmt_2_0= ruleSendStmt )
                            // InternalGo.g:5249:7: lv_sendstmt_2_0= ruleSendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sendstmt_2_0=ruleSendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"sendstmt",
                              								lv_sendstmt_2_0,
                              								"org.xtext.example.mydsl.Go.SendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:5267:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            {
                            // InternalGo.g:5267:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            // InternalGo.g:5268:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            {
                            // InternalGo.g:5268:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            // InternalGo.g:5269:7: lv_recvstmt_3_0= ruleRecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvstmtRecvStmtParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_recvstmt_3_0=ruleRecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"recvstmt",
                              								lv_recvstmt_3_0,
                              								"org.xtext.example.mydsl.Go.RecvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5289:3: ( () otherlv_5= 'default' )
                    {
                    // InternalGo.g:5289:3: ( () otherlv_5= 'default' )
                    // InternalGo.g:5290:4: () otherlv_5= 'default'
                    {
                    // InternalGo.g:5290:4: ()
                    // InternalGo.g:5291:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommCase"


    // $ANTLR start "entryRuleRecvStmt"
    // InternalGo.g:5309:1: entryRuleRecvStmt returns [EObject current=null] : iv_ruleRecvStmt= ruleRecvStmt EOF ;
    public final EObject entryRuleRecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvStmt = null;


        try {
            // InternalGo.g:5309:49: (iv_ruleRecvStmt= ruleRecvStmt EOF )
            // InternalGo.g:5310:2: iv_ruleRecvStmt= ruleRecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvStmt=ruleRecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvStmt"


    // $ANTLR start "ruleRecvStmt"
    // InternalGo.g:5316:1: ruleRecvStmt returns [EObject current=null] : ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) ;
    public final EObject ruleRecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_ExpressionList_0 = null;

        EObject lv_idl_2_0 = null;

        EObject lv_recvexpr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5322:2: ( ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) )
            // InternalGo.g:5323:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            {
            // InternalGo.g:5323:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            // InternalGo.g:5324:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            {
            // InternalGo.g:5324:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt69=3;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalGo.g:5325:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    {
                    // InternalGo.g:5325:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    // InternalGo.g:5326:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FOLLOW_45);
                    this_ExpressionList_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_ExpressionList_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_1=(Token)match(input,RULE_EQUALS,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5343:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:5343:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:5344:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:5344:5: ( (lv_idl_2_0= ruleIdentifierList ) )
                    // InternalGo.g:5345:6: (lv_idl_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:5345:6: (lv_idl_2_0= ruleIdentifierList )
                    // InternalGo.g:5346:7: lv_idl_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_51);
                    lv_idl_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"idl",
                      								lv_idl_2_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,76,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:5369:3: ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            // InternalGo.g:5370:4: (lv_recvexpr_4_0= ruleRecvExpr )
            {
            // InternalGo.g:5370:4: (lv_recvexpr_4_0= ruleRecvExpr )
            // InternalGo.g:5371:5: lv_recvexpr_4_0= ruleRecvExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getRecvexprRecvExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_recvexpr_4_0=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"recvexpr",
              						lv_recvexpr_4_0,
              						"org.xtext.example.mydsl.Go.RecvExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvStmt"


    // $ANTLR start "entryRuleRecvExpr"
    // InternalGo.g:5392:1: entryRuleRecvExpr returns [EObject current=null] : iv_ruleRecvExpr= ruleRecvExpr EOF ;
    public final EObject entryRuleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvExpr = null;


        try {
            // InternalGo.g:5392:49: (iv_ruleRecvExpr= ruleRecvExpr EOF )
            // InternalGo.g:5393:2: iv_ruleRecvExpr= ruleRecvExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvExpr=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvExpr"


    // $ANTLR start "ruleRecvExpr"
    // InternalGo.g:5399:1: ruleRecvExpr returns [EObject current=null] : ( (lv_exp_0_0= ruleExpression ) ) ;
    public final EObject ruleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5405:2: ( ( (lv_exp_0_0= ruleExpression ) ) )
            // InternalGo.g:5406:2: ( (lv_exp_0_0= ruleExpression ) )
            {
            // InternalGo.g:5406:2: ( (lv_exp_0_0= ruleExpression ) )
            // InternalGo.g:5407:3: (lv_exp_0_0= ruleExpression )
            {
            // InternalGo.g:5407:3: (lv_exp_0_0= ruleExpression )
            // InternalGo.g:5408:4: lv_exp_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRecvExprAccess().getExpExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getRecvExprRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.xtext.example.mydsl.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvExpr"


    // $ANTLR start "entryRuleCondition"
    // InternalGo.g:5428:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalGo.g:5428:50: (iv_ruleCondition= ruleCondition EOF )
            // InternalGo.g:5429:2: iv_ruleCondition= ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalGo.g:5435:1: ruleCondition returns [EObject current=null] : ( () ( (lv_exp_1_0= ruleExpression ) ) ) ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5441:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) ) )
            // InternalGo.g:5442:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            {
            // InternalGo.g:5442:2: ( () ( (lv_exp_1_0= ruleExpression ) ) )
            // InternalGo.g:5443:3: () ( (lv_exp_1_0= ruleExpression ) )
            {
            // InternalGo.g:5443:3: ()
            // InternalGo.g:5444:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConditionAccess().getConditionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5453:3: ( (lv_exp_1_0= ruleExpression ) )
            // InternalGo.g:5454:4: (lv_exp_1_0= ruleExpression )
            {
            // InternalGo.g:5454:4: (lv_exp_1_0= ruleExpression )
            // InternalGo.g:5455:5: lv_exp_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionAccess().getExpExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleForClause"
    // InternalGo.g:5476:1: entryRuleForClause returns [EObject current=null] : iv_ruleForClause= ruleForClause EOF ;
    public final EObject entryRuleForClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForClause = null;


        try {
            // InternalGo.g:5476:50: (iv_ruleForClause= ruleForClause EOF )
            // InternalGo.g:5477:2: iv_ruleForClause= ruleForClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForClause=ruleForClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForClause"


    // $ANTLR start "ruleForClause"
    // InternalGo.g:5483:1: ruleForClause returns [EObject current=null] : ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? ) ;
    public final EObject ruleForClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_init_1_0 = null;

        EObject lv_condition_3_0 = null;

        EObject lv_poststmt_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5489:2: ( ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? ) )
            // InternalGo.g:5490:2: ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? )
            {
            // InternalGo.g:5490:2: ( () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )? )
            // InternalGo.g:5491:3: () ( (lv_init_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_poststmt_5_0= rulePostStmt ) )?
            {
            // InternalGo.g:5491:3: ()
            // InternalGo.g:5492:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getForClauseAccess().getForClauseAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5501:3: ( (lv_init_1_0= ruleInitStmt ) )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalGo.g:5502:4: (lv_init_1_0= ruleInitStmt )
                    {
                    // InternalGo.g:5502:4: (lv_init_1_0= ruleInitStmt )
                    // InternalGo.g:5503:5: lv_init_1_0= ruleInitStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getInitInitStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_26);
                    lv_init_1_0=ruleInitStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"init",
                      						lv_init_1_0,
                      						"org.xtext.example.mydsl.Go.InitStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,52,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getForClauseAccess().getSemicolonKeyword_2());
              		
            }
            // InternalGo.g:5524:3: ( (lv_condition_3_0= ruleCondition ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=RULE_ID && LA71_0<=RULE_FLOAT_LIT)||(LA71_0>=RULE_UNARY_OP && LA71_0<=RULE_STRING)||LA71_0==RULE_MUL||LA71_0==41||(LA71_0>=44 && LA71_0<=45)||LA71_0==48||LA71_0==50||(LA71_0>=56 && LA71_0<=59)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalGo.g:5525:4: (lv_condition_3_0= ruleCondition )
                    {
                    // InternalGo.g:5525:4: (lv_condition_3_0= ruleCondition )
                    // InternalGo.g:5526:5: lv_condition_3_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_26);
                    lv_condition_3_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_3_0,
                      						"org.xtext.example.mydsl.Go.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,52,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getForClauseAccess().getSemicolonKeyword_4());
              		
            }
            // InternalGo.g:5547:3: ( (lv_poststmt_5_0= rulePostStmt ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=RULE_ID && LA72_0<=RULE_FLOAT_LIT)||(LA72_0>=RULE_UNARY_OP && LA72_0<=RULE_STRING)||LA72_0==RULE_MUL||LA72_0==41||(LA72_0>=44 && LA72_0<=45)||LA72_0==48||LA72_0==50||LA72_0==52||(LA72_0>=56 && LA72_0<=59)) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalGo.g:5548:4: (lv_poststmt_5_0= rulePostStmt )
                    {
                    // InternalGo.g:5548:4: (lv_poststmt_5_0= rulePostStmt )
                    // InternalGo.g:5549:5: lv_poststmt_5_0= rulePostStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getPoststmtPostStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_poststmt_5_0=rulePostStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"poststmt",
                      						lv_poststmt_5_0,
                      						"org.xtext.example.mydsl.Go.PostStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForClause"


    // $ANTLR start "entryRuleRangeClause"
    // InternalGo.g:5570:1: entryRuleRangeClause returns [EObject current=null] : iv_ruleRangeClause= ruleRangeClause EOF ;
    public final EObject entryRuleRangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeClause = null;


        try {
            // InternalGo.g:5570:52: (iv_ruleRangeClause= ruleRangeClause EOF )
            // InternalGo.g:5571:2: iv_ruleRangeClause= ruleRangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeClause=ruleRangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeClause"


    // $ANTLR start "ruleRangeClause"
    // InternalGo.g:5577:1: ruleRangeClause returns [EObject current=null] : ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) ;
    public final EObject ruleRangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_0_0 = null;

        EObject lv_idl_2_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5583:2: ( ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) )
            // InternalGo.g:5584:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            {
            // InternalGo.g:5584:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            // InternalGo.g:5585:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) )
            {
            // InternalGo.g:5585:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt73=3;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalGo.g:5586:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:5586:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:5587:5: ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:5587:5: ( (lv_expressionlist_0_0= ruleExpressionList ) )
                    // InternalGo.g:5588:6: (lv_expressionlist_0_0= ruleExpressionList )
                    {
                    // InternalGo.g:5588:6: (lv_expressionlist_0_0= ruleExpressionList )
                    // InternalGo.g:5589:7: lv_expressionlist_0_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionlistExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_45);
                    lv_expressionlist_0_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"expressionlist",
                      								lv_expressionlist_0_0,
                      								"org.xtext.example.mydsl.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,RULE_EQUALS,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5612:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:5612:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:5613:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:5613:5: ( (lv_idl_2_0= ruleIdentifierList ) )
                    // InternalGo.g:5614:6: (lv_idl_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:5614:6: (lv_idl_2_0= ruleIdentifierList )
                    // InternalGo.g:5615:7: lv_idl_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_51);
                    lv_idl_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"idl",
                      								lv_idl_2_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,76,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,80,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:5642:3: ( (lv_expression_5_0= ruleExpression ) )
            // InternalGo.g:5643:4: (lv_expression_5_0= ruleExpression )
            {
            // InternalGo.g:5643:4: (lv_expression_5_0= ruleExpression )
            // InternalGo.g:5644:5: lv_expression_5_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeClause"


    // $ANTLR start "entryRuleInitStmt"
    // InternalGo.g:5665:1: entryRuleInitStmt returns [EObject current=null] : iv_ruleInitStmt= ruleInitStmt EOF ;
    public final EObject entryRuleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitStmt = null;


        try {
            // InternalGo.g:5665:49: (iv_ruleInitStmt= ruleInitStmt EOF )
            // InternalGo.g:5666:2: iv_ruleInitStmt= ruleInitStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitStmt=ruleInitStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitStmt"


    // $ANTLR start "ruleInitStmt"
    // InternalGo.g:5672:1: ruleInitStmt returns [EObject current=null] : ( (lv_simple_0_0= ruleSimpleStmt ) ) ;
    public final EObject ruleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_simple_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5678:2: ( ( (lv_simple_0_0= ruleSimpleStmt ) ) )
            // InternalGo.g:5679:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:5679:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            // InternalGo.g:5680:3: (lv_simple_0_0= ruleSimpleStmt )
            {
            // InternalGo.g:5680:3: (lv_simple_0_0= ruleSimpleStmt )
            // InternalGo.g:5681:4: lv_simple_0_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getInitStmtAccess().getSimpleSimpleStmtParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_simple_0_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getInitStmtRule());
              				}
              				set(
              					current,
              					"simple",
              					lv_simple_0_0,
              					"org.xtext.example.mydsl.Go.SimpleStmt");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitStmt"


    // $ANTLR start "entryRulePostStmt"
    // InternalGo.g:5701:1: entryRulePostStmt returns [EObject current=null] : iv_rulePostStmt= rulePostStmt EOF ;
    public final EObject entryRulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostStmt = null;


        try {
            // InternalGo.g:5701:49: (iv_rulePostStmt= rulePostStmt EOF )
            // InternalGo.g:5702:2: iv_rulePostStmt= rulePostStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostStmt=rulePostStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostStmt"


    // $ANTLR start "rulePostStmt"
    // InternalGo.g:5708:1: rulePostStmt returns [EObject current=null] : ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) ) ;
    public final EObject rulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_simple_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5714:2: ( ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) ) )
            // InternalGo.g:5715:2: ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) )
            {
            // InternalGo.g:5715:2: ( () ( (lv_simple_1_0= ruleSimpleStmt ) ) )
            // InternalGo.g:5716:3: () ( (lv_simple_1_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:5716:3: ()
            // InternalGo.g:5717:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPostStmtAccess().getPostStmtAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5726:3: ( (lv_simple_1_0= ruleSimpleStmt ) )
            // InternalGo.g:5727:4: (lv_simple_1_0= ruleSimpleStmt )
            {
            // InternalGo.g:5727:4: (lv_simple_1_0= ruleSimpleStmt )
            // InternalGo.g:5728:5: lv_simple_1_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleSimpleStmtParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_simple_1_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostStmtRule());
              					}
              					set(
              						current,
              						"simple",
              						lv_simple_1_0,
              						"org.xtext.example.mydsl.Go.SimpleStmt");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostStmt"


    // $ANTLR start "entryRuleLabel"
    // InternalGo.g:5749:1: entryRuleLabel returns [String current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final String entryRuleLabel() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLabel = null;


        try {
            // InternalGo.g:5749:45: (iv_ruleLabel= ruleLabel EOF )
            // InternalGo.g:5750:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalGo.g:5756:1: ruleLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleLabel() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5762:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:5763:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getLabelAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleExpressionList"
    // InternalGo.g:5776:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // InternalGo.g:5776:55: (iv_ruleExpressionList= ruleExpressionList EOF )
            // InternalGo.g:5777:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionList=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionList"


    // $ANTLR start "ruleExpressionList"
    // InternalGo.g:5783:1: ruleExpressionList returns [EObject current=null] : ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_exp_1_0 = null;

        EObject lv_expression2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5789:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* ) )
            // InternalGo.g:5790:2: ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* )
            {
            // InternalGo.g:5790:2: ( () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )* )
            // InternalGo.g:5791:3: () ( (lv_exp_1_0= ruleExpression ) ) (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )*
            {
            // InternalGo.g:5791:3: ()
            // InternalGo.g:5792:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionListAccess().getExpressionListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5801:3: ( (lv_exp_1_0= ruleExpression ) )
            // InternalGo.g:5802:4: (lv_exp_1_0= ruleExpression )
            {
            // InternalGo.g:5802:4: (lv_exp_1_0= ruleExpression )
            // InternalGo.g:5803:5: lv_exp_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionListAccess().getExpExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_exp_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionListRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5820:3: (otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==54) ) {
                    int LA74_2 = input.LA(2);

                    if ( ((LA74_2>=RULE_ID && LA74_2<=RULE_FLOAT_LIT)||(LA74_2>=RULE_UNARY_OP && LA74_2<=RULE_STRING)||LA74_2==RULE_MUL||LA74_2==41||(LA74_2>=44 && LA74_2<=45)||LA74_2==48||LA74_2==50||(LA74_2>=56 && LA74_2<=59)) ) {
                        alt74=1;
                    }


                }


                switch (alt74) {
            	case 1 :
            	    // InternalGo.g:5821:4: otherlv_2= ',' ( (lv_expression2_3_0= ruleExpression ) )
            	    {
            	    otherlv_2=(Token)match(input,54,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getExpressionListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:5825:4: ( (lv_expression2_3_0= ruleExpression ) )
            	    // InternalGo.g:5826:5: (lv_expression2_3_0= ruleExpression )
            	    {
            	    // InternalGo.g:5826:5: (lv_expression2_3_0= ruleExpression )
            	    // InternalGo.g:5827:6: lv_expression2_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_expression2_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expression2",
            	      							lv_expression2_3_0,
            	      							"org.xtext.example.mydsl.Go.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionList"


    // $ANTLR start "entryRuleExpression"
    // InternalGo.g:5849:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalGo.g:5849:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalGo.g:5850:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalGo.g:5856:1: ruleExpression returns [EObject current=null] : ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_up_1_0 = null;

        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5862:2: ( ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) ) )
            // InternalGo.g:5863:2: ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) )
            {
            // InternalGo.g:5863:2: ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) )
            // InternalGo.g:5864:3: () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) )
            {
            // InternalGo.g:5864:3: ()
            // InternalGo.g:5865:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionAccess().getExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5874:3: ( (lv_up_1_0= ruleUnaryExpr ) )
            // InternalGo.g:5875:4: (lv_up_1_0= ruleUnaryExpr )
            {
            // InternalGo.g:5875:4: (lv_up_1_0= ruleUnaryExpr )
            // InternalGo.g:5876:5: lv_up_1_0= ruleUnaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getUpUnaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_58);
            lv_up_1_0=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"up",
              						lv_up_1_0,
              						"org.xtext.example.mydsl.Go.UnaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5893:3: ( (lv_exp_2_0= ruleExpression2 ) )
            // InternalGo.g:5894:4: (lv_exp_2_0= ruleExpression2 )
            {
            // InternalGo.g:5894:4: (lv_exp_2_0= ruleExpression2 )
            // InternalGo.g:5895:5: lv_exp_2_0= ruleExpression2
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpExpression2ParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_2_0=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.xtext.example.mydsl.Go.Expression2");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleExpression2"
    // InternalGo.g:5916:1: entryRuleExpression2 returns [EObject current=null] : iv_ruleExpression2= ruleExpression2 EOF ;
    public final EObject entryRuleExpression2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression2 = null;


        try {
            // InternalGo.g:5916:52: (iv_ruleExpression2= ruleExpression2 EOF )
            // InternalGo.g:5917:2: iv_ruleExpression2= ruleExpression2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression2=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression2"


    // $ANTLR start "ruleExpression2"
    // InternalGo.g:5923:1: ruleExpression2 returns [EObject current=null] : ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) ;
    public final EObject ruleExpression2() throws RecognitionException {
        EObject current = null;

        Token lv_bop_1_0=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5929:2: ( ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) )
            // InternalGo.g:5930:2: ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            {
            // InternalGo.g:5930:2: ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            // InternalGo.g:5931:3: () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            {
            // InternalGo.g:5931:3: ()
            // InternalGo.g:5932:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpression2Access().getExpression2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5941:3: ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_BINARY_OP) ) {
                int LA75_1 = input.LA(2);

                if ( (synpred105_InternalGo()) ) {
                    alt75=1;
                }
            }
            switch (alt75) {
                case 1 :
                    // InternalGo.g:5942:4: ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
                    {
                    // InternalGo.g:5942:4: ( (lv_bop_1_0= RULE_BINARY_OP ) )
                    // InternalGo.g:5943:5: (lv_bop_1_0= RULE_BINARY_OP )
                    {
                    // InternalGo.g:5943:5: (lv_bop_1_0= RULE_BINARY_OP )
                    // InternalGo.g:5944:6: lv_bop_1_0= RULE_BINARY_OP
                    {
                    lv_bop_1_0=(Token)match(input,RULE_BINARY_OP,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_bop_1_0, grammarAccess.getExpression2Access().getBopBINARY_OPTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExpression2Rule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"bop",
                      							lv_bop_1_0,
                      							"org.xtext.example.mydsl.Go.BINARY_OP");
                      					
                    }

                    }


                    }

                    // InternalGo.g:5960:4: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalGo.g:5961:5: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalGo.g:5961:5: (lv_expression_2_0= ruleExpression )
                    // InternalGo.g:5962:6: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5979:4: ( (lv_expression2_3_0= ruleExpression2 ) )
                    // InternalGo.g:5980:5: (lv_expression2_3_0= ruleExpression2 )
                    {
                    // InternalGo.g:5980:5: (lv_expression2_3_0= ruleExpression2 )
                    // InternalGo.g:5981:6: lv_expression2_3_0= ruleExpression2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression2_3_0=ruleExpression2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression2",
                      							lv_expression2_3_0,
                      							"org.xtext.example.mydsl.Go.Expression2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression2"


    // $ANTLR start "entryRuleUnaryExpr"
    // InternalGo.g:6003:1: entryRuleUnaryExpr returns [EObject current=null] : iv_ruleUnaryExpr= ruleUnaryExpr EOF ;
    public final EObject entryRuleUnaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpr = null;


        try {
            // InternalGo.g:6003:50: (iv_ruleUnaryExpr= ruleUnaryExpr EOF )
            // InternalGo.g:6004:2: iv_ruleUnaryExpr= ruleUnaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpr=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpr"


    // $ANTLR start "ruleUnaryExpr"
    // InternalGo.g:6010:1: ruleUnaryExpr returns [EObject current=null] : ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( (lv_up_2_0= RULE_UNARY_OP ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) ) ;
    public final EObject ruleUnaryExpr() throws RecognitionException {
        EObject current = null;

        Token lv_up_2_0=null;
        EObject lv_pr_1_0 = null;

        EObject lv_ue_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6016:2: ( ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( (lv_up_2_0= RULE_UNARY_OP ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) ) )
            // InternalGo.g:6017:2: ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( (lv_up_2_0= RULE_UNARY_OP ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) )
            {
            // InternalGo.g:6017:2: ( ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) ) | ( ( (lv_up_2_0= RULE_UNARY_OP ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) ) )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=RULE_ID && LA76_0<=RULE_FLOAT_LIT)||(LA76_0>=RULE_INT_LIT && LA76_0<=RULE_STRING)||LA76_0==RULE_MUL||LA76_0==41||(LA76_0>=44 && LA76_0<=45)||LA76_0==48||LA76_0==50||(LA76_0>=56 && LA76_0<=59)) ) {
                alt76=1;
            }
            else if ( (LA76_0==RULE_UNARY_OP) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // InternalGo.g:6018:3: ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) )
                    {
                    // InternalGo.g:6018:3: ( () ( (lv_pr_1_0= rulePrimaryExpr ) ) )
                    // InternalGo.g:6019:4: () ( (lv_pr_1_0= rulePrimaryExpr ) )
                    {
                    // InternalGo.g:6019:4: ()
                    // InternalGo.g:6020:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExprAccess().getUnaryExprAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6029:4: ( (lv_pr_1_0= rulePrimaryExpr ) )
                    // InternalGo.g:6030:5: (lv_pr_1_0= rulePrimaryExpr )
                    {
                    // InternalGo.g:6030:5: (lv_pr_1_0= rulePrimaryExpr )
                    // InternalGo.g:6031:6: lv_pr_1_0= rulePrimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getPrPrimaryExprParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_1_0=rulePrimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_1_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6050:3: ( ( (lv_up_2_0= RULE_UNARY_OP ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) )
                    {
                    // InternalGo.g:6050:3: ( ( (lv_up_2_0= RULE_UNARY_OP ) ) ( (lv_ue_3_0= ruleUnaryExpr ) ) )
                    // InternalGo.g:6051:4: ( (lv_up_2_0= RULE_UNARY_OP ) ) ( (lv_ue_3_0= ruleUnaryExpr ) )
                    {
                    // InternalGo.g:6051:4: ( (lv_up_2_0= RULE_UNARY_OP ) )
                    // InternalGo.g:6052:5: (lv_up_2_0= RULE_UNARY_OP )
                    {
                    // InternalGo.g:6052:5: (lv_up_2_0= RULE_UNARY_OP )
                    // InternalGo.g:6053:6: lv_up_2_0= RULE_UNARY_OP
                    {
                    lv_up_2_0=(Token)match(input,RULE_UNARY_OP,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_up_2_0, grammarAccess.getUnaryExprAccess().getUpUNARY_OPTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnaryExprRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"up",
                      							lv_up_2_0,
                      							"org.xtext.example.mydsl.Go.UNARY_OP");
                      					
                    }

                    }


                    }

                    // InternalGo.g:6069:4: ( (lv_ue_3_0= ruleUnaryExpr ) )
                    // InternalGo.g:6070:5: (lv_ue_3_0= ruleUnaryExpr )
                    {
                    // InternalGo.g:6070:5: (lv_ue_3_0= ruleUnaryExpr )
                    // InternalGo.g:6071:6: lv_ue_3_0= ruleUnaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUeUnaryExprParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ue_3_0=ruleUnaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"ue",
                      							lv_ue_3_0,
                      							"org.xtext.example.mydsl.Go.UnaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpr"


    // $ANTLR start "entryRulePrimaryExpr"
    // InternalGo.g:6093:1: entryRulePrimaryExpr returns [EObject current=null] : iv_rulePrimaryExpr= rulePrimaryExpr EOF ;
    public final EObject entryRulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr = null;


        try {
            // InternalGo.g:6093:52: (iv_rulePrimaryExpr= rulePrimaryExpr EOF )
            // InternalGo.g:6094:2: iv_rulePrimaryExpr= rulePrimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr"


    // $ANTLR start "rulePrimaryExpr"
    // InternalGo.g:6100:1: rulePrimaryExpr returns [EObject current=null] : ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) ) ;
    public final EObject rulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_op_1_0 = null;

        EObject lv_pr_2_0 = null;

        EObject lv_con_3_0 = null;

        EObject lv_pr_4_0 = null;

        EObject lv_me_5_0 = null;

        EObject lv_pr_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6106:2: ( ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) ) )
            // InternalGo.g:6107:2: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
            {
            // InternalGo.g:6107:2: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
            int alt77=3;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalGo.g:6108:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6108:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6109:4: () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6109:4: ()
                    // InternalGo.g:6110:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExprAccess().getPrimaryExprAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6119:4: ( (lv_op_1_0= ruleOperand ) )
                    // InternalGo.g:6120:5: (lv_op_1_0= ruleOperand )
                    {
                    // InternalGo.g:6120:5: (lv_op_1_0= ruleOperand )
                    // InternalGo.g:6121:6: lv_op_1_0= ruleOperand
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOpOperandParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_op_1_0=ruleOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_1_0,
                      							"org.xtext.example.mydsl.Go.Operand");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6138:4: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6139:5: (lv_pr_2_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6139:5: (lv_pr_2_0= rulePrimaryExpr2 )
                    // InternalGo.g:6140:6: lv_pr_2_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_2_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_2_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6159:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6159:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6160:4: ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6160:4: ( (lv_con_3_0= ruleConversion ) )
                    // InternalGo.g:6161:5: (lv_con_3_0= ruleConversion )
                    {
                    // InternalGo.g:6161:5: (lv_con_3_0= ruleConversion )
                    // InternalGo.g:6162:6: lv_con_3_0= ruleConversion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConConversionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_con_3_0=ruleConversion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"con",
                      							lv_con_3_0,
                      							"org.xtext.example.mydsl.Go.Conversion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6179:4: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6180:5: (lv_pr_4_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6180:5: (lv_pr_4_0= rulePrimaryExpr2 )
                    // InternalGo.g:6181:6: lv_pr_4_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_4_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_4_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6200:3: ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6200:3: ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6201:4: ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6201:4: ( (lv_me_5_0= ruleMethodExpr ) )
                    // InternalGo.g:6202:5: (lv_me_5_0= ruleMethodExpr )
                    {
                    // InternalGo.g:6202:5: (lv_me_5_0= ruleMethodExpr )
                    // InternalGo.g:6203:6: lv_me_5_0= ruleMethodExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getMeMethodExprParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_me_5_0=ruleMethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"me",
                      							lv_me_5_0,
                      							"org.xtext.example.mydsl.Go.MethodExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6220:4: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6221:5: (lv_pr_6_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6221:5: (lv_pr_6_0= rulePrimaryExpr2 )
                    // InternalGo.g:6222:6: lv_pr_6_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_6_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_6_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr"


    // $ANTLR start "entryRulePrimaryExpr2"
    // InternalGo.g:6244:1: entryRulePrimaryExpr2 returns [EObject current=null] : iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF ;
    public final EObject entryRulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr2 = null;


        try {
            // InternalGo.g:6244:53: (iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF )
            // InternalGo.g:6245:2: iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpr2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr2=rulePrimaryExpr2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr2"


    // $ANTLR start "rulePrimaryExpr2"
    // InternalGo.g:6251:1: rulePrimaryExpr2 returns [EObject current=null] : ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) ;
    public final EObject rulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_selector_1_0 = null;

        EObject lv_pr_2_0 = null;

        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;

        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;

        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6257:2: ( ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) )
            // InternalGo.g:6258:2: ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            {
            // InternalGo.g:6258:2: ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            // InternalGo.g:6259:3: () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            {
            // InternalGo.g:6259:3: ()
            // InternalGo.g:6260:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExpr2Access().getPrimaryExpr2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6269:3: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            int alt78=6;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalGo.g:6270:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6270:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6271:5: ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6271:5: ( (lv_selector_1_0= ruleSelector ) )
                    // InternalGo.g:6272:6: (lv_selector_1_0= ruleSelector )
                    {
                    // InternalGo.g:6272:6: (lv_selector_1_0= ruleSelector )
                    // InternalGo.g:6273:7: lv_selector_1_0= ruleSelector
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorSelectorParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_59);
                    lv_selector_1_0=ruleSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"selector",
                      								lv_selector_1_0,
                      								"org.xtext.example.mydsl.Go.Selector");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6290:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6291:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6291:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    // InternalGo.g:6292:7: lv_pr_2_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_2_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_2_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6311:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6311:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6312:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6312:5: ( (lv_index_3_0= ruleIndex ) )
                    // InternalGo.g:6313:6: (lv_index_3_0= ruleIndex )
                    {
                    // InternalGo.g:6313:6: (lv_index_3_0= ruleIndex )
                    // InternalGo.g:6314:7: lv_index_3_0= ruleIndex
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_59);
                    lv_index_3_0=ruleIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"index",
                      								lv_index_3_0,
                      								"org.xtext.example.mydsl.Go.Index");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6331:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6332:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6332:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    // InternalGo.g:6333:7: lv_pr_4_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_4_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_4_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6352:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6352:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6353:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6353:5: ( (lv_slice_5_0= ruleSlice ) )
                    // InternalGo.g:6354:6: (lv_slice_5_0= ruleSlice )
                    {
                    // InternalGo.g:6354:6: (lv_slice_5_0= ruleSlice )
                    // InternalGo.g:6355:7: lv_slice_5_0= ruleSlice
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
                      						
                    }
                    pushFollow(FOLLOW_59);
                    lv_slice_5_0=ruleSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"slice",
                      								lv_slice_5_0,
                      								"org.xtext.example.mydsl.Go.Slice");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6372:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6373:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6373:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    // InternalGo.g:6374:7: lv_pr_6_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_6_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_6_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6393:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6393:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6394:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6394:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
                    // InternalGo.g:6395:6: (lv_typeass_7_0= ruleTypeAssertion )
                    {
                    // InternalGo.g:6395:6: (lv_typeass_7_0= ruleTypeAssertion )
                    // InternalGo.g:6396:7: lv_typeass_7_0= ruleTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
                      						
                    }
                    pushFollow(FOLLOW_59);
                    lv_typeass_7_0=ruleTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"typeass",
                      								lv_typeass_7_0,
                      								"org.xtext.example.mydsl.Go.TypeAssertion");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6413:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6414:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6414:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    // InternalGo.g:6415:7: lv_pr_8_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_8_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_8_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6434:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6434:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6435:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6435:5: ( (lv_arguments_9_0= ruleArguments ) )
                    // InternalGo.g:6436:6: (lv_arguments_9_0= ruleArguments )
                    {
                    // InternalGo.g:6436:6: (lv_arguments_9_0= ruleArguments )
                    // InternalGo.g:6437:7: lv_arguments_9_0= ruleArguments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
                      						
                    }
                    pushFollow(FOLLOW_59);
                    lv_arguments_9_0=ruleArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"arguments",
                      								lv_arguments_9_0,
                      								"org.xtext.example.mydsl.Go.Arguments");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6454:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6455:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6455:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    // InternalGo.g:6456:7: lv_pr_10_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_10_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_10_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr2"


    // $ANTLR start "entryRuleOperand"
    // InternalGo.g:6479:1: entryRuleOperand returns [EObject current=null] : iv_ruleOperand= ruleOperand EOF ;
    public final EObject entryRuleOperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperand = null;


        try {
            // InternalGo.g:6479:48: (iv_ruleOperand= ruleOperand EOF )
            // InternalGo.g:6480:2: iv_ruleOperand= ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperand=ruleOperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalGo.g:6486:1: ruleOperand returns [EObject current=null] : ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleOperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_literal_1_0 = null;

        EObject lv_operandn_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6492:2: ( ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:6493:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:6493:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            int alt79=3;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalGo.g:6494:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    {
                    // InternalGo.g:6494:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    // InternalGo.g:6495:4: () ( (lv_literal_1_0= ruleLiteral ) )
                    {
                    // InternalGo.g:6495:4: ()
                    // InternalGo.g:6496:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandAccess().getOperandAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6505:4: ( (lv_literal_1_0= ruleLiteral ) )
                    // InternalGo.g:6506:5: (lv_literal_1_0= ruleLiteral )
                    {
                    // InternalGo.g:6506:5: (lv_literal_1_0= ruleLiteral )
                    // InternalGo.g:6507:6: lv_literal_1_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_1_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"literal",
                      							lv_literal_1_0,
                      							"org.xtext.example.mydsl.Go.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6526:3: ( (lv_operandn_2_0= ruleOperandName ) )
                    {
                    // InternalGo.g:6526:3: ( (lv_operandn_2_0= ruleOperandName ) )
                    // InternalGo.g:6527:4: (lv_operandn_2_0= ruleOperandName )
                    {
                    // InternalGo.g:6527:4: (lv_operandn_2_0= ruleOperandName )
                    // InternalGo.g:6528:5: lv_operandn_2_0= ruleOperandName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_operandn_2_0=ruleOperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"operandn",
                      						lv_operandn_2_0,
                      						"org.xtext.example.mydsl.Go.OperandName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6546:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:6546:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
                    // InternalGo.g:6547:4: otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:6551:4: ( (lv_expression_4_0= ruleExpression ) )
                    // InternalGo.g:6552:5: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalGo.g:6552:5: (lv_expression_4_0= ruleExpression )
                    // InternalGo.g:6553:6: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleConversion"
    // InternalGo.g:6579:1: entryRuleConversion returns [EObject current=null] : iv_ruleConversion= ruleConversion EOF ;
    public final EObject entryRuleConversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConversion = null;


        try {
            // InternalGo.g:6579:51: (iv_ruleConversion= ruleConversion EOF )
            // InternalGo.g:6580:2: iv_ruleConversion= ruleConversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConversion=ruleConversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConversion"


    // $ANTLR start "ruleConversion"
    // InternalGo.g:6586:1: ruleConversion returns [EObject current=null] : ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' ) ;
    public final EObject ruleConversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_type_1_0 = null;

        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6592:2: ( ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' ) )
            // InternalGo.g:6593:2: ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' )
            {
            // InternalGo.g:6593:2: ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')' )
            // InternalGo.g:6594:3: () ( (lv_type_1_0= ruleType ) ) otherlv_2= '(' ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= ',' )? otherlv_5= ')'
            {
            // InternalGo.g:6594:3: ()
            // InternalGo.g:6595:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConversionAccess().getConversionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6604:3: ( (lv_type_1_0= ruleType ) )
            // InternalGo.g:6605:4: (lv_type_1_0= ruleType )
            {
            // InternalGo.g:6605:4: (lv_type_1_0= ruleType )
            // InternalGo.g:6606:5: lv_type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,45,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalGo.g:6627:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:6628:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:6628:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:6629:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6646:3: (otherlv_4= ',' )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==54) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalGo.g:6647:4: otherlv_4= ','
                    {
                    otherlv_4=(Token)match(input,54,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getCommaKeyword_4());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getConversionAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConversion"


    // $ANTLR start "entryRuleMethodExpr"
    // InternalGo.g:6660:1: entryRuleMethodExpr returns [EObject current=null] : iv_ruleMethodExpr= ruleMethodExpr EOF ;
    public final EObject entryRuleMethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodExpr = null;


        try {
            // InternalGo.g:6660:51: (iv_ruleMethodExpr= ruleMethodExpr EOF )
            // InternalGo.g:6661:2: iv_ruleMethodExpr= ruleMethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodExpr=ruleMethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodExpr"


    // $ANTLR start "ruleMethodExpr"
    // InternalGo.g:6667:1: ruleMethodExpr returns [EObject current=null] : (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) ) ;
    public final EObject ruleMethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ReceiverType_0 = null;

        AntlrDatatypeRuleToken lv_methodn_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6673:2: ( (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) ) )
            // InternalGo.g:6674:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) )
            {
            // InternalGo.g:6674:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) )
            // InternalGo.g:6675:3: this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_ReceiverType_0=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ReceiverType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,47,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:6690:3: ( (lv_methodn_2_0= ruleMethodName ) )
            // InternalGo.g:6691:4: (lv_methodn_2_0= ruleMethodName )
            {
            // InternalGo.g:6691:4: (lv_methodn_2_0= ruleMethodName )
            // InternalGo.g:6692:5: lv_methodn_2_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getMethodnMethodNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_methodn_2_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"methodn",
              						lv_methodn_2_0,
              						"org.xtext.example.mydsl.Go.MethodName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodExpr"


    // $ANTLR start "entryRuleSelector"
    // InternalGo.g:6713:1: entryRuleSelector returns [String current=null] : iv_ruleSelector= ruleSelector EOF ;
    public final String entryRuleSelector() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSelector = null;


        try {
            // InternalGo.g:6713:48: (iv_ruleSelector= ruleSelector EOF )
            // InternalGo.g:6714:2: iv_ruleSelector= ruleSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelector=ruleSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelector.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelector"


    // $ANTLR start "ruleSelector"
    // InternalGo.g:6720:1: ruleSelector returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleSelector() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_1 = null;



        	enterRule();

        try {
            // InternalGo.g:6726:2: ( (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) )
            // InternalGo.g:6727:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            {
            // InternalGo.g:6727:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            // InternalGo.g:6728:3: kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER
            {
            kw=(Token)match(input,47,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSelectorAccess().getIDENTIFIERParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_1=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelector"


    // $ANTLR start "entryRuleIndex"
    // InternalGo.g:6747:1: entryRuleIndex returns [EObject current=null] : iv_ruleIndex= ruleIndex EOF ;
    public final EObject entryRuleIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndex = null;


        try {
            // InternalGo.g:6747:46: (iv_ruleIndex= ruleIndex EOF )
            // InternalGo.g:6748:2: iv_ruleIndex= ruleIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndex=ruleIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndex"


    // $ANTLR start "ruleIndex"
    // InternalGo.g:6754:1: ruleIndex returns [EObject current=null] : (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6760:2: ( (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) )
            // InternalGo.g:6761:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            {
            // InternalGo.g:6761:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            // InternalGo.g:6762:3: otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,48,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:6766:3: ( (lv_expression_1_0= ruleExpression ) )
            // InternalGo.g:6767:4: (lv_expression_1_0= ruleExpression )
            {
            // InternalGo.g:6767:4: (lv_expression_1_0= ruleExpression )
            // InternalGo.g:6768:5: lv_expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIndexRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndex"


    // $ANTLR start "entryRuleSlice"
    // InternalGo.g:6793:1: entryRuleSlice returns [EObject current=null] : iv_ruleSlice= ruleSlice EOF ;
    public final EObject entryRuleSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSlice = null;


        try {
            // InternalGo.g:6793:46: (iv_ruleSlice= ruleSlice EOF )
            // InternalGo.g:6794:2: iv_ruleSlice= ruleSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSlice=ruleSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSlice"


    // $ANTLR start "ruleSlice"
    // InternalGo.g:6800:1: ruleSlice returns [EObject current=null] : ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) ;
    public final EObject ruleSlice() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;

        EObject lv_expression3_7_0 = null;

        EObject lv_expression4_9_0 = null;

        EObject lv_expression5_11_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6806:2: ( ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) )
            // InternalGo.g:6807:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            {
            // InternalGo.g:6807:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==48) ) {
                int LA84_1 = input.LA(2);

                if ( (synpred119_InternalGo()) ) {
                    alt84=1;
                }
                else if ( (true) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalGo.g:6808:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    {
                    // InternalGo.g:6808:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    // InternalGo.g:6809:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
                    {
                    // InternalGo.g:6809:4: ()
                    // InternalGo.g:6810:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSliceAccess().getSliceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,48,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0_1());
                      			
                    }
                    // InternalGo.g:6823:4: ( (lv_expression_2_0= ruleExpression ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( ((LA81_0>=RULE_ID && LA81_0<=RULE_FLOAT_LIT)||(LA81_0>=RULE_UNARY_OP && LA81_0<=RULE_STRING)||LA81_0==RULE_MUL||LA81_0==41||(LA81_0>=44 && LA81_0<=45)||LA81_0==48||LA81_0==50||(LA81_0>=56 && LA81_0<=59)) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalGo.g:6824:5: (lv_expression_2_0= ruleExpression )
                            {
                            // InternalGo.g:6824:5: (lv_expression_2_0= ruleExpression )
                            // InternalGo.g:6825:6: lv_expression_2_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_32);
                            lv_expression_2_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_2_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,60,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSliceAccess().getColonKeyword_0_3());
                      			
                    }
                    // InternalGo.g:6846:4: ( (lv_expression2_4_0= ruleExpression ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( ((LA82_0>=RULE_ID && LA82_0<=RULE_FLOAT_LIT)||(LA82_0>=RULE_UNARY_OP && LA82_0<=RULE_STRING)||LA82_0==RULE_MUL||LA82_0==41||(LA82_0>=44 && LA82_0<=45)||LA82_0==48||LA82_0==50||(LA82_0>=56 && LA82_0<=59)) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalGo.g:6847:5: (lv_expression2_4_0= ruleExpression )
                            {
                            // InternalGo.g:6847:5: (lv_expression2_4_0= ruleExpression )
                            // InternalGo.g:6848:6: lv_expression2_4_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_15);
                            lv_expression2_4_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression2",
                              							lv_expression2_4_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6871:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    {
                    // InternalGo.g:6871:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    // InternalGo.g:6872:4: otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']'
                    {
                    otherlv_6=(Token)match(input,48,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalGo.g:6876:4: ( (lv_expression3_7_0= ruleExpression ) )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( ((LA83_0>=RULE_ID && LA83_0<=RULE_FLOAT_LIT)||(LA83_0>=RULE_UNARY_OP && LA83_0<=RULE_STRING)||LA83_0==RULE_MUL||LA83_0==41||(LA83_0>=44 && LA83_0<=45)||LA83_0==48||LA83_0==50||(LA83_0>=56 && LA83_0<=59)) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalGo.g:6877:5: (lv_expression3_7_0= ruleExpression )
                            {
                            // InternalGo.g:6877:5: (lv_expression3_7_0= ruleExpression )
                            // InternalGo.g:6878:6: lv_expression3_7_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression3ExpressionParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_32);
                            lv_expression3_7_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression3",
                              							lv_expression3_7_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,60,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSliceAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalGo.g:6899:4: ( (lv_expression4_9_0= ruleExpression ) )
                    // InternalGo.g:6900:5: (lv_expression4_9_0= ruleExpression )
                    {
                    // InternalGo.g:6900:5: (lv_expression4_9_0= ruleExpression )
                    // InternalGo.g:6901:6: lv_expression4_9_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression4ExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression4_9_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression4",
                      							lv_expression4_9_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,60,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSliceAccess().getColonKeyword_1_4());
                      			
                    }
                    // InternalGo.g:6922:4: ( (lv_expression5_11_0= ruleExpression ) )
                    // InternalGo.g:6923:5: (lv_expression5_11_0= ruleExpression )
                    {
                    // InternalGo.g:6923:5: (lv_expression5_11_0= ruleExpression )
                    // InternalGo.g:6924:6: lv_expression5_11_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression5ExpressionParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_expression5_11_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression5",
                      							lv_expression5_11_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSlice"


    // $ANTLR start "entryRuleTypeAssertion"
    // InternalGo.g:6950:1: entryRuleTypeAssertion returns [EObject current=null] : iv_ruleTypeAssertion= ruleTypeAssertion EOF ;
    public final EObject entryRuleTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeAssertion = null;


        try {
            // InternalGo.g:6950:54: (iv_ruleTypeAssertion= ruleTypeAssertion EOF )
            // InternalGo.g:6951:2: iv_ruleTypeAssertion= ruleTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeAssertion=ruleTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeAssertion"


    // $ANTLR start "ruleTypeAssertion"
    // InternalGo.g:6957:1: ruleTypeAssertion returns [EObject current=null] : (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) ;
    public final EObject ruleTypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_Type_2 = null;



        	enterRule();

        try {
            // InternalGo.g:6963:2: ( (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) )
            // InternalGo.g:6964:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            {
            // InternalGo.g:6964:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            // InternalGo.g:6965:3: otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,45,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_12);
            this_Type_2=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Type_2;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeAssertion"


    // $ANTLR start "entryRuleArguments"
    // InternalGo.g:6992:1: entryRuleArguments returns [EObject current=null] : iv_ruleArguments= ruleArguments EOF ;
    public final EObject entryRuleArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArguments = null;


        try {
            // InternalGo.g:6992:50: (iv_ruleArguments= ruleArguments EOF )
            // InternalGo.g:6993:2: iv_ruleArguments= ruleArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArguments=ruleArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArguments"


    // $ANTLR start "ruleArguments"
    // InternalGo.g:6999:1: ruleArguments returns [EObject current=null] : ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) ;
    public final EObject ruleArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_expressionlist_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7005:2: ( ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) )
            // InternalGo.g:7006:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            {
            // InternalGo.g:7006:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            // InternalGo.g:7007:3: () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')'
            {
            // InternalGo.g:7007:3: ()
            // InternalGo.g:7008:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:7021:3: ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( ((LA89_0>=RULE_ID && LA89_0<=RULE_FLOAT_LIT)||(LA89_0>=RULE_UNARY_OP && LA89_0<=RULE_STRING)||LA89_0==RULE_MUL||LA89_0==41||(LA89_0>=44 && LA89_0<=45)||LA89_0==48||LA89_0==50||(LA89_0>=56 && LA89_0<=59)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalGo.g:7022:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )?
                    {
                    // InternalGo.g:7022:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )
                    int alt86=2;
                    alt86 = dfa86.predict(input);
                    switch (alt86) {
                        case 1 :
                            // InternalGo.g:7023:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            {
                            // InternalGo.g:7023:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            // InternalGo.g:7024:6: (lv_expressionlist_2_0= ruleExpressionList )
                            {
                            // InternalGo.g:7024:6: (lv_expressionlist_2_0= ruleExpressionList )
                            // InternalGo.g:7025:7: lv_expressionlist_2_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_expressionlist_2_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"expressionlist",
                              								lv_expressionlist_2_0,
                              								"org.xtext.example.mydsl.Go.ExpressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:7043:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            {
                            // InternalGo.g:7043:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            // InternalGo.g:7044:6: ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            {
                            // InternalGo.g:7044:6: ( (lv_type_3_0= ruleType ) )
                            // InternalGo.g:7045:7: (lv_type_3_0= ruleType )
                            {
                            // InternalGo.g:7045:7: (lv_type_3_0= ruleType )
                            // InternalGo.g:7046:8: lv_type_3_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_64);
                            lv_type_3_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_3_0,
                              									"org.xtext.example.mydsl.Go.Type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:7063:6: (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            int alt85=2;
                            int LA85_0 = input.LA(1);

                            if ( (LA85_0==54) ) {
                                int LA85_1 = input.LA(2);

                                if ( ((LA85_1>=RULE_ID && LA85_1<=RULE_FLOAT_LIT)||(LA85_1>=RULE_UNARY_OP && LA85_1<=RULE_STRING)||LA85_1==RULE_MUL||LA85_1==41||(LA85_1>=44 && LA85_1<=45)||LA85_1==48||LA85_1==50||(LA85_1>=56 && LA85_1<=59)) ) {
                                    alt85=1;
                                }
                            }
                            switch (alt85) {
                                case 1 :
                                    // InternalGo.g:7064:7: otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    {
                                    otherlv_4=(Token)match(input,54,FOLLOW_14); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
                                      						
                                    }
                                    // InternalGo.g:7068:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    // InternalGo.g:7069:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    {
                                    // InternalGo.g:7069:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    // InternalGo.g:7070:9: lv_expressionlist_5_0= ruleExpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_64);
                                    lv_expressionlist_5_0=ruleExpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"expressionlist",
                                      										lv_expressionlist_5_0,
                                      										"org.xtext.example.mydsl.Go.ExpressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:7090:4: (otherlv_6= '...' )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==55) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // InternalGo.g:7091:5: otherlv_6= '...'
                            {
                            otherlv_6=(Token)match(input,55,FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:7096:4: (otherlv_7= ',' )?
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( (LA88_0==54) ) {
                        alt88=1;
                    }
                    switch (alt88) {
                        case 1 :
                            // InternalGo.g:7097:5: otherlv_7= ','
                            {
                            otherlv_7=(Token)match(input,54,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArguments"


    // $ANTLR start "entryRuleLiteral"
    // InternalGo.g:7111:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalGo.g:7111:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalGo.g:7112:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalGo.g:7118:1: ruleLiteral returns [EObject current=null] : ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_basic_1_0 = null;

        EObject lv_cl_2_0 = null;

        EObject lv_fl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7124:2: ( ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) ) )
            // InternalGo.g:7125:2: ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) )
            {
            // InternalGo.g:7125:2: ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) )
            int alt90=3;
            switch ( input.LA(1) ) {
            case RULE_DECIMALS:
            case RULE_FLOAT_LIT:
            case RULE_INT_LIT:
            case RULE_STRING:
            case 44:
                {
                alt90=1;
                }
                break;
            case RULE_ID:
            case 48:
            case 50:
            case 57:
                {
                alt90=2;
                }
                break;
            case 41:
                {
                alt90=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // InternalGo.g:7126:3: ( () ( (lv_basic_1_0= ruleBasicLit ) ) )
                    {
                    // InternalGo.g:7126:3: ( () ( (lv_basic_1_0= ruleBasicLit ) ) )
                    // InternalGo.g:7127:4: () ( (lv_basic_1_0= ruleBasicLit ) )
                    {
                    // InternalGo.g:7127:4: ()
                    // InternalGo.g:7128:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getLiteralAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7137:4: ( (lv_basic_1_0= ruleBasicLit ) )
                    // InternalGo.g:7138:5: (lv_basic_1_0= ruleBasicLit )
                    {
                    // InternalGo.g:7138:5: (lv_basic_1_0= ruleBasicLit )
                    // InternalGo.g:7139:6: lv_basic_1_0= ruleBasicLit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getBasicBasicLitParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_basic_1_0=ruleBasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"basic",
                      							lv_basic_1_0,
                      							"org.xtext.example.mydsl.Go.BasicLit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7158:3: ( (lv_cl_2_0= ruleCompositeLit ) )
                    {
                    // InternalGo.g:7158:3: ( (lv_cl_2_0= ruleCompositeLit ) )
                    // InternalGo.g:7159:4: (lv_cl_2_0= ruleCompositeLit )
                    {
                    // InternalGo.g:7159:4: (lv_cl_2_0= ruleCompositeLit )
                    // InternalGo.g:7160:5: lv_cl_2_0= ruleCompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getClCompositeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_cl_2_0=ruleCompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"cl",
                      						lv_cl_2_0,
                      						"org.xtext.example.mydsl.Go.CompositeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7178:3: ( (lv_fl_3_0= ruleFunctionLit ) )
                    {
                    // InternalGo.g:7178:3: ( (lv_fl_3_0= ruleFunctionLit ) )
                    // InternalGo.g:7179:4: (lv_fl_3_0= ruleFunctionLit )
                    {
                    // InternalGo.g:7179:4: (lv_fl_3_0= ruleFunctionLit )
                    // InternalGo.g:7180:5: lv_fl_3_0= ruleFunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getFlFunctionLitParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_fl_3_0=ruleFunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"fl",
                      						lv_fl_3_0,
                      						"org.xtext.example.mydsl.Go.FunctionLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleFunctionLit"
    // InternalGo.g:7201:1: entryRuleFunctionLit returns [EObject current=null] : iv_ruleFunctionLit= ruleFunctionLit EOF ;
    public final EObject entryRuleFunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionLit = null;


        try {
            // InternalGo.g:7201:52: (iv_ruleFunctionLit= ruleFunctionLit EOF )
            // InternalGo.g:7202:2: iv_ruleFunctionLit= ruleFunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionLit=ruleFunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionLit"


    // $ANTLR start "ruleFunctionLit"
    // InternalGo.g:7208:1: ruleFunctionLit returns [EObject current=null] : (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) ;
    public final EObject ruleFunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_signature_1_0 = null;

        EObject lv_functionbody_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7214:2: ( (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) )
            // InternalGo.g:7215:2: (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            {
            // InternalGo.g:7215:2: (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            // InternalGo.g:7216:3: otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) )
            {
            otherlv_0=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:7220:3: ( (lv_signature_1_0= ruleSignature ) )
            // InternalGo.g:7221:4: (lv_signature_1_0= ruleSignature )
            {
            // InternalGo.g:7221:4: (lv_signature_1_0= ruleSignature )
            // InternalGo.g:7222:5: lv_signature_1_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_signature_1_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_1_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7239:3: ( (lv_functionbody_2_0= ruleFunctionBody ) )
            // InternalGo.g:7240:4: (lv_functionbody_2_0= ruleFunctionBody )
            {
            // InternalGo.g:7240:4: (lv_functionbody_2_0= ruleFunctionBody )
            // InternalGo.g:7241:5: lv_functionbody_2_0= ruleFunctionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionbodyFunctionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_functionbody_2_0=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"functionbody",
              						lv_functionbody_2_0,
              						"org.xtext.example.mydsl.Go.FunctionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionLit"


    // $ANTLR start "entryRuleCompositeLit"
    // InternalGo.g:7262:1: entryRuleCompositeLit returns [EObject current=null] : iv_ruleCompositeLit= ruleCompositeLit EOF ;
    public final EObject entryRuleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompositeLit = null;


        try {
            // InternalGo.g:7262:53: (iv_ruleCompositeLit= ruleCompositeLit EOF )
            // InternalGo.g:7263:2: iv_ruleCompositeLit= ruleCompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompositeLit=ruleCompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompositeLit"


    // $ANTLR start "ruleCompositeLit"
    // InternalGo.g:7269:1: ruleCompositeLit returns [EObject current=null] : ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) ;
    public final EObject ruleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_literalt_0_0 = null;

        EObject lv_literalv_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7275:2: ( ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) )
            // InternalGo.g:7276:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            {
            // InternalGo.g:7276:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            // InternalGo.g:7277:3: ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) )
            {
            // InternalGo.g:7277:3: ( (lv_literalt_0_0= ruleLiteralType ) )
            // InternalGo.g:7278:4: (lv_literalt_0_0= ruleLiteralType )
            {
            // InternalGo.g:7278:4: (lv_literalt_0_0= ruleLiteralType )
            // InternalGo.g:7279:5: lv_literalt_0_0= ruleLiteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteraltLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_literalt_0_0=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalt",
              						lv_literalt_0_0,
              						"org.xtext.example.mydsl.Go.LiteralType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7296:3: ( (lv_literalv_1_0= ruleLiteralValue ) )
            // InternalGo.g:7297:4: (lv_literalv_1_0= ruleLiteralValue )
            {
            // InternalGo.g:7297:4: (lv_literalv_1_0= ruleLiteralValue )
            // InternalGo.g:7298:5: lv_literalv_1_0= ruleLiteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralvLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_literalv_1_0=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalv",
              						lv_literalv_1_0,
              						"org.xtext.example.mydsl.Go.LiteralValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompositeLit"


    // $ANTLR start "entryRuleLiteralType"
    // InternalGo.g:7319:1: entryRuleLiteralType returns [EObject current=null] : iv_ruleLiteralType= ruleLiteralType EOF ;
    public final EObject entryRuleLiteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralType = null;


        try {
            // InternalGo.g:7319:52: (iv_ruleLiteralType= ruleLiteralType EOF )
            // InternalGo.g:7320:2: iv_ruleLiteralType= ruleLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralType=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralType"


    // $ANTLR start "ruleLiteralType"
    // InternalGo.g:7326:1: ruleLiteralType returns [EObject current=null] : ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) ;
    public final EObject ruleLiteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_structtype_1_0 = null;

        EObject lv_arraytype_2_0 = null;

        EObject lv_elementype_6_0 = null;

        EObject lv_slicetype_7_0 = null;

        EObject lv_maptype_8_0 = null;

        AntlrDatatypeRuleToken lv_typename_9_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7332:2: ( ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) )
            // InternalGo.g:7333:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            {
            // InternalGo.g:7333:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            int alt91=6;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt91=1;
                }
                break;
            case 48:
                {
                switch ( input.LA(2) ) {
                case 55:
                    {
                    alt91=3;
                    }
                    break;
                case RULE_ID:
                case RULE_DECIMALS:
                case RULE_FLOAT_LIT:
                case RULE_UNARY_OP:
                case RULE_INT_LIT:
                case RULE_STRING:
                case RULE_MUL:
                case 41:
                case 44:
                case 45:
                case 48:
                case 50:
                case 56:
                case 57:
                case 58:
                case 59:
                    {
                    alt91=2;
                    }
                    break;
                case 49:
                    {
                    alt91=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 91, 2, input);

                    throw nvae;
                }

                }
                break;
            case 57:
                {
                alt91=5;
                }
                break;
            case RULE_ID:
                {
                alt91=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // InternalGo.g:7334:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    {
                    // InternalGo.g:7334:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    // InternalGo.g:7335:4: () ( (lv_structtype_1_0= ruleStructType ) )
                    {
                    // InternalGo.g:7335:4: ()
                    // InternalGo.g:7336:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralTypeAccess().getLiteralTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7345:4: ( (lv_structtype_1_0= ruleStructType ) )
                    // InternalGo.g:7346:5: (lv_structtype_1_0= ruleStructType )
                    {
                    // InternalGo.g:7346:5: (lv_structtype_1_0= ruleStructType )
                    // InternalGo.g:7347:6: lv_structtype_1_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructtypeStructTypeParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_structtype_1_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"structtype",
                      							lv_structtype_1_0,
                      							"org.xtext.example.mydsl.Go.StructType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7366:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    {
                    // InternalGo.g:7366:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    // InternalGo.g:7367:4: (lv_arraytype_2_0= ruleArrayType )
                    {
                    // InternalGo.g:7367:4: (lv_arraytype_2_0= ruleArrayType )
                    // InternalGo.g:7368:5: lv_arraytype_2_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getArraytypeArrayTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arraytype_2_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"arraytype",
                      						lv_arraytype_2_0,
                      						"org.xtext.example.mydsl.Go.ArrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7386:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    {
                    // InternalGo.g:7386:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    // InternalGo.g:7387:4: otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) )
                    {
                    otherlv_3=(Token)match(input,48,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_4=(Token)match(input,55,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_5=(Token)match(input,49,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }
                    // InternalGo.g:7399:4: ( (lv_elementype_6_0= ruleElementType ) )
                    // InternalGo.g:7400:5: (lv_elementype_6_0= ruleElementType )
                    {
                    // InternalGo.g:7400:5: (lv_elementype_6_0= ruleElementType )
                    // InternalGo.g:7401:6: lv_elementype_6_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementypeElementTypeParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elementype_6_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"elementype",
                      							lv_elementype_6_0,
                      							"org.xtext.example.mydsl.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:7420:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    {
                    // InternalGo.g:7420:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    // InternalGo.g:7421:4: (lv_slicetype_7_0= ruleSliceType )
                    {
                    // InternalGo.g:7421:4: (lv_slicetype_7_0= ruleSliceType )
                    // InternalGo.g:7422:5: lv_slicetype_7_0= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getSlicetypeSliceTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_slicetype_7_0=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"slicetype",
                      						lv_slicetype_7_0,
                      						"org.xtext.example.mydsl.Go.SliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:7440:3: ( (lv_maptype_8_0= ruleMapType ) )
                    {
                    // InternalGo.g:7440:3: ( (lv_maptype_8_0= ruleMapType ) )
                    // InternalGo.g:7441:4: (lv_maptype_8_0= ruleMapType )
                    {
                    // InternalGo.g:7441:4: (lv_maptype_8_0= ruleMapType )
                    // InternalGo.g:7442:5: lv_maptype_8_0= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMaptypeMapTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_maptype_8_0=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"maptype",
                      						lv_maptype_8_0,
                      						"org.xtext.example.mydsl.Go.MapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:7460:3: ( (lv_typename_9_0= ruleTypeName ) )
                    {
                    // InternalGo.g:7460:3: ( (lv_typename_9_0= ruleTypeName ) )
                    // InternalGo.g:7461:4: (lv_typename_9_0= ruleTypeName )
                    {
                    // InternalGo.g:7461:4: (lv_typename_9_0= ruleTypeName )
                    // InternalGo.g:7462:5: lv_typename_9_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypenameTypeNameParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typename_9_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"typename",
                      						lv_typename_9_0,
                      						"org.xtext.example.mydsl.Go.TypeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralType"


    // $ANTLR start "entryRuleLiteralValue"
    // InternalGo.g:7483:1: entryRuleLiteralValue returns [EObject current=null] : iv_ruleLiteralValue= ruleLiteralValue EOF ;
    public final EObject entryRuleLiteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValue = null;


        try {
            // InternalGo.g:7483:53: (iv_ruleLiteralValue= ruleLiteralValue EOF )
            // InternalGo.g:7484:2: iv_ruleLiteralValue= ruleLiteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValue=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValue"


    // $ANTLR start "ruleLiteralValue"
    // InternalGo.g:7490:1: ruleLiteralValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) ;
    public final EObject ruleLiteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7496:2: ( ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) )
            // InternalGo.g:7497:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            {
            // InternalGo.g:7497:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            // InternalGo.g:7498:3: () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}'
            {
            // InternalGo.g:7498:3: ()
            // InternalGo.g:7499:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,51,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:7512:3: ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( ((LA93_0>=RULE_ID && LA93_0<=RULE_FLOAT_LIT)||(LA93_0>=RULE_UNARY_OP && LA93_0<=RULE_STRING)||LA93_0==RULE_MUL||LA93_0==41||(LA93_0>=44 && LA93_0<=45)||LA93_0==48||(LA93_0>=50 && LA93_0<=51)||(LA93_0>=56 && LA93_0<=59)) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalGo.g:7513:4: ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:7513:4: ( (lv_elementlist_2_0= ruleElementList ) )
                    // InternalGo.g:7514:5: (lv_elementlist_2_0= ruleElementList )
                    {
                    // InternalGo.g:7514:5: (lv_elementlist_2_0= ruleElementList )
                    // InternalGo.g:7515:6: lv_elementlist_2_0= ruleElementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementlistElementListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_67);
                    lv_elementlist_2_0=ruleElementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"elementlist",
                      							lv_elementlist_2_0,
                      							"org.xtext.example.mydsl.Go.ElementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7532:4: (otherlv_3= ',' )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==54) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalGo.g:7533:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,54,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValue"


    // $ANTLR start "entryRuleElementList"
    // InternalGo.g:7547:1: entryRuleElementList returns [EObject current=null] : iv_ruleElementList= ruleElementList EOF ;
    public final EObject entryRuleElementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementList = null;


        try {
            // InternalGo.g:7547:52: (iv_ruleElementList= ruleElementList EOF )
            // InternalGo.g:7548:2: iv_ruleElementList= ruleElementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementList=ruleElementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementList"


    // $ANTLR start "ruleElementList"
    // InternalGo.g:7554:1: ruleElementList returns [EObject current=null] : (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) ;
    public final EObject ruleElementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_KeyedElement_0 = null;

        EObject lv_keyedelement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7560:2: ( (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) )
            // InternalGo.g:7561:2: (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            {
            // InternalGo.g:7561:2: (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            // InternalGo.g:7562:3: this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_68);
            this_KeyedElement_0=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_KeyedElement_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:7573:3: ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==54) ) {
                    int LA95_1 = input.LA(2);

                    if ( ((LA95_1>=RULE_ID && LA95_1<=RULE_FLOAT_LIT)||(LA95_1>=RULE_UNARY_OP && LA95_1<=RULE_STRING)||LA95_1==RULE_MUL||LA95_1==41||(LA95_1>=44 && LA95_1<=45)||LA95_1==48||(LA95_1>=50 && LA95_1<=51)||(LA95_1>=56 && LA95_1<=59)) ) {
                        alt95=1;
                    }


                }
                else if ( ((LA95_0>=RULE_ID && LA95_0<=RULE_FLOAT_LIT)||(LA95_0>=RULE_UNARY_OP && LA95_0<=RULE_STRING)||LA95_0==RULE_MUL||LA95_0==41||(LA95_0>=44 && LA95_0<=45)||LA95_0==48||(LA95_0>=50 && LA95_0<=51)||(LA95_0>=56 && LA95_0<=59)) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalGo.g:7574:4: (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    {
            	    // InternalGo.g:7574:4: (otherlv_1= ',' )?
            	    int alt94=2;
            	    int LA94_0 = input.LA(1);

            	    if ( (LA94_0==54) ) {
            	        alt94=1;
            	    }
            	    switch (alt94) {
            	        case 1 :
            	            // InternalGo.g:7575:5: otherlv_1= ','
            	            {
            	            otherlv_1=(Token)match(input,54,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalGo.g:7580:4: ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    // InternalGo.g:7581:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    {
            	    // InternalGo.g:7581:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    // InternalGo.g:7582:6: lv_keyedelement_2_0= ruleKeyedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedelementKeyedElementParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_keyedelement_2_0=ruleKeyedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getElementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"keyedelement",
            	      							lv_keyedelement_2_0,
            	      							"org.xtext.example.mydsl.Go.KeyedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementList"


    // $ANTLR start "entryRuleKeyedElement"
    // InternalGo.g:7604:1: entryRuleKeyedElement returns [EObject current=null] : iv_ruleKeyedElement= ruleKeyedElement EOF ;
    public final EObject entryRuleKeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyedElement = null;


        try {
            // InternalGo.g:7604:53: (iv_ruleKeyedElement= ruleKeyedElement EOF )
            // InternalGo.g:7605:2: iv_ruleKeyedElement= ruleKeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyedElement=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyedElement"


    // $ANTLR start "ruleKeyedElement"
    // InternalGo.g:7611:1: ruleKeyedElement returns [EObject current=null] : ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) ;
    public final EObject ruleKeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_Key_0 = null;

        EObject lv_element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7617:2: ( ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) )
            // InternalGo.g:7618:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            {
            // InternalGo.g:7618:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            // InternalGo.g:7619:3: (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) )
            {
            // InternalGo.g:7619:3: (this_Key_0= ruleKey otherlv_1= ':' )?
            int alt96=2;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalGo.g:7620:4: this_Key_0= ruleKey otherlv_1= ':'
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_32);
                    this_Key_0=ruleKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Key_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_1=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:7636:3: ( (lv_element_2_0= ruleElement ) )
            // InternalGo.g:7637:4: (lv_element_2_0= ruleElement )
            {
            // InternalGo.g:7637:4: (lv_element_2_0= ruleElement )
            // InternalGo.g:7638:5: lv_element_2_0= ruleElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_element_2_0=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"element",
              						lv_element_2_0,
              						"org.xtext.example.mydsl.Go.Element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyedElement"


    // $ANTLR start "entryRuleKey"
    // InternalGo.g:7659:1: entryRuleKey returns [EObject current=null] : iv_ruleKey= ruleKey EOF ;
    public final EObject entryRuleKey() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKey = null;


        try {
            // InternalGo.g:7659:44: (iv_ruleKey= ruleKey EOF )
            // InternalGo.g:7660:2: iv_ruleKey= ruleKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKey=ruleKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKey"


    // $ANTLR start "ruleKey"
    // InternalGo.g:7666:1: ruleKey returns [EObject current=null] : ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) ;
    public final EObject ruleKey() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_fieldn_1_0 = null;

        EObject this_Expression_2 = null;

        EObject this_LiteralValue_3 = null;



        	enterRule();

        try {
            // InternalGo.g:7672:2: ( ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) )
            // InternalGo.g:7673:2: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            {
            // InternalGo.g:7673:2: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            int alt97=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA97_1 = input.LA(2);

                if ( (synpred138_InternalGo()) ) {
                    alt97=1;
                }
                else if ( (synpred139_InternalGo()) ) {
                    alt97=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DECIMALS:
            case RULE_FLOAT_LIT:
            case RULE_UNARY_OP:
            case RULE_INT_LIT:
            case RULE_STRING:
            case RULE_MUL:
            case 41:
            case 44:
            case 45:
            case 48:
            case 50:
            case 56:
            case 57:
            case 58:
            case 59:
                {
                alt97=2;
                }
                break;
            case 51:
                {
                alt97=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }

            switch (alt97) {
                case 1 :
                    // InternalGo.g:7674:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
                    {
                    // InternalGo.g:7674:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
                    // InternalGo.g:7675:4: () ( (lv_fieldn_1_0= ruleFieldName ) )
                    {
                    // InternalGo.g:7675:4: ()
                    // InternalGo.g:7676:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeyAccess().getKeyAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7685:4: ( (lv_fieldn_1_0= ruleFieldName ) )
                    // InternalGo.g:7686:5: (lv_fieldn_1_0= ruleFieldName )
                    {
                    // InternalGo.g:7686:5: (lv_fieldn_1_0= ruleFieldName )
                    // InternalGo.g:7687:6: lv_fieldn_1_0= ruleFieldName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyAccess().getFieldnFieldNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_fieldn_1_0=ruleFieldName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyRule());
                      						}
                      						set(
                      							current,
                      							"fieldn",
                      							lv_fieldn_1_0,
                      							"org.xtext.example.mydsl.Go.FieldName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7706:3: this_Expression_2= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_2=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:7718:3: this_LiteralValue_3= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_3=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKey"


    // $ANTLR start "entryRuleFieldName"
    // InternalGo.g:7733:1: entryRuleFieldName returns [String current=null] : iv_ruleFieldName= ruleFieldName EOF ;
    public final String entryRuleFieldName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFieldName = null;


        try {
            // InternalGo.g:7733:49: (iv_ruleFieldName= ruleFieldName EOF )
            // InternalGo.g:7734:2: iv_ruleFieldName= ruleFieldName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldName=ruleFieldName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldName"


    // $ANTLR start "ruleFieldName"
    // InternalGo.g:7740:1: ruleFieldName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFieldName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7746:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:7747:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFieldNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldName"


    // $ANTLR start "entryRuleElement"
    // InternalGo.g:7760:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalGo.g:7760:48: (iv_ruleElement= ruleElement EOF )
            // InternalGo.g:7761:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalGo.g:7767:1: ruleElement returns [EObject current=null] : (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;

        EObject this_LiteralValue_1 = null;



        	enterRule();

        try {
            // InternalGo.g:7773:2: ( (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) )
            // InternalGo.g:7774:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            {
            // InternalGo.g:7774:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( ((LA98_0>=RULE_ID && LA98_0<=RULE_FLOAT_LIT)||(LA98_0>=RULE_UNARY_OP && LA98_0<=RULE_STRING)||LA98_0==RULE_MUL||LA98_0==41||(LA98_0>=44 && LA98_0<=45)||LA98_0==48||LA98_0==50||(LA98_0>=56 && LA98_0<=59)) ) {
                alt98=1;
            }
            else if ( (LA98_0==51) ) {
                alt98=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // InternalGo.g:7775:3: this_Expression_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7787:3: this_LiteralValue_1= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_1=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleBasicLit"
    // InternalGo.g:7802:1: entryRuleBasicLit returns [String current=null] : iv_ruleBasicLit= ruleBasicLit EOF ;
    public final String entryRuleBasicLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBasicLit = null;


        try {
            // InternalGo.g:7802:48: (iv_ruleBasicLit= ruleBasicLit EOF )
            // InternalGo.g:7803:2: iv_ruleBasicLit= ruleBasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicLit=ruleBasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicLit"


    // $ANTLR start "ruleBasicLit"
    // InternalGo.g:7809:1: ruleBasicLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING ) ;
    public final AntlrDatatypeRuleToken ruleBasicLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_LIT_0=null;
        Token this_FLOAT_LIT_1=null;
        Token this_STRING_4=null;
        AntlrDatatypeRuleToken this_IMAGINARY_LIT_2 = null;

        AntlrDatatypeRuleToken this_RUNE_LIT_3 = null;



        	enterRule();

        try {
            // InternalGo.g:7815:2: ( (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING ) )
            // InternalGo.g:7816:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING )
            {
            // InternalGo.g:7816:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING )
            int alt99=5;
            switch ( input.LA(1) ) {
            case RULE_INT_LIT:
                {
                alt99=1;
                }
                break;
            case RULE_FLOAT_LIT:
                {
                int LA99_2 = input.LA(2);

                if ( (LA99_2==43) ) {
                    alt99=3;
                }
                else if ( (LA99_2==EOF||(LA99_2>=RULE_ID && LA99_2<=RULE_FLOAT_LIT)||(LA99_2>=RULE_ASSING_OP && LA99_2<=RULE_STRING)||(LA99_2>=RULE_MUL && LA99_2<=RULE_EQUALS)||LA99_2==41||(LA99_2>=44 && LA99_2<=65)||(LA99_2>=67 && LA99_2<=75)||(LA99_2>=77 && LA99_2<=79)) ) {
                    alt99=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DECIMALS:
                {
                alt99=3;
                }
                break;
            case 44:
                {
                alt99=4;
                }
                break;
            case RULE_STRING:
                {
                alt99=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // InternalGo.g:7817:3: this_INT_LIT_0= RULE_INT_LIT
                    {
                    this_INT_LIT_0=(Token)match(input,RULE_INT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INT_LIT_0, grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7825:3: this_FLOAT_LIT_1= RULE_FLOAT_LIT
                    {
                    this_FLOAT_LIT_1=(Token)match(input,RULE_FLOAT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FLOAT_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_FLOAT_LIT_1, grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:7833:3: this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IMAGINARY_LIT_2=ruleIMAGINARY_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IMAGINARY_LIT_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:7844:3: this_RUNE_LIT_3= ruleRUNE_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getRUNE_LITParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RUNE_LIT_3=ruleRUNE_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RUNE_LIT_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:7855:3: this_STRING_4= RULE_STRING
                    {
                    this_STRING_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_4, grammarAccess.getBasicLitAccess().getSTRINGTerminalRuleCall_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicLit"


    // $ANTLR start "entryRuleReceiverType"
    // InternalGo.g:7866:1: entryRuleReceiverType returns [EObject current=null] : iv_ruleReceiverType= ruleReceiverType EOF ;
    public final EObject entryRuleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiverType = null;


        try {
            // InternalGo.g:7866:53: (iv_ruleReceiverType= ruleReceiverType EOF )
            // InternalGo.g:7867:2: iv_ruleReceiverType= ruleReceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiverType=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiverType"


    // $ANTLR start "ruleReceiverType"
    // InternalGo.g:7873:1: ruleReceiverType returns [EObject current=null] : ( (lv_type_0_0= ruleType ) ) ;
    public final EObject ruleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7879:2: ( ( (lv_type_0_0= ruleType ) ) )
            // InternalGo.g:7880:2: ( (lv_type_0_0= ruleType ) )
            {
            // InternalGo.g:7880:2: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:7881:3: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:7881:3: (lv_type_0_0= ruleType )
            // InternalGo.g:7882:4: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
              				}
              				set(
              					current,
              					"type",
              					lv_type_0_0,
              					"org.xtext.example.mydsl.Go.Type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiverType"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalGo.g:7902:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBody = null;


        try {
            // InternalGo.g:7902:53: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalGo.g:7903:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalGo.g:7909:1: ruleFunctionBody returns [EObject current=null] : this_Block_0= ruleBlock ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7915:2: (this_Block_0= ruleBlock )
            // InternalGo.g:7916:2: this_Block_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Block_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Block_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleOperandName"
    // InternalGo.g:7930:1: entryRuleOperandName returns [EObject current=null] : iv_ruleOperandName= ruleOperandName EOF ;
    public final EObject entryRuleOperandName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperandName = null;


        try {
            // InternalGo.g:7930:52: (iv_ruleOperandName= ruleOperandName EOF )
            // InternalGo.g:7931:2: iv_ruleOperandName= ruleOperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperandName=ruleOperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperandName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperandName"


    // $ANTLR start "ruleOperandName"
    // InternalGo.g:7937:1: ruleOperandName returns [EObject current=null] : ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) ) ;
    public final EObject ruleOperandName() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_1_0 = null;

        AntlrDatatypeRuleToken lv_qi_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7943:2: ( ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) ) )
            // InternalGo.g:7944:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) )
            {
            // InternalGo.g:7944:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) ) )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==RULE_ID) ) {
                int LA100_1 = input.LA(2);

                if ( (LA100_1==47) ) {
                    int LA100_2 = input.LA(3);

                    if ( (LA100_2==45) ) {
                        alt100=1;
                    }
                    else if ( (LA100_2==RULE_ID) ) {
                        int LA100_4 = input.LA(4);

                        if ( (synpred145_InternalGo()) ) {
                            alt100=1;
                        }
                        else if ( (true) ) {
                            alt100=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 100, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 100, 2, input);

                        throw nvae;
                    }
                }
                else if ( (LA100_1==EOF||(LA100_1>=RULE_ID && LA100_1<=RULE_FLOAT_LIT)||(LA100_1>=RULE_ASSING_OP && LA100_1<=RULE_STRING)||(LA100_1>=RULE_MUL && LA100_1<=RULE_EQUALS)||LA100_1==41||(LA100_1>=44 && LA100_1<=46)||(LA100_1>=48 && LA100_1<=65)||(LA100_1>=67 && LA100_1<=75)||(LA100_1>=77 && LA100_1<=79)) ) {
                    alt100=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalGo.g:7945:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
                    {
                    // InternalGo.g:7945:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
                    // InternalGo.g:7946:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )
                    {
                    // InternalGo.g:7946:4: ()
                    // InternalGo.g:7947:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandNameAccess().getOperandNameAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7956:4: ( (lv_id_1_0= ruleIDENTIFIER ) )
                    // InternalGo.g:7957:5: (lv_id_1_0= ruleIDENTIFIER )
                    {
                    // InternalGo.g:7957:5: (lv_id_1_0= ruleIDENTIFIER )
                    // InternalGo.g:7958:6: lv_id_1_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandNameAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_1_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      						}
                      						set(
                      							current,
                      							"id",
                      							lv_id_1_0,
                      							"org.xtext.example.mydsl.Go.IDENTIFIER");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7977:3: ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) )
                    {
                    // InternalGo.g:7977:3: ( () ( (lv_qi_3_0= ruleQualifiedIdent ) ) )
                    // InternalGo.g:7978:4: () ( (lv_qi_3_0= ruleQualifiedIdent ) )
                    {
                    // InternalGo.g:7978:4: ()
                    // InternalGo.g:7979:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandNameAccess().getOperandNameAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7988:4: ( (lv_qi_3_0= ruleQualifiedIdent ) )
                    // InternalGo.g:7989:5: (lv_qi_3_0= ruleQualifiedIdent )
                    {
                    // InternalGo.g:7989:5: (lv_qi_3_0= ruleQualifiedIdent )
                    // InternalGo.g:7990:6: lv_qi_3_0= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandNameAccess().getQiQualifiedIdentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_qi_3_0=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      						}
                      						set(
                      							current,
                      							"qi",
                      							lv_qi_3_0,
                      							"org.xtext.example.mydsl.Go.QualifiedIdent");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperandName"


    // $ANTLR start "entryRuleImportDecl"
    // InternalGo.g:8012:1: entryRuleImportDecl returns [EObject current=null] : iv_ruleImportDecl= ruleImportDecl EOF ;
    public final EObject entryRuleImportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDecl = null;


        try {
            // InternalGo.g:8012:51: (iv_ruleImportDecl= ruleImportDecl EOF )
            // InternalGo.g:8013:2: iv_ruleImportDecl= ruleImportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDecl=ruleImportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportDecl"


    // $ANTLR start "ruleImportDecl"
    // InternalGo.g:8019:1: ruleImportDecl returns [EObject current=null] : ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) ) ;
    public final EObject ruleImportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_imports_2_0 = null;

        AntlrDatatypeRuleToken lv_imports2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8025:2: ( ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:8026:2: ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:8026:2: ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) )
            // InternalGo.g:8027:3: () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) )
            {
            // InternalGo.g:8027:3: ()
            // InternalGo.g:8028:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,81,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
              		
            }
            // InternalGo.g:8041:3: ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==RULE_ID||LA102_0==RULE_STRING||LA102_0==47) ) {
                alt102=1;
            }
            else if ( (LA102_0==45) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // InternalGo.g:8042:4: ( (lv_imports_2_0= ruleImportSpec ) )
                    {
                    // InternalGo.g:8042:4: ( (lv_imports_2_0= ruleImportSpec ) )
                    // InternalGo.g:8043:5: (lv_imports_2_0= ruleImportSpec )
                    {
                    // InternalGo.g:8043:5: (lv_imports_2_0= ruleImportSpec )
                    // InternalGo.g:8044:6: lv_imports_2_0= ruleImportSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportDeclAccess().getImportsImportSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_imports_2_0=ruleImportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportDeclRule());
                      						}
                      						add(
                      							current,
                      							"imports",
                      							lv_imports_2_0,
                      							"org.xtext.example.mydsl.Go.ImportSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8062:4: (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' )
                    {
                    // InternalGo.g:8062:4: (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' )
                    // InternalGo.g:8063:5: otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:8067:5: ( (lv_imports2_4_0= ruleImportSpec ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==RULE_ID||LA101_0==RULE_STRING||LA101_0==47) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalGo.g:8068:6: (lv_imports2_4_0= ruleImportSpec )
                    	    {
                    	    // InternalGo.g:8068:6: (lv_imports2_4_0= ruleImportSpec )
                    	    // InternalGo.g:8069:7: lv_imports2_4_0= ruleImportSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImportDeclAccess().getImports2ImportSpecParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_70);
                    	    lv_imports2_4_0=ruleImportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImportDeclRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"imports2",
                    	      								lv_imports2_4_0,
                    	      								"org.xtext.example.mydsl.Go.ImportSpec");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportDecl"


    // $ANTLR start "entryRuleImportSpec"
    // InternalGo.g:8096:1: entryRuleImportSpec returns [String current=null] : iv_ruleImportSpec= ruleImportSpec EOF ;
    public final String entryRuleImportSpec() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImportSpec = null;


        try {
            // InternalGo.g:8096:50: (iv_ruleImportSpec= ruleImportSpec EOF )
            // InternalGo.g:8097:2: iv_ruleImportSpec= ruleImportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportSpec=ruleImportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportSpec.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportSpec"


    // $ANTLR start "ruleImportSpec"
    // InternalGo.g:8103:1: ruleImportSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath ) ;
    public final AntlrDatatypeRuleToken ruleImportSpec() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_1 = null;

        AntlrDatatypeRuleToken this_ImportPath_2 = null;



        	enterRule();

        try {
            // InternalGo.g:8109:2: ( ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath ) )
            // InternalGo.g:8110:2: ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath )
            {
            // InternalGo.g:8110:2: ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath )
            // InternalGo.g:8111:3: (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath
            {
            // InternalGo.g:8111:3: (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )?
            int alt103=3;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==47) ) {
                alt103=1;
            }
            else if ( (LA103_0==RULE_ID) ) {
                alt103=2;
            }
            switch (alt103) {
                case 1 :
                    // InternalGo.g:8112:4: kw= '.'
                    {
                    kw=(Token)match(input,47,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:8118:4: this_IDENTIFIER_1= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getImportSpecAccess().getIDENTIFIERParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_71);
                    this_IDENTIFIER_1=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_IDENTIFIER_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ImportPath_2=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ImportPath_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportSpec"


    // $ANTLR start "entryRuleImportPath"
    // InternalGo.g:8143:1: entryRuleImportPath returns [String current=null] : iv_ruleImportPath= ruleImportPath EOF ;
    public final String entryRuleImportPath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImportPath = null;


        try {
            // InternalGo.g:8143:50: (iv_ruleImportPath= ruleImportPath EOF )
            // InternalGo.g:8144:2: iv_ruleImportPath= ruleImportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportPath=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportPath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportPath"


    // $ANTLR start "ruleImportPath"
    // InternalGo.g:8150:1: ruleImportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleImportPath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;


        	enterRule();

        try {
            // InternalGo.g:8156:2: (this_STRING_0= RULE_STRING )
            // InternalGo.g:8157:2: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_0, grammarAccess.getImportPathAccess().getSTRINGTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportPath"

    // $ANTLR start synpred13_InternalGo
    public final void synpred13_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;


        // InternalGo.g:796:3: (this_IDENTIFIER_0= ruleIDENTIFIER )
        // InternalGo.g:796:3: this_IDENTIFIER_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0());
          		
        }
        pushFollow(FOLLOW_2);
        this_IDENTIFIER_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_InternalGo

    // $ANTLR start synpred23_InternalGo
    public final void synpred23_InternalGo_fragment() throws RecognitionException {   
        EObject lv_indentifierL_1_0 = null;

        EObject lv_type_2_0 = null;


        // InternalGo.g:1267:4: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) )
        // InternalGo.g:1267:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
        {
        // InternalGo.g:1267:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
        // InternalGo.g:1268:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) )
        {
        // InternalGo.g:1268:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) )
        // InternalGo.g:1269:6: (lv_indentifierL_1_0= ruleIdentifierList )
        {
        // InternalGo.g:1269:6: (lv_indentifierL_1_0= ruleIdentifierList )
        // InternalGo.g:1270:7: lv_indentifierL_1_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_11);
        lv_indentifierL_1_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:1287:5: ( (lv_type_2_0= ruleType ) )
        // InternalGo.g:1288:6: (lv_type_2_0= ruleType )
        {
        // InternalGo.g:1288:6: (lv_type_2_0= ruleType )
        // InternalGo.g:1289:7: lv_type_2_0= ruleType
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_type_2_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalGo

    // $ANTLR start synpred25_InternalGo
    public final void synpred25_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_id2_3_0 = null;


        // InternalGo.g:1396:4: (otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) ) )
        // InternalGo.g:1396:4: otherlv_2= ',' ( (lv_id2_3_0= ruleIDENTIFIER ) )
        {
        otherlv_2=(Token)match(input,54,FOLLOW_6); if (state.failed) return ;
        // InternalGo.g:1400:4: ( (lv_id2_3_0= ruleIDENTIFIER ) )
        // InternalGo.g:1401:5: (lv_id2_3_0= ruleIDENTIFIER )
        {
        // InternalGo.g:1401:5: (lv_id2_3_0= ruleIDENTIFIER )
        // InternalGo.g:1402:6: lv_id2_3_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIdentifierListAccess().getId2IDENTIFIERParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id2_3_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred25_InternalGo

    // $ANTLR start synpred27_InternalGo
    public final void synpred27_InternalGo_fragment() throws RecognitionException {   
        EObject lv_result_1_0 = null;


        // InternalGo.g:1626:4: ( (lv_result_1_0= ruleResult ) )
        // InternalGo.g:1626:4: (lv_result_1_0= ruleResult )
        {
        // InternalGo.g:1626:4: (lv_result_1_0= ruleResult )
        // InternalGo.g:1627:5: lv_result_1_0= ruleResult
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_result_1_0=ruleResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalGo

    // $ANTLR start synpred28_InternalGo
    public final void synpred28_InternalGo_fragment() throws RecognitionException {   
        EObject lv_parameteres_0_0 = null;


        // InternalGo.g:1663:3: ( ( (lv_parameteres_0_0= ruleParameters ) ) )
        // InternalGo.g:1663:3: ( (lv_parameteres_0_0= ruleParameters ) )
        {
        // InternalGo.g:1663:3: ( (lv_parameteres_0_0= ruleParameters ) )
        // InternalGo.g:1664:4: (lv_parameteres_0_0= ruleParameters )
        {
        // InternalGo.g:1664:4: (lv_parameteres_0_0= ruleParameters )
        // InternalGo.g:1665:5: lv_parameteres_0_0= ruleParameters
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getResultAccess().getParameteresParametersParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_parameteres_0_0=ruleParameters();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred28_InternalGo

    // $ANTLR start synpred29_InternalGo
    public final void synpred29_InternalGo_fragment() throws RecognitionException {   
        EObject lv_parameterlist_2_0 = null;


        // InternalGo.g:1736:4: ( (lv_parameterlist_2_0= ruleParameterList ) )
        // InternalGo.g:1736:4: (lv_parameterlist_2_0= ruleParameterList )
        {
        // InternalGo.g:1736:4: (lv_parameterlist_2_0= ruleParameterList )
        // InternalGo.g:1737:5: lv_parameterlist_2_0= ruleParameterList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_parameterlist_2_0=ruleParameterList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalGo

    // $ANTLR start synpred31_InternalGo
    public final void synpred31_InternalGo_fragment() throws RecognitionException {   
        EObject lv_identifierL_1_0 = null;


        // InternalGo.g:1861:4: ( (lv_identifierL_1_0= ruleIdentifierList ) )
        // InternalGo.g:1861:4: (lv_identifierL_1_0= ruleIdentifierList )
        {
        // InternalGo.g:1861:4: (lv_identifierL_1_0= ruleIdentifierList )
        // InternalGo.g:1862:5: lv_identifierL_1_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierLIdentifierListParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_identifierL_1_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalGo

    // $ANTLR start synpred36_InternalGo
    public final void synpred36_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;

        // InternalGo.g:2238:6: (otherlv_1= '<-' )
        // InternalGo.g:2238:6: otherlv_1= '<-'
        {
        otherlv_1=(Token)match(input,59,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_InternalGo

    // $ANTLR start synpred38_InternalGo
    public final void synpred38_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;

        // InternalGo.g:2363:5: (otherlv_2= ';' )
        // InternalGo.g:2363:5: otherlv_2= ';'
        {
        otherlv_2=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalGo

    // $ANTLR start synpred43_InternalGo
    public final void synpred43_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotst_4_0 = null;


        // InternalGo.g:2460:3: ( ( (lv_gotst_4_0= ruleGoStmt ) ) )
        // InternalGo.g:2460:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        {
        // InternalGo.g:2460:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        // InternalGo.g:2461:4: (lv_gotst_4_0= ruleGoStmt )
        {
        // InternalGo.g:2461:4: (lv_gotst_4_0= ruleGoStmt )
        // InternalGo.g:2462:5: lv_gotst_4_0= ruleGoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotst_4_0=ruleGoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred43_InternalGo

    // $ANTLR start synpred47_InternalGo
    public final void synpred47_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotost_8_0 = null;


        // InternalGo.g:2532:3: ( ( (lv_gotost_8_0= ruleGotoStmt ) ) )
        // InternalGo.g:2532:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        {
        // InternalGo.g:2532:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        // InternalGo.g:2533:4: (lv_gotost_8_0= ruleGotoStmt )
        {
        // InternalGo.g:2533:4: (lv_gotost_8_0= ruleGotoStmt )
        // InternalGo.g:2534:5: lv_gotost_8_0= ruleGotoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotost_8_0=ruleGotoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred47_InternalGo

    // $ANTLR start synpred56_InternalGo
    public final void synpred56_InternalGo_fragment() throws RecognitionException {   
        EObject lv_inc_0_0 = null;


        // InternalGo.g:2825:3: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) )
        // InternalGo.g:2825:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
        {
        // InternalGo.g:2825:3: ( (lv_inc_0_0= ruleIncDecStmt ) )
        // InternalGo.g:2826:4: (lv_inc_0_0= ruleIncDecStmt )
        {
        // InternalGo.g:2826:4: (lv_inc_0_0= ruleIncDecStmt )
        // InternalGo.g:2827:5: lv_inc_0_0= ruleIncDecStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncIncDecStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_inc_0_0=ruleIncDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred56_InternalGo

    // $ANTLR start synpred57_InternalGo
    public final void synpred57_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ass_1_0 = null;


        // InternalGo.g:2845:3: ( ( (lv_ass_1_0= ruleAssignment ) ) )
        // InternalGo.g:2845:3: ( (lv_ass_1_0= ruleAssignment ) )
        {
        // InternalGo.g:2845:3: ( (lv_ass_1_0= ruleAssignment ) )
        // InternalGo.g:2846:4: (lv_ass_1_0= ruleAssignment )
        {
        // InternalGo.g:2846:4: (lv_ass_1_0= ruleAssignment )
        // InternalGo.g:2847:5: lv_ass_1_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssAssignmentParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ass_1_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred57_InternalGo

    // $ANTLR start synpred58_InternalGo
    public final void synpred58_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ss_2_0 = null;


        // InternalGo.g:2865:3: ( ( (lv_ss_2_0= ruleSendStmt ) ) )
        // InternalGo.g:2865:3: ( (lv_ss_2_0= ruleSendStmt ) )
        {
        // InternalGo.g:2865:3: ( (lv_ss_2_0= ruleSendStmt ) )
        // InternalGo.g:2866:4: (lv_ss_2_0= ruleSendStmt )
        {
        // InternalGo.g:2866:4: (lv_ss_2_0= ruleSendStmt )
        // InternalGo.g:2867:5: lv_ss_2_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSsSendStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ss_2_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred58_InternalGo

    // $ANTLR start synpred59_InternalGo
    public final void synpred59_InternalGo_fragment() throws RecognitionException {   
        EObject lv_svd_3_0 = null;


        // InternalGo.g:2885:3: ( ( (lv_svd_3_0= ruleShortVarDecl ) ) )
        // InternalGo.g:2885:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
        {
        // InternalGo.g:2885:3: ( (lv_svd_3_0= ruleShortVarDecl ) )
        // InternalGo.g:2886:4: (lv_svd_3_0= ruleShortVarDecl )
        {
        // InternalGo.g:2886:4: (lv_svd_3_0= ruleShortVarDecl )
        // InternalGo.g:2887:5: lv_svd_3_0= ruleShortVarDecl
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSvdShortVarDeclParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_svd_3_0=ruleShortVarDecl();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred59_InternalGo

    // $ANTLR start synpred60_InternalGo
    public final void synpred60_InternalGo_fragment() throws RecognitionException {   
        EObject lv_es_4_0 = null;


        // InternalGo.g:2905:3: ( ( (lv_es_4_0= ruleExpressionStmt ) ) )
        // InternalGo.g:2905:3: ( (lv_es_4_0= ruleExpressionStmt ) )
        {
        // InternalGo.g:2905:3: ( (lv_es_4_0= ruleExpressionStmt ) )
        // InternalGo.g:2906:4: (lv_es_4_0= ruleExpressionStmt )
        {
        // InternalGo.g:2906:4: (lv_es_4_0= ruleExpressionStmt )
        // InternalGo.g:2907:5: lv_es_4_0= ruleExpressionStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEsExpressionStmtParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_es_4_0=ruleExpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred60_InternalGo

    // $ANTLR start synpred61_InternalGo
    public final void synpred61_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionlist_2_0 = null;


        // InternalGo.g:3012:4: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        // InternalGo.g:3012:4: (lv_expressionlist_2_0= ruleExpressionList )
        {
        // InternalGo.g:3012:4: (lv_expressionlist_2_0= ruleExpressionList )
        // InternalGo.g:3013:5: lv_expressionlist_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred61_InternalGo

    // $ANTLR start synpred62_InternalGo
    public final void synpred62_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_Label_1 = null;


        // InternalGo.g:3055:4: (this_Label_1= ruleLabel )
        // InternalGo.g:3055:4: this_Label_1= ruleLabel
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
          			
        }
        pushFollow(FOLLOW_2);
        this_Label_1=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalGo

    // $ANTLR start synpred63_InternalGo
    public final void synpred63_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_Label_1 = null;


        // InternalGo.g:3091:4: (this_Label_1= ruleLabel )
        // InternalGo.g:3091:4: this_Label_1= ruleLabel
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
          			
        }
        pushFollow(FOLLOW_2);
        this_Label_1=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_InternalGo

    // $ANTLR start synpred64_InternalGo
    public final void synpred64_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simst_1_0 = null;


        // InternalGo.g:3160:4: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:3160:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:3160:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
        // InternalGo.g:3161:5: (lv_simst_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:3161:5: (lv_simst_1_0= ruleSimpleStmt )
        // InternalGo.g:3162:6: lv_simst_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_26);
        lv_simst_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_InternalGo

    // $ANTLR start synpred67_InternalGo
    public final void synpred67_InternalGo_fragment() throws RecognitionException {   
        EObject this_ExprSwitchStmt_0 = null;


        // InternalGo.g:3310:3: (this_ExprSwitchStmt_0= ruleExprSwitchStmt )
        // InternalGo.g:3310:3: this_ExprSwitchStmt_0= ruleExprSwitchStmt
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_ExprSwitchStmt_0=ruleExprSwitchStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_InternalGo

    // $ANTLR start synpred69_InternalGo
    public final void synpred69_InternalGo_fragment() throws RecognitionException {   
        EObject lv_condition_2_0 = null;


        // InternalGo.g:3427:4: ( ( (lv_condition_2_0= ruleCondition ) ) )
        // InternalGo.g:3427:4: ( (lv_condition_2_0= ruleCondition ) )
        {
        // InternalGo.g:3427:4: ( (lv_condition_2_0= ruleCondition ) )
        // InternalGo.g:3428:5: (lv_condition_2_0= ruleCondition )
        {
        // InternalGo.g:3428:5: (lv_condition_2_0= ruleCondition )
        // InternalGo.g:3429:6: lv_condition_2_0= ruleCondition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_2_0=ruleCondition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred69_InternalGo

    // $ANTLR start synpred70_InternalGo
    public final void synpred70_InternalGo_fragment() throws RecognitionException {   
        EObject lv_for_3_0 = null;


        // InternalGo.g:3447:4: ( ( (lv_for_3_0= ruleForClause ) ) )
        // InternalGo.g:3447:4: ( (lv_for_3_0= ruleForClause ) )
        {
        // InternalGo.g:3447:4: ( (lv_for_3_0= ruleForClause ) )
        // InternalGo.g:3448:5: (lv_for_3_0= ruleForClause )
        {
        // InternalGo.g:3448:5: (lv_for_3_0= ruleForClause )
        // InternalGo.g:3449:6: lv_for_3_0= ruleForClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_for_3_0=ruleForClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred70_InternalGo

    // $ANTLR start synpred71_InternalGo
    public final void synpred71_InternalGo_fragment() throws RecognitionException {   
        EObject lv_range_4_0 = null;


        // InternalGo.g:3467:4: ( ( (lv_range_4_0= ruleRangeClause ) ) )
        // InternalGo.g:3467:4: ( (lv_range_4_0= ruleRangeClause ) )
        {
        // InternalGo.g:3467:4: ( (lv_range_4_0= ruleRangeClause ) )
        // InternalGo.g:3468:5: (lv_range_4_0= ruleRangeClause )
        {
        // InternalGo.g:3468:5: (lv_range_4_0= ruleRangeClause )
        // InternalGo.g:3469:6: lv_range_4_0= ruleRangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_2_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_range_4_0=ruleRangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred71_InternalGo

    // $ANTLR start synpred76_InternalGo
    public final void synpred76_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_tp_1_0 = null;

        EObject lv_expressionlist_3_0 = null;


        // InternalGo.g:3671:4: ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )
        // InternalGo.g:3671:4: ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
        {
        // InternalGo.g:3671:4: ( (lv_tp_1_0= ruleType ) )?
        int alt111=2;
        int LA111_0 = input.LA(1);

        if ( (LA111_0==RULE_ID||LA111_0==RULE_MUL||LA111_0==41||LA111_0==45||LA111_0==48||LA111_0==50||(LA111_0>=56 && LA111_0<=59)) ) {
            alt111=1;
        }
        switch (alt111) {
            case 1 :
                // InternalGo.g:3672:5: (lv_tp_1_0= ruleType )
                {
                // InternalGo.g:3672:5: (lv_tp_1_0= ruleType )
                // InternalGo.g:3673:6: lv_tp_1_0= ruleType
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getConstSpecAccess().getTpTypeParserRuleCall_1_0_0());
                  					
                }
                pushFollow(FOLLOW_45);
                lv_tp_1_0=ruleType();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_2=(Token)match(input,RULE_EQUALS,FOLLOW_14); if (state.failed) return ;
        // InternalGo.g:3694:4: ( (lv_expressionlist_3_0= ruleExpressionList ) )
        // InternalGo.g:3695:5: (lv_expressionlist_3_0= ruleExpressionList )
        {
        // InternalGo.g:3695:5: (lv_expressionlist_3_0= ruleExpressionList )
        // InternalGo.g:3696:6: lv_expressionlist_3_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_3_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalGo

    // $ANTLR start synpred83_InternalGo
    public final void synpred83_InternalGo_fragment() throws RecognitionException {   
        EObject lv_tp2_1_0 = null;


        // InternalGo.g:4105:4: ( (lv_tp2_1_0= ruleType ) )
        // InternalGo.g:4105:4: (lv_tp2_1_0= ruleType )
        {
        // InternalGo.g:4105:4: (lv_tp2_1_0= ruleType )
        // InternalGo.g:4106:5: lv_tp2_1_0= ruleType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getVarSpecAccess().getTp2TypeParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_tp2_1_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred83_InternalGo

    // $ANTLR start synpred85_InternalGo
    public final void synpred85_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_exp_1_0 = null;


        // InternalGo.g:4344:3: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) )
        // InternalGo.g:4344:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
        {
        // InternalGo.g:4344:3: ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' )
        // InternalGo.g:4345:4: () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++'
        {
        // InternalGo.g:4345:4: ()
        // InternalGo.g:4346:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:4355:4: ( (lv_exp_1_0= ruleExpression ) )
        // InternalGo.g:4356:5: (lv_exp_1_0= ruleExpression )
        {
        // InternalGo.g:4356:5: (lv_exp_1_0= ruleExpression )
        // InternalGo.g:4357:6: lv_exp_1_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_48);
        lv_exp_1_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,74,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalGo

    // $ANTLR start synpred86_InternalGo
    public final void synpred86_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_simplestmt_2_0 = null;


        // InternalGo.g:4595:4: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )
        // InternalGo.g:4595:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';'
        {
        // InternalGo.g:4595:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
        // InternalGo.g:4596:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        {
        // InternalGo.g:4596:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        // InternalGo.g:4597:6: lv_simplestmt_2_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_26);
        lv_simplestmt_2_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_InternalGo

    // $ANTLR start synpred90_InternalGo
    public final void synpred90_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simplestm_1_0 = null;


        // InternalGo.g:4813:4: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:4813:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:4813:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) )
        // InternalGo.g:4814:5: (lv_simplestm_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:4814:5: (lv_simplestm_1_0= ruleSimpleStmt )
        // InternalGo.g:4815:6: lv_simplestm_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimplestmSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_26);
        lv_simplestm_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_InternalGo

    // $ANTLR start synpred95_InternalGo
    public final void synpred95_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sendstmt_2_0 = null;


        // InternalGo.g:5247:5: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) )
        // InternalGo.g:5247:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        {
        // InternalGo.g:5247:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        // InternalGo.g:5248:6: (lv_sendstmt_2_0= ruleSendStmt )
        {
        // InternalGo.g:5248:6: (lv_sendstmt_2_0= ruleSendStmt )
        // InternalGo.g:5249:7: lv_sendstmt_2_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_sendstmt_2_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred95_InternalGo

    // $ANTLR start synpred97_InternalGo
    public final void synpred97_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_ExpressionList_0 = null;


        // InternalGo.g:5325:4: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) )
        // InternalGo.g:5325:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        {
        // InternalGo.g:5325:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        // InternalGo.g:5326:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }
        pushFollow(FOLLOW_45);
        this_ExpressionList_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,RULE_EQUALS,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred97_InternalGo

    // $ANTLR start synpred98_InternalGo
    public final void synpred98_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_idl_2_0 = null;


        // InternalGo.g:5343:4: ( ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )
        // InternalGo.g:5343:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        {
        // InternalGo.g:5343:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        // InternalGo.g:5344:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
        {
        // InternalGo.g:5344:5: ( (lv_idl_2_0= ruleIdentifierList ) )
        // InternalGo.g:5345:6: (lv_idl_2_0= ruleIdentifierList )
        {
        // InternalGo.g:5345:6: (lv_idl_2_0= ruleIdentifierList )
        // InternalGo.g:5346:7: lv_idl_2_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_51);
        lv_idl_2_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,76,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred98_InternalGo

    // $ANTLR start synpred99_InternalGo
    public final void synpred99_InternalGo_fragment() throws RecognitionException {   
        EObject lv_init_1_0 = null;


        // InternalGo.g:5502:4: ( (lv_init_1_0= ruleInitStmt ) )
        // InternalGo.g:5502:4: (lv_init_1_0= ruleInitStmt )
        {
        // InternalGo.g:5502:4: (lv_init_1_0= ruleInitStmt )
        // InternalGo.g:5503:5: lv_init_1_0= ruleInitStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getInitInitStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_init_1_0=ruleInitStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred99_InternalGo

    // $ANTLR start synpred105_InternalGo
    public final void synpred105_InternalGo_fragment() throws RecognitionException {   
        Token lv_bop_1_0=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;


        // InternalGo.g:5942:4: ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )
        // InternalGo.g:5942:4: ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
        {
        // InternalGo.g:5942:4: ( (lv_bop_1_0= RULE_BINARY_OP ) )
        // InternalGo.g:5943:5: (lv_bop_1_0= RULE_BINARY_OP )
        {
        // InternalGo.g:5943:5: (lv_bop_1_0= RULE_BINARY_OP )
        // InternalGo.g:5944:6: lv_bop_1_0= RULE_BINARY_OP
        {
        lv_bop_1_0=(Token)match(input,RULE_BINARY_OP,FOLLOW_14); if (state.failed) return ;

        }


        }

        // InternalGo.g:5960:4: ( (lv_expression_2_0= ruleExpression ) )
        // InternalGo.g:5961:5: (lv_expression_2_0= ruleExpression )
        {
        // InternalGo.g:5961:5: (lv_expression_2_0= ruleExpression )
        // InternalGo.g:5962:6: lv_expression_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_58);
        lv_expression_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5979:4: ( (lv_expression2_3_0= ruleExpression2 ) )
        // InternalGo.g:5980:5: (lv_expression2_3_0= ruleExpression2 )
        {
        // InternalGo.g:5980:5: (lv_expression2_3_0= ruleExpression2 )
        // InternalGo.g:5981:6: lv_expression2_3_0= ruleExpression2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression2_3_0=ruleExpression2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred105_InternalGo

    // $ANTLR start synpred107_InternalGo
    public final void synpred107_InternalGo_fragment() throws RecognitionException {   
        EObject lv_op_1_0 = null;

        EObject lv_pr_2_0 = null;


        // InternalGo.g:6108:3: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6108:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6108:3: ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6109:4: () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6109:4: ()
        // InternalGo.g:6110:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:6119:4: ( (lv_op_1_0= ruleOperand ) )
        // InternalGo.g:6120:5: (lv_op_1_0= ruleOperand )
        {
        // InternalGo.g:6120:5: (lv_op_1_0= ruleOperand )
        // InternalGo.g:6121:6: lv_op_1_0= ruleOperand
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOpOperandParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_59);
        lv_op_1_0=ruleOperand();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6138:4: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6139:5: (lv_pr_2_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6139:5: (lv_pr_2_0= rulePrimaryExpr2 )
        // InternalGo.g:6140:6: lv_pr_2_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_2_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred107_InternalGo

    // $ANTLR start synpred108_InternalGo
    public final void synpred108_InternalGo_fragment() throws RecognitionException {   
        EObject lv_con_3_0 = null;

        EObject lv_pr_4_0 = null;


        // InternalGo.g:6159:3: ( ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6159:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6159:3: ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6160:4: ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6160:4: ( (lv_con_3_0= ruleConversion ) )
        // InternalGo.g:6161:5: (lv_con_3_0= ruleConversion )
        {
        // InternalGo.g:6161:5: (lv_con_3_0= ruleConversion )
        // InternalGo.g:6162:6: lv_con_3_0= ruleConversion
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConConversionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_59);
        lv_con_3_0=ruleConversion();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6179:4: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6180:5: (lv_pr_4_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6180:5: (lv_pr_4_0= rulePrimaryExpr2 )
        // InternalGo.g:6181:6: lv_pr_4_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_4_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred108_InternalGo

    // $ANTLR start synpred109_InternalGo
    public final void synpred109_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_selector_1_0 = null;

        EObject lv_pr_2_0 = null;


        // InternalGo.g:6270:4: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6270:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6270:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6271:5: ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6271:5: ( (lv_selector_1_0= ruleSelector ) )
        // InternalGo.g:6272:6: (lv_selector_1_0= ruleSelector )
        {
        // InternalGo.g:6272:6: (lv_selector_1_0= ruleSelector )
        // InternalGo.g:6273:7: lv_selector_1_0= ruleSelector
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorSelectorParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_59);
        lv_selector_1_0=ruleSelector();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6290:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6291:6: (lv_pr_2_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6291:6: (lv_pr_2_0= rulePrimaryExpr2 )
        // InternalGo.g:6292:7: lv_pr_2_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_2_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred109_InternalGo

    // $ANTLR start synpred110_InternalGo
    public final void synpred110_InternalGo_fragment() throws RecognitionException {   
        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;


        // InternalGo.g:6311:4: ( ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6311:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6311:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6312:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6312:5: ( (lv_index_3_0= ruleIndex ) )
        // InternalGo.g:6313:6: (lv_index_3_0= ruleIndex )
        {
        // InternalGo.g:6313:6: (lv_index_3_0= ruleIndex )
        // InternalGo.g:6314:7: lv_index_3_0= ruleIndex
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FOLLOW_59);
        lv_index_3_0=ruleIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6331:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6332:6: (lv_pr_4_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6332:6: (lv_pr_4_0= rulePrimaryExpr2 )
        // InternalGo.g:6333:7: lv_pr_4_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_4_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred110_InternalGo

    // $ANTLR start synpred111_InternalGo
    public final void synpred111_InternalGo_fragment() throws RecognitionException {   
        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;


        // InternalGo.g:6352:4: ( ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6352:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6352:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6353:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6353:5: ( (lv_slice_5_0= ruleSlice ) )
        // InternalGo.g:6354:6: (lv_slice_5_0= ruleSlice )
        {
        // InternalGo.g:6354:6: (lv_slice_5_0= ruleSlice )
        // InternalGo.g:6355:7: lv_slice_5_0= ruleSlice
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
          						
        }
        pushFollow(FOLLOW_59);
        lv_slice_5_0=ruleSlice();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6372:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6373:6: (lv_pr_6_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6373:6: (lv_pr_6_0= rulePrimaryExpr2 )
        // InternalGo.g:6374:7: lv_pr_6_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_6_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred111_InternalGo

    // $ANTLR start synpred112_InternalGo
    public final void synpred112_InternalGo_fragment() throws RecognitionException {   
        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;


        // InternalGo.g:6393:4: ( ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6393:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6393:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6394:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6394:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
        // InternalGo.g:6395:6: (lv_typeass_7_0= ruleTypeAssertion )
        {
        // InternalGo.g:6395:6: (lv_typeass_7_0= ruleTypeAssertion )
        // InternalGo.g:6396:7: lv_typeass_7_0= ruleTypeAssertion
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
          						
        }
        pushFollow(FOLLOW_59);
        lv_typeass_7_0=ruleTypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6413:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6414:6: (lv_pr_8_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6414:6: (lv_pr_8_0= rulePrimaryExpr2 )
        // InternalGo.g:6415:7: lv_pr_8_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_8_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred112_InternalGo

    // $ANTLR start synpred113_InternalGo
    public final void synpred113_InternalGo_fragment() throws RecognitionException {   
        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;


        // InternalGo.g:6434:4: ( ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6434:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6434:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6435:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6435:5: ( (lv_arguments_9_0= ruleArguments ) )
        // InternalGo.g:6436:6: (lv_arguments_9_0= ruleArguments )
        {
        // InternalGo.g:6436:6: (lv_arguments_9_0= ruleArguments )
        // InternalGo.g:6437:7: lv_arguments_9_0= ruleArguments
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
          						
        }
        pushFollow(FOLLOW_59);
        lv_arguments_9_0=ruleArguments();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6454:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6455:6: (lv_pr_10_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6455:6: (lv_pr_10_0= rulePrimaryExpr2 )
        // InternalGo.g:6456:7: lv_pr_10_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_10_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred113_InternalGo

    // $ANTLR start synpred114_InternalGo
    public final void synpred114_InternalGo_fragment() throws RecognitionException {   
        EObject lv_literal_1_0 = null;


        // InternalGo.g:6494:3: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) )
        // InternalGo.g:6494:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        {
        // InternalGo.g:6494:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        // InternalGo.g:6495:4: () ( (lv_literal_1_0= ruleLiteral ) )
        {
        // InternalGo.g:6495:4: ()
        // InternalGo.g:6496:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:6505:4: ( (lv_literal_1_0= ruleLiteral ) )
        // InternalGo.g:6506:5: (lv_literal_1_0= ruleLiteral )
        {
        // InternalGo.g:6506:5: (lv_literal_1_0= ruleLiteral )
        // InternalGo.g:6507:6: lv_literal_1_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_literal_1_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred114_InternalGo

    // $ANTLR start synpred115_InternalGo
    public final void synpred115_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operandn_2_0 = null;


        // InternalGo.g:6526:3: ( ( (lv_operandn_2_0= ruleOperandName ) ) )
        // InternalGo.g:6526:3: ( (lv_operandn_2_0= ruleOperandName ) )
        {
        // InternalGo.g:6526:3: ( (lv_operandn_2_0= ruleOperandName ) )
        // InternalGo.g:6527:4: (lv_operandn_2_0= ruleOperandName )
        {
        // InternalGo.g:6527:4: (lv_operandn_2_0= ruleOperandName )
        // InternalGo.g:6528:5: lv_operandn_2_0= ruleOperandName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_operandn_2_0=ruleOperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred115_InternalGo

    // $ANTLR start synpred119_InternalGo
    public final void synpred119_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;


        // InternalGo.g:6808:3: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) )
        // InternalGo.g:6808:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        {
        // InternalGo.g:6808:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        // InternalGo.g:6809:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
        {
        // InternalGo.g:6809:4: ()
        // InternalGo.g:6810:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        otherlv_1=(Token)match(input,48,FOLLOW_61); if (state.failed) return ;
        // InternalGo.g:6823:4: ( (lv_expression_2_0= ruleExpression ) )?
        int alt114=2;
        int LA114_0 = input.LA(1);

        if ( ((LA114_0>=RULE_ID && LA114_0<=RULE_FLOAT_LIT)||(LA114_0>=RULE_UNARY_OP && LA114_0<=RULE_STRING)||LA114_0==RULE_MUL||LA114_0==41||(LA114_0>=44 && LA114_0<=45)||LA114_0==48||LA114_0==50||(LA114_0>=56 && LA114_0<=59)) ) {
            alt114=1;
        }
        switch (alt114) {
            case 1 :
                // InternalGo.g:6824:5: (lv_expression_2_0= ruleExpression )
                {
                // InternalGo.g:6824:5: (lv_expression_2_0= ruleExpression )
                // InternalGo.g:6825:6: lv_expression_2_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                  					
                }
                pushFollow(FOLLOW_32);
                lv_expression_2_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,60,FOLLOW_62); if (state.failed) return ;
        // InternalGo.g:6846:4: ( (lv_expression2_4_0= ruleExpression ) )?
        int alt115=2;
        int LA115_0 = input.LA(1);

        if ( ((LA115_0>=RULE_ID && LA115_0<=RULE_FLOAT_LIT)||(LA115_0>=RULE_UNARY_OP && LA115_0<=RULE_STRING)||LA115_0==RULE_MUL||LA115_0==41||(LA115_0>=44 && LA115_0<=45)||LA115_0==48||LA115_0==50||(LA115_0>=56 && LA115_0<=59)) ) {
            alt115=1;
        }
        switch (alt115) {
            case 1 :
                // InternalGo.g:6847:5: (lv_expression2_4_0= ruleExpression )
                {
                // InternalGo.g:6847:5: (lv_expression2_4_0= ruleExpression )
                // InternalGo.g:6848:6: lv_expression2_4_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                  					
                }
                pushFollow(FOLLOW_15);
                lv_expression2_4_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_5=(Token)match(input,49,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred119_InternalGo

    // $ANTLR start synpred121_InternalGo
    public final void synpred121_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionlist_2_0 = null;


        // InternalGo.g:7023:5: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
        // InternalGo.g:7023:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        {
        // InternalGo.g:7023:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        // InternalGo.g:7024:6: (lv_expressionlist_2_0= ruleExpressionList )
        {
        // InternalGo.g:7024:6: (lv_expressionlist_2_0= ruleExpressionList )
        // InternalGo.g:7025:7: lv_expressionlist_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred121_InternalGo

    // $ANTLR start synpred137_InternalGo
    public final void synpred137_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_Key_0 = null;


        // InternalGo.g:7620:4: (this_Key_0= ruleKey otherlv_1= ':' )
        // InternalGo.g:7620:4: this_Key_0= ruleKey otherlv_1= ':'
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_32);
        this_Key_0=ruleKey();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,60,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalGo

    // $ANTLR start synpred138_InternalGo
    public final void synpred138_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_fieldn_1_0 = null;


        // InternalGo.g:7674:3: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) )
        // InternalGo.g:7674:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
        {
        // InternalGo.g:7674:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
        // InternalGo.g:7675:4: () ( (lv_fieldn_1_0= ruleFieldName ) )
        {
        // InternalGo.g:7675:4: ()
        // InternalGo.g:7676:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:7685:4: ( (lv_fieldn_1_0= ruleFieldName ) )
        // InternalGo.g:7686:5: (lv_fieldn_1_0= ruleFieldName )
        {
        // InternalGo.g:7686:5: (lv_fieldn_1_0= ruleFieldName )
        // InternalGo.g:7687:6: lv_fieldn_1_0= ruleFieldName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyAccess().getFieldnFieldNameParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_fieldn_1_0=ruleFieldName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred138_InternalGo

    // $ANTLR start synpred139_InternalGo
    public final void synpred139_InternalGo_fragment() throws RecognitionException {   
        EObject this_Expression_2 = null;


        // InternalGo.g:7706:3: (this_Expression_2= ruleExpression )
        // InternalGo.g:7706:3: this_Expression_2= ruleExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Expression_2=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred139_InternalGo

    // $ANTLR start synpred145_InternalGo
    public final void synpred145_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_1_0 = null;


        // InternalGo.g:7945:3: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) )
        // InternalGo.g:7945:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
        {
        // InternalGo.g:7945:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
        // InternalGo.g:7946:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )
        {
        // InternalGo.g:7946:4: ()
        // InternalGo.g:7947:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:7956:4: ( (lv_id_1_0= ruleIDENTIFIER ) )
        // InternalGo.g:7957:5: (lv_id_1_0= ruleIDENTIFIER )
        {
        // InternalGo.g:7957:5: (lv_id_1_0= ruleIDENTIFIER )
        // InternalGo.g:7958:6: lv_id_1_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandNameAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_1_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred145_InternalGo

    // Delegated rules

    public final boolean synpred61_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA12 dfa12 = new DFA12(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA96 dfa96 = new DFA96(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\26\1\4\10\uffff";
    static final String dfa_3s = "\2\73\10\uffff";
    static final String dfa_4s = "\2\uffff\1\2\1\3\1\4\1\6\1\7\1\10\1\1\1\5";
    static final String dfa_5s = "\12\uffff}>";
    static final String[] dfa_6s = {
            "\1\7\22\uffff\1\3\6\uffff\1\1\1\uffff\1\2\5\uffff\1\4\1\5\2\6",
            "\3\10\6\uffff\3\10\6\uffff\1\10\22\uffff\1\10\2\uffff\2\10\2\uffff\1\10\1\11\1\10\5\uffff\4\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "906:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_FunctionType_2= ruleFunctionType | this_InterfaceType_3= ruleInterfaceType | this_SliceType_4= ruleSliceType | this_MapType_5= ruleMapType | this_ChannelType_6= ruleChannelType | this_PointerType_7= rulePointerType )";
        }
    }
    static final String dfa_7s = "\56\uffff";
    static final String dfa_8s = "\1\13\55\uffff";
    static final String dfa_9s = "\1\4\12\0\43\uffff";
    static final String dfa_10s = "\1\117\12\0\43\uffff";
    static final String dfa_11s = "\13\uffff\1\2\41\uffff\1\1";
    static final String dfa_12s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\43\uffff}>";
    static final String[] dfa_13s = {
            "\1\2\2\13\2\uffff\2\13\2\uffff\3\13\6\uffff\1\12\1\13\21\uffff\1\5\2\uffff\1\13\1\1\2\13\1\3\1\13\1\4\5\13\1\6\1\7\1\10\1\11\6\13\1\uffff\7\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1625:3: ( (lv_result_1_0= ruleResult ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_1 = input.LA(1);

                         
                        int index19_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA19_2 = input.LA(1);

                         
                        int index19_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA19_3 = input.LA(1);

                         
                        int index19_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA19_4 = input.LA(1);

                         
                        int index19_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA19_5 = input.LA(1);

                         
                        int index19_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA19_6 = input.LA(1);

                         
                        int index19_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA19_7 = input.LA(1);

                         
                        int index19_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA19_8 = input.LA(1);

                         
                        int index19_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA19_9 = input.LA(1);

                         
                        int index19_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA19_10 = input.LA(1);

                         
                        int index19_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalGo()) ) {s = 45;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index19_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\14\uffff";
    static final String dfa_15s = "\1\4\1\0\12\uffff";
    static final String dfa_16s = "\1\73\1\0\12\uffff";
    static final String dfa_17s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_18s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\21\uffff\1\2\22\uffff\1\2\3\uffff\1\1\2\uffff\1\2\1\uffff\1\2\5\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "1662:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_1 = input.LA(1);

                         
                        int index20_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index20_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_20s = {
            "\1\2\21\uffff\1\2\22\uffff\1\2\3\uffff\1\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2237:5: (otherlv_1= '<-' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA28_1 = input.LA(1);

                         
                        int index28_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index28_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 28, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\23\uffff";
    static final String dfa_22s = "\2\uffff\1\3\20\uffff";
    static final String dfa_23s = "\1\4\1\uffff\1\4\1\uffff\1\4\13\uffff\1\0\2\uffff";
    static final String dfa_24s = "\1\115\1\uffff\1\117\1\uffff\1\4\13\uffff\1\0\2\uffff";
    static final String dfa_25s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\2\1\uffff\1\4\1\10";
    static final String dfa_26s = "\20\uffff\1\0\2\uffff}>";
    static final String[] dfa_27s = {
            "\1\2\2\3\6\uffff\3\3\6\uffff\1\3\22\uffff\1\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\11\1\3\3\uffff\4\3\1\uffff\1\4\1\5\1\6\1\7\1\12\1\uffff\1\10\1\14\1\15\1\16\3\1\3\uffff\1\13",
            "",
            "\3\3\4\uffff\5\3\6\uffff\1\3\22\uffff\1\3\2\uffff\2\3\1\uffff\2\3\1\uffff\5\3\1\uffff\4\3\1\17\5\3\1\uffff\15\3",
            "",
            "\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "2387:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_16 = input.LA(1);

                         
                        int index32_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 17;}

                        else if ( (synpred47_InternalGo()) ) {s = 18;}

                         
                        input.seek(index32_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\27\uffff";
    static final String dfa_29s = "\1\4\20\0\6\uffff";
    static final String dfa_30s = "\1\73\20\0\6\uffff";
    static final String dfa_31s = "\21\uffff\1\6\1\1\1\2\1\3\1\5\1\4";
    static final String dfa_32s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\6\uffff}>";
    static final String[] dfa_33s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\1\uffff\1\21\3\uffff\1\14\1\10\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "2824:2: ( ( (lv_inc_0_0= ruleIncDecStmt ) ) | ( (lv_ass_1_0= ruleAssignment ) ) | ( (lv_ss_2_0= ruleSendStmt ) ) | ( (lv_svd_3_0= ruleShortVarDecl ) ) | ( (lv_es_4_0= ruleExpressionStmt ) ) | ( (lv_empty_5_0= ruleEmptyStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_1 = input.LA(1);

                         
                        int index34_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA34_2 = input.LA(1);

                         
                        int index34_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA34_3 = input.LA(1);

                         
                        int index34_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA34_4 = input.LA(1);

                         
                        int index34_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA34_5 = input.LA(1);

                         
                        int index34_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA34_6 = input.LA(1);

                         
                        int index34_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA34_7 = input.LA(1);

                         
                        int index34_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA34_8 = input.LA(1);

                         
                        int index34_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA34_9 = input.LA(1);

                         
                        int index34_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred59_InternalGo()) ) {s = 22;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA34_10 = input.LA(1);

                         
                        int index34_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA34_11 = input.LA(1);

                         
                        int index34_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA34_12 = input.LA(1);

                         
                        int index34_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA34_13 = input.LA(1);

                         
                        int index34_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA34_14 = input.LA(1);

                         
                        int index34_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA34_15 = input.LA(1);

                         
                        int index34_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA34_16 = input.LA(1);

                         
                        int index34_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalGo()) ) {s = 18;}

                        else if ( (synpred57_InternalGo()) ) {s = 19;}

                        else if ( (synpred58_InternalGo()) ) {s = 20;}

                        else if ( (synpred60_InternalGo()) ) {s = 21;}

                         
                        input.seek(index34_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\45\uffff";
    static final String dfa_35s = "\1\21\44\uffff";
    static final String dfa_36s = "\1\4\20\0\24\uffff";
    static final String dfa_37s = "\1\117\20\0\24\uffff";
    static final String dfa_38s = "\21\uffff\1\2\22\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\24\uffff}>";
    static final String[] dfa_40s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\3\21\2\uffff\1\14\1\10\1\15\1\16\1\uffff\5\21\1\uffff\7\21\3\uffff\3\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "3011:3: ( (lv_expressionlist_2_0= ruleExpressionList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_1 = input.LA(1);

                         
                        int index35_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_2 = input.LA(1);

                         
                        int index35_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA35_3 = input.LA(1);

                         
                        int index35_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA35_4 = input.LA(1);

                         
                        int index35_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA35_5 = input.LA(1);

                         
                        int index35_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA35_6 = input.LA(1);

                         
                        int index35_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA35_7 = input.LA(1);

                         
                        int index35_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA35_8 = input.LA(1);

                         
                        int index35_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA35_9 = input.LA(1);

                         
                        int index35_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA35_10 = input.LA(1);

                         
                        int index35_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA35_11 = input.LA(1);

                         
                        int index35_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA35_12 = input.LA(1);

                         
                        int index35_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA35_13 = input.LA(1);

                         
                        int index35_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA35_14 = input.LA(1);

                         
                        int index35_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA35_15 = input.LA(1);

                         
                        int index35_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA35_16 = input.LA(1);

                         
                        int index35_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index35_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\4\20\0\2\uffff";
    static final String dfa_42s = "\1\73\20\0\2\uffff";
    static final String dfa_43s = "\21\uffff\1\1\1\2";
    static final String dfa_44s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\2\uffff}>";
    static final String[] dfa_45s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\1\uffff\1\21\3\uffff\1\14\1\10\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "3159:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_1 = input.LA(1);

                         
                        int index38_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA38_2 = input.LA(1);

                         
                        int index38_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA38_3 = input.LA(1);

                         
                        int index38_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA38_4 = input.LA(1);

                         
                        int index38_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA38_5 = input.LA(1);

                         
                        int index38_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA38_6 = input.LA(1);

                         
                        int index38_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA38_7 = input.LA(1);

                         
                        int index38_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA38_8 = input.LA(1);

                         
                        int index38_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA38_9 = input.LA(1);

                         
                        int index38_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA38_10 = input.LA(1);

                         
                        int index38_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA38_11 = input.LA(1);

                         
                        int index38_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA38_12 = input.LA(1);

                         
                        int index38_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA38_13 = input.LA(1);

                         
                        int index38_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA38_14 = input.LA(1);

                         
                        int index38_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA38_15 = input.LA(1);

                         
                        int index38_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA38_16 = input.LA(1);

                         
                        int index38_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index38_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\25\uffff";
    static final String dfa_47s = "\1\4\20\0\4\uffff";
    static final String dfa_48s = "\1\120\20\0\4\uffff";
    static final String dfa_49s = "\21\uffff\1\2\1\3\1\4\1\1";
    static final String dfa_50s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_51s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\1\23\1\21\3\uffff\1\14\1\10\1\15\1\16\24\uffff\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "3426:3: ( ( (lv_condition_2_0= ruleCondition ) ) | ( (lv_for_3_0= ruleForClause ) ) | ( (lv_range_4_0= ruleRangeClause ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_1 = input.LA(1);

                         
                        int index43_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_2 = input.LA(1);

                         
                        int index43_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_3 = input.LA(1);

                         
                        int index43_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_4 = input.LA(1);

                         
                        int index43_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_5 = input.LA(1);

                         
                        int index43_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA43_6 = input.LA(1);

                         
                        int index43_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA43_7 = input.LA(1);

                         
                        int index43_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA43_10 = input.LA(1);

                         
                        int index43_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA43_11 = input.LA(1);

                         
                        int index43_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA43_12 = input.LA(1);

                         
                        int index43_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA43_13 = input.LA(1);

                         
                        int index43_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA43_14 = input.LA(1);

                         
                        int index43_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA43_15 = input.LA(1);

                         
                        int index43_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA43_16 = input.LA(1);

                         
                        int index43_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalGo()) ) {s = 20;}

                        else if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (synpred71_InternalGo()) ) {s = 18;}

                         
                        input.seek(index43_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\46\uffff";
    static final String dfa_53s = "\1\14\45\uffff";
    static final String dfa_54s = "\1\4\12\0\33\uffff";
    static final String dfa_55s = "\1\117\12\0\33\uffff";
    static final String dfa_56s = "\13\uffff\1\1\1\2\31\uffff";
    static final String dfa_57s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\33\uffff}>";
    static final String[] dfa_58s = {
            "\1\1\2\14\6\uffff\3\14\6\uffff\1\11\1\13\21\uffff\1\4\2\uffff\1\14\1\12\1\14\1\uffff\1\2\1\uffff\1\3\3\14\2\uffff\1\5\1\6\1\7\1\10\1\uffff\5\14\1\uffff\7\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_52;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "3670:3: ( ( (lv_tp_1_0= ruleType ) )? otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_4 = input.LA(1);

                         
                        int index48_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_5 = input.LA(1);

                         
                        int index48_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA48_6 = input.LA(1);

                         
                        int index48_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA48_8 = input.LA(1);

                         
                        int index48_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA48_9 = input.LA(1);

                         
                        int index48_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\47\uffff";
    static final String dfa_60s = "\1\13\46\uffff";
    static final String dfa_61s = "\1\4\12\0\34\uffff";
    static final String dfa_62s = "\1\117\12\0\34\uffff";
    static final String dfa_63s = "\13\uffff\1\2\32\uffff\1\1";
    static final String dfa_64s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\34\uffff}>";
    static final String[] dfa_65s = {
            "\1\1\2\13\6\uffff\3\13\6\uffff\1\11\1\13\21\uffff\1\4\2\uffff\1\13\1\12\1\13\1\uffff\1\2\1\uffff\1\3\3\13\2\uffff\1\5\1\6\1\7\1\10\1\uffff\5\13\1\uffff\7\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "4104:3: ( (lv_tp2_1_0= ruleType ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA55_2 = input.LA(1);

                         
                        int index55_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA55_3 = input.LA(1);

                         
                        int index55_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA55_4 = input.LA(1);

                         
                        int index55_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA55_5 = input.LA(1);

                         
                        int index55_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA55_6 = input.LA(1);

                         
                        int index55_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA55_7 = input.LA(1);

                         
                        int index55_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA55_8 = input.LA(1);

                         
                        int index55_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA55_9 = input.LA(1);

                         
                        int index55_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA55_10 = input.LA(1);

                         
                        int index55_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index55_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_66s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\5\uffff\1\14\1\10\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "4343:2: ( ( () ( (lv_exp_1_0= ruleExpression ) ) otherlv_2= '++' ) | ( ( (lv_exp2_3_0= ruleExpression ) ) otherlv_4= '--' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_2 = input.LA(1);

                         
                        int index57_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA57_3 = input.LA(1);

                         
                        int index57_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA57_4 = input.LA(1);

                         
                        int index57_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA57_5 = input.LA(1);

                         
                        int index57_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA57_6 = input.LA(1);

                         
                        int index57_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA57_7 = input.LA(1);

                         
                        int index57_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA57_8 = input.LA(1);

                         
                        int index57_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA57_9 = input.LA(1);

                         
                        int index57_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA57_10 = input.LA(1);

                         
                        int index57_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA57_11 = input.LA(1);

                         
                        int index57_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA57_12 = input.LA(1);

                         
                        int index57_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA57_13 = input.LA(1);

                         
                        int index57_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA57_14 = input.LA(1);

                         
                        int index57_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA57_15 = input.LA(1);

                         
                        int index57_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA57_16 = input.LA(1);

                         
                        int index57_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index57_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_67s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\1\22\1\21\3\uffff\1\14\1\10\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "4594:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA58_2 = input.LA(1);

                         
                        int index58_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA58_3 = input.LA(1);

                         
                        int index58_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA58_4 = input.LA(1);

                         
                        int index58_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA58_5 = input.LA(1);

                         
                        int index58_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA58_6 = input.LA(1);

                         
                        int index58_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA58_7 = input.LA(1);

                         
                        int index58_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA58_8 = input.LA(1);

                         
                        int index58_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA58_9 = input.LA(1);

                         
                        int index58_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA58_10 = input.LA(1);

                         
                        int index58_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA58_11 = input.LA(1);

                         
                        int index58_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA58_12 = input.LA(1);

                         
                        int index58_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA58_13 = input.LA(1);

                         
                        int index58_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA58_14 = input.LA(1);

                         
                        int index58_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA58_15 = input.LA(1);

                         
                        int index58_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA58_16 = input.LA(1);

                         
                        int index58_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index58_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\1\4\17\0\3\uffff";
    static final String dfa_69s = "\1\73\17\0\3\uffff";
    static final String dfa_70s = "\20\uffff\1\1\1\uffff\1\2";
    static final String dfa_71s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\3\uffff}>";
    static final String[] dfa_72s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\1\uffff\1\20\3\uffff\1\14\1\10\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "4812:3: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_2 = input.LA(1);

                         
                        int index62_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_3 = input.LA(1);

                         
                        int index62_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA62_4 = input.LA(1);

                         
                        int index62_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA62_5 = input.LA(1);

                         
                        int index62_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA62_6 = input.LA(1);

                         
                        int index62_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA62_7 = input.LA(1);

                         
                        int index62_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA62_8 = input.LA(1);

                         
                        int index62_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA62_9 = input.LA(1);

                         
                        int index62_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA62_10 = input.LA(1);

                         
                        int index62_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA62_11 = input.LA(1);

                         
                        int index62_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA62_12 = input.LA(1);

                         
                        int index62_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA62_13 = input.LA(1);

                         
                        int index62_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA62_14 = input.LA(1);

                         
                        int index62_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA62_15 = input.LA(1);

                         
                        int index62_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index62_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "5246:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_1 = input.LA(1);

                         
                        int index67_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA67_11 = input.LA(1);

                         
                        int index67_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA67_12 = input.LA(1);

                         
                        int index67_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA67_13 = input.LA(1);

                         
                        int index67_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA67_14 = input.LA(1);

                         
                        int index67_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA67_15 = input.LA(1);

                         
                        int index67_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA67_16 = input.LA(1);

                         
                        int index67_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index67_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\24\uffff";
    static final String dfa_74s = "\1\4\20\0\3\uffff";
    static final String dfa_75s = "\1\73\20\0\3\uffff";
    static final String dfa_76s = "\21\uffff\1\1\1\3\1\2";
    static final String dfa_77s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff}>";
    static final String[] dfa_78s = {
            "\1\11\1\3\1\2\6\uffff\1\20\1\1\1\5\6\uffff\1\17\22\uffff\1\12\2\uffff\1\4\1\13\2\uffff\1\7\1\uffff\1\6\5\uffff\1\14\1\10\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "5324:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_2 = input.LA(1);

                         
                        int index69_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_3 = input.LA(1);

                         
                        int index69_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA69_4 = input.LA(1);

                         
                        int index69_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA69_5 = input.LA(1);

                         
                        int index69_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA69_6 = input.LA(1);

                         
                        int index69_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA69_7 = input.LA(1);

                         
                        int index69_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA69_8 = input.LA(1);

                         
                        int index69_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA69_9 = input.LA(1);

                         
                        int index69_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (synpred98_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA69_10 = input.LA(1);

                         
                        int index69_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA69_11 = input.LA(1);

                         
                        int index69_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA69_14 = input.LA(1);

                         
                        int index69_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA69_15 = input.LA(1);

                         
                        int index69_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA69_16 = input.LA(1);

                         
                        int index69_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\1\4\20\uffff\1\0\1\uffff";
    static final String dfa_80s = "\1\73\20\uffff\1\0\1\uffff";
    static final String dfa_81s = "\1\uffff\1\1\20\uffff\1\2";
    static final String dfa_82s = "\21\uffff\1\0\1\uffff}>";
    static final String[] dfa_83s = {
            "\3\1\6\uffff\3\1\6\uffff\1\1\22\uffff\1\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\21\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "5501:3: ( (lv_init_1_0= ruleInitStmt ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_17 = input.LA(1);

                         
                        int index70_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index70_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_84s = "\7\uffff";
    static final String dfa_85s = "\1\4\1\uffff\1\14\1\uffff\1\4\1\uffff\1\14";
    static final String dfa_86s = "\1\120\1\uffff\1\114\1\uffff\1\73\1\uffff\1\114";
    static final String dfa_87s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\2\1\uffff";
    static final String dfa_88s = "\7\uffff}>";
    static final String[] dfa_89s = {
            "\1\2\2\1\6\uffff\3\1\6\uffff\1\1\22\uffff\1\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\4\1\24\uffff\1\3",
            "",
            "\1\1\12\uffff\1\1\25\uffff\1\1\1\uffff\2\1\2\uffff\1\1\2\uffff\1\4\25\uffff\1\5",
            "",
            "\1\6\2\1\6\uffff\3\1\6\uffff\1\1\22\uffff\1\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\4\1",
            "",
            "\1\1\12\uffff\1\1\25\uffff\1\1\1\uffff\2\1\2\uffff\1\1\2\uffff\1\4\25\uffff\1\5"
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "5585:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_90s = "\22\uffff";
    static final String dfa_91s = "\1\4\5\uffff\12\0\2\uffff";
    static final String dfa_92s = "\1\73\5\uffff\12\0\2\uffff";
    static final String dfa_93s = "\1\uffff\1\1\16\uffff\1\2\1\3";
    static final String dfa_94s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff}>";
    static final String[] dfa_95s = {
            "\1\11\2\1\7\uffff\2\1\6\uffff\1\17\22\uffff\1\12\2\uffff\1\1\1\13\2\uffff\1\7\1\uffff\1\6\5\uffff\1\14\1\10\1\15\1\16",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "6107:2: ( ( () ( (lv_op_1_0= ruleOperand ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_con_3_0= ruleConversion ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_me_5_0= ruleMethodExpr ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_6 = input.LA(1);

                         
                        int index77_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_7 = input.LA(1);

                         
                        int index77_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_8 = input.LA(1);

                         
                        int index77_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_10 = input.LA(1);

                         
                        int index77_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_11 = input.LA(1);

                         
                        int index77_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA77_12 = input.LA(1);

                         
                        int index77_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA77_13 = input.LA(1);

                         
                        int index77_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA77_14 = input.LA(1);

                         
                        int index77_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA77_15 = input.LA(1);

                         
                        int index77_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index77_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\64\uffff";
    static final String dfa_97s = "\1\4\63\uffff";
    static final String dfa_98s = "\1\4\3\0\60\uffff";
    static final String dfa_99s = "\1\117\3\0\60\uffff";
    static final String dfa_100s = "\4\uffff\1\6\52\uffff\1\1\1\4\1\2\1\3\1\5";
    static final String dfa_101s = "\1\uffff\1\0\1\1\1\2\60\uffff}>";
    static final String[] dfa_102s = {
            "\3\4\4\uffff\5\4\6\uffff\2\4\21\uffff\1\4\2\uffff\1\4\1\3\1\4\1\1\1\2\21\4\1\uffff\11\4\1\uffff\3\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_96;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "6269:3: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalGo()) ) {s = 47;}

                        else if ( (synpred112_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_2 = input.LA(1);

                         
                        int index78_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 49;}

                        else if ( (synpred111_InternalGo()) ) {s = 50;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index78_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalGo()) ) {s = 51;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_103s = "\15\uffff";
    static final String dfa_104s = "\1\4\10\uffff\1\0\3\uffff";
    static final String dfa_105s = "\1\71\10\uffff\1\0\3\uffff";
    static final String dfa_106s = "\1\uffff\1\1\11\uffff\1\3\1\2";
    static final String dfa_107s = "\11\uffff\1\0\3\uffff}>";
    static final String[] dfa_108s = {
            "\1\11\2\1\7\uffff\2\1\31\uffff\1\1\2\uffff\1\1\1\13\2\uffff\1\1\1\uffff\1\1\6\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_103;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "6493:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_9 = input.LA(1);

                         
                        int index79_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalGo()) ) {s = 1;}

                        else if ( (synpred115_InternalGo()) ) {s = 12;}

                         
                        input.seek(index79_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\1\uffff\1\1\17\uffff\1\2";
    static final String[] dfa_110s = {
            "\1\11\2\1\6\uffff\3\1\6\uffff\1\17\22\uffff\1\12\2\uffff\1\1\1\13\2\uffff\1\7\1\uffff\1\6\5\uffff\1\14\1\10\1\15\1\16",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_109;
            this.special = dfa_94;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "7022:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_6 = input.LA(1);

                         
                        int index86_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_7 = input.LA(1);

                         
                        int index86_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_8 = input.LA(1);

                         
                        int index86_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_9 = input.LA(1);

                         
                        int index86_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA86_10 = input.LA(1);

                         
                        int index86_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA86_11 = input.LA(1);

                         
                        int index86_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA86_12 = input.LA(1);

                         
                        int index86_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA86_13 = input.LA(1);

                         
                        int index86_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA86_14 = input.LA(1);

                         
                        int index86_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA86_15 = input.LA(1);

                         
                        int index86_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index86_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_111s = "\1\4\21\0\2\uffff";
    static final String dfa_112s = "\1\73\21\0\2\uffff";
    static final String dfa_113s = "\22\uffff\1\1\1\2";
    static final String dfa_114s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff}>";
    static final String[] dfa_115s = {
            "\1\1\1\4\1\3\6\uffff\1\20\1\2\1\6\6\uffff\1\17\22\uffff\1\12\2\uffff\1\5\1\13\2\uffff\1\10\1\uffff\1\7\1\21\4\uffff\1\14\1\11\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "7619:3: (this_Key_0= ruleKey otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA96_2 = input.LA(1);

                         
                        int index96_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA96_3 = input.LA(1);

                         
                        int index96_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA96_4 = input.LA(1);

                         
                        int index96_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA96_5 = input.LA(1);

                         
                        int index96_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA96_6 = input.LA(1);

                         
                        int index96_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA96_7 = input.LA(1);

                         
                        int index96_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA96_8 = input.LA(1);

                         
                        int index96_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA96_9 = input.LA(1);

                         
                        int index96_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA96_10 = input.LA(1);

                         
                        int index96_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA96_11 = input.LA(1);

                         
                        int index96_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA96_12 = input.LA(1);

                         
                        int index96_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA96_13 = input.LA(1);

                         
                        int index96_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA96_14 = input.LA(1);

                         
                        int index96_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA96_15 = input.LA(1);

                         
                        int index96_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA96_16 = input.LA(1);

                         
                        int index96_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA96_17 = input.LA(1);

                         
                        int index96_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000020000000002L,0x0000000000020380L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000020000000002L,0x0000000000000380L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0F05220000400010L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0F0532000040E070L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0020000000400010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0030000000400010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000602L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0F05220000400012L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0FC5620000400010L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0FC5220000400010L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0F85220000400012L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0020000000000010L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0xEF3D32000040E070L,0x00000000000023FBL});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0xEF1D32000040E072L,0x00000000000023FBL});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0xEF1D32000040E070L,0x00000000000023FBL});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0F0532000040E072L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0F1532000040E070L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0020000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0F1D32000040E070L,0x0000000000010000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000200000000010L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0010400000000010L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0F05220000C00012L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0F1D32000040E070L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0F0D32000040E070L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0F0532000040C070L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0F1532000040E072L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0001A00000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0040400000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x1F0532000040E070L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0F0732000040E070L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0F0572000040E070L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00C0400000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0F2D32000040E070L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0060000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0F4D32000040E072L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000A00000008010L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000C00000008010L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000800000008010L});

}