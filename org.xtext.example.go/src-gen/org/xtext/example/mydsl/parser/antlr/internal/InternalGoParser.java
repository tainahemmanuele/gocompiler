package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_LETTER", "RULE_UNICODE_DIGIT", "RULE_DECIMAL_LIT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_DECIMALS", "RULE_EXPOENT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_ASSING_OP", "RULE_BINARY_OP", "RULE_UNARY_OP", "RULE_NEWLINE", "RULE_UNICODE_CHAR", "RULE_UNICODE_LETTER", "RULE_REL_OP", "RULE_ADD_OP", "RULE_MUL_OP", "RULE_DECIMAL_DIGIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'func'", "'package'", "'.'", "'i'", "'\\''", "'('", "')'", "'['", "']'", "'struct'", "'{'", "'}'", "','", "'*'", "'...'", "'interface'", "'map'", "'chan'", "'<-'", "':'", "'goto'", "'return'", "'break'", "'continue'", "'if'", "'else'", "'fallthrough'", "'select'", "'for'", "'defer'", "'const'", "'='", "'type'", "'var'", "'++'", "'--'", "':='", "'switch'", "'case'", "'default'", "'range'", "'import'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=24;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int RULE_BINARY_OP=16;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=32;
    public static final int RULE_INTERPRETED_STRING_LIT=14;
    public static final int RULE_UNICODE_VALUE=11;
    public static final int RULE_LITTLE_U_VALUE=27;
    public static final int RULE_ASSING_OP=15;
    public static final int RULE_HEX_BYTE_VALUE=31;
    public static final int RULE_OCTAL_BYTE_VALUE=30;
    public static final int RULE_MUL_OP=23;
    public static final int RULE_INT=33;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=35;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int RULE_EXPOENT=10;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=9;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_NEWLINE=18;
    public static final int RULE_BIG_U_VALUE=28;
    public static final int RULE_ESCAPED_CHAR=29;
    public static final int RULE_STRING=34;
    public static final int RULE_BYTE_VALUE=12;
    public static final int RULE_SL_COMMENT=36;
    public static final int T__39=39;
    public static final int RULE_UNICODE_LETTER=20;
    public static final int T__77=77;
    public static final int RULE_HEX_LIT=8;
    public static final int RULE_UNICODE_CHAR=19;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=22;
    public static final int RULE_OCTAL_DIGIT=25;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int RULE_UNICODE_DIGIT=5;
    public static final int RULE_WS=37;
    public static final int RULE_ANY_OTHER=38;
    public static final int RULE_OCTAL_LIT=7;
    public static final int RULE_LETTER=4;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=13;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=17;
    public static final int T__45=45;
    public static final int RULE_REL_OP=21;
    public static final int RULE_HEX_DIGIT=26;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int RULE_DECIMAL_LIT=6;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalGo.g:70:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalGo.g:70:46: (iv_ruleModel= ruleModel EOF )
            // InternalGo.g:71:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:77:1: ruleModel returns [EObject current=null] : ( (lv_greetings_0_0= ruleCompilation_initial ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_greetings_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( (lv_greetings_0_0= ruleCompilation_initial ) ) )
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            {
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            {
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            // InternalGo.g:86:4: lv_greetings_0_0= ruleCompilation_initial
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getGreetingsCompilation_initialParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_greetings_0_0=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"greetings",
              					lv_greetings_0_0,
              					"org.xtext.example.mydsl.Go.Compilation_initial");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleCompilation_initial"
    // InternalGo.g:106:1: entryRuleCompilation_initial returns [EObject current=null] : iv_ruleCompilation_initial= ruleCompilation_initial EOF ;
    public final EObject entryRuleCompilation_initial() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompilation_initial = null;


        try {
            // InternalGo.g:106:60: (iv_ruleCompilation_initial= ruleCompilation_initial EOF )
            // InternalGo.g:107:2: iv_ruleCompilation_initial= ruleCompilation_initial EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompilation_initialRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompilation_initial=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompilation_initial; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompilation_initial"


    // $ANTLR start "ruleCompilation_initial"
    // InternalGo.g:113:1: ruleCompilation_initial returns [EObject current=null] : ( () ( (lv_pack_1_0= rulePackageClause ) ) otherlv_2= ';' ( ( (lv_importdecl_3_0= ruleImportDecl ) ) otherlv_4= ';' )* ( ( (lv_toplevel_5_0= ruleTopLevelDecl ) ) otherlv_6= ';' )* ) ;
    public final EObject ruleCompilation_initial() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_pack_1_0 = null;

        EObject lv_importdecl_3_0 = null;

        EObject lv_toplevel_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:119:2: ( ( () ( (lv_pack_1_0= rulePackageClause ) ) otherlv_2= ';' ( ( (lv_importdecl_3_0= ruleImportDecl ) ) otherlv_4= ';' )* ( ( (lv_toplevel_5_0= ruleTopLevelDecl ) ) otherlv_6= ';' )* ) )
            // InternalGo.g:120:2: ( () ( (lv_pack_1_0= rulePackageClause ) ) otherlv_2= ';' ( ( (lv_importdecl_3_0= ruleImportDecl ) ) otherlv_4= ';' )* ( ( (lv_toplevel_5_0= ruleTopLevelDecl ) ) otherlv_6= ';' )* )
            {
            // InternalGo.g:120:2: ( () ( (lv_pack_1_0= rulePackageClause ) ) otherlv_2= ';' ( ( (lv_importdecl_3_0= ruleImportDecl ) ) otherlv_4= ';' )* ( ( (lv_toplevel_5_0= ruleTopLevelDecl ) ) otherlv_6= ';' )* )
            // InternalGo.g:121:3: () ( (lv_pack_1_0= rulePackageClause ) ) otherlv_2= ';' ( ( (lv_importdecl_3_0= ruleImportDecl ) ) otherlv_4= ';' )* ( ( (lv_toplevel_5_0= ruleTopLevelDecl ) ) otherlv_6= ';' )*
            {
            // InternalGo.g:121:3: ()
            // InternalGo.g:122:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCompilation_initialAccess().getCompilation_initialAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:131:3: ( (lv_pack_1_0= rulePackageClause ) )
            // InternalGo.g:132:4: (lv_pack_1_0= rulePackageClause )
            {
            // InternalGo.g:132:4: (lv_pack_1_0= rulePackageClause )
            // InternalGo.g:133:5: lv_pack_1_0= rulePackageClause
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompilation_initialAccess().getPackPackageClauseParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_pack_1_0=rulePackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
              					}
              					set(
              						current,
              						"pack",
              						lv_pack_1_0,
              						"org.xtext.example.mydsl.Go.PackageClause");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,39,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_2());
              		
            }
            // InternalGo.g:154:3: ( ( (lv_importdecl_3_0= ruleImportDecl ) ) otherlv_4= ';' )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==81) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalGo.g:155:4: ( (lv_importdecl_3_0= ruleImportDecl ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:155:4: ( (lv_importdecl_3_0= ruleImportDecl ) )
            	    // InternalGo.g:156:5: (lv_importdecl_3_0= ruleImportDecl )
            	    {
            	    // InternalGo.g:156:5: (lv_importdecl_3_0= ruleImportDecl )
            	    // InternalGo.g:157:6: lv_importdecl_3_0= ruleImportDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getImportdeclImportDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_importdecl_3_0=ruleImportDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
            	      						}
            	      						add(
            	      							current,
            	      							"importdecl",
            	      							lv_importdecl_3_0,
            	      							"org.xtext.example.mydsl.Go.ImportDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,39,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalGo.g:179:3: ( ( (lv_toplevel_5_0= ruleTopLevelDecl ) ) otherlv_6= ';' )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==40||LA2_0==70||(LA2_0>=72 && LA2_0<=73)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalGo.g:180:4: ( (lv_toplevel_5_0= ruleTopLevelDecl ) ) otherlv_6= ';'
            	    {
            	    // InternalGo.g:180:4: ( (lv_toplevel_5_0= ruleTopLevelDecl ) )
            	    // InternalGo.g:181:5: (lv_toplevel_5_0= ruleTopLevelDecl )
            	    {
            	    // InternalGo.g:181:5: (lv_toplevel_5_0= ruleTopLevelDecl )
            	    // InternalGo.g:182:6: lv_toplevel_5_0= ruleTopLevelDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getToplevelTopLevelDeclParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_toplevel_5_0=ruleTopLevelDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
            	      						}
            	      						add(
            	      							current,
            	      							"toplevel",
            	      							lv_toplevel_5_0,
            	      							"org.xtext.example.mydsl.Go.TopLevelDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,39,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_4_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompilation_initial"


    // $ANTLR start "entryRuleTopLevelDecl"
    // InternalGo.g:208:1: entryRuleTopLevelDecl returns [EObject current=null] : iv_ruleTopLevelDecl= ruleTopLevelDecl EOF ;
    public final EObject entryRuleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelDecl = null;


        try {
            // InternalGo.g:208:53: (iv_ruleTopLevelDecl= ruleTopLevelDecl EOF )
            // InternalGo.g:209:2: iv_ruleTopLevelDecl= ruleTopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTopLevelDecl=ruleTopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelDecl"


    // $ANTLR start "ruleTopLevelDecl"
    // InternalGo.g:215:1: ruleTopLevelDecl returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl ) ;
    public final EObject ruleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_FunctionDecl_1 = null;

        EObject this_MethodDecl_2 = null;



        	enterRule();

        try {
            // InternalGo.g:221:2: ( (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl ) )
            // InternalGo.g:222:2: (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl )
            {
            // InternalGo.g:222:2: (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl )
            int alt3=3;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==70||(LA3_0>=72 && LA3_0<=73)) ) {
                alt3=1;
            }
            else if ( (LA3_0==40) ) {
                int LA3_2 = input.LA(2);

                if ( (LA3_2==RULE_LETTER) ) {
                    alt3=2;
                }
                else if ( (LA3_2==45) ) {
                    alt3=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalGo.g:223:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:235:3: this_FunctionDecl_1= ruleFunctionDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFunctionDeclParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDecl_1=ruleFunctionDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionDecl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:247:3: this_MethodDecl_2= ruleMethodDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMethodDeclParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MethodDecl_2=ruleMethodDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDecl_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelDecl"


    // $ANTLR start "entryRuleMethodDecl"
    // InternalGo.g:262:1: entryRuleMethodDecl returns [EObject current=null] : iv_ruleMethodDecl= ruleMethodDecl EOF ;
    public final EObject entryRuleMethodDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDecl = null;


        try {
            // InternalGo.g:262:51: (iv_ruleMethodDecl= ruleMethodDecl EOF )
            // InternalGo.g:263:2: iv_ruleMethodDecl= ruleMethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodDecl=ruleMethodDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDecl"


    // $ANTLR start "ruleMethodDecl"
    // InternalGo.g:269:1: ruleMethodDecl returns [EObject current=null] : (otherlv_0= 'func' this_Receiver_1= ruleReceiver ruleMethodName ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleMethodDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Receiver_1 = null;

        EObject lv_signature_3_0 = null;

        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:275:2: ( (otherlv_0= 'func' this_Receiver_1= ruleReceiver ruleMethodName ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:276:2: (otherlv_0= 'func' this_Receiver_1= ruleReceiver ruleMethodName ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:276:2: (otherlv_0= 'func' this_Receiver_1= ruleReceiver ruleMethodName ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            // InternalGo.g:277:3: otherlv_0= 'func' this_Receiver_1= ruleReceiver ruleMethodName ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )?
            {
            otherlv_0=(Token)match(input,40,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMethodDeclAccess().getFuncKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_7);
            this_Receiver_1=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Receiver_1;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMethodDeclAccess().getMethodNameParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_8);
            ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:302:3: ( (lv_signature_3_0= ruleSignature ) )
            // InternalGo.g:303:4: (lv_signature_3_0= ruleSignature )
            {
            // InternalGo.g:303:4: (lv_signature_3_0= ruleSignature )
            // InternalGo.g:304:5: lv_signature_3_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_signature_3_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					add(
              						current,
              						"signature",
              						lv_signature_3_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:321:3: ( (lv_body_4_0= ruleFunctionBody ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==50) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalGo.g:322:4: (lv_body_4_0= ruleFunctionBody )
                    {
                    // InternalGo.g:322:4: (lv_body_4_0= ruleFunctionBody )
                    // InternalGo.g:323:5: lv_body_4_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclAccess().getBodyFunctionBodyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_4_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_4_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDecl"


    // $ANTLR start "entryRuleReceiver"
    // InternalGo.g:344:1: entryRuleReceiver returns [EObject current=null] : iv_ruleReceiver= ruleReceiver EOF ;
    public final EObject entryRuleReceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiver = null;


        try {
            // InternalGo.g:344:49: (iv_ruleReceiver= ruleReceiver EOF )
            // InternalGo.g:345:2: iv_ruleReceiver= ruleReceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiver=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiver"


    // $ANTLR start "ruleReceiver"
    // InternalGo.g:351:1: ruleReceiver returns [EObject current=null] : this_Parameters_0= ruleParameters ;
    public final EObject ruleReceiver() throws RecognitionException {
        EObject current = null;

        EObject this_Parameters_0 = null;



        	enterRule();

        try {
            // InternalGo.g:357:2: (this_Parameters_0= ruleParameters )
            // InternalGo.g:358:2: this_Parameters_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Parameters_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Parameters_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiver"


    // $ANTLR start "entryRuleFunctionName"
    // InternalGo.g:372:1: entryRuleFunctionName returns [String current=null] : iv_ruleFunctionName= ruleFunctionName EOF ;
    public final String entryRuleFunctionName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFunctionName = null;


        try {
            // InternalGo.g:372:52: (iv_ruleFunctionName= ruleFunctionName EOF )
            // InternalGo.g:373:2: iv_ruleFunctionName= ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionName=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalGo.g:379:1: ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFunctionName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:385:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:386:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFunctionNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleFunctionDecl"
    // InternalGo.g:399:1: entryRuleFunctionDecl returns [EObject current=null] : iv_ruleFunctionDecl= ruleFunctionDecl EOF ;
    public final EObject entryRuleFunctionDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDecl = null;


        try {
            // InternalGo.g:399:53: (iv_ruleFunctionDecl= ruleFunctionDecl EOF )
            // InternalGo.g:400:2: iv_ruleFunctionDecl= ruleFunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDecl=ruleFunctionDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDecl"


    // $ANTLR start "ruleFunctionDecl"
    // InternalGo.g:406:1: ruleFunctionDecl returns [EObject current=null] : (otherlv_0= 'func' ruleFunctionName ( (lv_signature_2_0= ruleSignature ) ) ( (lv_body_3_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleFunctionDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_signature_2_0 = null;

        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:412:2: ( (otherlv_0= 'func' ruleFunctionName ( (lv_signature_2_0= ruleSignature ) ) ( (lv_body_3_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:413:2: (otherlv_0= 'func' ruleFunctionName ( (lv_signature_2_0= ruleSignature ) ) ( (lv_body_3_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:413:2: (otherlv_0= 'func' ruleFunctionName ( (lv_signature_2_0= ruleSignature ) ) ( (lv_body_3_0= ruleFunctionBody ) )? )
            // InternalGo.g:414:3: otherlv_0= 'func' ruleFunctionName ( (lv_signature_2_0= ruleSignature ) ) ( (lv_body_3_0= ruleFunctionBody ) )?
            {
            otherlv_0=(Token)match(input,40,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionDeclAccess().getFuncKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_8);
            ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:428:3: ( (lv_signature_2_0= ruleSignature ) )
            // InternalGo.g:429:4: (lv_signature_2_0= ruleSignature )
            {
            // InternalGo.g:429:4: (lv_signature_2_0= ruleSignature )
            // InternalGo.g:430:5: lv_signature_2_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_signature_2_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
              					}
              					add(
              						current,
              						"signature",
              						lv_signature_2_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:447:3: ( (lv_body_3_0= ruleFunctionBody ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==50) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalGo.g:448:4: (lv_body_3_0= ruleFunctionBody )
                    {
                    // InternalGo.g:448:4: (lv_body_3_0= ruleFunctionBody )
                    // InternalGo.g:449:5: lv_body_3_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionDeclAccess().getBodyFunctionBodyParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_3_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_3_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDecl"


    // $ANTLR start "entryRulePackageClause"
    // InternalGo.g:470:1: entryRulePackageClause returns [EObject current=null] : iv_rulePackageClause= rulePackageClause EOF ;
    public final EObject entryRulePackageClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageClause = null;


        try {
            // InternalGo.g:470:54: (iv_rulePackageClause= rulePackageClause EOF )
            // InternalGo.g:471:2: iv_rulePackageClause= rulePackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageClause=rulePackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageClause"


    // $ANTLR start "rulePackageClause"
    // InternalGo.g:477:1: rulePackageClause returns [EObject current=null] : (otherlv_0= 'package' ( (lv_pack_1_0= rulePackageName ) ) ) ;
    public final EObject rulePackageClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_pack_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:483:2: ( (otherlv_0= 'package' ( (lv_pack_1_0= rulePackageName ) ) ) )
            // InternalGo.g:484:2: (otherlv_0= 'package' ( (lv_pack_1_0= rulePackageName ) ) )
            {
            // InternalGo.g:484:2: (otherlv_0= 'package' ( (lv_pack_1_0= rulePackageName ) ) )
            // InternalGo.g:485:3: otherlv_0= 'package' ( (lv_pack_1_0= rulePackageName ) )
            {
            otherlv_0=(Token)match(input,41,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            // InternalGo.g:489:3: ( (lv_pack_1_0= rulePackageName ) )
            // InternalGo.g:490:4: (lv_pack_1_0= rulePackageName )
            {
            // InternalGo.g:490:4: (lv_pack_1_0= rulePackageName )
            // InternalGo.g:491:5: lv_pack_1_0= rulePackageName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPackageClauseAccess().getPackPackageNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_pack_1_0=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPackageClauseRule());
              					}
              					set(
              						current,
              						"pack",
              						lv_pack_1_0,
              						"org.xtext.example.mydsl.Go.PackageName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageClause"


    // $ANTLR start "entryRuleIDENTIFIER"
    // InternalGo.g:512:1: entryRuleIDENTIFIER returns [String current=null] : iv_ruleIDENTIFIER= ruleIDENTIFIER EOF ;
    public final String entryRuleIDENTIFIER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIDENTIFIER = null;


        try {
            // InternalGo.g:512:50: (iv_ruleIDENTIFIER= ruleIDENTIFIER EOF )
            // InternalGo.g:513:2: iv_ruleIDENTIFIER= ruleIDENTIFIER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDENTIFIERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIDENTIFIER=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIDENTIFIER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIDENTIFIER"


    // $ANTLR start "ruleIDENTIFIER"
    // InternalGo.g:519:1: ruleIDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* ) ;
    public final AntlrDatatypeRuleToken ruleIDENTIFIER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LETTER_0=null;
        Token this_LETTER_1=null;
        Token this_UNICODE_DIGIT_2=null;


        	enterRule();

        try {
            // InternalGo.g:525:2: ( (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* ) )
            // InternalGo.g:526:2: (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* )
            {
            // InternalGo.g:526:2: (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* )
            // InternalGo.g:527:3: this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )*
            {
            this_LETTER_0=(Token)match(input,RULE_LETTER,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_LETTER_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_LETTER_0, grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_0());
              		
            }
            // InternalGo.g:534:3: (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )*
            loop6:
            do {
                int alt6=3;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==RULE_LETTER) ) {
                    int LA6_2 = input.LA(2);

                    if ( (synpred7_InternalGo()) ) {
                        alt6=1;
                    }


                }
                else if ( (LA6_0==RULE_UNICODE_DIGIT) ) {
                    alt6=2;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalGo.g:535:4: this_LETTER_1= RULE_LETTER
            	    {
            	    this_LETTER_1=(Token)match(input,RULE_LETTER,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_LETTER_1);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_LETTER_1, grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_1_0());
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // InternalGo.g:543:4: this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT
            	    {
            	    this_UNICODE_DIGIT_2=(Token)match(input,RULE_UNICODE_DIGIT,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_UNICODE_DIGIT_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_UNICODE_DIGIT_2, grammarAccess.getIDENTIFIERAccess().getUNICODE_DIGITTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIDENTIFIER"


    // $ANTLR start "entryRuleINT_LIT"
    // InternalGo.g:555:1: entryRuleINT_LIT returns [String current=null] : iv_ruleINT_LIT= ruleINT_LIT EOF ;
    public final String entryRuleINT_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINT_LIT = null;


        try {
            // InternalGo.g:555:47: (iv_ruleINT_LIT= ruleINT_LIT EOF )
            // InternalGo.g:556:2: iv_ruleINT_LIT= ruleINT_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINT_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINT_LIT=ruleINT_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINT_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINT_LIT"


    // $ANTLR start "ruleINT_LIT"
    // InternalGo.g:562:1: ruleINT_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DECIMAL_LIT_0= RULE_DECIMAL_LIT | this_OCTAL_LIT_1= RULE_OCTAL_LIT | this_HEX_LIT_2= RULE_HEX_LIT ) ;
    public final AntlrDatatypeRuleToken ruleINT_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMAL_LIT_0=null;
        Token this_OCTAL_LIT_1=null;
        Token this_HEX_LIT_2=null;


        	enterRule();

        try {
            // InternalGo.g:568:2: ( (this_DECIMAL_LIT_0= RULE_DECIMAL_LIT | this_OCTAL_LIT_1= RULE_OCTAL_LIT | this_HEX_LIT_2= RULE_HEX_LIT ) )
            // InternalGo.g:569:2: (this_DECIMAL_LIT_0= RULE_DECIMAL_LIT | this_OCTAL_LIT_1= RULE_OCTAL_LIT | this_HEX_LIT_2= RULE_HEX_LIT )
            {
            // InternalGo.g:569:2: (this_DECIMAL_LIT_0= RULE_DECIMAL_LIT | this_OCTAL_LIT_1= RULE_OCTAL_LIT | this_HEX_LIT_2= RULE_HEX_LIT )
            int alt7=3;
            switch ( input.LA(1) ) {
            case RULE_DECIMAL_LIT:
                {
                alt7=1;
                }
                break;
            case RULE_OCTAL_LIT:
                {
                alt7=2;
                }
                break;
            case RULE_HEX_LIT:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalGo.g:570:3: this_DECIMAL_LIT_0= RULE_DECIMAL_LIT
                    {
                    this_DECIMAL_LIT_0=(Token)match(input,RULE_DECIMAL_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECIMAL_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_DECIMAL_LIT_0, grammarAccess.getINT_LITAccess().getDECIMAL_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:578:3: this_OCTAL_LIT_1= RULE_OCTAL_LIT
                    {
                    this_OCTAL_LIT_1=(Token)match(input,RULE_OCTAL_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_OCTAL_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_OCTAL_LIT_1, grammarAccess.getINT_LITAccess().getOCTAL_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:586:3: this_HEX_LIT_2= RULE_HEX_LIT
                    {
                    this_HEX_LIT_2=(Token)match(input,RULE_HEX_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_LIT_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_LIT_2, grammarAccess.getINT_LITAccess().getHEX_LITTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINT_LIT"


    // $ANTLR start "entryRuleFLOAT_LIT"
    // InternalGo.g:597:1: entryRuleFLOAT_LIT returns [String current=null] : iv_ruleFLOAT_LIT= ruleFLOAT_LIT EOF ;
    public final String entryRuleFLOAT_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFLOAT_LIT = null;


        try {
            // InternalGo.g:597:49: (iv_ruleFLOAT_LIT= ruleFLOAT_LIT EOF )
            // InternalGo.g:598:2: iv_ruleFLOAT_LIT= ruleFLOAT_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFLOAT_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFLOAT_LIT=ruleFLOAT_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFLOAT_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFLOAT_LIT"


    // $ANTLR start "ruleFLOAT_LIT"
    // InternalGo.g:604:1: ruleFLOAT_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) ) ;
    public final AntlrDatatypeRuleToken ruleFLOAT_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMALS_0=null;
        Token kw=null;
        Token this_DECIMALS_2=null;
        Token this_EXPOENT_3=null;
        Token this_DECIMALS_4=null;
        Token this_EXPOENT_5=null;
        Token this_DECIMALS_7=null;
        Token this_EXPOENT_8=null;


        	enterRule();

        try {
            // InternalGo.g:610:2: ( ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) ) )
            // InternalGo.g:611:2: ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) )
            {
            // InternalGo.g:611:2: ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) )
            int alt11=3;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_DECIMALS) ) {
                int LA11_1 = input.LA(2);

                if ( (LA11_1==42) ) {
                    alt11=1;
                }
                else if ( (LA11_1==RULE_EXPOENT) ) {
                    alt11=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA11_0==42) ) {
                alt11=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalGo.g:612:3: (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? )
                    {
                    // InternalGo.g:612:3: (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? )
                    // InternalGo.g:613:4: this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )?
                    {
                    this_DECIMALS_0=(Token)match(input,RULE_DECIMALS,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_0, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_0());
                      			
                    }
                    kw=(Token)match(input,42,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_0_1());
                      			
                    }
                    // InternalGo.g:625:4: (this_DECIMALS_2= RULE_DECIMALS )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==RULE_DECIMALS) ) {
                        int LA8_1 = input.LA(2);

                        if ( (synpred11_InternalGo()) ) {
                            alt8=1;
                        }
                    }
                    switch (alt8) {
                        case 1 :
                            // InternalGo.g:626:5: this_DECIMALS_2= RULE_DECIMALS
                            {
                            this_DECIMALS_2=(Token)match(input,RULE_DECIMALS,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMALS_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMALS_2, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_2());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:634:4: (this_EXPOENT_3= RULE_EXPOENT )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==RULE_EXPOENT) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalGo.g:635:5: this_EXPOENT_3= RULE_EXPOENT
                            {
                            this_EXPOENT_3=(Token)match(input,RULE_EXPOENT,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXPOENT_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXPOENT_3, grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_0_3());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:645:3: (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT )
                    {
                    // InternalGo.g:645:3: (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT )
                    // InternalGo.g:646:4: this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT
                    {
                    this_DECIMALS_4=(Token)match(input,RULE_DECIMALS,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_4, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_1_0());
                      			
                    }
                    this_EXPOENT_5=(Token)match(input,RULE_EXPOENT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_EXPOENT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_EXPOENT_5, grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:662:3: (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? )
                    {
                    // InternalGo.g:662:3: (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? )
                    // InternalGo.g:663:4: kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )?
                    {
                    kw=(Token)match(input,42,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_DECIMALS_7=(Token)match(input,RULE_DECIMALS,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_7, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_2_1());
                      			
                    }
                    // InternalGo.g:675:4: (this_EXPOENT_8= RULE_EXPOENT )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==RULE_EXPOENT) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // InternalGo.g:676:5: this_EXPOENT_8= RULE_EXPOENT
                            {
                            this_EXPOENT_8=(Token)match(input,RULE_EXPOENT,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXPOENT_8);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXPOENT_8, grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFLOAT_LIT"


    // $ANTLR start "entryRuleIMAGINARY_LIT"
    // InternalGo.g:689:1: entryRuleIMAGINARY_LIT returns [String current=null] : iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF ;
    public final String entryRuleIMAGINARY_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIMAGINARY_LIT = null;


        try {
            // InternalGo.g:689:53: (iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF )
            // InternalGo.g:690:2: iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIMAGINARY_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIMAGINARY_LIT=ruleIMAGINARY_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIMAGINARY_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIMAGINARY_LIT"


    // $ANTLR start "ruleIMAGINARY_LIT"
    // InternalGo.g:696:1: ruleIMAGINARY_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' ) ;
    public final AntlrDatatypeRuleToken ruleIMAGINARY_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMALS_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_FLOAT_LIT_1 = null;



        	enterRule();

        try {
            // InternalGo.g:702:2: ( ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' ) )
            // InternalGo.g:703:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' )
            {
            // InternalGo.g:703:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' )
            // InternalGo.g:704:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i'
            {
            // InternalGo.g:704:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_DECIMALS) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==RULE_EXPOENT||LA12_1==42) ) {
                    alt12=2;
                }
                else if ( (LA12_1==43) ) {
                    alt12=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA12_0==42) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalGo.g:705:4: this_DECIMALS_0= RULE_DECIMALS
                    {
                    this_DECIMALS_0=(Token)match(input,RULE_DECIMALS,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_0, grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:713:4: this_FLOAT_LIT_1= ruleFLOAT_LIT
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_15);
                    this_FLOAT_LIT_1=ruleFLOAT_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_FLOAT_LIT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getIMAGINARY_LITAccess().getIKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIMAGINARY_LIT"


    // $ANTLR start "entryRuleRUNE_LIT"
    // InternalGo.g:733:1: entryRuleRUNE_LIT returns [String current=null] : iv_ruleRUNE_LIT= ruleRUNE_LIT EOF ;
    public final String entryRuleRUNE_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRUNE_LIT = null;


        try {
            // InternalGo.g:733:48: (iv_ruleRUNE_LIT= ruleRUNE_LIT EOF )
            // InternalGo.g:734:2: iv_ruleRUNE_LIT= ruleRUNE_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRUNE_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRUNE_LIT=ruleRUNE_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRUNE_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRUNE_LIT"


    // $ANTLR start "ruleRUNE_LIT"
    // InternalGo.g:740:1: ruleRUNE_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) ;
    public final AntlrDatatypeRuleToken ruleRUNE_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_UNICODE_VALUE_1=null;
        Token this_BYTE_VALUE_2=null;


        	enterRule();

        try {
            // InternalGo.g:746:2: ( (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) )
            // InternalGo.g:747:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            {
            // InternalGo.g:747:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            // InternalGo.g:748:3: kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\''
            {
            kw=(Token)match(input,44,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_0());
              		
            }
            // InternalGo.g:753:3: (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_UNICODE_VALUE) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_BYTE_VALUE) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalGo.g:754:4: this_UNICODE_VALUE_1= RULE_UNICODE_VALUE
                    {
                    this_UNICODE_VALUE_1=(Token)match(input,RULE_UNICODE_VALUE,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UNICODE_VALUE_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UNICODE_VALUE_1, grammarAccess.getRUNE_LITAccess().getUNICODE_VALUETerminalRuleCall_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:762:4: this_BYTE_VALUE_2= RULE_BYTE_VALUE
                    {
                    this_BYTE_VALUE_2=(Token)match(input,RULE_BYTE_VALUE,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BYTE_VALUE_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BYTE_VALUE_2, grammarAccess.getRUNE_LITAccess().getBYTE_VALUETerminalRuleCall_1_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRUNE_LIT"


    // $ANTLR start "entryRuleSTRING_LIT"
    // InternalGo.g:779:1: entryRuleSTRING_LIT returns [String current=null] : iv_ruleSTRING_LIT= ruleSTRING_LIT EOF ;
    public final String entryRuleSTRING_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSTRING_LIT = null;


        try {
            // InternalGo.g:779:50: (iv_ruleSTRING_LIT= ruleSTRING_LIT EOF )
            // InternalGo.g:780:2: iv_ruleSTRING_LIT= ruleSTRING_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSTRING_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSTRING_LIT=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSTRING_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_LIT"


    // $ANTLR start "ruleSTRING_LIT"
    // InternalGo.g:786:1: ruleSTRING_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) ;
    public final AntlrDatatypeRuleToken ruleSTRING_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RAW_STRING_LIT_0=null;
        Token this_INTERPRETED_STRING_LIT_1=null;


        	enterRule();

        try {
            // InternalGo.g:792:2: ( (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) )
            // InternalGo.g:793:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            {
            // InternalGo.g:793:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_RAW_STRING_LIT) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_INTERPRETED_STRING_LIT) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalGo.g:794:3: this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT
                    {
                    this_RAW_STRING_LIT_0=(Token)match(input,RULE_RAW_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RAW_STRING_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RAW_STRING_LIT_0, grammarAccess.getSTRING_LITAccess().getRAW_STRING_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:802:3: this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT
                    {
                    this_INTERPRETED_STRING_LIT_1=(Token)match(input,RULE_INTERPRETED_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTERPRETED_STRING_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INTERPRETED_STRING_LIT_1, grammarAccess.getSTRING_LITAccess().getINTERPRETED_STRING_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_LIT"


    // $ANTLR start "entryRuleType"
    // InternalGo.g:813:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalGo.g:813:45: (iv_ruleType= ruleType EOF )
            // InternalGo.g:814:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalGo.g:820:1: ruleType returns [EObject current=null] : ( ( () ruleTypeName ) | this_TypeLit_2= ruleTypeLit | (otherlv_3= '(' this_Type_4= ruleType otherlv_5= ')' ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_TypeLit_2 = null;

        EObject this_Type_4 = null;



        	enterRule();

        try {
            // InternalGo.g:826:2: ( ( ( () ruleTypeName ) | this_TypeLit_2= ruleTypeLit | (otherlv_3= '(' this_Type_4= ruleType otherlv_5= ')' ) ) )
            // InternalGo.g:827:2: ( ( () ruleTypeName ) | this_TypeLit_2= ruleTypeLit | (otherlv_3= '(' this_Type_4= ruleType otherlv_5= ')' ) )
            {
            // InternalGo.g:827:2: ( ( () ruleTypeName ) | this_TypeLit_2= ruleTypeLit | (otherlv_3= '(' this_Type_4= ruleType otherlv_5= ')' ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                alt15=1;
                }
                break;
            case 40:
            case 47:
            case 49:
            case 53:
            case 55:
            case 56:
            case 57:
            case 58:
                {
                alt15=2;
                }
                break;
            case 45:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalGo.g:828:3: ( () ruleTypeName )
                    {
                    // InternalGo.g:828:3: ( () ruleTypeName )
                    // InternalGo.g:829:4: () ruleTypeName
                    {
                    // InternalGo.g:829:4: ()
                    // InternalGo.g:830:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeAccess().getTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:851:3: this_TypeLit_2= ruleTypeLit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeAccess().getTypeLitParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeLit_2=ruleTypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeLit_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:863:3: (otherlv_3= '(' this_Type_4= ruleType otherlv_5= ')' )
                    {
                    // InternalGo.g:863:3: (otherlv_3= '(' this_Type_4= ruleType otherlv_5= ')' )
                    // InternalGo.g:864:4: otherlv_3= '(' this_Type_4= ruleType otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_19);
                    this_Type_4=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Type_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleTypeName"
    // InternalGo.g:888:1: entryRuleTypeName returns [String current=null] : iv_ruleTypeName= ruleTypeName EOF ;
    public final String entryRuleTypeName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeName = null;


        try {
            // InternalGo.g:888:48: (iv_ruleTypeName= ruleTypeName EOF )
            // InternalGo.g:889:2: iv_ruleTypeName= ruleTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeName=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeName"


    // $ANTLR start "ruleTypeName"
    // InternalGo.g:895:1: ruleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) ;
    public final AntlrDatatypeRuleToken ruleTypeName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;

        AntlrDatatypeRuleToken this_QualifiedIdent_1 = null;



        	enterRule();

        try {
            // InternalGo.g:901:2: ( (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) )
            // InternalGo.g:902:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            {
            // InternalGo.g:902:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            int alt16=2;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    // InternalGo.g:903:3: this_IDENTIFIER_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IDENTIFIER_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IDENTIFIER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:914:3: this_QualifiedIdent_1= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedIdent_1=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QualifiedIdent_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeName"


    // $ANTLR start "entryRuleQualifiedIdent"
    // InternalGo.g:928:1: entryRuleQualifiedIdent returns [String current=null] : iv_ruleQualifiedIdent= ruleQualifiedIdent EOF ;
    public final String entryRuleQualifiedIdent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedIdent = null;


        try {
            // InternalGo.g:928:54: (iv_ruleQualifiedIdent= ruleQualifiedIdent EOF )
            // InternalGo.g:929:2: iv_ruleQualifiedIdent= ruleQualifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedIdent=ruleQualifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedIdent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedIdent"


    // $ANTLR start "ruleQualifiedIdent"
    // InternalGo.g:935:1: ruleQualifiedIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedIdent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_PackageName_0 = null;

        AntlrDatatypeRuleToken this_IDENTIFIER_2 = null;



        	enterRule();

        try {
            // InternalGo.g:941:2: ( (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER ) )
            // InternalGo.g:942:2: (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER )
            {
            // InternalGo.g:942:2: (this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER )
            // InternalGo.g:943:3: this_PackageName_0= rulePackageName kw= '.' this_IDENTIFIER_2= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_8);
            this_PackageName_0=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PackageName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,42,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_2=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedIdent"


    // $ANTLR start "entryRulePackageName"
    // InternalGo.g:972:1: entryRulePackageName returns [String current=null] : iv_rulePackageName= rulePackageName EOF ;
    public final String entryRulePackageName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePackageName = null;


        try {
            // InternalGo.g:972:51: (iv_rulePackageName= rulePackageName EOF )
            // InternalGo.g:973:2: iv_rulePackageName= rulePackageName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageName=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageName"


    // $ANTLR start "rulePackageName"
    // InternalGo.g:979:1: rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken rulePackageName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:985:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:986:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getPackageNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageName"


    // $ANTLR start "entryRuleTypeLit"
    // InternalGo.g:999:1: entryRuleTypeLit returns [EObject current=null] : iv_ruleTypeLit= ruleTypeLit EOF ;
    public final EObject entryRuleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLit = null;


        try {
            // InternalGo.g:999:48: (iv_ruleTypeLit= ruleTypeLit EOF )
            // InternalGo.g:1000:2: iv_ruleTypeLit= ruleTypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeLit=ruleTypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLit"


    // $ANTLR start "ruleTypeLit"
    // InternalGo.g:1006:1: ruleTypeLit returns [EObject current=null] : (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType ) ;
    public final EObject ruleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayType_0 = null;

        EObject this_StructType_1 = null;

        EObject this_PointerType_2 = null;

        EObject this_FunctionType_3 = null;

        EObject this_InterfaceType_4 = null;

        EObject this_SliceType_5 = null;

        EObject this_MapType_6 = null;

        EObject this_ChannelType_7 = null;



        	enterRule();

        try {
            // InternalGo.g:1012:2: ( (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType ) )
            // InternalGo.g:1013:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType )
            {
            // InternalGo.g:1013:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType )
            int alt17=8;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalGo.g:1014:3: this_ArrayType_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayType_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ArrayType_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:1026:3: this_StructType_1= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructType_1=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructType_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:1038:3: this_PointerType_2= rulePointerType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PointerType_2=rulePointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PointerType_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:1050:3: this_FunctionType_3= ruleFunctionType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionType_3=ruleFunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionType_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:1062:3: this_InterfaceType_4= ruleInterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InterfaceType_4=ruleInterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InterfaceType_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:1074:3: this_SliceType_5= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SliceType_5=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SliceType_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:1086:3: this_MapType_6= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapType_6=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapType_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:1098:3: this_ChannelType_7= ruleChannelType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChannelType_7=ruleChannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChannelType_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLit"


    // $ANTLR start "entryRuleArrayType"
    // InternalGo.g:1113:1: entryRuleArrayType returns [EObject current=null] : iv_ruleArrayType= ruleArrayType EOF ;
    public final EObject entryRuleArrayType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayType = null;


        try {
            // InternalGo.g:1113:50: (iv_ruleArrayType= ruleArrayType EOF )
            // InternalGo.g:1114:2: iv_ruleArrayType= ruleArrayType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayType=ruleArrayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayType"


    // $ANTLR start "ruleArrayType"
    // InternalGo.g:1120:1: ruleArrayType returns [EObject current=null] : (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) ;
    public final EObject ruleArrayType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_ArrayLength_1 = null;

        EObject lv_elemtype_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1126:2: ( (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) )
            // InternalGo.g:1127:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            {
            // InternalGo.g:1127:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            // InternalGo.g:1128:3: otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_21);
            this_ArrayLength_1=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArrayLength_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,48,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalGo.g:1147:3: ( (lv_elemtype_3_0= ruleElementType ) )
            // InternalGo.g:1148:4: (lv_elemtype_3_0= ruleElementType )
            {
            // InternalGo.g:1148:4: (lv_elemtype_3_0= ruleElementType )
            // InternalGo.g:1149:5: lv_elemtype_3_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getElemtypeElementTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_3_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_3_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayType"


    // $ANTLR start "entryRuleArrayLength"
    // InternalGo.g:1170:1: entryRuleArrayLength returns [EObject current=null] : iv_ruleArrayLength= ruleArrayLength EOF ;
    public final EObject entryRuleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLength = null;


        try {
            // InternalGo.g:1170:52: (iv_ruleArrayLength= ruleArrayLength EOF )
            // InternalGo.g:1171:2: iv_ruleArrayLength= ruleArrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLength=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayLength"


    // $ANTLR start "ruleArrayLength"
    // InternalGo.g:1177:1: ruleArrayLength returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1183:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:1184:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayLength"


    // $ANTLR start "entryRuleElementType"
    // InternalGo.g:1198:1: entryRuleElementType returns [EObject current=null] : iv_ruleElementType= ruleElementType EOF ;
    public final EObject entryRuleElementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementType = null;


        try {
            // InternalGo.g:1198:52: (iv_ruleElementType= ruleElementType EOF )
            // InternalGo.g:1199:2: iv_ruleElementType= ruleElementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementType=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementType"


    // $ANTLR start "ruleElementType"
    // InternalGo.g:1205:1: ruleElementType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleElementType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1211:2: (this_Type_0= ruleType )
            // InternalGo.g:1212:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getElementTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementType"


    // $ANTLR start "entryRuleSliceType"
    // InternalGo.g:1226:1: entryRuleSliceType returns [EObject current=null] : iv_ruleSliceType= ruleSliceType EOF ;
    public final EObject entryRuleSliceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSliceType = null;


        try {
            // InternalGo.g:1226:50: (iv_ruleSliceType= ruleSliceType EOF )
            // InternalGo.g:1227:2: iv_ruleSliceType= ruleSliceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSliceType=ruleSliceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSliceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSliceType"


    // $ANTLR start "ruleSliceType"
    // InternalGo.g:1233:1: ruleSliceType returns [EObject current=null] : (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) ;
    public final EObject ruleSliceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_elemtype_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1239:2: ( (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) )
            // InternalGo.g:1240:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            {
            // InternalGo.g:1240:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            // InternalGo.g:1241:3: otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,48,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:1249:3: ( (lv_elemtype_2_0= ruleElementType ) )
            // InternalGo.g:1250:4: (lv_elemtype_2_0= ruleElementType )
            {
            // InternalGo.g:1250:4: (lv_elemtype_2_0= ruleElementType )
            // InternalGo.g:1251:5: lv_elemtype_2_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceTypeAccess().getElemtypeElementTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_2_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_2_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSliceType"


    // $ANTLR start "entryRuleStructType"
    // InternalGo.g:1272:1: entryRuleStructType returns [EObject current=null] : iv_ruleStructType= ruleStructType EOF ;
    public final EObject entryRuleStructType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructType = null;


        try {
            // InternalGo.g:1272:51: (iv_ruleStructType= ruleStructType EOF )
            // InternalGo.g:1273:2: iv_ruleStructType= ruleStructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructType=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructType"


    // $ANTLR start "ruleStructType"
    // InternalGo.g:1279:1: ruleStructType returns [EObject current=null] : ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' ) ;
    public final EObject ruleStructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_fielddecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1285:2: ( ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' ) )
            // InternalGo.g:1286:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' )
            {
            // InternalGo.g:1286:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' )
            // InternalGo.g:1287:3: () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}'
            {
            // InternalGo.g:1287:3: ()
            // InternalGo.g:1288:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,49,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,50,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:1305:3: ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==RULE_LETTER||LA18_0==53) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalGo.g:1306:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:1306:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) )
            	    // InternalGo.g:1307:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    {
            	    // InternalGo.g:1307:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    // InternalGo.g:1308:6: lv_fielddecl_3_0= ruleFieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFielddeclFieldDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_fielddecl_3_0=ruleFieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"fielddecl",
            	      							lv_fielddecl_3_0,
            	      							"org.xtext.example.mydsl.Go.FieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,39,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            otherlv_5=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalGo.g:1338:1: entryRuleFieldDecl returns [EObject current=null] : iv_ruleFieldDecl= ruleFieldDecl EOF ;
    public final EObject entryRuleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldDecl = null;


        try {
            // InternalGo.g:1338:50: (iv_ruleFieldDecl= ruleFieldDecl EOF )
            // InternalGo.g:1339:2: iv_ruleFieldDecl= ruleFieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldDecl=ruleFieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalGo.g:1345:1: ruleFieldDecl returns [EObject current=null] : ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ruleEmbeddedField ) ( ruleTag )? ) ;
    public final EObject ruleFieldDecl() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_indentifierL_1_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1351:2: ( ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ruleEmbeddedField ) ( ruleTag )? ) )
            // InternalGo.g:1352:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ruleEmbeddedField ) ( ruleTag )? )
            {
            // InternalGo.g:1352:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ruleEmbeddedField ) ( ruleTag )? )
            // InternalGo.g:1353:3: () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ruleEmbeddedField ) ( ruleTag )?
            {
            // InternalGo.g:1353:3: ()
            // InternalGo.g:1354:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFieldDeclAccess().getFieldDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1363:3: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ruleEmbeddedField )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1364:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    {
                    // InternalGo.g:1364:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    // InternalGo.g:1365:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) )
                    {
                    // InternalGo.g:1365:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) )
                    // InternalGo.g:1366:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1366:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    // InternalGo.g:1367:7: lv_indentifierL_1_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_18);
                    lv_indentifierL_1_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"indentifierL",
                      								lv_indentifierL_1_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:1384:5: ( (lv_type_2_0= ruleType ) )
                    // InternalGo.g:1385:6: (lv_type_2_0= ruleType )
                    {
                    // InternalGo.g:1385:6: (lv_type_2_0= ruleType )
                    // InternalGo.g:1386:7: lv_type_2_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_24);
                    lv_type_2_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"org.xtext.example.mydsl.Go.Type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1405:4: ruleEmbeddedField
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedFieldParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_24);
                    ruleEmbeddedField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:1416:3: ( ruleTag )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( ((LA20_0>=RULE_RAW_STRING_LIT && LA20_0<=RULE_INTERPRETED_STRING_LIT)) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalGo.g:1417:4: ruleTag
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getFieldDeclAccess().getTagParserRuleCall_2());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleIdentifierList"
    // InternalGo.g:1432:1: entryRuleIdentifierList returns [String current=null] : iv_ruleIdentifierList= ruleIdentifierList EOF ;
    public final String entryRuleIdentifierList() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierList = null;


        try {
            // InternalGo.g:1432:54: (iv_ruleIdentifierList= ruleIdentifierList EOF )
            // InternalGo.g:1433:2: iv_ruleIdentifierList= ruleIdentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierList=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierList.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierList"


    // $ANTLR start "ruleIdentifierList"
    // InternalGo.g:1439:1: ruleIdentifierList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= ruleIDENTIFIER (kw= ',' this_IDENTIFIER_2= ruleIDENTIFIER )* ) ;
    public final AntlrDatatypeRuleToken ruleIdentifierList() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;

        AntlrDatatypeRuleToken this_IDENTIFIER_2 = null;



        	enterRule();

        try {
            // InternalGo.g:1445:2: ( (this_IDENTIFIER_0= ruleIDENTIFIER (kw= ',' this_IDENTIFIER_2= ruleIDENTIFIER )* ) )
            // InternalGo.g:1446:2: (this_IDENTIFIER_0= ruleIDENTIFIER (kw= ',' this_IDENTIFIER_2= ruleIDENTIFIER )* )
            {
            // InternalGo.g:1446:2: (this_IDENTIFIER_0= ruleIDENTIFIER (kw= ',' this_IDENTIFIER_2= ruleIDENTIFIER )* )
            // InternalGo.g:1447:3: this_IDENTIFIER_0= ruleIDENTIFIER (kw= ',' this_IDENTIFIER_2= ruleIDENTIFIER )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:1457:3: (kw= ',' this_IDENTIFIER_2= ruleIDENTIFIER )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==52) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalGo.g:1458:4: kw= ',' this_IDENTIFIER_2= ruleIDENTIFIER
            	    {
            	    kw=(Token)match(input,52,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_25);
            	    this_IDENTIFIER_2=ruleIDENTIFIER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_IDENTIFIER_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierList"


    // $ANTLR start "entryRuleEmbeddedField"
    // InternalGo.g:1478:1: entryRuleEmbeddedField returns [String current=null] : iv_ruleEmbeddedField= ruleEmbeddedField EOF ;
    public final String entryRuleEmbeddedField() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmbeddedField = null;


        try {
            // InternalGo.g:1478:53: (iv_ruleEmbeddedField= ruleEmbeddedField EOF )
            // InternalGo.g:1479:2: iv_ruleEmbeddedField= ruleEmbeddedField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmbeddedFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmbeddedField=ruleEmbeddedField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmbeddedField.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmbeddedField"


    // $ANTLR start "ruleEmbeddedField"
    // InternalGo.g:1485:1: ruleEmbeddedField returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '*' )? this_TypeName_1= ruleTypeName ) ;
    public final AntlrDatatypeRuleToken ruleEmbeddedField() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_TypeName_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1491:2: ( ( (kw= '*' )? this_TypeName_1= ruleTypeName ) )
            // InternalGo.g:1492:2: ( (kw= '*' )? this_TypeName_1= ruleTypeName )
            {
            // InternalGo.g:1492:2: ( (kw= '*' )? this_TypeName_1= ruleTypeName )
            // InternalGo.g:1493:3: (kw= '*' )? this_TypeName_1= ruleTypeName
            {
            // InternalGo.g:1493:3: (kw= '*' )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==53) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalGo.g:1494:4: kw= '*'
                    {
                    kw=(Token)match(input,53,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeName_1=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_TypeName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmbeddedField"


    // $ANTLR start "entryRuleTag"
    // InternalGo.g:1514:1: entryRuleTag returns [String current=null] : iv_ruleTag= ruleTag EOF ;
    public final String entryRuleTag() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTag = null;


        try {
            // InternalGo.g:1514:43: (iv_ruleTag= ruleTag EOF )
            // InternalGo.g:1515:2: iv_ruleTag= ruleTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTag=ruleTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTag.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTag"


    // $ANTLR start "ruleTag"
    // InternalGo.g:1521:1: ruleTag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= ruleSTRING_LIT ;
    public final AntlrDatatypeRuleToken ruleTag() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_STRING_LIT_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1527:2: (this_STRING_LIT_0= ruleSTRING_LIT )
            // InternalGo.g:1528:2: this_STRING_LIT_0= ruleSTRING_LIT
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getTagAccess().getSTRING_LITParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_STRING_LIT_0=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTag"


    // $ANTLR start "entryRulePointerType"
    // InternalGo.g:1541:1: entryRulePointerType returns [EObject current=null] : iv_rulePointerType= rulePointerType EOF ;
    public final EObject entryRulePointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePointerType = null;


        try {
            // InternalGo.g:1541:52: (iv_rulePointerType= rulePointerType EOF )
            // InternalGo.g:1542:2: iv_rulePointerType= rulePointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePointerType=rulePointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePointerType"


    // $ANTLR start "rulePointerType"
    // InternalGo.g:1548:1: rulePointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) ;
    public final EObject rulePointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_basetype_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1554:2: ( (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) )
            // InternalGo.g:1555:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            {
            // InternalGo.g:1555:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            // InternalGo.g:1556:3: otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) )
            {
            otherlv_0=(Token)match(input,53,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:1560:3: ( (lv_basetype_1_0= ruleBaseType ) )
            // InternalGo.g:1561:4: (lv_basetype_1_0= ruleBaseType )
            {
            // InternalGo.g:1561:4: (lv_basetype_1_0= ruleBaseType )
            // InternalGo.g:1562:5: lv_basetype_1_0= ruleBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getBasetypeBaseTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_basetype_1_0=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"basetype",
              						lv_basetype_1_0,
              						"org.xtext.example.mydsl.Go.BaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePointerType"


    // $ANTLR start "entryRuleBaseType"
    // InternalGo.g:1583:1: entryRuleBaseType returns [EObject current=null] : iv_ruleBaseType= ruleBaseType EOF ;
    public final EObject entryRuleBaseType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseType = null;


        try {
            // InternalGo.g:1583:49: (iv_ruleBaseType= ruleBaseType EOF )
            // InternalGo.g:1584:2: iv_ruleBaseType= ruleBaseType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseType=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseType"


    // $ANTLR start "ruleBaseType"
    // InternalGo.g:1590:1: ruleBaseType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleBaseType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1596:2: (this_Type_0= ruleType )
            // InternalGo.g:1597:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseType"


    // $ANTLR start "entryRuleFunctionType"
    // InternalGo.g:1611:1: entryRuleFunctionType returns [EObject current=null] : iv_ruleFunctionType= ruleFunctionType EOF ;
    public final EObject entryRuleFunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionType = null;


        try {
            // InternalGo.g:1611:53: (iv_ruleFunctionType= ruleFunctionType EOF )
            // InternalGo.g:1612:2: iv_ruleFunctionType= ruleFunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionType=ruleFunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionType"


    // $ANTLR start "ruleFunctionType"
    // InternalGo.g:1618:1: ruleFunctionType returns [EObject current=null] : (otherlv_0= 'func' this_Signature_1= ruleSignature ) ;
    public final EObject ruleFunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Signature_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1624:2: ( (otherlv_0= 'func' this_Signature_1= ruleSignature ) )
            // InternalGo.g:1625:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            {
            // InternalGo.g:1625:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            // InternalGo.g:1626:3: otherlv_0= 'func' this_Signature_1= ruleSignature
            {
            otherlv_0=(Token)match(input,40,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Signature_1=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Signature_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionType"


    // $ANTLR start "entryRuleSignature"
    // InternalGo.g:1645:1: entryRuleSignature returns [EObject current=null] : iv_ruleSignature= ruleSignature EOF ;
    public final EObject entryRuleSignature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignature = null;


        try {
            // InternalGo.g:1645:50: (iv_ruleSignature= ruleSignature EOF )
            // InternalGo.g:1646:2: iv_ruleSignature= ruleSignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignature=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignature"


    // $ANTLR start "ruleSignature"
    // InternalGo.g:1652:1: ruleSignature returns [EObject current=null] : (otherlv_0= '.' this_Parameters_1= ruleParameters ( (lv_result_2_0= ruleResult ) )? ) ;
    public final EObject ruleSignature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Parameters_1 = null;

        EObject lv_result_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1658:2: ( (otherlv_0= '.' this_Parameters_1= ruleParameters ( (lv_result_2_0= ruleResult ) )? ) )
            // InternalGo.g:1659:2: (otherlv_0= '.' this_Parameters_1= ruleParameters ( (lv_result_2_0= ruleResult ) )? )
            {
            // InternalGo.g:1659:2: (otherlv_0= '.' this_Parameters_1= ruleParameters ( (lv_result_2_0= ruleResult ) )? )
            // InternalGo.g:1660:3: otherlv_0= '.' this_Parameters_1= ruleParameters ( (lv_result_2_0= ruleResult ) )?
            {
            otherlv_0=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSignatureAccess().getFullStopKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignatureAccess().getParametersParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_26);
            this_Parameters_1=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Parameters_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:1675:3: ( (lv_result_2_0= ruleResult ) )?
            int alt23=2;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalGo.g:1676:4: (lv_result_2_0= ruleResult )
                    {
                    // InternalGo.g:1676:4: (lv_result_2_0= ruleResult )
                    // InternalGo.g:1677:5: lv_result_2_0= ruleResult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_result_2_0=ruleResult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"result",
                      						lv_result_2_0,
                      						"org.xtext.example.mydsl.Go.Result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignature"


    // $ANTLR start "entryRuleResult"
    // InternalGo.g:1698:1: entryRuleResult returns [EObject current=null] : iv_ruleResult= ruleResult EOF ;
    public final EObject entryRuleResult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResult = null;


        try {
            // InternalGo.g:1698:47: (iv_ruleResult= ruleResult EOF )
            // InternalGo.g:1699:2: iv_ruleResult= ruleResult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResult=ruleResult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResult"


    // $ANTLR start "ruleResult"
    // InternalGo.g:1705:1: ruleResult returns [EObject current=null] : (this_Parameters_0= ruleParameters | this_Type_1= ruleType ) ;
    public final EObject ruleResult() throws RecognitionException {
        EObject current = null;

        EObject this_Parameters_0 = null;

        EObject this_Type_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1711:2: ( (this_Parameters_0= ruleParameters | this_Type_1= ruleType ) )
            // InternalGo.g:1712:2: (this_Parameters_0= ruleParameters | this_Type_1= ruleType )
            {
            // InternalGo.g:1712:2: (this_Parameters_0= ruleParameters | this_Type_1= ruleType )
            int alt24=2;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalGo.g:1713:3: this_Parameters_0= ruleParameters
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getResultAccess().getParametersParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Parameters_0=ruleParameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Parameters_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:1725:3: this_Type_1= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getResultAccess().getTypeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Type_1=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Type_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResult"


    // $ANTLR start "entryRuleParameters"
    // InternalGo.g:1740:1: entryRuleParameters returns [EObject current=null] : iv_ruleParameters= ruleParameters EOF ;
    public final EObject entryRuleParameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameters = null;


        try {
            // InternalGo.g:1740:51: (iv_ruleParameters= ruleParameters EOF )
            // InternalGo.g:1741:2: iv_ruleParameters= ruleParameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameters=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameters"


    // $ANTLR start "ruleParameters"
    // InternalGo.g:1747:1: ruleParameters returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) ;
    public final EObject ruleParameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_parameterlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1753:2: ( ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) )
            // InternalGo.g:1754:2: ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            {
            // InternalGo.g:1754:2: ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            // InternalGo.g:1755:3: () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')'
            {
            // InternalGo.g:1755:3: ()
            // InternalGo.g:1756:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParametersAccess().getParametersAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:1769:3: ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_LETTER||LA26_0==40||LA26_0==45||LA26_0==47||LA26_0==49||(LA26_0>=53 && LA26_0<=58)) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalGo.g:1770:4: ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:1770:4: ( (lv_parameterlist_2_0= ruleParameterList ) )
                    // InternalGo.g:1771:5: (lv_parameterlist_2_0= ruleParameterList )
                    {
                    // InternalGo.g:1771:5: (lv_parameterlist_2_0= ruleParameterList )
                    // InternalGo.g:1772:6: lv_parameterlist_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_parameterlist_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParametersRule());
                      						}
                      						set(
                      							current,
                      							"parameterlist",
                      							lv_parameterlist_2_0,
                      							"org.xtext.example.mydsl.Go.ParameterList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:1789:4: (otherlv_3= ',' )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==52) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalGo.g:1790:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,52,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameters"


    // $ANTLR start "entryRuleParameterList"
    // InternalGo.g:1804:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalGo.g:1804:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalGo.g:1805:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalGo.g:1811:1: ruleParameterList returns [EObject current=null] : (this_ParameterDecl_0= ruleParameterDecl (otherlv_1= ',' ( (lv_parameterdecl_2_0= ruleParameterDecl ) ) )* ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ParameterDecl_0 = null;

        EObject lv_parameterdecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1817:2: ( (this_ParameterDecl_0= ruleParameterDecl (otherlv_1= ',' ( (lv_parameterdecl_2_0= ruleParameterDecl ) ) )* ) )
            // InternalGo.g:1818:2: (this_ParameterDecl_0= ruleParameterDecl (otherlv_1= ',' ( (lv_parameterdecl_2_0= ruleParameterDecl ) ) )* )
            {
            // InternalGo.g:1818:2: (this_ParameterDecl_0= ruleParameterDecl (otherlv_1= ',' ( (lv_parameterdecl_2_0= ruleParameterDecl ) ) )* )
            // InternalGo.g:1819:3: this_ParameterDecl_0= ruleParameterDecl (otherlv_1= ',' ( (lv_parameterdecl_2_0= ruleParameterDecl ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_ParameterDecl_0=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ParameterDecl_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:1830:3: (otherlv_1= ',' ( (lv_parameterdecl_2_0= ruleParameterDecl ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==52) ) {
                    int LA27_1 = input.LA(2);

                    if ( (LA27_1==RULE_LETTER||LA27_1==40||LA27_1==45||LA27_1==47||LA27_1==49||(LA27_1>=53 && LA27_1<=58)) ) {
                        alt27=1;
                    }


                }


                switch (alt27) {
            	case 1 :
            	    // InternalGo.g:1831:4: otherlv_1= ',' ( (lv_parameterdecl_2_0= ruleParameterDecl ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_29); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:1835:4: ( (lv_parameterdecl_2_0= ruleParameterDecl ) )
            	    // InternalGo.g:1836:5: (lv_parameterdecl_2_0= ruleParameterDecl )
            	    {
            	    // InternalGo.g:1836:5: (lv_parameterdecl_2_0= ruleParameterDecl )
            	    // InternalGo.g:1837:6: lv_parameterdecl_2_0= ruleParameterDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameterListAccess().getParameterdeclParameterDeclParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_parameterdecl_2_0=ruleParameterDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameterListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"parameterdecl",
            	      							lv_parameterdecl_2_0,
            	      							"org.xtext.example.mydsl.Go.ParameterDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleParameterDecl"
    // InternalGo.g:1859:1: entryRuleParameterDecl returns [EObject current=null] : iv_ruleParameterDecl= ruleParameterDecl EOF ;
    public final EObject entryRuleParameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterDecl = null;


        try {
            // InternalGo.g:1859:54: (iv_ruleParameterDecl= ruleParameterDecl EOF )
            // InternalGo.g:1860:2: iv_ruleParameterDecl= ruleParameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterDecl=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterDecl"


    // $ANTLR start "ruleParameterDecl"
    // InternalGo.g:1866:1: ruleParameterDecl returns [EObject current=null] : ( ( (lv_indentifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) ) ;
    public final EObject ruleParameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_indentifierL_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1872:2: ( ( ( (lv_indentifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) ) )
            // InternalGo.g:1873:2: ( ( (lv_indentifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) )
            {
            // InternalGo.g:1873:2: ( ( (lv_indentifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) )
            // InternalGo.g:1874:3: ( (lv_indentifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) )
            {
            // InternalGo.g:1874:3: ( (lv_indentifierL_0_0= ruleIdentifierList ) )?
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalGo.g:1875:4: (lv_indentifierL_0_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1875:4: (lv_indentifierL_0_0= ruleIdentifierList )
                    // InternalGo.g:1876:5: lv_indentifierL_0_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getIndentifierLIdentifierListParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_29);
                    lv_indentifierL_0_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"indentifierL",
                      						lv_indentifierL_0_0,
                      						"org.xtext.example.mydsl.Go.IdentifierList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:1893:3: (otherlv_1= '...' )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==54) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalGo.g:1894:4: otherlv_1= '...'
                    {
                    otherlv_1=(Token)match(input,54,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:1899:3: ( (lv_type_2_0= ruleType ) )
            // InternalGo.g:1900:4: (lv_type_2_0= ruleType )
            {
            // InternalGo.g:1900:4: (lv_type_2_0= ruleType )
            // InternalGo.g:1901:5: lv_type_2_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterDecl"


    // $ANTLR start "entryRuleInterfaceType"
    // InternalGo.g:1922:1: entryRuleInterfaceType returns [EObject current=null] : iv_ruleInterfaceType= ruleInterfaceType EOF ;
    public final EObject entryRuleInterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceType = null;


        try {
            // InternalGo.g:1922:54: (iv_ruleInterfaceType= ruleInterfaceType EOF )
            // InternalGo.g:1923:2: iv_ruleInterfaceType= ruleInterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceType=ruleInterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceType"


    // $ANTLR start "ruleInterfaceType"
    // InternalGo.g:1929:1: ruleInterfaceType returns [EObject current=null] : ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' ) ;
    public final EObject ruleInterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_methodspec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1935:2: ( ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' ) )
            // InternalGo.g:1936:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' )
            {
            // InternalGo.g:1936:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' )
            // InternalGo.g:1937:3: () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}'
            {
            // InternalGo.g:1937:3: ()
            // InternalGo.g:1938:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,55,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,50,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:1955:3: ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==RULE_LETTER) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalGo.g:1956:4: ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:1956:4: ( (lv_methodspec_3_0= ruleMethodSpec ) )
            	    // InternalGo.g:1957:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    {
            	    // InternalGo.g:1957:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    // InternalGo.g:1958:6: lv_methodspec_3_0= ruleMethodSpec
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodspecMethodSpecParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_methodspec_3_0=ruleMethodSpec();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"methodspec",
            	      							lv_methodspec_3_0,
            	      							"org.xtext.example.mydsl.Go.MethodSpec");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,39,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            otherlv_5=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceType"


    // $ANTLR start "entryRuleMethodSpec"
    // InternalGo.g:1988:1: entryRuleMethodSpec returns [EObject current=null] : iv_ruleMethodSpec= ruleMethodSpec EOF ;
    public final EObject entryRuleMethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodSpec = null;


        try {
            // InternalGo.g:1988:51: (iv_ruleMethodSpec= ruleMethodSpec EOF )
            // InternalGo.g:1989:2: iv_ruleMethodSpec= ruleMethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodSpec=ruleMethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodSpec"


    // $ANTLR start "ruleMethodSpec"
    // InternalGo.g:1995:1: ruleMethodSpec returns [EObject current=null] : ( ( ruleMethodName this_Signature_1= ruleSignature ) | ( () ruleInterfaceTypeName ) ) ;
    public final EObject ruleMethodSpec() throws RecognitionException {
        EObject current = null;

        EObject this_Signature_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2001:2: ( ( ( ruleMethodName this_Signature_1= ruleSignature ) | ( () ruleInterfaceTypeName ) ) )
            // InternalGo.g:2002:2: ( ( ruleMethodName this_Signature_1= ruleSignature ) | ( () ruleInterfaceTypeName ) )
            {
            // InternalGo.g:2002:2: ( ( ruleMethodName this_Signature_1= ruleSignature ) | ( () ruleInterfaceTypeName ) )
            int alt31=2;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalGo.g:2003:3: ( ruleMethodName this_Signature_1= ruleSignature )
                    {
                    // InternalGo.g:2003:3: ( ruleMethodName this_Signature_1= ruleSignature )
                    // InternalGo.g:2004:4: ruleMethodName this_Signature_1= ruleSignature
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMethodSpecAccess().getMethodNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_8);
                    ruleMethodName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Signature_1=ruleSignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Signature_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2027:3: ( () ruleInterfaceTypeName )
                    {
                    // InternalGo.g:2027:3: ( () ruleInterfaceTypeName )
                    // InternalGo.g:2028:4: () ruleInterfaceTypeName
                    {
                    // InternalGo.g:2028:4: ()
                    // InternalGo.g:2029:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getMethodSpecAccess().getMethodSpecAction_1_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleInterfaceTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodSpec"


    // $ANTLR start "entryRuleMethodName"
    // InternalGo.g:2053:1: entryRuleMethodName returns [String current=null] : iv_ruleMethodName= ruleMethodName EOF ;
    public final String entryRuleMethodName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethodName = null;


        try {
            // InternalGo.g:2053:50: (iv_ruleMethodName= ruleMethodName EOF )
            // InternalGo.g:2054:2: iv_ruleMethodName= ruleMethodName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodName=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodName"


    // $ANTLR start "ruleMethodName"
    // InternalGo.g:2060:1: ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleMethodName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2066:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:2067:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getMethodNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodName"


    // $ANTLR start "entryRuleInterfaceTypeName"
    // InternalGo.g:2080:1: entryRuleInterfaceTypeName returns [String current=null] : iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF ;
    public final String entryRuleInterfaceTypeName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInterfaceTypeName = null;


        try {
            // InternalGo.g:2080:57: (iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF )
            // InternalGo.g:2081:2: iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceTypeName=ruleInterfaceTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceTypeName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceTypeName"


    // $ANTLR start "ruleInterfaceTypeName"
    // InternalGo.g:2087:1: ruleInterfaceTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_TypeName_0= ruleTypeName ;
    public final AntlrDatatypeRuleToken ruleInterfaceTypeName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_TypeName_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2093:2: (this_TypeName_0= ruleTypeName )
            // InternalGo.g:2094:2: this_TypeName_0= ruleTypeName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_TypeName_0=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_TypeName_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceTypeName"


    // $ANTLR start "entryRuleMapType"
    // InternalGo.g:2107:1: entryRuleMapType returns [EObject current=null] : iv_ruleMapType= ruleMapType EOF ;
    public final EObject entryRuleMapType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapType = null;


        try {
            // InternalGo.g:2107:48: (iv_ruleMapType= ruleMapType EOF )
            // InternalGo.g:2108:2: iv_ruleMapType= ruleMapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapType=ruleMapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapType"


    // $ANTLR start "ruleMapType"
    // InternalGo.g:2114:1: ruleMapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleMapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_keytype_2_0 = null;

        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2120:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2121:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2121:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2122:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,56,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,47,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:2130:3: ( (lv_keytype_2_0= ruleKeyType ) )
            // InternalGo.g:2131:4: (lv_keytype_2_0= ruleKeyType )
            {
            // InternalGo.g:2131:4: (lv_keytype_2_0= ruleKeyType )
            // InternalGo.g:2132:5: lv_keytype_2_0= ruleKeyType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getKeytypeKeyTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_keytype_2_0=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"keytype",
              						lv_keytype_2_0,
              						"org.xtext.example.mydsl.Go.KeyType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,48,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:2153:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2154:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2154:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2155:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElemtypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapType"


    // $ANTLR start "entryRuleKeyType"
    // InternalGo.g:2176:1: entryRuleKeyType returns [EObject current=null] : iv_ruleKeyType= ruleKeyType EOF ;
    public final EObject entryRuleKeyType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyType = null;


        try {
            // InternalGo.g:2176:48: (iv_ruleKeyType= ruleKeyType EOF )
            // InternalGo.g:2177:2: iv_ruleKeyType= ruleKeyType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyType=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyType"


    // $ANTLR start "ruleKeyType"
    // InternalGo.g:2183:1: ruleKeyType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleKeyType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2189:2: (this_Type_0= ruleType )
            // InternalGo.g:2190:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyType"


    // $ANTLR start "entryRuleChannelType"
    // InternalGo.g:2204:1: entryRuleChannelType returns [EObject current=null] : iv_ruleChannelType= ruleChannelType EOF ;
    public final EObject entryRuleChannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelType = null;


        try {
            // InternalGo.g:2204:52: (iv_ruleChannelType= ruleChannelType EOF )
            // InternalGo.g:2205:2: iv_ruleChannelType= ruleChannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelType=ruleChannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelType"


    // $ANTLR start "ruleChannelType"
    // InternalGo.g:2211:1: ruleChannelType returns [EObject current=null] : ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleChannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2217:2: ( ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2218:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2218:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2219:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) )
            {
            // InternalGo.g:2219:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==57) ) {
                alt33=1;
            }
            else if ( (LA33_0==58) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalGo.g:2220:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    {
                    // InternalGo.g:2220:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    // InternalGo.g:2221:5: otherlv_0= 'chan' (otherlv_1= '<-' )?
                    {
                    otherlv_0=(Token)match(input,57,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0_0());
                      				
                    }
                    // InternalGo.g:2225:5: (otherlv_1= '<-' )?
                    int alt32=2;
                    alt32 = dfa32.predict(input);
                    switch (alt32) {
                        case 1 :
                            // InternalGo.g:2226:6: otherlv_1= '<-'
                            {
                            otherlv_1=(Token)match(input,58,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_0_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2233:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    {
                    // InternalGo.g:2233:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    // InternalGo.g:2234:5: otherlv_2= '<-' otherlv_3= 'chan'
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0());
                      				
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:2244:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2245:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2245:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2246:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElemtypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelType"


    // $ANTLR start "entryRuleBlock"
    // InternalGo.g:2267:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalGo.g:2267:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalGo.g:2268:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalGo.g:2274:1: ruleBlock returns [EObject current=null] : (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_StatementList_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2280:2: ( (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' ) )
            // InternalGo.g:2281:2: (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' )
            {
            // InternalGo.g:2281:2: (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' )
            // InternalGo.g:2282:3: otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,50,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_34);
            this_StatementList_1=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StatementList_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleStatementList"
    // InternalGo.g:2305:1: entryRuleStatementList returns [EObject current=null] : iv_ruleStatementList= ruleStatementList EOF ;
    public final EObject entryRuleStatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatementList = null;


        try {
            // InternalGo.g:2305:54: (iv_ruleStatementList= ruleStatementList EOF )
            // InternalGo.g:2306:2: iv_ruleStatementList= ruleStatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatementList=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementList"


    // $ANTLR start "ruleStatementList"
    // InternalGo.g:2312:1: ruleStatementList returns [EObject current=null] : ( () ( ( (lv_statment_1_0= ruleStatement ) ) otherlv_2= ';' )* ) ;
    public final EObject ruleStatementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_statment_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2318:2: ( ( () ( ( (lv_statment_1_0= ruleStatement ) ) otherlv_2= ';' )* ) )
            // InternalGo.g:2319:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) otherlv_2= ';' )* )
            {
            // InternalGo.g:2319:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) otherlv_2= ';' )* )
            // InternalGo.g:2320:3: () ( ( (lv_statment_1_0= ruleStatement ) ) otherlv_2= ';' )*
            {
            // InternalGo.g:2320:3: ()
            // InternalGo.g:2321:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStatementListAccess().getStatementListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:2330:3: ( ( (lv_statment_1_0= ruleStatement ) ) otherlv_2= ';' )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==RULE_LETTER||(LA34_0>=RULE_DECIMAL_LIT && LA34_0<=RULE_DECIMALS)||(LA34_0>=RULE_RAW_STRING_LIT && LA34_0<=RULE_INTERPRETED_STRING_LIT)||LA34_0==RULE_UNARY_OP||(LA34_0>=39 && LA34_0<=40)||LA34_0==42||(LA34_0>=44 && LA34_0<=45)||LA34_0==47||(LA34_0>=49 && LA34_0<=50)||LA34_0==53||(LA34_0>=55 && LA34_0<=58)||(LA34_0>=60 && LA34_0<=64)||(LA34_0>=66 && LA34_0<=70)||(LA34_0>=72 && LA34_0<=73)||LA34_0==77) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalGo.g:2331:4: ( (lv_statment_1_0= ruleStatement ) ) otherlv_2= ';'
            	    {
            	    // InternalGo.g:2331:4: ( (lv_statment_1_0= ruleStatement ) )
            	    // InternalGo.g:2332:5: (lv_statment_1_0= ruleStatement )
            	    {
            	    // InternalGo.g:2332:5: (lv_statment_1_0= ruleStatement )
            	    // InternalGo.g:2333:6: lv_statment_1_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStatementListAccess().getStatmentStatementParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_statment_1_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"statment",
            	      							lv_statment_1_0,
            	      							"org.xtext.example.mydsl.Go.Statement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_2=(Token)match(input,39,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementList"


    // $ANTLR start "entryRuleStatement"
    // InternalGo.g:2359:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalGo.g:2359:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalGo.g:2360:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalGo.g:2366:1: ruleStatement returns [EObject current=null] : ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_0 = null;

        EObject lv_labest_2_0 = null;

        EObject lv_simplest_3_0 = null;

        AntlrDatatypeRuleToken lv_gotst_4_0 = null;

        EObject this_ReturnStmt_5 = null;

        AntlrDatatypeRuleToken lv_breakst_6_0 = null;

        AntlrDatatypeRuleToken lv_continuest_7_0 = null;

        AntlrDatatypeRuleToken lv_gotost_8_0 = null;

        AntlrDatatypeRuleToken lv_falltst_9_0 = null;

        EObject lv_block1_10_0 = null;

        EObject lv_if_11_0 = null;

        EObject lv_switch_12_0 = null;

        EObject lv_selectst_13_0 = null;

        EObject lv_forst_14_0 = null;

        EObject lv_deferst_15_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2372:2: ( ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) )
            // InternalGo.g:2373:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            {
            // InternalGo.g:2373:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            int alt35=15;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalGo.g:2374:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    {
                    // InternalGo.g:2374:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    // InternalGo.g:2375:4: () ( (lv_declaration_1_0= ruleDeclaration ) )
                    {
                    // InternalGo.g:2375:4: ()
                    // InternalGo.g:2376:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getStatementAccess().getStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2385:4: ( (lv_declaration_1_0= ruleDeclaration ) )
                    // InternalGo.g:2386:5: (lv_declaration_1_0= ruleDeclaration )
                    {
                    // InternalGo.g:2386:5: (lv_declaration_1_0= ruleDeclaration )
                    // InternalGo.g:2387:6: lv_declaration_1_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_1_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_1_0,
                      							"org.xtext.example.mydsl.Go.Declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2406:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    {
                    // InternalGo.g:2406:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    // InternalGo.g:2407:4: (lv_labest_2_0= ruleLabeledStmt )
                    {
                    // InternalGo.g:2407:4: (lv_labest_2_0= ruleLabeledStmt )
                    // InternalGo.g:2408:5: lv_labest_2_0= ruleLabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_labest_2_0=ruleLabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"labest",
                      						lv_labest_2_0,
                      						"org.xtext.example.mydsl.Go.LabeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2426:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    {
                    // InternalGo.g:2426:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    // InternalGo.g:2427:4: (lv_simplest_3_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:2427:4: (lv_simplest_3_0= ruleSimpleStmt )
                    // InternalGo.g:2428:5: lv_simplest_3_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simplest_3_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"simplest",
                      						lv_simplest_3_0,
                      						"org.xtext.example.mydsl.Go.SimpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:2446:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    {
                    // InternalGo.g:2446:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    // InternalGo.g:2447:4: (lv_gotst_4_0= ruleGoStmt )
                    {
                    // InternalGo.g:2447:4: (lv_gotst_4_0= ruleGoStmt )
                    // InternalGo.g:2448:5: lv_gotst_4_0= ruleGoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotst_4_0=ruleGoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotst",
                      						lv_gotst_4_0,
                      						"org.xtext.example.mydsl.Go.GoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:2466:3: this_ReturnStmt_5= ruleReturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStmt_5=ruleReturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReturnStmt_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2478:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    {
                    // InternalGo.g:2478:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    // InternalGo.g:2479:4: (lv_breakst_6_0= ruleBreakStmt )
                    {
                    // InternalGo.g:2479:4: (lv_breakst_6_0= ruleBreakStmt )
                    // InternalGo.g:2480:5: lv_breakst_6_0= ruleBreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBreakstBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_breakst_6_0=ruleBreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"breakst",
                      						lv_breakst_6_0,
                      						"org.xtext.example.mydsl.Go.BreakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:2498:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    {
                    // InternalGo.g:2498:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    // InternalGo.g:2499:4: (lv_continuest_7_0= ruleContinueStmt )
                    {
                    // InternalGo.g:2499:4: (lv_continuest_7_0= ruleContinueStmt )
                    // InternalGo.g:2500:5: lv_continuest_7_0= ruleContinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContinuestContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_continuest_7_0=ruleContinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"continuest",
                      						lv_continuest_7_0,
                      						"org.xtext.example.mydsl.Go.ContinueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:2518:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    {
                    // InternalGo.g:2518:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    // InternalGo.g:2519:4: (lv_gotost_8_0= ruleGotoStmt )
                    {
                    // InternalGo.g:2519:4: (lv_gotost_8_0= ruleGotoStmt )
                    // InternalGo.g:2520:5: lv_gotost_8_0= ruleGotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotost_8_0=ruleGotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotost",
                      						lv_gotost_8_0,
                      						"org.xtext.example.mydsl.Go.GotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:2538:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    {
                    // InternalGo.g:2538:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    // InternalGo.g:2539:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    {
                    // InternalGo.g:2539:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    // InternalGo.g:2540:5: lv_falltst_9_0= ruleFallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getFalltstFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_falltst_9_0=ruleFallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"falltst",
                      						lv_falltst_9_0,
                      						"org.xtext.example.mydsl.Go.FallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:2558:3: ( (lv_block1_10_0= ruleBlock ) )
                    {
                    // InternalGo.g:2558:3: ( (lv_block1_10_0= ruleBlock ) )
                    // InternalGo.g:2559:4: (lv_block1_10_0= ruleBlock )
                    {
                    // InternalGo.g:2559:4: (lv_block1_10_0= ruleBlock )
                    // InternalGo.g:2560:5: lv_block1_10_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBlock1BlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block1_10_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"block1",
                      						lv_block1_10_0,
                      						"org.xtext.example.mydsl.Go.Block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:2578:3: ( (lv_if_11_0= ruleIfStmt ) )
                    {
                    // InternalGo.g:2578:3: ( (lv_if_11_0= ruleIfStmt ) )
                    // InternalGo.g:2579:4: (lv_if_11_0= ruleIfStmt )
                    {
                    // InternalGo.g:2579:4: (lv_if_11_0= ruleIfStmt )
                    // InternalGo.g:2580:5: lv_if_11_0= ruleIfStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIfIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_if_11_0=ruleIfStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"if",
                      						lv_if_11_0,
                      						"org.xtext.example.mydsl.Go.IfStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:2598:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    {
                    // InternalGo.g:2598:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    // InternalGo.g:2599:4: (lv_switch_12_0= ruleSwitchStmt )
                    {
                    // InternalGo.g:2599:4: (lv_switch_12_0= ruleSwitchStmt )
                    // InternalGo.g:2600:5: lv_switch_12_0= ruleSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSwitchSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_switch_12_0=ruleSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"switch",
                      						lv_switch_12_0,
                      						"org.xtext.example.mydsl.Go.SwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:2618:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    {
                    // InternalGo.g:2618:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    // InternalGo.g:2619:4: (lv_selectst_13_0= ruleSelectStmt )
                    {
                    // InternalGo.g:2619:4: (lv_selectst_13_0= ruleSelectStmt )
                    // InternalGo.g:2620:5: lv_selectst_13_0= ruleSelectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelectstSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selectst_13_0=ruleSelectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"selectst",
                      						lv_selectst_13_0,
                      						"org.xtext.example.mydsl.Go.SelectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:2638:3: ( (lv_forst_14_0= ruleForStmt ) )
                    {
                    // InternalGo.g:2638:3: ( (lv_forst_14_0= ruleForStmt ) )
                    // InternalGo.g:2639:4: (lv_forst_14_0= ruleForStmt )
                    {
                    // InternalGo.g:2639:4: (lv_forst_14_0= ruleForStmt )
                    // InternalGo.g:2640:5: lv_forst_14_0= ruleForStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getForstForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_forst_14_0=ruleForStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"forst",
                      						lv_forst_14_0,
                      						"org.xtext.example.mydsl.Go.ForStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:2658:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    {
                    // InternalGo.g:2658:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    // InternalGo.g:2659:4: (lv_deferst_15_0= ruleDeferStmt )
                    {
                    // InternalGo.g:2659:4: (lv_deferst_15_0= ruleDeferStmt )
                    // InternalGo.g:2660:5: lv_deferst_15_0= ruleDeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeferstDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_deferst_15_0=ruleDeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"deferst",
                      						lv_deferst_15_0,
                      						"org.xtext.example.mydsl.Go.DeferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleDeclaration"
    // InternalGo.g:2681:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalGo.g:2681:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalGo.g:2682:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalGo.g:2688:1: ruleDeclaration returns [EObject current=null] : (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ConstDecl_0 = null;

        EObject this_TypeDecl_1 = null;

        EObject this_VarDecl_2 = null;



        	enterRule();

        try {
            // InternalGo.g:2694:2: ( (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl ) )
            // InternalGo.g:2695:2: (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl )
            {
            // InternalGo.g:2695:2: (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl )
            int alt36=3;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt36=1;
                }
                break;
            case 72:
                {
                alt36=2;
                }
                break;
            case 73:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalGo.g:2696:3: this_ConstDecl_0= ruleConstDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstDecl_0=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2708:3: this_TypeDecl_1= ruleTypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDecl_1=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDecl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:2720:3: this_VarDecl_2= ruleVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VarDecl_2=ruleVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VarDecl_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleLabeledStmt"
    // InternalGo.g:2735:1: entryRuleLabeledStmt returns [EObject current=null] : iv_ruleLabeledStmt= ruleLabeledStmt EOF ;
    public final EObject entryRuleLabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabeledStmt = null;


        try {
            // InternalGo.g:2735:52: (iv_ruleLabeledStmt= ruleLabeledStmt EOF )
            // InternalGo.g:2736:2: iv_ruleLabeledStmt= ruleLabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabeledStmt=ruleLabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabeledStmt"


    // $ANTLR start "ruleLabeledStmt"
    // InternalGo.g:2742:1: ruleLabeledStmt returns [EObject current=null] : ( ruleLabel otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) ;
    public final EObject ruleLabeledStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2748:2: ( ( ruleLabel otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) )
            // InternalGo.g:2749:2: ( ruleLabel otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            {
            // InternalGo.g:2749:2: ( ruleLabel otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            // InternalGo.g:2750:3: ruleLabel otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,59,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2764:3: ( (lv_statement_2_0= ruleStatement ) )
            // InternalGo.g:2765:4: (lv_statement_2_0= ruleStatement )
            {
            // InternalGo.g:2765:4: (lv_statement_2_0= ruleStatement )
            // InternalGo.g:2766:5: lv_statement_2_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_2_0,
              						"org.xtext.example.mydsl.Go.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabeledStmt"


    // $ANTLR start "entryRuleSimpleStmt"
    // InternalGo.g:2787:1: entryRuleSimpleStmt returns [EObject current=null] : iv_ruleSimpleStmt= ruleSimpleStmt EOF ;
    public final EObject entryRuleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStmt = null;


        try {
            // InternalGo.g:2787:51: (iv_ruleSimpleStmt= ruleSimpleStmt EOF )
            // InternalGo.g:2788:2: iv_ruleSimpleStmt= ruleSimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStmt=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStmt"


    // $ANTLR start "ruleSimpleStmt"
    // InternalGo.g:2794:1: ruleSimpleStmt returns [EObject current=null] : ( ( () ruleEmptyStmt ) | this_ExpressionStmt_2= ruleExpressionStmt | this_SendStmt_3= ruleSendStmt | this_IncDecStmt_4= ruleIncDecStmt | this_Assignment_5= ruleAssignment | this_ShortVarDecl_6= ruleShortVarDecl ) ;
    public final EObject ruleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject this_ExpressionStmt_2 = null;

        EObject this_SendStmt_3 = null;

        EObject this_IncDecStmt_4 = null;

        EObject this_Assignment_5 = null;

        EObject this_ShortVarDecl_6 = null;



        	enterRule();

        try {
            // InternalGo.g:2800:2: ( ( ( () ruleEmptyStmt ) | this_ExpressionStmt_2= ruleExpressionStmt | this_SendStmt_3= ruleSendStmt | this_IncDecStmt_4= ruleIncDecStmt | this_Assignment_5= ruleAssignment | this_ShortVarDecl_6= ruleShortVarDecl ) )
            // InternalGo.g:2801:2: ( ( () ruleEmptyStmt ) | this_ExpressionStmt_2= ruleExpressionStmt | this_SendStmt_3= ruleSendStmt | this_IncDecStmt_4= ruleIncDecStmt | this_Assignment_5= ruleAssignment | this_ShortVarDecl_6= ruleShortVarDecl )
            {
            // InternalGo.g:2801:2: ( ( () ruleEmptyStmt ) | this_ExpressionStmt_2= ruleExpressionStmt | this_SendStmt_3= ruleSendStmt | this_IncDecStmt_4= ruleIncDecStmt | this_Assignment_5= ruleAssignment | this_ShortVarDecl_6= ruleShortVarDecl )
            int alt37=6;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalGo.g:2802:3: ( () ruleEmptyStmt )
                    {
                    // InternalGo.g:2802:3: ( () ruleEmptyStmt )
                    // InternalGo.g:2803:4: () ruleEmptyStmt
                    {
                    // InternalGo.g:2803:4: ()
                    // InternalGo.g:2804:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSimpleStmtAccess().getSimpleStmtAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEmptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2825:3: this_ExpressionStmt_2= ruleExpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStmt_2=ruleExpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionStmt_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:2837:3: this_SendStmt_3= ruleSendStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SendStmt_3=ruleSendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SendStmt_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:2849:3: this_IncDecStmt_4= ruleIncDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IncDecStmt_4=ruleIncDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IncDecStmt_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:2861:3: this_Assignment_5= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Assignment_5=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2873:3: this_ShortVarDecl_6= ruleShortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ShortVarDecl_6=ruleShortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ShortVarDecl_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStmt"


    // $ANTLR start "entryRuleGoStmt"
    // InternalGo.g:2888:1: entryRuleGoStmt returns [String current=null] : iv_ruleGoStmt= ruleGoStmt EOF ;
    public final String entryRuleGoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGoStmt = null;


        try {
            // InternalGo.g:2888:46: (iv_ruleGoStmt= ruleGoStmt EOF )
            // InternalGo.g:2889:2: iv_ruleGoStmt= ruleGoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoStmt=ruleGoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoStmt"


    // $ANTLR start "ruleGoStmt"
    // InternalGo.g:2895:1: ruleGoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2901:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:2902:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:2902:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:2903:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,60,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoStmt"


    // $ANTLR start "entryRuleReturnStmt"
    // InternalGo.g:2922:1: entryRuleReturnStmt returns [EObject current=null] : iv_ruleReturnStmt= ruleReturnStmt EOF ;
    public final EObject entryRuleReturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStmt = null;


        try {
            // InternalGo.g:2922:51: (iv_ruleReturnStmt= ruleReturnStmt EOF )
            // InternalGo.g:2923:2: iv_ruleReturnStmt= ruleReturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStmt=ruleReturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStmt"


    // $ANTLR start "ruleReturnStmt"
    // InternalGo.g:2929:1: ruleReturnStmt returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) ;
    public final EObject ruleReturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2935:2: ( ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) )
            // InternalGo.g:2936:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            {
            // InternalGo.g:2936:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            // InternalGo.g:2937:3: () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            {
            // InternalGo.g:2937:3: ()
            // InternalGo.g:2938:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,61,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
              		
            }
            // InternalGo.g:2951:3: ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_LETTER||(LA38_0>=RULE_DECIMAL_LIT && LA38_0<=RULE_DECIMALS)||(LA38_0>=RULE_RAW_STRING_LIT && LA38_0<=RULE_INTERPRETED_STRING_LIT)||LA38_0==RULE_UNARY_OP||LA38_0==40||LA38_0==42||(LA38_0>=44 && LA38_0<=45)||LA38_0==47||LA38_0==49||LA38_0==53||(LA38_0>=55 && LA38_0<=58)) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalGo.g:2952:4: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:2952:4: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:2953:5: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"expressionlist",
                      						lv_expressionlist_2_0,
                      						"org.xtext.example.mydsl.Go.ExpressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStmt"


    // $ANTLR start "entryRuleBreakStmt"
    // InternalGo.g:2974:1: entryRuleBreakStmt returns [String current=null] : iv_ruleBreakStmt= ruleBreakStmt EOF ;
    public final String entryRuleBreakStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBreakStmt = null;


        try {
            // InternalGo.g:2974:49: (iv_ruleBreakStmt= ruleBreakStmt EOF )
            // InternalGo.g:2975:2: iv_ruleBreakStmt= ruleBreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStmt=ruleBreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBreakStmt"


    // $ANTLR start "ruleBreakStmt"
    // InternalGo.g:2981:1: ruleBreakStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'break' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleBreakStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2987:2: ( (kw= 'break' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:2988:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:2988:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            // InternalGo.g:2989:3: kw= 'break' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,62,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getBreakStmtAccess().getBreakKeyword_0());
              		
            }
            // InternalGo.g:2994:3: (this_Label_1= ruleLabel )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_LETTER) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalGo.g:2995:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBreakStmt"


    // $ANTLR start "entryRuleContinueStmt"
    // InternalGo.g:3010:1: entryRuleContinueStmt returns [String current=null] : iv_ruleContinueStmt= ruleContinueStmt EOF ;
    public final String entryRuleContinueStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleContinueStmt = null;


        try {
            // InternalGo.g:3010:52: (iv_ruleContinueStmt= ruleContinueStmt EOF )
            // InternalGo.g:3011:2: iv_ruleContinueStmt= ruleContinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStmt=ruleContinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContinueStmt"


    // $ANTLR start "ruleContinueStmt"
    // InternalGo.g:3017:1: ruleContinueStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'continue' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleContinueStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3023:2: ( (kw= 'continue' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:3024:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:3024:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            // InternalGo.g:3025:3: kw= 'continue' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,63,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getContinueStmtAccess().getContinueKeyword_0());
              		
            }
            // InternalGo.g:3030:3: (this_Label_1= ruleLabel )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_LETTER) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3031:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContinueStmt"


    // $ANTLR start "entryRuleGotoStmt"
    // InternalGo.g:3046:1: entryRuleGotoStmt returns [String current=null] : iv_ruleGotoStmt= ruleGotoStmt EOF ;
    public final String entryRuleGotoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGotoStmt = null;


        try {
            // InternalGo.g:3046:48: (iv_ruleGotoStmt= ruleGotoStmt EOF )
            // InternalGo.g:3047:2: iv_ruleGotoStmt= ruleGotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGotoStmt=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGotoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGotoStmt"


    // $ANTLR start "ruleGotoStmt"
    // InternalGo.g:3053:1: ruleGotoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGotoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3059:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:3060:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:3060:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:3061:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,60,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGotoStmt"


    // $ANTLR start "entryRuleIfStmt"
    // InternalGo.g:3080:1: entryRuleIfStmt returns [EObject current=null] : iv_ruleIfStmt= ruleIfStmt EOF ;
    public final EObject entryRuleIfStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStmt = null;


        try {
            // InternalGo.g:3080:47: (iv_ruleIfStmt= ruleIfStmt EOF )
            // InternalGo.g:3081:2: iv_ruleIfStmt= ruleIfStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStmt=ruleIfStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStmt"


    // $ANTLR start "ruleIfStmt"
    // InternalGo.g:3087:1: ruleIfStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) ;
    public final EObject ruleIfStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_simst_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_block_4_0 = null;

        EObject lv_ifs_6_0 = null;

        EObject lv_block2_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3093:2: ( (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) )
            // InternalGo.g:3094:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            {
            // InternalGo.g:3094:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            // InternalGo.g:3095:3: otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            {
            otherlv_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:3099:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?
            int alt41=2;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // InternalGo.g:3100:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:3100:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:3101:5: (lv_simst_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:3101:5: (lv_simst_1_0= ruleSimpleStmt )
                    // InternalGo.g:3102:6: lv_simst_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_simst_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"simst",
                      							lv_simst_1_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,39,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3124:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:3125:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:3125:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:3126:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3143:3: ( (lv_block_4_0= ruleBlock ) )
            // InternalGo.g:3144:4: (lv_block_4_0= ruleBlock )
            {
            // InternalGo.g:3144:4: (lv_block_4_0= ruleBlock )
            // InternalGo.g:3145:5: lv_block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3162:3: (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==65) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3163:4: otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    {
                    otherlv_5=(Token)match(input,65,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:3167:4: ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==64) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==50) ) {
                        alt42=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 42, 0, input);

                        throw nvae;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalGo.g:3168:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            {
                            // InternalGo.g:3168:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            // InternalGo.g:3169:6: (lv_ifs_6_0= ruleIfStmt )
                            {
                            // InternalGo.g:3169:6: (lv_ifs_6_0= ruleIfStmt )
                            // InternalGo.g:3170:7: lv_ifs_6_0= ruleIfStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfsIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ifs_6_0=ruleIfStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"ifs",
                              								lv_ifs_6_0,
                              								"org.xtext.example.mydsl.Go.IfStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:3188:5: ( (lv_block2_7_0= ruleBlock ) )
                            {
                            // InternalGo.g:3188:5: ( (lv_block2_7_0= ruleBlock ) )
                            // InternalGo.g:3189:6: (lv_block2_7_0= ruleBlock )
                            {
                            // InternalGo.g:3189:6: (lv_block2_7_0= ruleBlock )
                            // InternalGo.g:3190:7: lv_block2_7_0= ruleBlock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getBlock2BlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_block2_7_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"block2",
                              								lv_block2_7_0,
                              								"org.xtext.example.mydsl.Go.Block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStmt"


    // $ANTLR start "entryRuleFallthroughStmt"
    // InternalGo.g:3213:1: entryRuleFallthroughStmt returns [String current=null] : iv_ruleFallthroughStmt= ruleFallthroughStmt EOF ;
    public final String entryRuleFallthroughStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFallthroughStmt = null;


        try {
            // InternalGo.g:3213:55: (iv_ruleFallthroughStmt= ruleFallthroughStmt EOF )
            // InternalGo.g:3214:2: iv_ruleFallthroughStmt= ruleFallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFallthroughStmt=ruleFallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFallthroughStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallthroughStmt"


    // $ANTLR start "ruleFallthroughStmt"
    // InternalGo.g:3220:1: ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'fallthrough' ;
    public final AntlrDatatypeRuleToken ruleFallthroughStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:3226:2: (kw= 'fallthrough' )
            // InternalGo.g:3227:2: kw= 'fallthrough'
            {
            kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallthroughStmt"


    // $ANTLR start "entryRuleSwitchStmt"
    // InternalGo.g:3235:1: entryRuleSwitchStmt returns [EObject current=null] : iv_ruleSwitchStmt= ruleSwitchStmt EOF ;
    public final EObject entryRuleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStmt = null;


        try {
            // InternalGo.g:3235:51: (iv_ruleSwitchStmt= ruleSwitchStmt EOF )
            // InternalGo.g:3236:2: iv_ruleSwitchStmt= ruleSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStmt=ruleSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchStmt"


    // $ANTLR start "ruleSwitchStmt"
    // InternalGo.g:3242:1: ruleSwitchStmt returns [EObject current=null] : (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt ) ;
    public final EObject ruleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject this_ExprSwitchStmt_0 = null;

        EObject this_TypeSwitchStmt_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3248:2: ( (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt ) )
            // InternalGo.g:3249:2: (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt )
            {
            // InternalGo.g:3249:2: (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==77) ) {
                int LA44_1 = input.LA(2);

                if ( (synpred73_InternalGo()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalGo.g:3250:3: this_ExprSwitchStmt_0= ruleExprSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExprSwitchStmt_0=ruleExprSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExprSwitchStmt_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3262:3: this_TypeSwitchStmt_1= ruleTypeSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeSwitchStmt_1=ruleTypeSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeSwitchStmt_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchStmt"


    // $ANTLR start "entryRuleSelectStmt"
    // InternalGo.g:3277:1: entryRuleSelectStmt returns [EObject current=null] : iv_ruleSelectStmt= ruleSelectStmt EOF ;
    public final EObject entryRuleSelectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectStmt = null;


        try {
            // InternalGo.g:3277:51: (iv_ruleSelectStmt= ruleSelectStmt EOF )
            // InternalGo.g:3278:2: iv_ruleSelectStmt= ruleSelectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectStmt=ruleSelectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectStmt"


    // $ANTLR start "ruleSelectStmt"
    // InternalGo.g:3284:1: ruleSelectStmt returns [EObject current=null] : ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) ;
    public final EObject ruleSelectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_commclause_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3290:2: ( ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) )
            // InternalGo.g:3291:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            {
            // InternalGo.g:3291:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            // InternalGo.g:3292:3: () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}'
            {
            // InternalGo.g:3292:3: ()
            // InternalGo.g:3293:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,67,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,50,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:3310:3: ( (lv_commclause_3_0= ruleCommClause ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=78 && LA45_0<=79)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalGo.g:3311:4: (lv_commclause_3_0= ruleCommClause )
            	    {
            	    // InternalGo.g:3311:4: (lv_commclause_3_0= ruleCommClause )
            	    // InternalGo.g:3312:5: lv_commclause_3_0= ruleCommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommclauseCommClauseParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_commclause_3_0=ruleCommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"commclause",
            	      						lv_commclause_3_0,
            	      						"org.xtext.example.mydsl.Go.CommClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            otherlv_4=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectStmt"


    // $ANTLR start "entryRuleForStmt"
    // InternalGo.g:3337:1: entryRuleForStmt returns [EObject current=null] : iv_ruleForStmt= ruleForStmt EOF ;
    public final EObject entryRuleForStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStmt = null;


        try {
            // InternalGo.g:3337:48: (iv_ruleForStmt= ruleForStmt EOF )
            // InternalGo.g:3338:2: iv_ruleForStmt= ruleForStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStmt=ruleForStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForStmt"


    // $ANTLR start "ruleForStmt"
    // InternalGo.g:3344:1: ruleForStmt returns [EObject current=null] : (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) ) ;
    public final EObject ruleForStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_condition_1_0 = null;

        EObject lv_for_2_0 = null;

        EObject lv_range_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3350:2: ( (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) ) )
            // InternalGo.g:3351:2: (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) )
            {
            // InternalGo.g:3351:2: (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) )
            // InternalGo.g:3352:3: otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) )
            {
            otherlv_0=(Token)match(input,68,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
              		
            }
            // InternalGo.g:3356:3: ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )*
            loop46:
            do {
                int alt46=4;
                alt46 = dfa46.predict(input);
                switch (alt46) {
            	case 1 :
            	    // InternalGo.g:3357:4: ( (lv_condition_1_0= ruleCondition ) )
            	    {
            	    // InternalGo.g:3357:4: ( (lv_condition_1_0= ruleCondition ) )
            	    // InternalGo.g:3358:5: (lv_condition_1_0= ruleCondition )
            	    {
            	    // InternalGo.g:3358:5: (lv_condition_1_0= ruleCondition )
            	    // InternalGo.g:3359:6: lv_condition_1_0= ruleCondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_condition_1_0=ruleCondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForStmtRule());
            	      						}
            	      						add(
            	      							current,
            	      							"condition",
            	      							lv_condition_1_0,
            	      							"org.xtext.example.mydsl.Go.Condition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGo.g:3377:4: ( (lv_for_2_0= ruleForClause ) )
            	    {
            	    // InternalGo.g:3377:4: ( (lv_for_2_0= ruleForClause ) )
            	    // InternalGo.g:3378:5: (lv_for_2_0= ruleForClause )
            	    {
            	    // InternalGo.g:3378:5: (lv_for_2_0= ruleForClause )
            	    // InternalGo.g:3379:6: lv_for_2_0= ruleForClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_for_2_0=ruleForClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForStmtRule());
            	      						}
            	      						add(
            	      							current,
            	      							"for",
            	      							lv_for_2_0,
            	      							"org.xtext.example.mydsl.Go.ForClause");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalGo.g:3397:4: ( (lv_range_3_0= ruleRangeClause ) )
            	    {
            	    // InternalGo.g:3397:4: ( (lv_range_3_0= ruleRangeClause ) )
            	    // InternalGo.g:3398:5: (lv_range_3_0= ruleRangeClause )
            	    {
            	    // InternalGo.g:3398:5: (lv_range_3_0= ruleRangeClause )
            	    // InternalGo.g:3399:6: lv_range_3_0= ruleRangeClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_range_3_0=ruleRangeClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForStmtRule());
            	      						}
            	      						add(
            	      							current,
            	      							"range",
            	      							lv_range_3_0,
            	      							"org.xtext.example.mydsl.Go.RangeClause");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            // InternalGo.g:3417:3: ( (lv_block_4_0= ruleBlock ) )
            // InternalGo.g:3418:4: (lv_block_4_0= ruleBlock )
            {
            // InternalGo.g:3418:4: (lv_block_4_0= ruleBlock )
            // InternalGo.g:3419:5: lv_block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForStmt"


    // $ANTLR start "entryRuleDeferStmt"
    // InternalGo.g:3440:1: entryRuleDeferStmt returns [EObject current=null] : iv_ruleDeferStmt= ruleDeferStmt EOF ;
    public final EObject entryRuleDeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeferStmt = null;


        try {
            // InternalGo.g:3440:50: (iv_ruleDeferStmt= ruleDeferStmt EOF )
            // InternalGo.g:3441:2: iv_ruleDeferStmt= ruleDeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeferStmt=ruleDeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeferStmt"


    // $ANTLR start "ruleDeferStmt"
    // InternalGo.g:3447:1: ruleDeferStmt returns [EObject current=null] : (otherlv_0= 'defer' this_Expression_1= ruleExpression ) ;
    public final EObject ruleDeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Expression_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3453:2: ( (otherlv_0= 'defer' this_Expression_1= ruleExpression ) )
            // InternalGo.g:3454:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            {
            // InternalGo.g:3454:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            // InternalGo.g:3455:3: otherlv_0= 'defer' this_Expression_1= ruleExpression
            {
            otherlv_0=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Expression_1=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeferStmt"


    // $ANTLR start "entryRuleConstDecl"
    // InternalGo.g:3474:1: entryRuleConstDecl returns [EObject current=null] : iv_ruleConstDecl= ruleConstDecl EOF ;
    public final EObject entryRuleConstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstDecl = null;


        try {
            // InternalGo.g:3474:50: (iv_ruleConstDecl= ruleConstDecl EOF )
            // InternalGo.g:3475:2: iv_ruleConstDecl= ruleConstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstDecl=ruleConstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstDecl"


    // $ANTLR start "ruleConstDecl"
    // InternalGo.g:3481:1: ruleConstDecl returns [EObject current=null] : ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleConstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_constspec_2_0 = null;

        EObject lv_constspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3487:2: ( ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3488:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3488:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:3489:3: () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3489:3: ()
            // InternalGo.g:3490:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,70,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
              		
            }
            // InternalGo.g:3503:3: ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_LETTER) ) {
                alt48=1;
            }
            else if ( (LA48_0==45) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3504:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    {
                    // InternalGo.g:3504:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    // InternalGo.g:3505:5: (lv_constspec_2_0= ruleConstSpec )
                    {
                    // InternalGo.g:3505:5: (lv_constspec_2_0= ruleConstSpec )
                    // InternalGo.g:3506:6: lv_constspec_2_0= ruleConstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getConstspecConstSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constspec_2_0=ruleConstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						set(
                      							current,
                      							"constspec",
                      							lv_constspec_2_0,
                      							"org.xtext.example.mydsl.Go.ConstSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3524:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3524:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:3525:5: otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3529:5: ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( (LA47_0==RULE_LETTER) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalGo.g:3530:6: ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:3530:6: ( (lv_constspec2_4_0= ruleConstSpec ) )
                    	    // InternalGo.g:3531:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    {
                    	    // InternalGo.g:3531:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    // InternalGo.g:3532:8: lv_constspec2_4_0= ruleConstSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getConstDeclAccess().getConstspec2ConstSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_constspec2_4_0=ruleConstSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"constspec2",
                    	      									lv_constspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.ConstSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,39,FOLLOW_46); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstDecl"


    // $ANTLR start "entryRuleConstSpec"
    // InternalGo.g:3564:1: entryRuleConstSpec returns [EObject current=null] : iv_ruleConstSpec= ruleConstSpec EOF ;
    public final EObject entryRuleConstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstSpec = null;


        try {
            // InternalGo.g:3564:50: (iv_ruleConstSpec= ruleConstSpec EOF )
            // InternalGo.g:3565:2: iv_ruleConstSpec= ruleConstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstSpec=ruleConstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstSpec"


    // $ANTLR start "ruleConstSpec"
    // InternalGo.g:3571:1: ruleConstSpec returns [EObject current=null] : ( ruleIdentifierList (this_Type_1= ruleType otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) ) ) ;
    public final EObject ruleConstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_Type_1 = null;

        EObject lv_expressionlist_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3577:2: ( ( ruleIdentifierList (this_Type_1= ruleType otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) ) ) )
            // InternalGo.g:3578:2: ( ruleIdentifierList (this_Type_1= ruleType otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) ) )
            {
            // InternalGo.g:3578:2: ( ruleIdentifierList (this_Type_1= ruleType otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) ) )
            // InternalGo.g:3579:3: ruleIdentifierList (this_Type_1= ruleType otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_18);
            ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:3589:3: (this_Type_1= ruleType otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )
            // InternalGo.g:3590:4: this_Type_1= ruleType otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConstSpecAccess().getTypeParserRuleCall_1_0());
              			
            }
            pushFollow(FOLLOW_47);
            this_Type_1=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current = this_Type_1;
              				afterParserOrEnumRuleCall();
              			
            }
            otherlv_2=(Token)match(input,71,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
              			
            }
            // InternalGo.g:3605:4: ( (lv_expressionlist_3_0= ruleExpressionList ) )
            // InternalGo.g:3606:5: (lv_expressionlist_3_0= ruleExpressionList )
            {
            // InternalGo.g:3606:5: (lv_expressionlist_3_0= ruleExpressionList )
            // InternalGo.g:3607:6: lv_expressionlist_3_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_1_2_0());
              					
            }
            pushFollow(FOLLOW_2);
            lv_expressionlist_3_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getConstSpecRule());
              						}
              						set(
              							current,
              							"expressionlist",
              							lv_expressionlist_3_0,
              							"org.xtext.example.mydsl.Go.ExpressionList");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstSpec"


    // $ANTLR start "entryRuleTypeDecl"
    // InternalGo.g:3629:1: entryRuleTypeDecl returns [EObject current=null] : iv_ruleTypeDecl= ruleTypeDecl EOF ;
    public final EObject entryRuleTypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDecl = null;


        try {
            // InternalGo.g:3629:49: (iv_ruleTypeDecl= ruleTypeDecl EOF )
            // InternalGo.g:3630:2: iv_ruleTypeDecl= ruleTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDecl=ruleTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDecl"


    // $ANTLR start "ruleTypeDecl"
    // InternalGo.g:3636:1: ruleTypeDecl returns [EObject current=null] : ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleTypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_typespec_2_0 = null;

        EObject lv_typespec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3642:2: ( ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3643:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3643:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:3644:3: () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3644:3: ()
            // InternalGo.g:3645:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
              		
            }
            // InternalGo.g:3658:3: ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_LETTER) ) {
                alt50=1;
            }
            else if ( (LA50_0==45) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalGo.g:3659:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    {
                    // InternalGo.g:3659:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    // InternalGo.g:3660:5: (lv_typespec_2_0= ruleTypeSpec )
                    {
                    // InternalGo.g:3660:5: (lv_typespec_2_0= ruleTypeSpec )
                    // InternalGo.g:3661:6: lv_typespec_2_0= ruleTypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespecTypeSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typespec_2_0=ruleTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						set(
                      							current,
                      							"typespec",
                      							lv_typespec_2_0,
                      							"org.xtext.example.mydsl.Go.TypeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3679:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3679:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:3680:5: otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3684:5: ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==RULE_LETTER) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    // InternalGo.g:3685:6: ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:3685:6: ( (lv_typespec2_4_0= ruleTypeSpec ) )
                    	    // InternalGo.g:3686:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    {
                    	    // InternalGo.g:3686:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    // InternalGo.g:3687:8: lv_typespec2_4_0= ruleTypeSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespec2TypeSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_typespec2_4_0=ruleTypeSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"typespec2",
                    	      									lv_typespec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.TypeSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,39,FOLLOW_46); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDecl"


    // $ANTLR start "entryRuleTypeSpec"
    // InternalGo.g:3719:1: entryRuleTypeSpec returns [EObject current=null] : iv_ruleTypeSpec= ruleTypeSpec EOF ;
    public final EObject entryRuleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSpec = null;


        try {
            // InternalGo.g:3719:49: (iv_ruleTypeSpec= ruleTypeSpec EOF )
            // InternalGo.g:3720:2: iv_ruleTypeSpec= ruleTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSpec=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSpec"


    // $ANTLR start "ruleTypeSpec"
    // InternalGo.g:3726:1: ruleTypeSpec returns [EObject current=null] : (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) ;
    public final EObject ruleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject this_AliasDecl_0 = null;

        EObject this_TypeDef_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3732:2: ( (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) )
            // InternalGo.g:3733:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            {
            // InternalGo.g:3733:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalGo.g:3734:3: this_AliasDecl_0= ruleAliasDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AliasDecl_0=ruleAliasDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AliasDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3746:3: this_TypeDef_1= ruleTypeDef
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDef_1=ruleTypeDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSpec"


    // $ANTLR start "entryRuleTypeDef"
    // InternalGo.g:3761:1: entryRuleTypeDef returns [EObject current=null] : iv_ruleTypeDef= ruleTypeDef EOF ;
    public final EObject entryRuleTypeDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDef = null;


        try {
            // InternalGo.g:3761:48: (iv_ruleTypeDef= ruleTypeDef EOF )
            // InternalGo.g:3762:2: iv_ruleTypeDef= ruleTypeDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDef=ruleTypeDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDef"


    // $ANTLR start "ruleTypeDef"
    // InternalGo.g:3768:1: ruleTypeDef returns [EObject current=null] : ( ruleIDENTIFIER this_Type_1= ruleType ) ;
    public final EObject ruleTypeDef() throws RecognitionException {
        EObject current = null;

        EObject this_Type_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3774:2: ( ( ruleIDENTIFIER this_Type_1= ruleType ) )
            // InternalGo.g:3775:2: ( ruleIDENTIFIER this_Type_1= ruleType )
            {
            // InternalGo.g:3775:2: ( ruleIDENTIFIER this_Type_1= ruleType )
            // InternalGo.g:3776:3: ruleIDENTIFIER this_Type_1= ruleType
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeDefAccess().getIDENTIFIERParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_18);
            ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeDefAccess().getTypeParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Type_1=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Type_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDef"


    // $ANTLR start "entryRuleAliasDecl"
    // InternalGo.g:3801:1: entryRuleAliasDecl returns [EObject current=null] : iv_ruleAliasDecl= ruleAliasDecl EOF ;
    public final EObject entryRuleAliasDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasDecl = null;


        try {
            // InternalGo.g:3801:50: (iv_ruleAliasDecl= ruleAliasDecl EOF )
            // InternalGo.g:3802:2: iv_ruleAliasDecl= ruleAliasDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasDecl=ruleAliasDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasDecl"


    // $ANTLR start "ruleAliasDecl"
    // InternalGo.g:3808:1: ruleAliasDecl returns [EObject current=null] : ( ruleIDENTIFIER otherlv_1= '=' this_Type_2= ruleType ) ;
    public final EObject ruleAliasDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_Type_2 = null;



        	enterRule();

        try {
            // InternalGo.g:3814:2: ( ( ruleIDENTIFIER otherlv_1= '=' this_Type_2= ruleType ) )
            // InternalGo.g:3815:2: ( ruleIDENTIFIER otherlv_1= '=' this_Type_2= ruleType )
            {
            // InternalGo.g:3815:2: ( ruleIDENTIFIER otherlv_1= '=' this_Type_2= ruleType )
            // InternalGo.g:3816:3: ruleIDENTIFIER otherlv_1= '=' this_Type_2= ruleType
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAliasDeclAccess().getIDENTIFIERParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_47);
            ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,71,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAliasDeclAccess().getTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_Type_2=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Type_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasDecl"


    // $ANTLR start "entryRuleVarDecl"
    // InternalGo.g:3845:1: entryRuleVarDecl returns [EObject current=null] : iv_ruleVarDecl= ruleVarDecl EOF ;
    public final EObject entryRuleVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDecl = null;


        try {
            // InternalGo.g:3845:48: (iv_ruleVarDecl= ruleVarDecl EOF )
            // InternalGo.g:3846:2: iv_ruleVarDecl= ruleVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDecl=ruleVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDecl"


    // $ANTLR start "ruleVarDecl"
    // InternalGo.g:3852:1: ruleVarDecl returns [EObject current=null] : ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_varspec_2_0 = null;

        EObject lv_varspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3858:2: ( ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3859:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3859:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:3860:3: () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3860:3: ()
            // InternalGo.g:3861:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
              		
            }
            // InternalGo.g:3874:3: ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_LETTER) ) {
                alt53=1;
            }
            else if ( (LA53_0==45) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalGo.g:3875:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    {
                    // InternalGo.g:3875:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    // InternalGo.g:3876:5: (lv_varspec_2_0= ruleVarSpec )
                    {
                    // InternalGo.g:3876:5: (lv_varspec_2_0= ruleVarSpec )
                    // InternalGo.g:3877:6: lv_varspec_2_0= ruleVarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getVarspecVarSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_varspec_2_0=ruleVarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						set(
                      							current,
                      							"varspec",
                      							lv_varspec_2_0,
                      							"org.xtext.example.mydsl.Go.VarSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3895:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3895:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:3896:5: otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3900:5: ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==RULE_LETTER) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalGo.g:3901:6: ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:3901:6: ( (lv_varspec2_4_0= ruleVarSpec ) )
                    	    // InternalGo.g:3902:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    {
                    	    // InternalGo.g:3902:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    // InternalGo.g:3903:8: lv_varspec2_4_0= ruleVarSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVarDeclAccess().getVarspec2VarSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_varspec2_4_0=ruleVarSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"varspec2",
                    	      									lv_varspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.VarSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,39,FOLLOW_46); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDecl"


    // $ANTLR start "entryRuleVarSpec"
    // InternalGo.g:3935:1: entryRuleVarSpec returns [EObject current=null] : iv_ruleVarSpec= ruleVarSpec EOF ;
    public final EObject entryRuleVarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarSpec = null;


        try {
            // InternalGo.g:3935:48: (iv_ruleVarSpec= ruleVarSpec EOF )
            // InternalGo.g:3936:2: iv_ruleVarSpec= ruleVarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarSpec=ruleVarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarSpec"


    // $ANTLR start "ruleVarSpec"
    // InternalGo.g:3942:1: ruleVarSpec returns [EObject current=null] : ( ruleIdentifierList ( (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList ) ) ) ;
    public final EObject ruleVarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_Type_1 = null;

        EObject lv_expressionlist_3_0 = null;

        EObject this_ExpressionList_5 = null;



        	enterRule();

        try {
            // InternalGo.g:3948:2: ( ( ruleIdentifierList ( (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList ) ) ) )
            // InternalGo.g:3949:2: ( ruleIdentifierList ( (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList ) ) )
            {
            // InternalGo.g:3949:2: ( ruleIdentifierList ( (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList ) ) )
            // InternalGo.g:3950:3: ruleIdentifierList ( (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_48);
            ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:3960:3: ( (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_LETTER||LA55_0==40||LA55_0==45||LA55_0==47||LA55_0==49||LA55_0==53||(LA55_0>=55 && LA55_0<=58)) ) {
                alt55=1;
            }
            else if ( (LA55_0==71) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalGo.g:3961:4: (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
                    {
                    // InternalGo.g:3961:4: (this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
                    // InternalGo.g:3962:5: this_Type_1= ruleType (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVarSpecAccess().getTypeParserRuleCall_1_0_0());
                      				
                    }
                    pushFollow(FOLLOW_49);
                    this_Type_1=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_Type_1;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalGo.g:3973:5: (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==71) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalGo.g:3974:6: otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
                            {
                            otherlv_2=(Token)match(input,71,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
                              					
                            }
                            // InternalGo.g:3978:6: ( (lv_expressionlist_3_0= ruleExpressionList ) )
                            // InternalGo.g:3979:7: (lv_expressionlist_3_0= ruleExpressionList )
                            {
                            // InternalGo.g:3979:7: (lv_expressionlist_3_0= ruleExpressionList )
                            // InternalGo.g:3980:8: lv_expressionlist_3_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionlistExpressionListParserRuleCall_1_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_expressionlist_3_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVarSpecRule());
                              								}
                              								set(
                              									current,
                              									"expressionlist",
                              									lv_expressionlist_3_0,
                              									"org.xtext.example.mydsl.Go.ExpressionList");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4000:4: (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList )
                    {
                    // InternalGo.g:4000:4: (otherlv_4= '=' this_ExpressionList_5= ruleExpressionList )
                    // InternalGo.g:4001:5: otherlv_4= '=' this_ExpressionList_5= ruleExpressionList
                    {
                    otherlv_4=(Token)match(input,71,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListParserRuleCall_1_1_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionList_5=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_ExpressionList_5;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarSpec"


    // $ANTLR start "entryRuleEmptyStmt"
    // InternalGo.g:4022:1: entryRuleEmptyStmt returns [String current=null] : iv_ruleEmptyStmt= ruleEmptyStmt EOF ;
    public final String entryRuleEmptyStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmptyStmt = null;


        try {
            // InternalGo.g:4022:49: (iv_ruleEmptyStmt= ruleEmptyStmt EOF )
            // InternalGo.g:4023:2: iv_ruleEmptyStmt= ruleEmptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStmt=ruleEmptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyStmt"


    // $ANTLR start "ruleEmptyStmt"
    // InternalGo.g:4029:1: ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ';' ;
    public final AntlrDatatypeRuleToken ruleEmptyStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:4035:2: (kw= ';' )
            // InternalGo.g:4036:2: kw= ';'
            {
            kw=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getEmptyStmtAccess().getSemicolonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyStmt"


    // $ANTLR start "entryRuleExpressionStmt"
    // InternalGo.g:4044:1: entryRuleExpressionStmt returns [EObject current=null] : iv_ruleExpressionStmt= ruleExpressionStmt EOF ;
    public final EObject entryRuleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStmt = null;


        try {
            // InternalGo.g:4044:55: (iv_ruleExpressionStmt= ruleExpressionStmt EOF )
            // InternalGo.g:4045:2: iv_ruleExpressionStmt= ruleExpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStmt=ruleExpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionStmt"


    // $ANTLR start "ruleExpressionStmt"
    // InternalGo.g:4051:1: ruleExpressionStmt returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4057:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:4058:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionStmt"


    // $ANTLR start "entryRuleSendStmt"
    // InternalGo.g:4072:1: entryRuleSendStmt returns [EObject current=null] : iv_ruleSendStmt= ruleSendStmt EOF ;
    public final EObject entryRuleSendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSendStmt = null;


        try {
            // InternalGo.g:4072:49: (iv_ruleSendStmt= ruleSendStmt EOF )
            // InternalGo.g:4073:2: iv_ruleSendStmt= ruleSendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSendStmt=ruleSendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSendStmt"


    // $ANTLR start "ruleSendStmt"
    // InternalGo.g:4079:1: ruleSendStmt returns [EObject current=null] : ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleSendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ch_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4085:2: ( ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalGo.g:4086:2: ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalGo.g:4086:2: ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalGo.g:4087:3: ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalGo.g:4087:3: ( (lv_ch_0_0= ruleChannel ) )
            // InternalGo.g:4088:4: (lv_ch_0_0= ruleChannel )
            {
            // InternalGo.g:4088:4: (lv_ch_0_0= ruleChannel )
            // InternalGo.g:4089:5: lv_ch_0_0= ruleChannel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getChChannelParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_ch_0_0=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"ch",
              						lv_ch_0_0,
              						"org.xtext.example.mydsl.Go.Channel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,58,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalGo.g:4110:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalGo.g:4111:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalGo.g:4111:4: (lv_expression_2_0= ruleExpression )
            // InternalGo.g:4112:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSendStmt"


    // $ANTLR start "entryRuleChannel"
    // InternalGo.g:4133:1: entryRuleChannel returns [EObject current=null] : iv_ruleChannel= ruleChannel EOF ;
    public final EObject entryRuleChannel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannel = null;


        try {
            // InternalGo.g:4133:48: (iv_ruleChannel= ruleChannel EOF )
            // InternalGo.g:4134:2: iv_ruleChannel= ruleChannel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannel=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannel"


    // $ANTLR start "ruleChannel"
    // InternalGo.g:4140:1: ruleChannel returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleChannel() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4146:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:4147:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getChannelAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannel"


    // $ANTLR start "entryRuleIncDecStmt"
    // InternalGo.g:4161:1: entryRuleIncDecStmt returns [EObject current=null] : iv_ruleIncDecStmt= ruleIncDecStmt EOF ;
    public final EObject entryRuleIncDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncDecStmt = null;


        try {
            // InternalGo.g:4161:51: (iv_ruleIncDecStmt= ruleIncDecStmt EOF )
            // InternalGo.g:4162:2: iv_ruleIncDecStmt= ruleIncDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncDecStmt=ruleIncDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncDecStmt"


    // $ANTLR start "ruleIncDecStmt"
    // InternalGo.g:4168:1: ruleIncDecStmt returns [EObject current=null] : (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) ) ;
    public final EObject ruleIncDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4174:2: ( (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) ) )
            // InternalGo.g:4175:2: (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) )
            {
            // InternalGo.g:4175:2: (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) )
            // InternalGo.g:4176:3: this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_51);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:4187:3: (otherlv_1= '++' | otherlv_2= '--' )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==74) ) {
                alt56=1;
            }
            else if ( (LA56_0==75) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4188:4: otherlv_1= '++'
                    {
                    otherlv_1=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:4193:4: otherlv_2= '--'
                    {
                    otherlv_2=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncDecStmt"


    // $ANTLR start "entryRuleAssignment"
    // InternalGo.g:4202:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalGo.g:4202:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalGo.g:4203:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalGo.g:4209:1: ruleAssignment returns [EObject current=null] : ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) this_ASSING_OP_1= RULE_ASSING_OP ( (lv_expressionlist2_2_0= ruleExpressionList ) ) ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token this_ASSING_OP_1=null;
        EObject lv_expressionlist_0_0 = null;

        EObject lv_expressionlist2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4215:2: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) this_ASSING_OP_1= RULE_ASSING_OP ( (lv_expressionlist2_2_0= ruleExpressionList ) ) ) )
            // InternalGo.g:4216:2: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) this_ASSING_OP_1= RULE_ASSING_OP ( (lv_expressionlist2_2_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:4216:2: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) this_ASSING_OP_1= RULE_ASSING_OP ( (lv_expressionlist2_2_0= ruleExpressionList ) ) )
            // InternalGo.g:4217:3: ( (lv_expressionlist_0_0= ruleExpressionList ) ) this_ASSING_OP_1= RULE_ASSING_OP ( (lv_expressionlist2_2_0= ruleExpressionList ) )
            {
            // InternalGo.g:4217:3: ( (lv_expressionlist_0_0= ruleExpressionList ) )
            // InternalGo.g:4218:4: (lv_expressionlist_0_0= ruleExpressionList )
            {
            // InternalGo.g:4218:4: (lv_expressionlist_0_0= ruleExpressionList )
            // InternalGo.g:4219:5: lv_expressionlist_0_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlistExpressionListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_expressionlist_0_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist",
              						lv_expressionlist_0_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_ASSING_OP_1=(Token)match(input,RULE_ASSING_OP,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ASSING_OP_1, grammarAccess.getAssignmentAccess().getASSING_OPTerminalRuleCall_1());
              		
            }
            // InternalGo.g:4240:3: ( (lv_expressionlist2_2_0= ruleExpressionList ) )
            // InternalGo.g:4241:4: (lv_expressionlist2_2_0= ruleExpressionList )
            {
            // InternalGo.g:4241:4: (lv_expressionlist2_2_0= ruleExpressionList )
            // InternalGo.g:4242:5: lv_expressionlist2_2_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlist2ExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionlist2_2_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist2",
              						lv_expressionlist2_2_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleShortVarDecl"
    // InternalGo.g:4263:1: entryRuleShortVarDecl returns [EObject current=null] : iv_ruleShortVarDecl= ruleShortVarDecl EOF ;
    public final EObject entryRuleShortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShortVarDecl = null;


        try {
            // InternalGo.g:4263:53: (iv_ruleShortVarDecl= ruleShortVarDecl EOF )
            // InternalGo.g:4264:2: iv_ruleShortVarDecl= ruleShortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShortVarDecl=ruleShortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShortVarDecl"


    // $ANTLR start "ruleShortVarDecl"
    // InternalGo.g:4270:1: ruleShortVarDecl returns [EObject current=null] : ( ruleIdentifierList otherlv_1= ':=' this_ExpressionList_2= ruleExpressionList ) ;
    public final EObject ruleShortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ExpressionList_2 = null;



        	enterRule();

        try {
            // InternalGo.g:4276:2: ( ( ruleIdentifierList otherlv_1= ':=' this_ExpressionList_2= ruleExpressionList ) )
            // InternalGo.g:4277:2: ( ruleIdentifierList otherlv_1= ':=' this_ExpressionList_2= ruleExpressionList )
            {
            // InternalGo.g:4277:2: ( ruleIdentifierList otherlv_1= ':=' this_ExpressionList_2= ruleExpressionList )
            // InternalGo.g:4278:3: ruleIdentifierList otherlv_1= ':=' this_ExpressionList_2= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdentifierListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_53);
            ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,76,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShortVarDeclAccess().getExpressionListParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ExpressionList_2=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionList_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShortVarDecl"


    // $ANTLR start "entryRuleExprSwitchStmt"
    // InternalGo.g:4307:1: entryRuleExprSwitchStmt returns [EObject current=null] : iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF ;
    public final EObject entryRuleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchStmt = null;


        try {
            // InternalGo.g:4307:55: (iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF )
            // InternalGo.g:4308:2: iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchStmt=ruleExprSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchStmt"


    // $ANTLR start "ruleExprSwitchStmt"
    // InternalGo.g:4314:1: ruleExprSwitchStmt returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) ;
    public final EObject ruleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_simplestmt_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_exprcase_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4320:2: ( ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) )
            // InternalGo.g:4321:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            {
            // InternalGo.g:4321:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            // InternalGo.g:4322:3: () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}'
            {
            // InternalGo.g:4322:3: ()
            // InternalGo.g:4323:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,77,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1());
              		
            }
            // InternalGo.g:4336:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )?
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalGo.g:4337:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';'
                    {
                    // InternalGo.g:4337:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
                    // InternalGo.g:4338:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:4338:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    // InternalGo.g:4339:6: lv_simplestmt_2_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_simplestmt_2_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplestmt",
                      							lv_simplestmt_2_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,39,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4361:3: ( (lv_expression_4_0= ruleExpression ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_LETTER||(LA58_0>=RULE_DECIMAL_LIT && LA58_0<=RULE_DECIMALS)||(LA58_0>=RULE_RAW_STRING_LIT && LA58_0<=RULE_INTERPRETED_STRING_LIT)||LA58_0==RULE_UNARY_OP||LA58_0==40||LA58_0==42||(LA58_0>=44 && LA58_0<=45)||LA58_0==47||LA58_0==49||LA58_0==53||(LA58_0>=55 && LA58_0<=58)) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalGo.g:4362:4: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalGo.g:4362:4: (lv_expression_4_0= ruleExpression )
                    // InternalGo.g:4363:5: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_22);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_4_0,
                      						"org.xtext.example.mydsl.Go.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,50,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalGo.g:4384:3: ( (lv_exprcase_6_0= ruleExprCaseClause ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( ((LA59_0>=78 && LA59_0<=79)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalGo.g:4385:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    {
            	    // InternalGo.g:4385:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    // InternalGo.g:4386:5: lv_exprcase_6_0= ruleExprCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprcaseExprCaseClauseParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_exprcase_6_0=ruleExprCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"exprcase",
            	      						lv_exprcase_6_0,
            	      						"org.xtext.example.mydsl.Go.ExprCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            otherlv_7=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchStmt"


    // $ANTLR start "entryRuleExprCaseClause"
    // InternalGo.g:4411:1: entryRuleExprCaseClause returns [EObject current=null] : iv_ruleExprCaseClause= ruleExprCaseClause EOF ;
    public final EObject entryRuleExprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprCaseClause = null;


        try {
            // InternalGo.g:4411:55: (iv_ruleExprCaseClause= ruleExprCaseClause EOF )
            // InternalGo.g:4412:2: iv_ruleExprCaseClause= ruleExprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprCaseClause=ruleExprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprCaseClause"


    // $ANTLR start "ruleExprCaseClause"
    // InternalGo.g:4418:1: ruleExprCaseClause returns [EObject current=null] : (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleExprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ExprSwitchCase_0 = null;

        EObject lv_statementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4424:2: ( (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:4425:2: (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:4425:2: (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            // InternalGo.g:4426:3: this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_ExprSwitchCase_0=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExprSwitchCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,59,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:4441:3: ( (lv_statementlist_2_0= ruleStatementList ) )
            // InternalGo.g:4442:4: (lv_statementlist_2_0= ruleStatementList )
            {
            // InternalGo.g:4442:4: (lv_statementlist_2_0= ruleStatementList )
            // InternalGo.g:4443:5: lv_statementlist_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprCaseClause"


    // $ANTLR start "entryRuleExprSwitchCase"
    // InternalGo.g:4464:1: entryRuleExprSwitchCase returns [EObject current=null] : iv_ruleExprSwitchCase= ruleExprSwitchCase EOF ;
    public final EObject entryRuleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchCase = null;


        try {
            // InternalGo.g:4464:55: (iv_ruleExprSwitchCase= ruleExprSwitchCase EOF )
            // InternalGo.g:4465:2: iv_ruleExprSwitchCase= ruleExprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchCase=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchCase"


    // $ANTLR start "ruleExprSwitchCase"
    // InternalGo.g:4471:1: ruleExprSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4477:2: ( ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:4478:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:4478:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==78) ) {
                alt60=1;
            }
            else if ( (LA60_0==79) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalGo.g:4479:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    {
                    // InternalGo.g:4479:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    // InternalGo.g:4480:4: () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    {
                    // InternalGo.g:4480:4: ()
                    // InternalGo.g:4481:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,78,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:4494:4: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    // InternalGo.g:4495:5: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:4495:5: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:4496:6: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionlistExpressionListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_2_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4515:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:4515:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:4516:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:4516:4: ()
                    // InternalGo.g:4517:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchCase"


    // $ANTLR start "entryRuleTypeSwitchStmt"
    // InternalGo.g:4535:1: entryRuleTypeSwitchStmt returns [EObject current=null] : iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF ;
    public final EObject entryRuleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchStmt = null;


        try {
            // InternalGo.g:4535:55: (iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF )
            // InternalGo.g:4536:2: iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchStmt=ruleTypeSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchStmt"


    // $ANTLR start "ruleTypeSwitchStmt"
    // InternalGo.g:4542:1: ruleTypeSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_SimpleStmt_1 = null;

        EObject lv_typesg_3_0 = null;

        EObject lv_typecc_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4548:2: ( (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:4549:2: (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:4549:2: (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:4550:3: otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,77,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:4554:3: (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalGo.g:4555:4: this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';'
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_SimpleStmt_1=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SimpleStmt_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,39,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4571:3: ( (lv_typesg_3_0= ruleTypeSwitchGuard ) )
            // InternalGo.g:4572:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            {
            // InternalGo.g:4572:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            // InternalGo.g:4573:5: lv_typesg_3_0= ruleTypeSwitchGuard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypesgTypeSwitchGuardParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_typesg_3_0=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
              					}
              					set(
              						current,
              						"typesg",
              						lv_typesg_3_0,
              						"org.xtext.example.mydsl.Go.TypeSwitchGuard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,50,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:4594:3: ( (lv_typecc_5_0= ruleTypeCaseClause ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( ((LA62_0>=78 && LA62_0<=79)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalGo.g:4595:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    {
            	    // InternalGo.g:4595:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    // InternalGo.g:4596:5: lv_typecc_5_0= ruleTypeCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeccTypeCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_typecc_5_0=ruleTypeCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"typecc",
            	      						lv_typecc_5_0,
            	      						"org.xtext.example.mydsl.Go.TypeCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            otherlv_6=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchStmt"


    // $ANTLR start "entryRuleTypeSwitchGuard"
    // InternalGo.g:4621:1: entryRuleTypeSwitchGuard returns [EObject current=null] : iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF ;
    public final EObject entryRuleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchGuard = null;


        try {
            // InternalGo.g:4621:56: (iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF )
            // InternalGo.g:4622:2: iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchGuard"


    // $ANTLR start "ruleTypeSwitchGuard"
    // InternalGo.g:4628:1: ruleTypeSwitchGuard returns [EObject current=null] : ( ( ruleIDENTIFIER otherlv_1= ':=' )? this_PrimaryExpr_2= rulePrimaryExpr otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_PrimaryExpr_2 = null;



        	enterRule();

        try {
            // InternalGo.g:4634:2: ( ( ( ruleIDENTIFIER otherlv_1= ':=' )? this_PrimaryExpr_2= rulePrimaryExpr otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:4635:2: ( ( ruleIDENTIFIER otherlv_1= ':=' )? this_PrimaryExpr_2= rulePrimaryExpr otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:4635:2: ( ( ruleIDENTIFIER otherlv_1= ':=' )? this_PrimaryExpr_2= rulePrimaryExpr otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:4636:3: ( ruleIDENTIFIER otherlv_1= ':=' )? this_PrimaryExpr_2= rulePrimaryExpr otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:4636:3: ( ruleIDENTIFIER otherlv_1= ':=' )?
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalGo.g:4637:4: ruleIDENTIFIER otherlv_1= ':='
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_53);
                    ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_1=(Token)match(input,76,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_8);
            this_PrimaryExpr_2=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PrimaryExpr_2;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_3=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,45,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,72,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchGuard"


    // $ANTLR start "entryRuleTypeCaseClause"
    // InternalGo.g:4683:1: entryRuleTypeCaseClause returns [EObject current=null] : iv_ruleTypeCaseClause= ruleTypeCaseClause EOF ;
    public final EObject entryRuleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeCaseClause = null;


        try {
            // InternalGo.g:4683:55: (iv_ruleTypeCaseClause= ruleTypeCaseClause EOF )
            // InternalGo.g:4684:2: iv_ruleTypeCaseClause= ruleTypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeCaseClause=ruleTypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeCaseClause"


    // $ANTLR start "ruleTypeCaseClause"
    // InternalGo.g:4690:1: ruleTypeCaseClause returns [EObject current=null] : (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypeSwitchCase_0 = null;

        EObject lv_statementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4696:2: ( (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:4697:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:4697:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            // InternalGo.g:4698:3: this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_TypeSwitchCase_0=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeSwitchCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,59,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:4713:3: ( (lv_statementlist_2_0= ruleStatementList ) )
            // InternalGo.g:4714:4: (lv_statementlist_2_0= ruleStatementList )
            {
            // InternalGo.g:4714:4: (lv_statementlist_2_0= ruleStatementList )
            // InternalGo.g:4715:5: lv_statementlist_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeCaseClause"


    // $ANTLR start "entryRuleTypeSwitchCase"
    // InternalGo.g:4736:1: entryRuleTypeSwitchCase returns [EObject current=null] : iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF ;
    public final EObject entryRuleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchCase = null;


        try {
            // InternalGo.g:4736:55: (iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF )
            // InternalGo.g:4737:2: iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchCase=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchCase"


    // $ANTLR start "ruleTypeSwitchCase"
    // InternalGo.g:4743:1: ruleTypeSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_typelist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4749:2: ( ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:4750:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:4750:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==78) ) {
                alt64=1;
            }
            else if ( (LA64_0==79) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalGo.g:4751:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    {
                    // InternalGo.g:4751:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    // InternalGo.g:4752:4: () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) )
                    {
                    // InternalGo.g:4752:4: ()
                    // InternalGo.g:4753:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,78,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:4766:4: ( (lv_typelist_2_0= ruleTypeList ) )
                    // InternalGo.g:4767:5: (lv_typelist_2_0= ruleTypeList )
                    {
                    // InternalGo.g:4767:5: (lv_typelist_2_0= ruleTypeList )
                    // InternalGo.g:4768:6: lv_typelist_2_0= ruleTypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypelistTypeListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typelist_2_0=ruleTypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"typelist",
                      							lv_typelist_2_0,
                      							"org.xtext.example.mydsl.Go.TypeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4787:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:4787:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:4788:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:4788:4: ()
                    // InternalGo.g:4789:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchCase"


    // $ANTLR start "entryRuleTypeList"
    // InternalGo.g:4807:1: entryRuleTypeList returns [EObject current=null] : iv_ruleTypeList= ruleTypeList EOF ;
    public final EObject entryRuleTypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeList = null;


        try {
            // InternalGo.g:4807:49: (iv_ruleTypeList= ruleTypeList EOF )
            // InternalGo.g:4808:2: iv_ruleTypeList= ruleTypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeList=ruleTypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeList"


    // $ANTLR start "ruleTypeList"
    // InternalGo.g:4814:1: ruleTypeList returns [EObject current=null] : ( ( (lv_type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_type2_2_0= ruleType ) ) )* ) ;
    public final EObject ruleTypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_type_0_0 = null;

        EObject lv_type2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4820:2: ( ( ( (lv_type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_type2_2_0= ruleType ) ) )* ) )
            // InternalGo.g:4821:2: ( ( (lv_type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_type2_2_0= ruleType ) ) )* )
            {
            // InternalGo.g:4821:2: ( ( (lv_type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_type2_2_0= ruleType ) ) )* )
            // InternalGo.g:4822:3: ( (lv_type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_type2_2_0= ruleType ) ) )*
            {
            // InternalGo.g:4822:3: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:4823:4: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:4823:4: (lv_type_0_0= ruleType )
            // InternalGo.g:4824:5: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4841:3: (otherlv_1= ',' ( (lv_type2_2_0= ruleType ) ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==52) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalGo.g:4842:4: otherlv_1= ',' ( (lv_type2_2_0= ruleType ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:4846:4: ( (lv_type2_2_0= ruleType ) )
            	    // InternalGo.g:4847:5: (lv_type2_2_0= ruleType )
            	    {
            	    // InternalGo.g:4847:5: (lv_type2_2_0= ruleType )
            	    // InternalGo.g:4848:6: lv_type2_2_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getType2TypeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_type2_2_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"type2",
            	      							lv_type2_2_0,
            	      							"org.xtext.example.mydsl.Go.Type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeList"


    // $ANTLR start "entryRuleCommClause"
    // InternalGo.g:4870:1: entryRuleCommClause returns [EObject current=null] : iv_ruleCommClause= ruleCommClause EOF ;
    public final EObject entryRuleCommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommClause = null;


        try {
            // InternalGo.g:4870:51: (iv_ruleCommClause= ruleCommClause EOF )
            // InternalGo.g:4871:2: iv_ruleCommClause= ruleCommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommClause=ruleCommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommClause"


    // $ANTLR start "ruleCommClause"
    // InternalGo.g:4877:1: ruleCommClause returns [EObject current=null] : (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleCommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_CommCase_0 = null;

        EObject lv_statementlist2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4883:2: ( (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:4884:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:4884:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            // InternalGo.g:4885:3: this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_CommCase_0=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CommCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,59,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:4900:3: ( (lv_statementlist2_2_0= ruleStatementList ) )
            // InternalGo.g:4901:4: (lv_statementlist2_2_0= ruleStatementList )
            {
            // InternalGo.g:4901:4: (lv_statementlist2_2_0= ruleStatementList )
            // InternalGo.g:4902:5: lv_statementlist2_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementlist2StatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist2_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"statementlist2",
              						lv_statementlist2_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommClause"


    // $ANTLR start "entryRuleCommCase"
    // InternalGo.g:4923:1: entryRuleCommCase returns [EObject current=null] : iv_ruleCommCase= ruleCommCase EOF ;
    public final EObject entryRuleCommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommCase = null;


        try {
            // InternalGo.g:4923:49: (iv_ruleCommCase= ruleCommCase EOF )
            // InternalGo.g:4924:2: iv_ruleCommCase= ruleCommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommCase=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommCase"


    // $ANTLR start "ruleCommCase"
    // InternalGo.g:4930:1: ruleCommCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) ;
    public final EObject ruleCommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_sendstmt_2_0 = null;

        EObject lv_recvstmt_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4936:2: ( ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) )
            // InternalGo.g:4937:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            {
            // InternalGo.g:4937:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==78) ) {
                alt67=1;
            }
            else if ( (LA67_0==79) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalGo.g:4938:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    {
                    // InternalGo.g:4938:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    // InternalGo.g:4939:4: () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    {
                    // InternalGo.g:4939:4: ()
                    // InternalGo.g:4940:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,78,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCommCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:4953:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    int alt66=2;
                    alt66 = dfa66.predict(input);
                    switch (alt66) {
                        case 1 :
                            // InternalGo.g:4954:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            {
                            // InternalGo.g:4954:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            // InternalGo.g:4955:6: (lv_sendstmt_2_0= ruleSendStmt )
                            {
                            // InternalGo.g:4955:6: (lv_sendstmt_2_0= ruleSendStmt )
                            // InternalGo.g:4956:7: lv_sendstmt_2_0= ruleSendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sendstmt_2_0=ruleSendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"sendstmt",
                              								lv_sendstmt_2_0,
                              								"org.xtext.example.mydsl.Go.SendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:4974:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            {
                            // InternalGo.g:4974:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            // InternalGo.g:4975:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            {
                            // InternalGo.g:4975:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            // InternalGo.g:4976:7: lv_recvstmt_3_0= ruleRecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvstmtRecvStmtParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_recvstmt_3_0=ruleRecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"recvstmt",
                              								lv_recvstmt_3_0,
                              								"org.xtext.example.mydsl.Go.RecvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4996:3: ( () otherlv_5= 'default' )
                    {
                    // InternalGo.g:4996:3: ( () otherlv_5= 'default' )
                    // InternalGo.g:4997:4: () otherlv_5= 'default'
                    {
                    // InternalGo.g:4997:4: ()
                    // InternalGo.g:4998:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommCase"


    // $ANTLR start "entryRuleRecvStmt"
    // InternalGo.g:5016:1: entryRuleRecvStmt returns [EObject current=null] : iv_ruleRecvStmt= ruleRecvStmt EOF ;
    public final EObject entryRuleRecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvStmt = null;


        try {
            // InternalGo.g:5016:49: (iv_ruleRecvStmt= ruleRecvStmt EOF )
            // InternalGo.g:5017:2: iv_ruleRecvStmt= ruleRecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvStmt=ruleRecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvStmt"


    // $ANTLR start "ruleRecvStmt"
    // InternalGo.g:5023:1: ruleRecvStmt returns [EObject current=null] : ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) ;
    public final EObject ruleRecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_ExpressionList_0 = null;

        EObject lv_recvexpr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5029:2: ( ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) )
            // InternalGo.g:5030:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            {
            // InternalGo.g:5030:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            // InternalGo.g:5031:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            {
            // InternalGo.g:5031:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )?
            int alt68=3;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalGo.g:5032:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    {
                    // InternalGo.g:5032:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    // InternalGo.g:5033:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FOLLOW_47);
                    this_ExpressionList_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_ExpressionList_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_1=(Token)match(input,71,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5050:4: ( ruleIdentifierList otherlv_3= ':=' )
                    {
                    // InternalGo.g:5050:4: ( ruleIdentifierList otherlv_3= ':=' )
                    // InternalGo.g:5051:5: ruleIdentifierList otherlv_3= ':='
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRecvStmtAccess().getIdentifierListParserRuleCall_0_1_0());
                      				
                    }
                    pushFollow(FOLLOW_53);
                    ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_3=(Token)match(input,76,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:5067:3: ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            // InternalGo.g:5068:4: (lv_recvexpr_4_0= ruleRecvExpr )
            {
            // InternalGo.g:5068:4: (lv_recvexpr_4_0= ruleRecvExpr )
            // InternalGo.g:5069:5: lv_recvexpr_4_0= ruleRecvExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getRecvexprRecvExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_recvexpr_4_0=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"recvexpr",
              						lv_recvexpr_4_0,
              						"org.xtext.example.mydsl.Go.RecvExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvStmt"


    // $ANTLR start "entryRuleRecvExpr"
    // InternalGo.g:5090:1: entryRuleRecvExpr returns [EObject current=null] : iv_ruleRecvExpr= ruleRecvExpr EOF ;
    public final EObject entryRuleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvExpr = null;


        try {
            // InternalGo.g:5090:49: (iv_ruleRecvExpr= ruleRecvExpr EOF )
            // InternalGo.g:5091:2: iv_ruleRecvExpr= ruleRecvExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvExpr=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvExpr"


    // $ANTLR start "ruleRecvExpr"
    // InternalGo.g:5097:1: ruleRecvExpr returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5103:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:5104:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getRecvExprAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvExpr"


    // $ANTLR start "entryRuleCondition"
    // InternalGo.g:5118:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalGo.g:5118:50: (iv_ruleCondition= ruleCondition EOF )
            // InternalGo.g:5119:2: iv_ruleCondition= ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalGo.g:5125:1: ruleCondition returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5131:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:5132:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getConditionAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleForClause"
    // InternalGo.g:5146:1: entryRuleForClause returns [EObject current=null] : iv_ruleForClause= ruleForClause EOF ;
    public final EObject entryRuleForClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForClause = null;


        try {
            // InternalGo.g:5146:50: (iv_ruleForClause= ruleForClause EOF )
            // InternalGo.g:5147:2: iv_ruleForClause= ruleForClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForClause=ruleForClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForClause"


    // $ANTLR start "ruleForClause"
    // InternalGo.g:5153:1: ruleForClause returns [EObject current=null] : ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) ) ;
    public final EObject ruleForClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_InitStmt_0 = null;

        EObject lv_condition_2_0 = null;

        EObject lv_poststmt_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5159:2: ( ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) ) )
            // InternalGo.g:5160:2: ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) )
            {
            // InternalGo.g:5160:2: ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) )
            // InternalGo.g:5161:3: (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) )
            {
            // InternalGo.g:5161:3: (this_InitStmt_0= ruleInitStmt )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalGo.g:5162:4: this_InitStmt_0= ruleInitStmt
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getForClauseAccess().getInitStmtParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_InitStmt_0=ruleInitStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_InitStmt_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,39,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForClauseAccess().getSemicolonKeyword_1());
              		
            }
            // InternalGo.g:5178:3: ( (lv_condition_2_0= ruleCondition ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_LETTER||(LA70_0>=RULE_DECIMAL_LIT && LA70_0<=RULE_DECIMALS)||(LA70_0>=RULE_RAW_STRING_LIT && LA70_0<=RULE_INTERPRETED_STRING_LIT)||LA70_0==RULE_UNARY_OP||LA70_0==40||LA70_0==42||(LA70_0>=44 && LA70_0<=45)||LA70_0==47||LA70_0==49||LA70_0==53||(LA70_0>=55 && LA70_0<=58)) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalGo.g:5179:4: (lv_condition_2_0= ruleCondition )
                    {
                    // InternalGo.g:5179:4: (lv_condition_2_0= ruleCondition )
                    // InternalGo.g:5180:5: lv_condition_2_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_condition_2_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_2_0,
                      						"org.xtext.example.mydsl.Go.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,39,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getForClauseAccess().getSemicolonKeyword_3());
              		
            }
            // InternalGo.g:5201:3: ( (lv_poststmt_4_0= rulePostStmt ) )
            // InternalGo.g:5202:4: (lv_poststmt_4_0= rulePostStmt )
            {
            // InternalGo.g:5202:4: (lv_poststmt_4_0= rulePostStmt )
            // InternalGo.g:5203:5: lv_poststmt_4_0= rulePostStmt
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForClauseAccess().getPoststmtPostStmtParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_poststmt_4_0=rulePostStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForClauseRule());
              					}
              					set(
              						current,
              						"poststmt",
              						lv_poststmt_4_0,
              						"org.xtext.example.mydsl.Go.PostStmt");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForClause"


    // $ANTLR start "entryRuleRangeClause"
    // InternalGo.g:5224:1: entryRuleRangeClause returns [EObject current=null] : iv_ruleRangeClause= ruleRangeClause EOF ;
    public final EObject entryRuleRangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeClause = null;


        try {
            // InternalGo.g:5224:52: (iv_ruleRangeClause= ruleRangeClause EOF )
            // InternalGo.g:5225:2: iv_ruleRangeClause= ruleRangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeClause=ruleRangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeClause"


    // $ANTLR start "ruleRangeClause"
    // InternalGo.g:5231:1: ruleRangeClause returns [EObject current=null] : ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) ;
    public final EObject ruleRangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_0_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5237:2: ( ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) )
            // InternalGo.g:5238:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            {
            // InternalGo.g:5238:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            // InternalGo.g:5239:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) )
            {
            // InternalGo.g:5239:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )?
            int alt71=3;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalGo.g:5240:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:5240:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:5241:5: ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:5241:5: ( (lv_expressionlist_0_0= ruleExpressionList ) )
                    // InternalGo.g:5242:6: (lv_expressionlist_0_0= ruleExpressionList )
                    {
                    // InternalGo.g:5242:6: (lv_expressionlist_0_0= ruleExpressionList )
                    // InternalGo.g:5243:7: lv_expressionlist_0_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionlistExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_expressionlist_0_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"expressionlist",
                      								lv_expressionlist_0_0,
                      								"org.xtext.example.mydsl.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,71,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5266:4: ( ruleIdentifierList otherlv_3= ':=' )
                    {
                    // InternalGo.g:5266:4: ( ruleIdentifierList otherlv_3= ':=' )
                    // InternalGo.g:5267:5: ruleIdentifierList otherlv_3= ':='
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRangeClauseAccess().getIdentifierListParserRuleCall_0_1_0());
                      				
                    }
                    pushFollow(FOLLOW_53);
                    ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_3=(Token)match(input,76,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,80,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:5287:3: ( (lv_expression_5_0= ruleExpression ) )
            // InternalGo.g:5288:4: (lv_expression_5_0= ruleExpression )
            {
            // InternalGo.g:5288:4: (lv_expression_5_0= ruleExpression )
            // InternalGo.g:5289:5: lv_expression_5_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeClause"


    // $ANTLR start "entryRuleInitStmt"
    // InternalGo.g:5310:1: entryRuleInitStmt returns [EObject current=null] : iv_ruleInitStmt= ruleInitStmt EOF ;
    public final EObject entryRuleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitStmt = null;


        try {
            // InternalGo.g:5310:49: (iv_ruleInitStmt= ruleInitStmt EOF )
            // InternalGo.g:5311:2: iv_ruleInitStmt= ruleInitStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitStmt=ruleInitStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitStmt"


    // $ANTLR start "ruleInitStmt"
    // InternalGo.g:5317:1: ruleInitStmt returns [EObject current=null] : this_SimpleStmt_0= ruleSimpleStmt ;
    public final EObject ruleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleStmt_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5323:2: (this_SimpleStmt_0= ruleSimpleStmt )
            // InternalGo.g:5324:2: this_SimpleStmt_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getInitStmtAccess().getSimpleStmtParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SimpleStmt_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SimpleStmt_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitStmt"


    // $ANTLR start "entryRulePostStmt"
    // InternalGo.g:5338:1: entryRulePostStmt returns [EObject current=null] : iv_rulePostStmt= rulePostStmt EOF ;
    public final EObject entryRulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostStmt = null;


        try {
            // InternalGo.g:5338:49: (iv_rulePostStmt= rulePostStmt EOF )
            // InternalGo.g:5339:2: iv_rulePostStmt= rulePostStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostStmt=rulePostStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostStmt"


    // $ANTLR start "rulePostStmt"
    // InternalGo.g:5345:1: rulePostStmt returns [EObject current=null] : this_SimpleStmt_0= ruleSimpleStmt ;
    public final EObject rulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleStmt_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5351:2: (this_SimpleStmt_0= ruleSimpleStmt )
            // InternalGo.g:5352:2: this_SimpleStmt_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleStmtParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SimpleStmt_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SimpleStmt_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostStmt"


    // $ANTLR start "entryRuleLabel"
    // InternalGo.g:5366:1: entryRuleLabel returns [String current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final String entryRuleLabel() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLabel = null;


        try {
            // InternalGo.g:5366:45: (iv_ruleLabel= ruleLabel EOF )
            // InternalGo.g:5367:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalGo.g:5373:1: ruleLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleLabel() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5379:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:5380:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getLabelAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleExpressionList"
    // InternalGo.g:5393:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // InternalGo.g:5393:55: (iv_ruleExpressionList= ruleExpressionList EOF )
            // InternalGo.g:5394:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionList=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionList"


    // $ANTLR start "ruleExpressionList"
    // InternalGo.g:5400:1: ruleExpressionList returns [EObject current=null] : (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_Expression_0 = null;

        EObject lv_expression2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5406:2: ( (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* ) )
            // InternalGo.g:5407:2: (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* )
            {
            // InternalGo.g:5407:2: (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* )
            // InternalGo.g:5408:3: this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_59);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:5419:3: (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )*
            loop72:
            do {
                int alt72=2;
                alt72 = dfa72.predict(input);
                switch (alt72) {
            	case 1 :
            	    // InternalGo.g:5420:4: otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,39,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getSemicolonKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:5424:4: ( (lv_expression2_2_0= ruleExpression ) )
            	    // InternalGo.g:5425:5: (lv_expression2_2_0= ruleExpression )
            	    {
            	    // InternalGo.g:5425:5: (lv_expression2_2_0= ruleExpression )
            	    // InternalGo.g:5426:6: lv_expression2_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_expression2_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expression2",
            	      							lv_expression2_2_0,
            	      							"org.xtext.example.mydsl.Go.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionList"


    // $ANTLR start "entryRuleExpression"
    // InternalGo.g:5448:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalGo.g:5448:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalGo.g:5449:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalGo.g:5455:1: ruleExpression returns [EObject current=null] : (this_UnaryExpr_0= ruleUnaryExpr ( (lv_exp_1_0= ruleExpression2 ) ) ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpr_0 = null;

        EObject lv_exp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5461:2: ( (this_UnaryExpr_0= ruleUnaryExpr ( (lv_exp_1_0= ruleExpression2 ) ) ) )
            // InternalGo.g:5462:2: (this_UnaryExpr_0= ruleUnaryExpr ( (lv_exp_1_0= ruleExpression2 ) ) )
            {
            // InternalGo.g:5462:2: (this_UnaryExpr_0= ruleUnaryExpr ( (lv_exp_1_0= ruleExpression2 ) ) )
            // InternalGo.g:5463:3: this_UnaryExpr_0= ruleUnaryExpr ( (lv_exp_1_0= ruleExpression2 ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_60);
            this_UnaryExpr_0=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpr_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:5474:3: ( (lv_exp_1_0= ruleExpression2 ) )
            // InternalGo.g:5475:4: (lv_exp_1_0= ruleExpression2 )
            {
            // InternalGo.g:5475:4: (lv_exp_1_0= ruleExpression2 )
            // InternalGo.g:5476:5: lv_exp_1_0= ruleExpression2
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpExpression2ParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_1_0=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.mydsl.Go.Expression2");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleExpression2"
    // InternalGo.g:5497:1: entryRuleExpression2 returns [EObject current=null] : iv_ruleExpression2= ruleExpression2 EOF ;
    public final EObject entryRuleExpression2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression2 = null;


        try {
            // InternalGo.g:5497:52: (iv_ruleExpression2= ruleExpression2 EOF )
            // InternalGo.g:5498:2: iv_ruleExpression2= ruleExpression2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression2=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression2"


    // $ANTLR start "ruleExpression2"
    // InternalGo.g:5504:1: ruleExpression2 returns [EObject current=null] : ( () (this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) ;
    public final EObject ruleExpression2() throws RecognitionException {
        EObject current = null;

        Token this_BINARY_OP_1=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5510:2: ( ( () (this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) )
            // InternalGo.g:5511:2: ( () (this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            {
            // InternalGo.g:5511:2: ( () (this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            // InternalGo.g:5512:3: () (this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            {
            // InternalGo.g:5512:3: ()
            // InternalGo.g:5513:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpression2Access().getExpression2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5522:3: (this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_BINARY_OP) ) {
                int LA73_1 = input.LA(2);

                if ( (synpred106_InternalGo()) ) {
                    alt73=1;
                }
            }
            switch (alt73) {
                case 1 :
                    // InternalGo.g:5523:4: this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
                    {
                    this_BINARY_OP_1=(Token)match(input,RULE_BINARY_OP,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BINARY_OP_1, grammarAccess.getExpression2Access().getBINARY_OPTerminalRuleCall_1_0());
                      			
                    }
                    // InternalGo.g:5527:4: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalGo.g:5528:5: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalGo.g:5528:5: (lv_expression_2_0= ruleExpression )
                    // InternalGo.g:5529:6: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5546:4: ( (lv_expression2_3_0= ruleExpression2 ) )
                    // InternalGo.g:5547:5: (lv_expression2_3_0= ruleExpression2 )
                    {
                    // InternalGo.g:5547:5: (lv_expression2_3_0= ruleExpression2 )
                    // InternalGo.g:5548:6: lv_expression2_3_0= ruleExpression2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression2_3_0=ruleExpression2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression2",
                      							lv_expression2_3_0,
                      							"org.xtext.example.mydsl.Go.Expression2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression2"


    // $ANTLR start "entryRuleUnaryExpr"
    // InternalGo.g:5570:1: entryRuleUnaryExpr returns [EObject current=null] : iv_ruleUnaryExpr= ruleUnaryExpr EOF ;
    public final EObject entryRuleUnaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpr = null;


        try {
            // InternalGo.g:5570:50: (iv_ruleUnaryExpr= ruleUnaryExpr EOF )
            // InternalGo.g:5571:2: iv_ruleUnaryExpr= ruleUnaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpr=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpr"


    // $ANTLR start "ruleUnaryExpr"
    // InternalGo.g:5577:1: ruleUnaryExpr returns [EObject current=null] : (this_PrimaryExpr_0= rulePrimaryExpr | (this_UNARY_OP_1= RULE_UNARY_OP this_UnaryExpr_2= ruleUnaryExpr ) ) ;
    public final EObject ruleUnaryExpr() throws RecognitionException {
        EObject current = null;

        Token this_UNARY_OP_1=null;
        EObject this_PrimaryExpr_0 = null;

        EObject this_UnaryExpr_2 = null;



        	enterRule();

        try {
            // InternalGo.g:5583:2: ( (this_PrimaryExpr_0= rulePrimaryExpr | (this_UNARY_OP_1= RULE_UNARY_OP this_UnaryExpr_2= ruleUnaryExpr ) ) )
            // InternalGo.g:5584:2: (this_PrimaryExpr_0= rulePrimaryExpr | (this_UNARY_OP_1= RULE_UNARY_OP this_UnaryExpr_2= ruleUnaryExpr ) )
            {
            // InternalGo.g:5584:2: (this_PrimaryExpr_0= rulePrimaryExpr | (this_UNARY_OP_1= RULE_UNARY_OP this_UnaryExpr_2= ruleUnaryExpr ) )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==RULE_LETTER||(LA74_0>=RULE_DECIMAL_LIT && LA74_0<=RULE_DECIMALS)||(LA74_0>=RULE_RAW_STRING_LIT && LA74_0<=RULE_INTERPRETED_STRING_LIT)||LA74_0==40||LA74_0==42||(LA74_0>=44 && LA74_0<=45)||LA74_0==47||LA74_0==49||LA74_0==53||(LA74_0>=55 && LA74_0<=58)) ) {
                alt74=1;
            }
            else if ( (LA74_0==RULE_UNARY_OP) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalGo.g:5585:3: this_PrimaryExpr_0= rulePrimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpr_0=rulePrimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpr_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5597:3: (this_UNARY_OP_1= RULE_UNARY_OP this_UnaryExpr_2= ruleUnaryExpr )
                    {
                    // InternalGo.g:5597:3: (this_UNARY_OP_1= RULE_UNARY_OP this_UnaryExpr_2= ruleUnaryExpr )
                    // InternalGo.g:5598:4: this_UNARY_OP_1= RULE_UNARY_OP this_UnaryExpr_2= ruleUnaryExpr
                    {
                    this_UNARY_OP_1=(Token)match(input,RULE_UNARY_OP,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UNARY_OP_1, grammarAccess.getUnaryExprAccess().getUNARY_OPTerminalRuleCall_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUnaryExprAccess().getUnaryExprParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_UnaryExpr_2=ruleUnaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_UnaryExpr_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpr"


    // $ANTLR start "entryRulePrimaryExpr"
    // InternalGo.g:5618:1: entryRulePrimaryExpr returns [EObject current=null] : iv_rulePrimaryExpr= rulePrimaryExpr EOF ;
    public final EObject entryRulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr = null;


        try {
            // InternalGo.g:5618:52: (iv_rulePrimaryExpr= rulePrimaryExpr EOF )
            // InternalGo.g:5619:2: iv_rulePrimaryExpr= rulePrimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr"


    // $ANTLR start "rulePrimaryExpr"
    // InternalGo.g:5625:1: rulePrimaryExpr returns [EObject current=null] : ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) ) ;
    public final EObject rulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject this_Operand_0 = null;

        EObject lv_pr_1_0 = null;

        EObject this_Conversion_2 = null;

        EObject lv_pr_3_0 = null;

        EObject this_MethodExpr_4 = null;

        EObject lv_pr_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5631:2: ( ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) ) )
            // InternalGo.g:5632:2: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) )
            {
            // InternalGo.g:5632:2: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) )
            int alt75=3;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalGo.g:5633:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5633:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5634:4: this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) )
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_61);
                    this_Operand_0=ruleOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Operand_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:5645:4: ( (lv_pr_1_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5646:5: (lv_pr_1_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5646:5: (lv_pr_1_0= rulePrimaryExpr2 )
                    // InternalGo.g:5647:6: lv_pr_1_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_1_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_1_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5666:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5666:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5667:4: this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) )
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_61);
                    this_Conversion_2=ruleConversion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Conversion_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:5678:4: ( (lv_pr_3_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5679:5: (lv_pr_3_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5679:5: (lv_pr_3_0= rulePrimaryExpr2 )
                    // InternalGo.g:5680:6: lv_pr_3_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_3_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_3_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5699:3: (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5699:3: (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5700:4: this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) )
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExprAccess().getMethodExprParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_61);
                    this_MethodExpr_4=ruleMethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MethodExpr_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:5711:4: ( (lv_pr_5_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5712:5: (lv_pr_5_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5712:5: (lv_pr_5_0= rulePrimaryExpr2 )
                    // InternalGo.g:5713:6: lv_pr_5_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_5_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_5_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr"


    // $ANTLR start "entryRulePrimaryExpr2"
    // InternalGo.g:5735:1: entryRulePrimaryExpr2 returns [EObject current=null] : iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF ;
    public final EObject entryRulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr2 = null;


        try {
            // InternalGo.g:5735:53: (iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF )
            // InternalGo.g:5736:2: iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpr2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr2=rulePrimaryExpr2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr2"


    // $ANTLR start "rulePrimaryExpr2"
    // InternalGo.g:5742:1: rulePrimaryExpr2 returns [EObject current=null] : ( () ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) ;
    public final EObject rulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        EObject lv_pr_2_0 = null;

        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;

        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;

        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5748:2: ( ( () ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) )
            // InternalGo.g:5749:2: ( () ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            {
            // InternalGo.g:5749:2: ( () ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            // InternalGo.g:5750:3: () ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            {
            // InternalGo.g:5750:3: ()
            // InternalGo.g:5751:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExpr2Access().getPrimaryExpr2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5760:3: ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            int alt76=6;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalGo.g:5761:4: ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5761:4: ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5762:5: ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorParserRuleCall_1_0_0());
                      				
                    }
                    pushFollow(FOLLOW_61);
                    ruleSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalGo.g:5772:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5773:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5773:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    // InternalGo.g:5774:7: lv_pr_2_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_2_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_2_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5793:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5793:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5794:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:5794:5: ( (lv_index_3_0= ruleIndex ) )
                    // InternalGo.g:5795:6: (lv_index_3_0= ruleIndex )
                    {
                    // InternalGo.g:5795:6: (lv_index_3_0= ruleIndex )
                    // InternalGo.g:5796:7: lv_index_3_0= ruleIndex
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_61);
                    lv_index_3_0=ruleIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"index",
                      								lv_index_3_0,
                      								"org.xtext.example.mydsl.Go.Index");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:5813:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5814:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5814:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    // InternalGo.g:5815:7: lv_pr_4_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_4_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_4_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5834:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5834:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5835:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:5835:5: ( (lv_slice_5_0= ruleSlice ) )
                    // InternalGo.g:5836:6: (lv_slice_5_0= ruleSlice )
                    {
                    // InternalGo.g:5836:6: (lv_slice_5_0= ruleSlice )
                    // InternalGo.g:5837:7: lv_slice_5_0= ruleSlice
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
                      						
                    }
                    pushFollow(FOLLOW_61);
                    lv_slice_5_0=ruleSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"slice",
                      								lv_slice_5_0,
                      								"org.xtext.example.mydsl.Go.Slice");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:5854:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5855:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5855:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    // InternalGo.g:5856:7: lv_pr_6_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_6_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_6_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5875:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5875:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5876:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:5876:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
                    // InternalGo.g:5877:6: (lv_typeass_7_0= ruleTypeAssertion )
                    {
                    // InternalGo.g:5877:6: (lv_typeass_7_0= ruleTypeAssertion )
                    // InternalGo.g:5878:7: lv_typeass_7_0= ruleTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
                      						
                    }
                    pushFollow(FOLLOW_61);
                    lv_typeass_7_0=ruleTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"typeass",
                      								lv_typeass_7_0,
                      								"org.xtext.example.mydsl.Go.TypeAssertion");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:5895:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5896:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5896:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    // InternalGo.g:5897:7: lv_pr_8_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_8_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_8_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:5916:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:5916:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:5917:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:5917:5: ( (lv_arguments_9_0= ruleArguments ) )
                    // InternalGo.g:5918:6: (lv_arguments_9_0= ruleArguments )
                    {
                    // InternalGo.g:5918:6: (lv_arguments_9_0= ruleArguments )
                    // InternalGo.g:5919:7: lv_arguments_9_0= ruleArguments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
                      						
                    }
                    pushFollow(FOLLOW_61);
                    lv_arguments_9_0=ruleArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"arguments",
                      								lv_arguments_9_0,
                      								"org.xtext.example.mydsl.Go.Arguments");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:5936:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:5937:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:5937:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    // InternalGo.g:5938:7: lv_pr_10_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_10_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_10_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr2"


    // $ANTLR start "entryRuleOperand"
    // InternalGo.g:5961:1: entryRuleOperand returns [EObject current=null] : iv_ruleOperand= ruleOperand EOF ;
    public final EObject entryRuleOperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperand = null;


        try {
            // InternalGo.g:5961:48: (iv_ruleOperand= ruleOperand EOF )
            // InternalGo.g:5962:2: iv_ruleOperand= ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperand=ruleOperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalGo.g:5968:1: ruleOperand returns [EObject current=null] : ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleOperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_literal_1_0 = null;

        AntlrDatatypeRuleToken lv_operandn_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5974:2: ( ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:5975:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:5975:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            int alt77=3;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalGo.g:5976:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    {
                    // InternalGo.g:5976:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    // InternalGo.g:5977:4: () ( (lv_literal_1_0= ruleLiteral ) )
                    {
                    // InternalGo.g:5977:4: ()
                    // InternalGo.g:5978:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandAccess().getOperandAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:5987:4: ( (lv_literal_1_0= ruleLiteral ) )
                    // InternalGo.g:5988:5: (lv_literal_1_0= ruleLiteral )
                    {
                    // InternalGo.g:5988:5: (lv_literal_1_0= ruleLiteral )
                    // InternalGo.g:5989:6: lv_literal_1_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_1_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"literal",
                      							lv_literal_1_0,
                      							"org.xtext.example.mydsl.Go.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6008:3: ( (lv_operandn_2_0= ruleOperandName ) )
                    {
                    // InternalGo.g:6008:3: ( (lv_operandn_2_0= ruleOperandName ) )
                    // InternalGo.g:6009:4: (lv_operandn_2_0= ruleOperandName )
                    {
                    // InternalGo.g:6009:4: (lv_operandn_2_0= ruleOperandName )
                    // InternalGo.g:6010:5: lv_operandn_2_0= ruleOperandName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_operandn_2_0=ruleOperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"operandn",
                      						lv_operandn_2_0,
                      						"org.xtext.example.mydsl.Go.OperandName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6028:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:6028:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
                    // InternalGo.g:6029:4: otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:6033:4: ( (lv_expression_4_0= ruleExpression ) )
                    // InternalGo.g:6034:5: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalGo.g:6034:5: (lv_expression_4_0= ruleExpression )
                    // InternalGo.g:6035:6: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleConversion"
    // InternalGo.g:6061:1: entryRuleConversion returns [EObject current=null] : iv_ruleConversion= ruleConversion EOF ;
    public final EObject entryRuleConversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConversion = null;


        try {
            // InternalGo.g:6061:51: (iv_ruleConversion= ruleConversion EOF )
            // InternalGo.g:6062:2: iv_ruleConversion= ruleConversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConversion=ruleConversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConversion"


    // $ANTLR start "ruleConversion"
    // InternalGo.g:6068:1: ruleConversion returns [EObject current=null] : ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) ;
    public final EObject ruleConversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6074:2: ( ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) )
            // InternalGo.g:6075:2: ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            {
            // InternalGo.g:6075:2: ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            // InternalGo.g:6076:3: ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')'
            {
            // InternalGo.g:6076:3: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:6077:4: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:6077:4: (lv_type_0_0= ruleType )
            // InternalGo.g:6078:5: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,45,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:6099:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalGo.g:6100:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalGo.g:6100:4: (lv_expression_2_0= ruleExpression )
            // InternalGo.g:6101:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6118:3: (otherlv_3= ',' )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==52) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalGo.g:6119:4: otherlv_3= ','
                    {
                    otherlv_3=(Token)match(input,52,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConversion"


    // $ANTLR start "entryRuleMethodExpr"
    // InternalGo.g:6132:1: entryRuleMethodExpr returns [EObject current=null] : iv_ruleMethodExpr= ruleMethodExpr EOF ;
    public final EObject entryRuleMethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodExpr = null;


        try {
            // InternalGo.g:6132:51: (iv_ruleMethodExpr= ruleMethodExpr EOF )
            // InternalGo.g:6133:2: iv_ruleMethodExpr= ruleMethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodExpr=ruleMethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodExpr"


    // $ANTLR start "ruleMethodExpr"
    // InternalGo.g:6139:1: ruleMethodExpr returns [EObject current=null] : (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ruleMethodName ) ;
    public final EObject ruleMethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ReceiverType_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6145:2: ( (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ruleMethodName ) )
            // InternalGo.g:6146:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ruleMethodName )
            {
            // InternalGo.g:6146:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ruleMethodName )
            // InternalGo.g:6147:3: this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ruleMethodName
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_8);
            this_ReceiverType_0=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ReceiverType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,42,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMethodExprAccess().getMethodNameParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodExpr"


    // $ANTLR start "entryRuleSelector"
    // InternalGo.g:6176:1: entryRuleSelector returns [String current=null] : iv_ruleSelector= ruleSelector EOF ;
    public final String entryRuleSelector() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSelector = null;


        try {
            // InternalGo.g:6176:48: (iv_ruleSelector= ruleSelector EOF )
            // InternalGo.g:6177:2: iv_ruleSelector= ruleSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelector=ruleSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelector.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelector"


    // $ANTLR start "ruleSelector"
    // InternalGo.g:6183:1: ruleSelector returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleSelector() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_1 = null;



        	enterRule();

        try {
            // InternalGo.g:6189:2: ( (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) )
            // InternalGo.g:6190:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            {
            // InternalGo.g:6190:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            // InternalGo.g:6191:3: kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER
            {
            kw=(Token)match(input,42,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSelectorAccess().getIDENTIFIERParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_1=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelector"


    // $ANTLR start "entryRuleIndex"
    // InternalGo.g:6210:1: entryRuleIndex returns [EObject current=null] : iv_ruleIndex= ruleIndex EOF ;
    public final EObject entryRuleIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndex = null;


        try {
            // InternalGo.g:6210:46: (iv_ruleIndex= ruleIndex EOF )
            // InternalGo.g:6211:2: iv_ruleIndex= ruleIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndex=ruleIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndex"


    // $ANTLR start "ruleIndex"
    // InternalGo.g:6217:1: ruleIndex returns [EObject current=null] : (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6223:2: ( (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) )
            // InternalGo.g:6224:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            {
            // InternalGo.g:6224:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            // InternalGo.g:6225:3: otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:6229:3: ( (lv_expression_1_0= ruleExpression ) )
            // InternalGo.g:6230:4: (lv_expression_1_0= ruleExpression )
            {
            // InternalGo.g:6230:4: (lv_expression_1_0= ruleExpression )
            // InternalGo.g:6231:5: lv_expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIndexRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndex"


    // $ANTLR start "entryRuleSlice"
    // InternalGo.g:6256:1: entryRuleSlice returns [EObject current=null] : iv_ruleSlice= ruleSlice EOF ;
    public final EObject entryRuleSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSlice = null;


        try {
            // InternalGo.g:6256:46: (iv_ruleSlice= ruleSlice EOF )
            // InternalGo.g:6257:2: iv_ruleSlice= ruleSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSlice=ruleSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSlice"


    // $ANTLR start "ruleSlice"
    // InternalGo.g:6263:1: ruleSlice returns [EObject current=null] : ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) ;
    public final EObject ruleSlice() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;

        EObject lv_expression3_7_0 = null;

        EObject lv_expression4_9_0 = null;

        EObject lv_expression5_11_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6269:2: ( ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) )
            // InternalGo.g:6270:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            {
            // InternalGo.g:6270:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==47) ) {
                int LA82_1 = input.LA(2);

                if ( (synpred120_InternalGo()) ) {
                    alt82=1;
                }
                else if ( (true) ) {
                    alt82=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalGo.g:6271:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    {
                    // InternalGo.g:6271:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    // InternalGo.g:6272:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
                    {
                    // InternalGo.g:6272:4: ()
                    // InternalGo.g:6273:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSliceAccess().getSliceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,47,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0_1());
                      			
                    }
                    // InternalGo.g:6286:4: ( (lv_expression_2_0= ruleExpression ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==RULE_LETTER||(LA79_0>=RULE_DECIMAL_LIT && LA79_0<=RULE_DECIMALS)||(LA79_0>=RULE_RAW_STRING_LIT && LA79_0<=RULE_INTERPRETED_STRING_LIT)||LA79_0==RULE_UNARY_OP||LA79_0==40||LA79_0==42||(LA79_0>=44 && LA79_0<=45)||LA79_0==47||LA79_0==49||LA79_0==53||(LA79_0>=55 && LA79_0<=58)) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalGo.g:6287:5: (lv_expression_2_0= ruleExpression )
                            {
                            // InternalGo.g:6287:5: (lv_expression_2_0= ruleExpression )
                            // InternalGo.g:6288:6: lv_expression_2_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_36);
                            lv_expression_2_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_2_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,59,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSliceAccess().getColonKeyword_0_3());
                      			
                    }
                    // InternalGo.g:6309:4: ( (lv_expression2_4_0= ruleExpression ) )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==RULE_LETTER||(LA80_0>=RULE_DECIMAL_LIT && LA80_0<=RULE_DECIMALS)||(LA80_0>=RULE_RAW_STRING_LIT && LA80_0<=RULE_INTERPRETED_STRING_LIT)||LA80_0==RULE_UNARY_OP||LA80_0==40||LA80_0==42||(LA80_0>=44 && LA80_0<=45)||LA80_0==47||LA80_0==49||LA80_0==53||(LA80_0>=55 && LA80_0<=58)) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // InternalGo.g:6310:5: (lv_expression2_4_0= ruleExpression )
                            {
                            // InternalGo.g:6310:5: (lv_expression2_4_0= ruleExpression )
                            // InternalGo.g:6311:6: lv_expression2_4_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_21);
                            lv_expression2_4_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression2",
                              							lv_expression2_4_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6334:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    {
                    // InternalGo.g:6334:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    // InternalGo.g:6335:4: otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']'
                    {
                    otherlv_6=(Token)match(input,47,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalGo.g:6339:4: ( (lv_expression3_7_0= ruleExpression ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==RULE_LETTER||(LA81_0>=RULE_DECIMAL_LIT && LA81_0<=RULE_DECIMALS)||(LA81_0>=RULE_RAW_STRING_LIT && LA81_0<=RULE_INTERPRETED_STRING_LIT)||LA81_0==RULE_UNARY_OP||LA81_0==40||LA81_0==42||(LA81_0>=44 && LA81_0<=45)||LA81_0==47||LA81_0==49||LA81_0==53||(LA81_0>=55 && LA81_0<=58)) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalGo.g:6340:5: (lv_expression3_7_0= ruleExpression )
                            {
                            // InternalGo.g:6340:5: (lv_expression3_7_0= ruleExpression )
                            // InternalGo.g:6341:6: lv_expression3_7_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression3ExpressionParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_36);
                            lv_expression3_7_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression3",
                              							lv_expression3_7_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,59,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSliceAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalGo.g:6362:4: ( (lv_expression4_9_0= ruleExpression ) )
                    // InternalGo.g:6363:5: (lv_expression4_9_0= ruleExpression )
                    {
                    // InternalGo.g:6363:5: (lv_expression4_9_0= ruleExpression )
                    // InternalGo.g:6364:6: lv_expression4_9_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression4ExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_expression4_9_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression4",
                      							lv_expression4_9_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,59,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSliceAccess().getColonKeyword_1_4());
                      			
                    }
                    // InternalGo.g:6385:4: ( (lv_expression5_11_0= ruleExpression ) )
                    // InternalGo.g:6386:5: (lv_expression5_11_0= ruleExpression )
                    {
                    // InternalGo.g:6386:5: (lv_expression5_11_0= ruleExpression )
                    // InternalGo.g:6387:6: lv_expression5_11_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression5ExpressionParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_expression5_11_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression5",
                      							lv_expression5_11_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSlice"


    // $ANTLR start "entryRuleTypeAssertion"
    // InternalGo.g:6413:1: entryRuleTypeAssertion returns [EObject current=null] : iv_ruleTypeAssertion= ruleTypeAssertion EOF ;
    public final EObject entryRuleTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeAssertion = null;


        try {
            // InternalGo.g:6413:54: (iv_ruleTypeAssertion= ruleTypeAssertion EOF )
            // InternalGo.g:6414:2: iv_ruleTypeAssertion= ruleTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeAssertion=ruleTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeAssertion"


    // $ANTLR start "ruleTypeAssertion"
    // InternalGo.g:6420:1: ruleTypeAssertion returns [EObject current=null] : (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) ;
    public final EObject ruleTypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_Type_2 = null;



        	enterRule();

        try {
            // InternalGo.g:6426:2: ( (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) )
            // InternalGo.g:6427:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            {
            // InternalGo.g:6427:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            // InternalGo.g:6428:3: otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_19);
            this_Type_2=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Type_2;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeAssertion"


    // $ANTLR start "entryRuleArguments"
    // InternalGo.g:6455:1: entryRuleArguments returns [EObject current=null] : iv_ruleArguments= ruleArguments EOF ;
    public final EObject entryRuleArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArguments = null;


        try {
            // InternalGo.g:6455:50: (iv_ruleArguments= ruleArguments EOF )
            // InternalGo.g:6456:2: iv_ruleArguments= ruleArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArguments=ruleArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArguments"


    // $ANTLR start "ruleArguments"
    // InternalGo.g:6462:1: ruleArguments returns [EObject current=null] : ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) ;
    public final EObject ruleArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_expressionlist_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6468:2: ( ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) )
            // InternalGo.g:6469:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            {
            // InternalGo.g:6469:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            // InternalGo.g:6470:3: () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')'
            {
            // InternalGo.g:6470:3: ()
            // InternalGo.g:6471:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:6484:3: ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_LETTER||(LA87_0>=RULE_DECIMAL_LIT && LA87_0<=RULE_DECIMALS)||(LA87_0>=RULE_RAW_STRING_LIT && LA87_0<=RULE_INTERPRETED_STRING_LIT)||LA87_0==RULE_UNARY_OP||LA87_0==40||LA87_0==42||(LA87_0>=44 && LA87_0<=45)||LA87_0==47||LA87_0==49||(LA87_0>=52 && LA87_0<=58)) ) {
                alt87=1;
            }
            else if ( (LA87_0==46) ) {
                int LA87_2 = input.LA(2);

                if ( (synpred127_InternalGo()) ) {
                    alt87=1;
                }
            }
            switch (alt87) {
                case 1 :
                    // InternalGo.g:6485:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )?
                    {
                    // InternalGo.g:6485:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?
                    int alt84=3;
                    alt84 = dfa84.predict(input);
                    switch (alt84) {
                        case 1 :
                            // InternalGo.g:6486:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            {
                            // InternalGo.g:6486:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            // InternalGo.g:6487:6: (lv_expressionlist_2_0= ruleExpressionList )
                            {
                            // InternalGo.g:6487:6: (lv_expressionlist_2_0= ruleExpressionList )
                            // InternalGo.g:6488:7: lv_expressionlist_2_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_65);
                            lv_expressionlist_2_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"expressionlist",
                              								lv_expressionlist_2_0,
                              								"org.xtext.example.mydsl.Go.ExpressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:6506:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            {
                            // InternalGo.g:6506:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            // InternalGo.g:6507:6: ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            {
                            // InternalGo.g:6507:6: ( (lv_type_3_0= ruleType ) )
                            // InternalGo.g:6508:7: (lv_type_3_0= ruleType )
                            {
                            // InternalGo.g:6508:7: (lv_type_3_0= ruleType )
                            // InternalGo.g:6509:8: lv_type_3_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_65);
                            lv_type_3_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_3_0,
                              									"org.xtext.example.mydsl.Go.Type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:6526:6: (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            int alt83=2;
                            int LA83_0 = input.LA(1);

                            if ( (LA83_0==52) ) {
                                int LA83_1 = input.LA(2);

                                if ( (LA83_1==RULE_LETTER||(LA83_1>=RULE_DECIMAL_LIT && LA83_1<=RULE_DECIMALS)||(LA83_1>=RULE_RAW_STRING_LIT && LA83_1<=RULE_INTERPRETED_STRING_LIT)||LA83_1==RULE_UNARY_OP||LA83_1==40||LA83_1==42||(LA83_1>=44 && LA83_1<=45)||LA83_1==47||LA83_1==49||LA83_1==53||(LA83_1>=55 && LA83_1<=58)) ) {
                                    alt83=1;
                                }
                            }
                            switch (alt83) {
                                case 1 :
                                    // InternalGo.g:6527:7: otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    {
                                    otherlv_4=(Token)match(input,52,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
                                      						
                                    }
                                    // InternalGo.g:6531:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    // InternalGo.g:6532:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    {
                                    // InternalGo.g:6532:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    // InternalGo.g:6533:9: lv_expressionlist_5_0= ruleExpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_65);
                                    lv_expressionlist_5_0=ruleExpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"expressionlist",
                                      										lv_expressionlist_5_0,
                                      										"org.xtext.example.mydsl.Go.ExpressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:6553:4: (otherlv_6= '...' )?
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( (LA85_0==54) ) {
                        alt85=1;
                    }
                    switch (alt85) {
                        case 1 :
                            // InternalGo.g:6554:5: otherlv_6= '...'
                            {
                            otherlv_6=(Token)match(input,54,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:6559:4: (otherlv_7= ',' )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==52) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalGo.g:6560:5: otherlv_7= ','
                            {
                            otherlv_7=(Token)match(input,52,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArguments"


    // $ANTLR start "entryRuleLiteral"
    // InternalGo.g:6574:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalGo.g:6574:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalGo.g:6575:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalGo.g:6581:1: ruleLiteral returns [EObject current=null] : ( ( () ruleBasicLit ) | this_CompositeLit_2= ruleCompositeLit | this_FunctionLit_3= ruleFunctionLit ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_CompositeLit_2 = null;

        EObject this_FunctionLit_3 = null;



        	enterRule();

        try {
            // InternalGo.g:6587:2: ( ( ( () ruleBasicLit ) | this_CompositeLit_2= ruleCompositeLit | this_FunctionLit_3= ruleFunctionLit ) )
            // InternalGo.g:6588:2: ( ( () ruleBasicLit ) | this_CompositeLit_2= ruleCompositeLit | this_FunctionLit_3= ruleFunctionLit )
            {
            // InternalGo.g:6588:2: ( ( () ruleBasicLit ) | this_CompositeLit_2= ruleCompositeLit | this_FunctionLit_3= ruleFunctionLit )
            int alt88=3;
            switch ( input.LA(1) ) {
            case RULE_DECIMAL_LIT:
            case RULE_OCTAL_LIT:
            case RULE_HEX_LIT:
            case RULE_DECIMALS:
            case RULE_RAW_STRING_LIT:
            case RULE_INTERPRETED_STRING_LIT:
            case 42:
            case 44:
                {
                alt88=1;
                }
                break;
            case RULE_LETTER:
            case 47:
            case 49:
            case 56:
                {
                alt88=2;
                }
                break;
            case 40:
                {
                alt88=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalGo.g:6589:3: ( () ruleBasicLit )
                    {
                    // InternalGo.g:6589:3: ( () ruleBasicLit )
                    // InternalGo.g:6590:4: () ruleBasicLit
                    {
                    // InternalGo.g:6590:4: ()
                    // InternalGo.g:6591:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getLiteralAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getLiteralAccess().getBasicLitParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleBasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6612:3: this_CompositeLit_2= ruleCompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CompositeLit_2=ruleCompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CompositeLit_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:6624:3: this_FunctionLit_3= ruleFunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionLit_3=ruleFunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionLit_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleFunctionLit"
    // InternalGo.g:6639:1: entryRuleFunctionLit returns [EObject current=null] : iv_ruleFunctionLit= ruleFunctionLit EOF ;
    public final EObject entryRuleFunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionLit = null;


        try {
            // InternalGo.g:6639:52: (iv_ruleFunctionLit= ruleFunctionLit EOF )
            // InternalGo.g:6640:2: iv_ruleFunctionLit= ruleFunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionLit=ruleFunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionLit"


    // $ANTLR start "ruleFunctionLit"
    // InternalGo.g:6646:1: ruleFunctionLit returns [EObject current=null] : (otherlv_0= 'func' this_Signature_1= ruleSignature ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) ;
    public final EObject ruleFunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Signature_1 = null;

        EObject lv_functionbody_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6652:2: ( (otherlv_0= 'func' this_Signature_1= ruleSignature ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) )
            // InternalGo.g:6653:2: (otherlv_0= 'func' this_Signature_1= ruleSignature ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            {
            // InternalGo.g:6653:2: (otherlv_0= 'func' this_Signature_1= ruleSignature ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            // InternalGo.g:6654:3: otherlv_0= 'func' this_Signature_1= ruleSignature ( (lv_functionbody_2_0= ruleFunctionBody ) )
            {
            otherlv_0=(Token)match(input,40,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_22);
            this_Signature_1=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Signature_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:6669:3: ( (lv_functionbody_2_0= ruleFunctionBody ) )
            // InternalGo.g:6670:4: (lv_functionbody_2_0= ruleFunctionBody )
            {
            // InternalGo.g:6670:4: (lv_functionbody_2_0= ruleFunctionBody )
            // InternalGo.g:6671:5: lv_functionbody_2_0= ruleFunctionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionbodyFunctionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_functionbody_2_0=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"functionbody",
              						lv_functionbody_2_0,
              						"org.xtext.example.mydsl.Go.FunctionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionLit"


    // $ANTLR start "entryRuleCompositeLit"
    // InternalGo.g:6692:1: entryRuleCompositeLit returns [EObject current=null] : iv_ruleCompositeLit= ruleCompositeLit EOF ;
    public final EObject entryRuleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompositeLit = null;


        try {
            // InternalGo.g:6692:53: (iv_ruleCompositeLit= ruleCompositeLit EOF )
            // InternalGo.g:6693:2: iv_ruleCompositeLit= ruleCompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompositeLit=ruleCompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompositeLit"


    // $ANTLR start "ruleCompositeLit"
    // InternalGo.g:6699:1: ruleCompositeLit returns [EObject current=null] : ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) ;
    public final EObject ruleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_literalt_0_0 = null;

        EObject lv_literalv_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6705:2: ( ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) )
            // InternalGo.g:6706:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            {
            // InternalGo.g:6706:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            // InternalGo.g:6707:3: ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) )
            {
            // InternalGo.g:6707:3: ( (lv_literalt_0_0= ruleLiteralType ) )
            // InternalGo.g:6708:4: (lv_literalt_0_0= ruleLiteralType )
            {
            // InternalGo.g:6708:4: (lv_literalt_0_0= ruleLiteralType )
            // InternalGo.g:6709:5: lv_literalt_0_0= ruleLiteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteraltLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_literalt_0_0=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalt",
              						lv_literalt_0_0,
              						"org.xtext.example.mydsl.Go.LiteralType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6726:3: ( (lv_literalv_1_0= ruleLiteralValue ) )
            // InternalGo.g:6727:4: (lv_literalv_1_0= ruleLiteralValue )
            {
            // InternalGo.g:6727:4: (lv_literalv_1_0= ruleLiteralValue )
            // InternalGo.g:6728:5: lv_literalv_1_0= ruleLiteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralvLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_literalv_1_0=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalv",
              						lv_literalv_1_0,
              						"org.xtext.example.mydsl.Go.LiteralValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompositeLit"


    // $ANTLR start "entryRuleLiteralType"
    // InternalGo.g:6749:1: entryRuleLiteralType returns [EObject current=null] : iv_ruleLiteralType= ruleLiteralType EOF ;
    public final EObject entryRuleLiteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralType = null;


        try {
            // InternalGo.g:6749:52: (iv_ruleLiteralType= ruleLiteralType EOF )
            // InternalGo.g:6750:2: iv_ruleLiteralType= ruleLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralType=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralType"


    // $ANTLR start "ruleLiteralType"
    // InternalGo.g:6756:1: ruleLiteralType returns [EObject current=null] : ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) ;
    public final EObject ruleLiteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_structtype_1_0 = null;

        EObject lv_arraytype_2_0 = null;

        EObject lv_elementype_6_0 = null;

        EObject lv_slicetype_7_0 = null;

        EObject lv_maptype_8_0 = null;

        AntlrDatatypeRuleToken lv_typename_9_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6762:2: ( ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) )
            // InternalGo.g:6763:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            {
            // InternalGo.g:6763:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            int alt89=6;
            switch ( input.LA(1) ) {
            case 49:
                {
                alt89=1;
                }
                break;
            case 47:
                {
                switch ( input.LA(2) ) {
                case RULE_LETTER:
                case RULE_DECIMAL_LIT:
                case RULE_OCTAL_LIT:
                case RULE_HEX_LIT:
                case RULE_DECIMALS:
                case RULE_RAW_STRING_LIT:
                case RULE_INTERPRETED_STRING_LIT:
                case RULE_UNARY_OP:
                case 40:
                case 42:
                case 44:
                case 45:
                case 47:
                case 49:
                case 53:
                case 55:
                case 56:
                case 57:
                case 58:
                    {
                    alt89=2;
                    }
                    break;
                case 54:
                    {
                    alt89=3;
                    }
                    break;
                case 48:
                    {
                    alt89=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 2, input);

                    throw nvae;
                }

                }
                break;
            case 56:
                {
                alt89=5;
                }
                break;
            case RULE_LETTER:
                {
                alt89=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }

            switch (alt89) {
                case 1 :
                    // InternalGo.g:6764:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    {
                    // InternalGo.g:6764:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    // InternalGo.g:6765:4: () ( (lv_structtype_1_0= ruleStructType ) )
                    {
                    // InternalGo.g:6765:4: ()
                    // InternalGo.g:6766:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralTypeAccess().getLiteralTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6775:4: ( (lv_structtype_1_0= ruleStructType ) )
                    // InternalGo.g:6776:5: (lv_structtype_1_0= ruleStructType )
                    {
                    // InternalGo.g:6776:5: (lv_structtype_1_0= ruleStructType )
                    // InternalGo.g:6777:6: lv_structtype_1_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructtypeStructTypeParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_structtype_1_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"structtype",
                      							lv_structtype_1_0,
                      							"org.xtext.example.mydsl.Go.StructType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6796:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    {
                    // InternalGo.g:6796:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    // InternalGo.g:6797:4: (lv_arraytype_2_0= ruleArrayType )
                    {
                    // InternalGo.g:6797:4: (lv_arraytype_2_0= ruleArrayType )
                    // InternalGo.g:6798:5: lv_arraytype_2_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getArraytypeArrayTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arraytype_2_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"arraytype",
                      						lv_arraytype_2_0,
                      						"org.xtext.example.mydsl.Go.ArrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6816:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    {
                    // InternalGo.g:6816:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    // InternalGo.g:6817:4: otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) )
                    {
                    otherlv_3=(Token)match(input,47,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_4=(Token)match(input,54,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_5=(Token)match(input,48,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }
                    // InternalGo.g:6829:4: ( (lv_elementype_6_0= ruleElementType ) )
                    // InternalGo.g:6830:5: (lv_elementype_6_0= ruleElementType )
                    {
                    // InternalGo.g:6830:5: (lv_elementype_6_0= ruleElementType )
                    // InternalGo.g:6831:6: lv_elementype_6_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementypeElementTypeParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elementype_6_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"elementype",
                      							lv_elementype_6_0,
                      							"org.xtext.example.mydsl.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6850:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    {
                    // InternalGo.g:6850:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    // InternalGo.g:6851:4: (lv_slicetype_7_0= ruleSliceType )
                    {
                    // InternalGo.g:6851:4: (lv_slicetype_7_0= ruleSliceType )
                    // InternalGo.g:6852:5: lv_slicetype_7_0= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getSlicetypeSliceTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_slicetype_7_0=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"slicetype",
                      						lv_slicetype_7_0,
                      						"org.xtext.example.mydsl.Go.SliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6870:3: ( (lv_maptype_8_0= ruleMapType ) )
                    {
                    // InternalGo.g:6870:3: ( (lv_maptype_8_0= ruleMapType ) )
                    // InternalGo.g:6871:4: (lv_maptype_8_0= ruleMapType )
                    {
                    // InternalGo.g:6871:4: (lv_maptype_8_0= ruleMapType )
                    // InternalGo.g:6872:5: lv_maptype_8_0= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMaptypeMapTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_maptype_8_0=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"maptype",
                      						lv_maptype_8_0,
                      						"org.xtext.example.mydsl.Go.MapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:6890:3: ( (lv_typename_9_0= ruleTypeName ) )
                    {
                    // InternalGo.g:6890:3: ( (lv_typename_9_0= ruleTypeName ) )
                    // InternalGo.g:6891:4: (lv_typename_9_0= ruleTypeName )
                    {
                    // InternalGo.g:6891:4: (lv_typename_9_0= ruleTypeName )
                    // InternalGo.g:6892:5: lv_typename_9_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypenameTypeNameParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typename_9_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"typename",
                      						lv_typename_9_0,
                      						"org.xtext.example.mydsl.Go.TypeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralType"


    // $ANTLR start "entryRuleLiteralValue"
    // InternalGo.g:6913:1: entryRuleLiteralValue returns [EObject current=null] : iv_ruleLiteralValue= ruleLiteralValue EOF ;
    public final EObject entryRuleLiteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValue = null;


        try {
            // InternalGo.g:6913:53: (iv_ruleLiteralValue= ruleLiteralValue EOF )
            // InternalGo.g:6914:2: iv_ruleLiteralValue= ruleLiteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValue=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValue"


    // $ANTLR start "ruleLiteralValue"
    // InternalGo.g:6920:1: ruleLiteralValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) ;
    public final EObject ruleLiteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6926:2: ( ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) )
            // InternalGo.g:6927:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            {
            // InternalGo.g:6927:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            // InternalGo.g:6928:3: () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}'
            {
            // InternalGo.g:6928:3: ()
            // InternalGo.g:6929:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:6942:3: ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==RULE_LETTER||(LA91_0>=RULE_DECIMAL_LIT && LA91_0<=RULE_DECIMALS)||(LA91_0>=RULE_RAW_STRING_LIT && LA91_0<=RULE_INTERPRETED_STRING_LIT)||LA91_0==RULE_UNARY_OP||LA91_0==40||LA91_0==42||(LA91_0>=44 && LA91_0<=45)||LA91_0==47||(LA91_0>=49 && LA91_0<=50)||LA91_0==53||(LA91_0>=55 && LA91_0<=58)) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalGo.g:6943:4: ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:6943:4: ( (lv_elementlist_2_0= ruleElementList ) )
                    // InternalGo.g:6944:5: (lv_elementlist_2_0= ruleElementList )
                    {
                    // InternalGo.g:6944:5: (lv_elementlist_2_0= ruleElementList )
                    // InternalGo.g:6945:6: lv_elementlist_2_0= ruleElementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementlistElementListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_68);
                    lv_elementlist_2_0=ruleElementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"elementlist",
                      							lv_elementlist_2_0,
                      							"org.xtext.example.mydsl.Go.ElementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6962:4: (otherlv_3= ',' )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==52) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalGo.g:6963:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,52,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValue"


    // $ANTLR start "entryRuleElementList"
    // InternalGo.g:6977:1: entryRuleElementList returns [EObject current=null] : iv_ruleElementList= ruleElementList EOF ;
    public final EObject entryRuleElementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementList = null;


        try {
            // InternalGo.g:6977:52: (iv_ruleElementList= ruleElementList EOF )
            // InternalGo.g:6978:2: iv_ruleElementList= ruleElementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementList=ruleElementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementList"


    // $ANTLR start "ruleElementList"
    // InternalGo.g:6984:1: ruleElementList returns [EObject current=null] : (this_KeyedElement_0= ruleKeyedElement (otherlv_1= ',' ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) ;
    public final EObject ruleElementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_KeyedElement_0 = null;

        EObject lv_keyedelement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6990:2: ( (this_KeyedElement_0= ruleKeyedElement (otherlv_1= ',' ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) )
            // InternalGo.g:6991:2: (this_KeyedElement_0= ruleKeyedElement (otherlv_1= ',' ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            {
            // InternalGo.g:6991:2: (this_KeyedElement_0= ruleKeyedElement (otherlv_1= ',' ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            // InternalGo.g:6992:3: this_KeyedElement_0= ruleKeyedElement (otherlv_1= ',' ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_KeyedElement_0=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_KeyedElement_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:7003:3: (otherlv_1= ',' ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==52) ) {
                    int LA92_1 = input.LA(2);

                    if ( (LA92_1==RULE_LETTER||(LA92_1>=RULE_DECIMAL_LIT && LA92_1<=RULE_DECIMALS)||(LA92_1>=RULE_RAW_STRING_LIT && LA92_1<=RULE_INTERPRETED_STRING_LIT)||LA92_1==RULE_UNARY_OP||LA92_1==40||LA92_1==42||(LA92_1>=44 && LA92_1<=45)||LA92_1==47||(LA92_1>=49 && LA92_1<=50)||LA92_1==53||(LA92_1>=55 && LA92_1<=58)) ) {
                        alt92=1;
                    }


                }


                switch (alt92) {
            	case 1 :
            	    // InternalGo.g:7004:4: otherlv_1= ',' ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:7008:4: ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    // InternalGo.g:7009:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    {
            	    // InternalGo.g:7009:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    // InternalGo.g:7010:6: lv_keyedelement_2_0= ruleKeyedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedelementKeyedElementParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_keyedelement_2_0=ruleKeyedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getElementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"keyedelement",
            	      							lv_keyedelement_2_0,
            	      							"org.xtext.example.mydsl.Go.KeyedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementList"


    // $ANTLR start "entryRuleKeyedElement"
    // InternalGo.g:7032:1: entryRuleKeyedElement returns [EObject current=null] : iv_ruleKeyedElement= ruleKeyedElement EOF ;
    public final EObject entryRuleKeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyedElement = null;


        try {
            // InternalGo.g:7032:53: (iv_ruleKeyedElement= ruleKeyedElement EOF )
            // InternalGo.g:7033:2: iv_ruleKeyedElement= ruleKeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyedElement=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyedElement"


    // $ANTLR start "ruleKeyedElement"
    // InternalGo.g:7039:1: ruleKeyedElement returns [EObject current=null] : ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) ;
    public final EObject ruleKeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_Key_0 = null;

        EObject lv_element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7045:2: ( ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) )
            // InternalGo.g:7046:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            {
            // InternalGo.g:7046:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            // InternalGo.g:7047:3: (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) )
            {
            // InternalGo.g:7047:3: (this_Key_0= ruleKey otherlv_1= ':' )?
            int alt93=2;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // InternalGo.g:7048:4: this_Key_0= ruleKey otherlv_1= ':'
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_Key_0=ruleKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Key_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_1=(Token)match(input,59,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:7064:3: ( (lv_element_2_0= ruleElement ) )
            // InternalGo.g:7065:4: (lv_element_2_0= ruleElement )
            {
            // InternalGo.g:7065:4: (lv_element_2_0= ruleElement )
            // InternalGo.g:7066:5: lv_element_2_0= ruleElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_element_2_0=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"element",
              						lv_element_2_0,
              						"org.xtext.example.mydsl.Go.Element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyedElement"


    // $ANTLR start "entryRuleKey"
    // InternalGo.g:7087:1: entryRuleKey returns [EObject current=null] : iv_ruleKey= ruleKey EOF ;
    public final EObject entryRuleKey() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKey = null;


        try {
            // InternalGo.g:7087:44: (iv_ruleKey= ruleKey EOF )
            // InternalGo.g:7088:2: iv_ruleKey= ruleKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKey=ruleKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKey"


    // $ANTLR start "ruleKey"
    // InternalGo.g:7094:1: ruleKey returns [EObject current=null] : ( ( () ruleFieldName ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) ;
    public final EObject ruleKey() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_2 = null;

        EObject this_LiteralValue_3 = null;



        	enterRule();

        try {
            // InternalGo.g:7100:2: ( ( ( () ruleFieldName ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) )
            // InternalGo.g:7101:2: ( ( () ruleFieldName ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            {
            // InternalGo.g:7101:2: ( ( () ruleFieldName ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            int alt94=3;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                int LA94_1 = input.LA(2);

                if ( (synpred139_InternalGo()) ) {
                    alt94=1;
                }
                else if ( (synpred140_InternalGo()) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DECIMAL_LIT:
            case RULE_OCTAL_LIT:
            case RULE_HEX_LIT:
            case RULE_DECIMALS:
            case RULE_RAW_STRING_LIT:
            case RULE_INTERPRETED_STRING_LIT:
            case RULE_UNARY_OP:
            case 40:
            case 42:
            case 44:
            case 45:
            case 47:
            case 49:
            case 53:
            case 55:
            case 56:
            case 57:
            case 58:
                {
                alt94=2;
                }
                break;
            case 50:
                {
                alt94=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }

            switch (alt94) {
                case 1 :
                    // InternalGo.g:7102:3: ( () ruleFieldName )
                    {
                    // InternalGo.g:7102:3: ( () ruleFieldName )
                    // InternalGo.g:7103:4: () ruleFieldName
                    {
                    // InternalGo.g:7103:4: ()
                    // InternalGo.g:7104:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeyAccess().getKeyAction_0_0(),
                      						current);
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleFieldName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7125:3: this_Expression_2= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_2=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:7137:3: this_LiteralValue_3= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_3=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKey"


    // $ANTLR start "entryRuleFieldName"
    // InternalGo.g:7152:1: entryRuleFieldName returns [String current=null] : iv_ruleFieldName= ruleFieldName EOF ;
    public final String entryRuleFieldName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFieldName = null;


        try {
            // InternalGo.g:7152:49: (iv_ruleFieldName= ruleFieldName EOF )
            // InternalGo.g:7153:2: iv_ruleFieldName= ruleFieldName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldName=ruleFieldName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldName"


    // $ANTLR start "ruleFieldName"
    // InternalGo.g:7159:1: ruleFieldName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFieldName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7165:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:7166:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFieldNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldName"


    // $ANTLR start "entryRuleElement"
    // InternalGo.g:7179:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalGo.g:7179:48: (iv_ruleElement= ruleElement EOF )
            // InternalGo.g:7180:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalGo.g:7186:1: ruleElement returns [EObject current=null] : (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;

        EObject this_LiteralValue_1 = null;



        	enterRule();

        try {
            // InternalGo.g:7192:2: ( (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) )
            // InternalGo.g:7193:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            {
            // InternalGo.g:7193:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_LETTER||(LA95_0>=RULE_DECIMAL_LIT && LA95_0<=RULE_DECIMALS)||(LA95_0>=RULE_RAW_STRING_LIT && LA95_0<=RULE_INTERPRETED_STRING_LIT)||LA95_0==RULE_UNARY_OP||LA95_0==40||LA95_0==42||(LA95_0>=44 && LA95_0<=45)||LA95_0==47||LA95_0==49||LA95_0==53||(LA95_0>=55 && LA95_0<=58)) ) {
                alt95=1;
            }
            else if ( (LA95_0==50) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // InternalGo.g:7194:3: this_Expression_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7206:3: this_LiteralValue_1= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_1=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleBasicLit"
    // InternalGo.g:7221:1: entryRuleBasicLit returns [String current=null] : iv_ruleBasicLit= ruleBasicLit EOF ;
    public final String entryRuleBasicLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBasicLit = null;


        try {
            // InternalGo.g:7221:48: (iv_ruleBasicLit= ruleBasicLit EOF )
            // InternalGo.g:7222:2: iv_ruleBasicLit= ruleBasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicLit=ruleBasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicLit"


    // $ANTLR start "ruleBasicLit"
    // InternalGo.g:7228:1: ruleBasicLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_LIT_0= ruleINT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_LIT_4= ruleSTRING_LIT ) ;
    public final AntlrDatatypeRuleToken ruleBasicLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_INT_LIT_0 = null;

        AntlrDatatypeRuleToken this_FLOAT_LIT_1 = null;

        AntlrDatatypeRuleToken this_IMAGINARY_LIT_2 = null;

        AntlrDatatypeRuleToken this_RUNE_LIT_3 = null;

        AntlrDatatypeRuleToken this_STRING_LIT_4 = null;



        	enterRule();

        try {
            // InternalGo.g:7234:2: ( (this_INT_LIT_0= ruleINT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_LIT_4= ruleSTRING_LIT ) )
            // InternalGo.g:7235:2: (this_INT_LIT_0= ruleINT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_LIT_4= ruleSTRING_LIT )
            {
            // InternalGo.g:7235:2: (this_INT_LIT_0= ruleINT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_LIT_4= ruleSTRING_LIT )
            int alt96=5;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalGo.g:7236:3: this_INT_LIT_0= ruleINT_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getINT_LITParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INT_LIT_0=ruleINT_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7247:3: this_FLOAT_LIT_1= ruleFLOAT_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getFLOAT_LITParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FLOAT_LIT_1=ruleFLOAT_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FLOAT_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:7258:3: this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IMAGINARY_LIT_2=ruleIMAGINARY_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IMAGINARY_LIT_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:7269:3: this_RUNE_LIT_3= ruleRUNE_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getRUNE_LITParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RUNE_LIT_3=ruleRUNE_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RUNE_LIT_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:7280:3: this_STRING_LIT_4= ruleSTRING_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getSTRING_LITParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_STRING_LIT_4=ruleSTRING_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_LIT_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicLit"


    // $ANTLR start "entryRuleReceiverType"
    // InternalGo.g:7294:1: entryRuleReceiverType returns [EObject current=null] : iv_ruleReceiverType= ruleReceiverType EOF ;
    public final EObject entryRuleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiverType = null;


        try {
            // InternalGo.g:7294:53: (iv_ruleReceiverType= ruleReceiverType EOF )
            // InternalGo.g:7295:2: iv_ruleReceiverType= ruleReceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiverType=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiverType"


    // $ANTLR start "ruleReceiverType"
    // InternalGo.g:7301:1: ruleReceiverType returns [EObject current=null] : ( (lv_type_0_0= ruleType ) ) ;
    public final EObject ruleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7307:2: ( ( (lv_type_0_0= ruleType ) ) )
            // InternalGo.g:7308:2: ( (lv_type_0_0= ruleType ) )
            {
            // InternalGo.g:7308:2: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:7309:3: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:7309:3: (lv_type_0_0= ruleType )
            // InternalGo.g:7310:4: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
              				}
              				set(
              					current,
              					"type",
              					lv_type_0_0,
              					"org.xtext.example.mydsl.Go.Type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiverType"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalGo.g:7330:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBody = null;


        try {
            // InternalGo.g:7330:53: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalGo.g:7331:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalGo.g:7337:1: ruleFunctionBody returns [EObject current=null] : this_Block_0= ruleBlock ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7343:2: (this_Block_0= ruleBlock )
            // InternalGo.g:7344:2: this_Block_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Block_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Block_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleOperandName"
    // InternalGo.g:7358:1: entryRuleOperandName returns [String current=null] : iv_ruleOperandName= ruleOperandName EOF ;
    public final String entryRuleOperandName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOperandName = null;


        try {
            // InternalGo.g:7358:51: (iv_ruleOperandName= ruleOperandName EOF )
            // InternalGo.g:7359:2: iv_ruleOperandName= ruleOperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperandName=ruleOperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperandName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperandName"


    // $ANTLR start "ruleOperandName"
    // InternalGo.g:7365:1: ruleOperandName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) ;
    public final AntlrDatatypeRuleToken ruleOperandName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;

        AntlrDatatypeRuleToken this_QualifiedIdent_1 = null;



        	enterRule();

        try {
            // InternalGo.g:7371:2: ( (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent ) )
            // InternalGo.g:7372:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            {
            // InternalGo.g:7372:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )
            int alt97=2;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    // InternalGo.g:7373:3: this_IDENTIFIER_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOperandNameAccess().getIDENTIFIERParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IDENTIFIER_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IDENTIFIER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7384:3: this_QualifiedIdent_1= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedIdent_1=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QualifiedIdent_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperandName"


    // $ANTLR start "entryRuleImportDecl"
    // InternalGo.g:7398:1: entryRuleImportDecl returns [EObject current=null] : iv_ruleImportDecl= ruleImportDecl EOF ;
    public final EObject entryRuleImportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDecl = null;


        try {
            // InternalGo.g:7398:51: (iv_ruleImportDecl= ruleImportDecl EOF )
            // InternalGo.g:7399:2: iv_ruleImportDecl= ruleImportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDecl=ruleImportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportDecl"


    // $ANTLR start "ruleImportDecl"
    // InternalGo.g:7405:1: ruleImportDecl returns [EObject current=null] : ( () otherlv_1= 'import' ( ruleImportSpec | (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleImportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalGo.g:7411:2: ( ( () otherlv_1= 'import' ( ruleImportSpec | (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:7412:2: ( () otherlv_1= 'import' ( ruleImportSpec | (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:7412:2: ( () otherlv_1= 'import' ( ruleImportSpec | (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:7413:3: () otherlv_1= 'import' ( ruleImportSpec | (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:7413:3: ()
            // InternalGo.g:7414:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,81,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
              		
            }
            // InternalGo.g:7427:3: ( ruleImportSpec | (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_LETTER||(LA99_0>=RULE_RAW_STRING_LIT && LA99_0<=RULE_INTERPRETED_STRING_LIT)||LA99_0==42) ) {
                alt99=1;
            }
            else if ( (LA99_0==45) ) {
                alt99=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalGo.g:7428:4: ruleImportSpec
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleImportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7439:4: (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:7439:4: (otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:7440:5: otherlv_3= '(' ( ruleImportSpec otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:7444:5: ( ruleImportSpec otherlv_5= ';' )*
                    loop98:
                    do {
                        int alt98=2;
                        int LA98_0 = input.LA(1);

                        if ( (LA98_0==RULE_LETTER||(LA98_0>=RULE_RAW_STRING_LIT && LA98_0<=RULE_INTERPRETED_STRING_LIT)||LA98_0==42) ) {
                            alt98=1;
                        }


                        switch (alt98) {
                    	case 1 :
                    	    // InternalGo.g:7445:6: ruleImportSpec otherlv_5= ';'
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_2_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    ruleImportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }
                    	    otherlv_5=(Token)match(input,39,FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportDecl"


    // $ANTLR start "entryRuleImportSpec"
    // InternalGo.g:7470:1: entryRuleImportSpec returns [String current=null] : iv_ruleImportSpec= ruleImportSpec EOF ;
    public final String entryRuleImportSpec() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImportSpec = null;


        try {
            // InternalGo.g:7470:50: (iv_ruleImportSpec= ruleImportSpec EOF )
            // InternalGo.g:7471:2: iv_ruleImportSpec= ruleImportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportSpec=ruleImportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportSpec.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportSpec"


    // $ANTLR start "ruleImportSpec"
    // InternalGo.g:7477:1: ruleImportSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '.' | this_PackageName_1= rulePackageName )? this_ImportPath_2= ruleImportPath ) ;
    public final AntlrDatatypeRuleToken ruleImportSpec() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_PackageName_1 = null;

        AntlrDatatypeRuleToken this_ImportPath_2 = null;



        	enterRule();

        try {
            // InternalGo.g:7483:2: ( ( (kw= '.' | this_PackageName_1= rulePackageName )? this_ImportPath_2= ruleImportPath ) )
            // InternalGo.g:7484:2: ( (kw= '.' | this_PackageName_1= rulePackageName )? this_ImportPath_2= ruleImportPath )
            {
            // InternalGo.g:7484:2: ( (kw= '.' | this_PackageName_1= rulePackageName )? this_ImportPath_2= ruleImportPath )
            // InternalGo.g:7485:3: (kw= '.' | this_PackageName_1= rulePackageName )? this_ImportPath_2= ruleImportPath
            {
            // InternalGo.g:7485:3: (kw= '.' | this_PackageName_1= rulePackageName )?
            int alt100=3;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==42) ) {
                alt100=1;
            }
            else if ( (LA100_0==RULE_LETTER) ) {
                alt100=2;
            }
            switch (alt100) {
                case 1 :
                    // InternalGo.g:7486:4: kw= '.'
                    {
                    kw=(Token)match(input,42,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7492:4: this_PackageName_1= rulePackageName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getImportSpecAccess().getPackageNameParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_71);
                    this_PackageName_1=rulePackageName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PackageName_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ImportPath_2=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ImportPath_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportSpec"


    // $ANTLR start "entryRuleImportPath"
    // InternalGo.g:7517:1: entryRuleImportPath returns [String current=null] : iv_ruleImportPath= ruleImportPath EOF ;
    public final String entryRuleImportPath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImportPath = null;


        try {
            // InternalGo.g:7517:50: (iv_ruleImportPath= ruleImportPath EOF )
            // InternalGo.g:7518:2: iv_ruleImportPath= ruleImportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportPath=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportPath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportPath"


    // $ANTLR start "ruleImportPath"
    // InternalGo.g:7524:1: ruleImportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= ruleSTRING_LIT ;
    public final AntlrDatatypeRuleToken ruleImportPath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_STRING_LIT_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7530:2: (this_STRING_LIT_0= ruleSTRING_LIT )
            // InternalGo.g:7531:2: this_STRING_LIT_0= ruleSTRING_LIT
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getImportPathAccess().getSTRING_LITParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_STRING_LIT_0=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportPath"

    // $ANTLR start synpred7_InternalGo
    public final void synpred7_InternalGo_fragment() throws RecognitionException {   
        Token this_LETTER_1=null;

        // InternalGo.g:535:4: (this_LETTER_1= RULE_LETTER )
        // InternalGo.g:535:4: this_LETTER_1= RULE_LETTER
        {
        this_LETTER_1=(Token)match(input,RULE_LETTER,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalGo

    // $ANTLR start synpred11_InternalGo
    public final void synpred11_InternalGo_fragment() throws RecognitionException {   
        Token this_DECIMALS_2=null;

        // InternalGo.g:626:5: (this_DECIMALS_2= RULE_DECIMALS )
        // InternalGo.g:626:5: this_DECIMALS_2= RULE_DECIMALS
        {
        this_DECIMALS_2=(Token)match(input,RULE_DECIMALS,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalGo

    // $ANTLR start synpred21_InternalGo
    public final void synpred21_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;


        // InternalGo.g:903:3: (this_IDENTIFIER_0= ruleIDENTIFIER )
        // InternalGo.g:903:3: this_IDENTIFIER_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0());
          		
        }
        pushFollow(FOLLOW_2);
        this_IDENTIFIER_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred21_InternalGo

    // $ANTLR start synpred30_InternalGo
    public final void synpred30_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_indentifierL_1_0 = null;

        EObject lv_type_2_0 = null;


        // InternalGo.g:1364:4: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) )
        // InternalGo.g:1364:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
        {
        // InternalGo.g:1364:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
        // InternalGo.g:1365:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) )
        {
        // InternalGo.g:1365:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) )
        // InternalGo.g:1366:6: (lv_indentifierL_1_0= ruleIdentifierList )
        {
        // InternalGo.g:1366:6: (lv_indentifierL_1_0= ruleIdentifierList )
        // InternalGo.g:1367:7: lv_indentifierL_1_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_18);
        lv_indentifierL_1_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:1384:5: ( (lv_type_2_0= ruleType ) )
        // InternalGo.g:1385:6: (lv_type_2_0= ruleType )
        {
        // InternalGo.g:1385:6: (lv_type_2_0= ruleType )
        // InternalGo.g:1386:7: lv_type_2_0= ruleType
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_type_2_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred30_InternalGo

    // $ANTLR start synpred34_InternalGo
    public final void synpred34_InternalGo_fragment() throws RecognitionException {   
        EObject lv_result_2_0 = null;


        // InternalGo.g:1676:4: ( (lv_result_2_0= ruleResult ) )
        // InternalGo.g:1676:4: (lv_result_2_0= ruleResult )
        {
        // InternalGo.g:1676:4: (lv_result_2_0= ruleResult )
        // InternalGo.g:1677:5: lv_result_2_0= ruleResult
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_result_2_0=ruleResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalGo

    // $ANTLR start synpred35_InternalGo
    public final void synpred35_InternalGo_fragment() throws RecognitionException {   
        EObject this_Parameters_0 = null;


        // InternalGo.g:1713:3: (this_Parameters_0= ruleParameters )
        // InternalGo.g:1713:3: this_Parameters_0= ruleParameters
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Parameters_0=ruleParameters();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalGo

    // $ANTLR start synpred39_InternalGo
    public final void synpred39_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_indentifierL_0_0 = null;


        // InternalGo.g:1875:4: ( (lv_indentifierL_0_0= ruleIdentifierList ) )
        // InternalGo.g:1875:4: (lv_indentifierL_0_0= ruleIdentifierList )
        {
        // InternalGo.g:1875:4: (lv_indentifierL_0_0= ruleIdentifierList )
        // InternalGo.g:1876:5: lv_indentifierL_0_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParameterDeclAccess().getIndentifierLIdentifierListParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_indentifierL_0_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred39_InternalGo

    // $ANTLR start synpred43_InternalGo
    public final void synpred43_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;

        // InternalGo.g:2226:6: (otherlv_1= '<-' )
        // InternalGo.g:2226:6: otherlv_1= '<-'
        {
        otherlv_1=(Token)match(input,58,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred43_InternalGo

    // $ANTLR start synpred49_InternalGo
    public final void synpred49_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotst_4_0 = null;


        // InternalGo.g:2446:3: ( ( (lv_gotst_4_0= ruleGoStmt ) ) )
        // InternalGo.g:2446:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        {
        // InternalGo.g:2446:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        // InternalGo.g:2447:4: (lv_gotst_4_0= ruleGoStmt )
        {
        // InternalGo.g:2447:4: (lv_gotst_4_0= ruleGoStmt )
        // InternalGo.g:2448:5: lv_gotst_4_0= ruleGoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotst_4_0=ruleGoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred49_InternalGo

    // $ANTLR start synpred53_InternalGo
    public final void synpred53_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotost_8_0 = null;


        // InternalGo.g:2518:3: ( ( (lv_gotost_8_0= ruleGotoStmt ) ) )
        // InternalGo.g:2518:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        {
        // InternalGo.g:2518:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        // InternalGo.g:2519:4: (lv_gotost_8_0= ruleGotoStmt )
        {
        // InternalGo.g:2519:4: (lv_gotost_8_0= ruleGotoStmt )
        // InternalGo.g:2520:5: lv_gotost_8_0= ruleGotoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotost_8_0=ruleGotoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred53_InternalGo

    // $ANTLR start synpred63_InternalGo
    public final void synpred63_InternalGo_fragment() throws RecognitionException {   
        EObject this_ExpressionStmt_2 = null;


        // InternalGo.g:2825:3: (this_ExpressionStmt_2= ruleExpressionStmt )
        // InternalGo.g:2825:3: this_ExpressionStmt_2= ruleExpressionStmt
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_ExpressionStmt_2=ruleExpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_InternalGo

    // $ANTLR start synpred64_InternalGo
    public final void synpred64_InternalGo_fragment() throws RecognitionException {   
        EObject this_SendStmt_3 = null;


        // InternalGo.g:2837:3: (this_SendStmt_3= ruleSendStmt )
        // InternalGo.g:2837:3: this_SendStmt_3= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_SendStmt_3=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_InternalGo

    // $ANTLR start synpred65_InternalGo
    public final void synpred65_InternalGo_fragment() throws RecognitionException {   
        EObject this_IncDecStmt_4 = null;


        // InternalGo.g:2849:3: (this_IncDecStmt_4= ruleIncDecStmt )
        // InternalGo.g:2849:3: this_IncDecStmt_4= ruleIncDecStmt
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_IncDecStmt_4=ruleIncDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_InternalGo

    // $ANTLR start synpred66_InternalGo
    public final void synpred66_InternalGo_fragment() throws RecognitionException {   
        EObject this_Assignment_5 = null;


        // InternalGo.g:2861:3: (this_Assignment_5= ruleAssignment )
        // InternalGo.g:2861:3: this_Assignment_5= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Assignment_5=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred66_InternalGo

    // $ANTLR start synpred70_InternalGo
    public final void synpred70_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simst_1_0 = null;


        // InternalGo.g:3100:4: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:3100:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:3100:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
        // InternalGo.g:3101:5: (lv_simst_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:3101:5: (lv_simst_1_0= ruleSimpleStmt )
        // InternalGo.g:3102:6: lv_simst_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_3);
        lv_simst_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_InternalGo

    // $ANTLR start synpred73_InternalGo
    public final void synpred73_InternalGo_fragment() throws RecognitionException {   
        EObject this_ExprSwitchStmt_0 = null;


        // InternalGo.g:3250:3: (this_ExprSwitchStmt_0= ruleExprSwitchStmt )
        // InternalGo.g:3250:3: this_ExprSwitchStmt_0= ruleExprSwitchStmt
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_ExprSwitchStmt_0=ruleExprSwitchStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred73_InternalGo

    // $ANTLR start synpred75_InternalGo
    public final void synpred75_InternalGo_fragment() throws RecognitionException {   
        EObject lv_condition_1_0 = null;


        // InternalGo.g:3357:4: ( ( (lv_condition_1_0= ruleCondition ) ) )
        // InternalGo.g:3357:4: ( (lv_condition_1_0= ruleCondition ) )
        {
        // InternalGo.g:3357:4: ( (lv_condition_1_0= ruleCondition ) )
        // InternalGo.g:3358:5: (lv_condition_1_0= ruleCondition )
        {
        // InternalGo.g:3358:5: (lv_condition_1_0= ruleCondition )
        // InternalGo.g:3359:6: lv_condition_1_0= ruleCondition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_1_0=ruleCondition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred75_InternalGo

    // $ANTLR start synpred76_InternalGo
    public final void synpred76_InternalGo_fragment() throws RecognitionException {   
        EObject lv_for_2_0 = null;


        // InternalGo.g:3377:4: ( ( (lv_for_2_0= ruleForClause ) ) )
        // InternalGo.g:3377:4: ( (lv_for_2_0= ruleForClause ) )
        {
        // InternalGo.g:3377:4: ( (lv_for_2_0= ruleForClause ) )
        // InternalGo.g:3378:5: (lv_for_2_0= ruleForClause )
        {
        // InternalGo.g:3378:5: (lv_for_2_0= ruleForClause )
        // InternalGo.g:3379:6: lv_for_2_0= ruleForClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_for_2_0=ruleForClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalGo

    // $ANTLR start synpred77_InternalGo
    public final void synpred77_InternalGo_fragment() throws RecognitionException {   
        EObject lv_range_3_0 = null;


        // InternalGo.g:3397:4: ( ( (lv_range_3_0= ruleRangeClause ) ) )
        // InternalGo.g:3397:4: ( (lv_range_3_0= ruleRangeClause ) )
        {
        // InternalGo.g:3397:4: ( (lv_range_3_0= ruleRangeClause ) )
        // InternalGo.g:3398:5: (lv_range_3_0= ruleRangeClause )
        {
        // InternalGo.g:3398:5: (lv_range_3_0= ruleRangeClause )
        // InternalGo.g:3399:6: lv_range_3_0= ruleRangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_range_3_0=ruleRangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred77_InternalGo

    // $ANTLR start synpred88_InternalGo
    public final void synpred88_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_simplestmt_2_0 = null;


        // InternalGo.g:4337:4: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )
        // InternalGo.g:4337:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';'
        {
        // InternalGo.g:4337:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
        // InternalGo.g:4338:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        {
        // InternalGo.g:4338:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        // InternalGo.g:4339:6: lv_simplestmt_2_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_3);
        lv_simplestmt_2_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_InternalGo

    // $ANTLR start synpred92_InternalGo
    public final void synpred92_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject this_SimpleStmt_1 = null;


        // InternalGo.g:4555:4: (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )
        // InternalGo.g:4555:4: this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';'
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_3);
        this_SimpleStmt_1=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;
        otherlv_2=(Token)match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred92_InternalGo

    // $ANTLR start synpred97_InternalGo
    public final void synpred97_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sendstmt_2_0 = null;


        // InternalGo.g:4954:5: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) )
        // InternalGo.g:4954:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        {
        // InternalGo.g:4954:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        // InternalGo.g:4955:6: (lv_sendstmt_2_0= ruleSendStmt )
        {
        // InternalGo.g:4955:6: (lv_sendstmt_2_0= ruleSendStmt )
        // InternalGo.g:4956:7: lv_sendstmt_2_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_sendstmt_2_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred97_InternalGo

    // $ANTLR start synpred99_InternalGo
    public final void synpred99_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_ExpressionList_0 = null;


        // InternalGo.g:5032:4: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) )
        // InternalGo.g:5032:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        {
        // InternalGo.g:5032:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        // InternalGo.g:5033:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }
        pushFollow(FOLLOW_47);
        this_ExpressionList_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,71,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred99_InternalGo

    // $ANTLR start synpred100_InternalGo
    public final void synpred100_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalGo.g:5050:4: ( ( ruleIdentifierList otherlv_3= ':=' ) )
        // InternalGo.g:5050:4: ( ruleIdentifierList otherlv_3= ':=' )
        {
        // InternalGo.g:5050:4: ( ruleIdentifierList otherlv_3= ':=' )
        // InternalGo.g:5051:5: ruleIdentifierList otherlv_3= ':='
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }
        pushFollow(FOLLOW_53);
        ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;
        otherlv_3=(Token)match(input,76,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred100_InternalGo

    // $ANTLR start synpred101_InternalGo
    public final void synpred101_InternalGo_fragment() throws RecognitionException {   
        EObject this_InitStmt_0 = null;


        // InternalGo.g:5162:4: (this_InitStmt_0= ruleInitStmt )
        // InternalGo.g:5162:4: this_InitStmt_0= ruleInitStmt
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_2);
        this_InitStmt_0=ruleInitStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalGo

    // $ANTLR start synpred105_InternalGo
    public final void synpred105_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_expression2_2_0 = null;


        // InternalGo.g:5420:4: (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )
        // InternalGo.g:5420:4: otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) )
        {
        otherlv_1=(Token)match(input,39,FOLLOW_20); if (state.failed) return ;
        // InternalGo.g:5424:4: ( (lv_expression2_2_0= ruleExpression ) )
        // InternalGo.g:5425:5: (lv_expression2_2_0= ruleExpression )
        {
        // InternalGo.g:5425:5: (lv_expression2_2_0= ruleExpression )
        // InternalGo.g:5426:6: lv_expression2_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression2_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred105_InternalGo

    // $ANTLR start synpred106_InternalGo
    public final void synpred106_InternalGo_fragment() throws RecognitionException {   
        Token this_BINARY_OP_1=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;


        // InternalGo.g:5523:4: (this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )
        // InternalGo.g:5523:4: this_BINARY_OP_1= RULE_BINARY_OP ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
        {
        this_BINARY_OP_1=(Token)match(input,RULE_BINARY_OP,FOLLOW_20); if (state.failed) return ;
        // InternalGo.g:5527:4: ( (lv_expression_2_0= ruleExpression ) )
        // InternalGo.g:5528:5: (lv_expression_2_0= ruleExpression )
        {
        // InternalGo.g:5528:5: (lv_expression_2_0= ruleExpression )
        // InternalGo.g:5529:6: lv_expression_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_60);
        lv_expression_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5546:4: ( (lv_expression2_3_0= ruleExpression2 ) )
        // InternalGo.g:5547:5: (lv_expression2_3_0= ruleExpression2 )
        {
        // InternalGo.g:5547:5: (lv_expression2_3_0= ruleExpression2 )
        // InternalGo.g:5548:6: lv_expression2_3_0= ruleExpression2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression2_3_0=ruleExpression2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred106_InternalGo

    // $ANTLR start synpred108_InternalGo
    public final void synpred108_InternalGo_fragment() throws RecognitionException {   
        EObject this_Operand_0 = null;

        EObject lv_pr_1_0 = null;


        // InternalGo.g:5633:3: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:5633:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:5633:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:5634:4: this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) )
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_61);
        this_Operand_0=ruleOperand();

        state._fsp--;
        if (state.failed) return ;
        // InternalGo.g:5645:4: ( (lv_pr_1_0= rulePrimaryExpr2 ) )
        // InternalGo.g:5646:5: (lv_pr_1_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:5646:5: (lv_pr_1_0= rulePrimaryExpr2 )
        // InternalGo.g:5647:6: lv_pr_1_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_1_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred108_InternalGo

    // $ANTLR start synpred109_InternalGo
    public final void synpred109_InternalGo_fragment() throws RecognitionException {   
        EObject this_Conversion_2 = null;

        EObject lv_pr_3_0 = null;


        // InternalGo.g:5666:3: ( (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:5666:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:5666:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:5667:4: this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) )
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_61);
        this_Conversion_2=ruleConversion();

        state._fsp--;
        if (state.failed) return ;
        // InternalGo.g:5678:4: ( (lv_pr_3_0= rulePrimaryExpr2 ) )
        // InternalGo.g:5679:5: (lv_pr_3_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:5679:5: (lv_pr_3_0= rulePrimaryExpr2 )
        // InternalGo.g:5680:6: lv_pr_3_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_3_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred109_InternalGo

    // $ANTLR start synpred110_InternalGo
    public final void synpred110_InternalGo_fragment() throws RecognitionException {   
        EObject lv_pr_2_0 = null;


        // InternalGo.g:5761:4: ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:5761:4: ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:5761:4: ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:5762:5: ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }
        pushFollow(FOLLOW_61);
        ruleSelector();

        state._fsp--;
        if (state.failed) return ;
        // InternalGo.g:5772:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        // InternalGo.g:5773:6: (lv_pr_2_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:5773:6: (lv_pr_2_0= rulePrimaryExpr2 )
        // InternalGo.g:5774:7: lv_pr_2_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_2_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred110_InternalGo

    // $ANTLR start synpred111_InternalGo
    public final void synpred111_InternalGo_fragment() throws RecognitionException {   
        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;


        // InternalGo.g:5793:4: ( ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:5793:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:5793:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:5794:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:5794:5: ( (lv_index_3_0= ruleIndex ) )
        // InternalGo.g:5795:6: (lv_index_3_0= ruleIndex )
        {
        // InternalGo.g:5795:6: (lv_index_3_0= ruleIndex )
        // InternalGo.g:5796:7: lv_index_3_0= ruleIndex
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FOLLOW_61);
        lv_index_3_0=ruleIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5813:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        // InternalGo.g:5814:6: (lv_pr_4_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:5814:6: (lv_pr_4_0= rulePrimaryExpr2 )
        // InternalGo.g:5815:7: lv_pr_4_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_4_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred111_InternalGo

    // $ANTLR start synpred112_InternalGo
    public final void synpred112_InternalGo_fragment() throws RecognitionException {   
        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;


        // InternalGo.g:5834:4: ( ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:5834:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:5834:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:5835:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:5835:5: ( (lv_slice_5_0= ruleSlice ) )
        // InternalGo.g:5836:6: (lv_slice_5_0= ruleSlice )
        {
        // InternalGo.g:5836:6: (lv_slice_5_0= ruleSlice )
        // InternalGo.g:5837:7: lv_slice_5_0= ruleSlice
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
          						
        }
        pushFollow(FOLLOW_61);
        lv_slice_5_0=ruleSlice();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5854:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        // InternalGo.g:5855:6: (lv_pr_6_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:5855:6: (lv_pr_6_0= rulePrimaryExpr2 )
        // InternalGo.g:5856:7: lv_pr_6_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_6_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred112_InternalGo

    // $ANTLR start synpred113_InternalGo
    public final void synpred113_InternalGo_fragment() throws RecognitionException {   
        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;


        // InternalGo.g:5875:4: ( ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:5875:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:5875:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:5876:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:5876:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
        // InternalGo.g:5877:6: (lv_typeass_7_0= ruleTypeAssertion )
        {
        // InternalGo.g:5877:6: (lv_typeass_7_0= ruleTypeAssertion )
        // InternalGo.g:5878:7: lv_typeass_7_0= ruleTypeAssertion
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
          						
        }
        pushFollow(FOLLOW_61);
        lv_typeass_7_0=ruleTypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5895:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        // InternalGo.g:5896:6: (lv_pr_8_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:5896:6: (lv_pr_8_0= rulePrimaryExpr2 )
        // InternalGo.g:5897:7: lv_pr_8_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_8_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred113_InternalGo

    // $ANTLR start synpred114_InternalGo
    public final void synpred114_InternalGo_fragment() throws RecognitionException {   
        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;


        // InternalGo.g:5916:4: ( ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:5916:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:5916:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:5917:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:5917:5: ( (lv_arguments_9_0= ruleArguments ) )
        // InternalGo.g:5918:6: (lv_arguments_9_0= ruleArguments )
        {
        // InternalGo.g:5918:6: (lv_arguments_9_0= ruleArguments )
        // InternalGo.g:5919:7: lv_arguments_9_0= ruleArguments
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
          						
        }
        pushFollow(FOLLOW_61);
        lv_arguments_9_0=ruleArguments();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5936:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        // InternalGo.g:5937:6: (lv_pr_10_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:5937:6: (lv_pr_10_0= rulePrimaryExpr2 )
        // InternalGo.g:5938:7: lv_pr_10_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_10_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred114_InternalGo

    // $ANTLR start synpred115_InternalGo
    public final void synpred115_InternalGo_fragment() throws RecognitionException {   
        EObject lv_literal_1_0 = null;


        // InternalGo.g:5976:3: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) )
        // InternalGo.g:5976:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        {
        // InternalGo.g:5976:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        // InternalGo.g:5977:4: () ( (lv_literal_1_0= ruleLiteral ) )
        {
        // InternalGo.g:5977:4: ()
        // InternalGo.g:5978:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:5987:4: ( (lv_literal_1_0= ruleLiteral ) )
        // InternalGo.g:5988:5: (lv_literal_1_0= ruleLiteral )
        {
        // InternalGo.g:5988:5: (lv_literal_1_0= ruleLiteral )
        // InternalGo.g:5989:6: lv_literal_1_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_literal_1_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred115_InternalGo

    // $ANTLR start synpred116_InternalGo
    public final void synpred116_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_operandn_2_0 = null;


        // InternalGo.g:6008:3: ( ( (lv_operandn_2_0= ruleOperandName ) ) )
        // InternalGo.g:6008:3: ( (lv_operandn_2_0= ruleOperandName ) )
        {
        // InternalGo.g:6008:3: ( (lv_operandn_2_0= ruleOperandName ) )
        // InternalGo.g:6009:4: (lv_operandn_2_0= ruleOperandName )
        {
        // InternalGo.g:6009:4: (lv_operandn_2_0= ruleOperandName )
        // InternalGo.g:6010:5: lv_operandn_2_0= ruleOperandName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_operandn_2_0=ruleOperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred116_InternalGo

    // $ANTLR start synpred120_InternalGo
    public final void synpred120_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;


        // InternalGo.g:6271:3: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) )
        // InternalGo.g:6271:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        {
        // InternalGo.g:6271:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        // InternalGo.g:6272:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
        {
        // InternalGo.g:6272:4: ()
        // InternalGo.g:6273:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        otherlv_1=(Token)match(input,47,FOLLOW_62); if (state.failed) return ;
        // InternalGo.g:6286:4: ( (lv_expression_2_0= ruleExpression ) )?
        int alt108=2;
        int LA108_0 = input.LA(1);

        if ( (LA108_0==RULE_LETTER||(LA108_0>=RULE_DECIMAL_LIT && LA108_0<=RULE_DECIMALS)||(LA108_0>=RULE_RAW_STRING_LIT && LA108_0<=RULE_INTERPRETED_STRING_LIT)||LA108_0==RULE_UNARY_OP||LA108_0==40||LA108_0==42||(LA108_0>=44 && LA108_0<=45)||LA108_0==47||LA108_0==49||LA108_0==53||(LA108_0>=55 && LA108_0<=58)) ) {
            alt108=1;
        }
        switch (alt108) {
            case 1 :
                // InternalGo.g:6287:5: (lv_expression_2_0= ruleExpression )
                {
                // InternalGo.g:6287:5: (lv_expression_2_0= ruleExpression )
                // InternalGo.g:6288:6: lv_expression_2_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                  					
                }
                pushFollow(FOLLOW_36);
                lv_expression_2_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,59,FOLLOW_63); if (state.failed) return ;
        // InternalGo.g:6309:4: ( (lv_expression2_4_0= ruleExpression ) )?
        int alt109=2;
        int LA109_0 = input.LA(1);

        if ( (LA109_0==RULE_LETTER||(LA109_0>=RULE_DECIMAL_LIT && LA109_0<=RULE_DECIMALS)||(LA109_0>=RULE_RAW_STRING_LIT && LA109_0<=RULE_INTERPRETED_STRING_LIT)||LA109_0==RULE_UNARY_OP||LA109_0==40||LA109_0==42||(LA109_0>=44 && LA109_0<=45)||LA109_0==47||LA109_0==49||LA109_0==53||(LA109_0>=55 && LA109_0<=58)) ) {
            alt109=1;
        }
        switch (alt109) {
            case 1 :
                // InternalGo.g:6310:5: (lv_expression2_4_0= ruleExpression )
                {
                // InternalGo.g:6310:5: (lv_expression2_4_0= ruleExpression )
                // InternalGo.g:6311:6: lv_expression2_4_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                  					
                }
                pushFollow(FOLLOW_21);
                lv_expression2_4_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred120_InternalGo

    // $ANTLR start synpred122_InternalGo
    public final void synpred122_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionlist_2_0 = null;


        // InternalGo.g:6486:5: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
        // InternalGo.g:6486:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        {
        // InternalGo.g:6486:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        // InternalGo.g:6487:6: (lv_expressionlist_2_0= ruleExpressionList )
        {
        // InternalGo.g:6487:6: (lv_expressionlist_2_0= ruleExpressionList )
        // InternalGo.g:6488:7: lv_expressionlist_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred122_InternalGo

    // $ANTLR start synpred124_InternalGo
    public final void synpred124_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;


        // InternalGo.g:6506:5: ( ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )
        // InternalGo.g:6506:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
        {
        // InternalGo.g:6506:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
        // InternalGo.g:6507:6: ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
        {
        // InternalGo.g:6507:6: ( (lv_type_3_0= ruleType ) )
        // InternalGo.g:6508:7: (lv_type_3_0= ruleType )
        {
        // InternalGo.g:6508:7: (lv_type_3_0= ruleType )
        // InternalGo.g:6509:8: lv_type_3_0= ruleType
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
          							
        }
        pushFollow(FOLLOW_25);
        lv_type_3_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6526:6: (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
        int alt110=2;
        int LA110_0 = input.LA(1);

        if ( (LA110_0==52) ) {
            alt110=1;
        }
        switch (alt110) {
            case 1 :
                // InternalGo.g:6527:7: otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) )
                {
                otherlv_4=(Token)match(input,52,FOLLOW_20); if (state.failed) return ;
                // InternalGo.g:6531:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                // InternalGo.g:6532:8: (lv_expressionlist_5_0= ruleExpressionList )
                {
                // InternalGo.g:6532:8: (lv_expressionlist_5_0= ruleExpressionList )
                // InternalGo.g:6533:9: lv_expressionlist_5_0= ruleExpressionList
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                  								
                }
                pushFollow(FOLLOW_2);
                lv_expressionlist_5_0=ruleExpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred124_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_expressionlist_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;


        // InternalGo.g:6485:4: ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )
        // InternalGo.g:6485:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )?
        {
        // InternalGo.g:6485:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?
        int alt112=3;
        alt112 = dfa112.predict(input);
        switch (alt112) {
            case 1 :
                // InternalGo.g:6486:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                {
                // InternalGo.g:6486:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                // InternalGo.g:6487:6: (lv_expressionlist_2_0= ruleExpressionList )
                {
                // InternalGo.g:6487:6: (lv_expressionlist_2_0= ruleExpressionList )
                // InternalGo.g:6488:7: lv_expressionlist_2_0= ruleExpressionList
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
                  						
                }
                pushFollow(FOLLOW_72);
                lv_expressionlist_2_0=ruleExpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:6506:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                {
                // InternalGo.g:6506:5: ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                // InternalGo.g:6507:6: ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                {
                // InternalGo.g:6507:6: ( (lv_type_3_0= ruleType ) )
                // InternalGo.g:6508:7: (lv_type_3_0= ruleType )
                {
                // InternalGo.g:6508:7: (lv_type_3_0= ruleType )
                // InternalGo.g:6509:8: lv_type_3_0= ruleType
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                  							
                }
                pushFollow(FOLLOW_72);
                lv_type_3_0=ruleType();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGo.g:6526:6: (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==52) ) {
                    int LA111_1 = input.LA(2);

                    if ( (LA111_1==RULE_LETTER||(LA111_1>=RULE_DECIMAL_LIT && LA111_1<=RULE_DECIMALS)||(LA111_1>=RULE_RAW_STRING_LIT && LA111_1<=RULE_INTERPRETED_STRING_LIT)||LA111_1==RULE_UNARY_OP||LA111_1==40||LA111_1==42||(LA111_1>=44 && LA111_1<=45)||LA111_1==47||LA111_1==49||LA111_1==53||(LA111_1>=55 && LA111_1<=58)) ) {
                        alt111=1;
                    }
                }
                switch (alt111) {
                    case 1 :
                        // InternalGo.g:6527:7: otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) )
                        {
                        otherlv_4=(Token)match(input,52,FOLLOW_20); if (state.failed) return ;
                        // InternalGo.g:6531:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                        // InternalGo.g:6532:8: (lv_expressionlist_5_0= ruleExpressionList )
                        {
                        // InternalGo.g:6532:8: (lv_expressionlist_5_0= ruleExpressionList )
                        // InternalGo.g:6533:9: lv_expressionlist_5_0= ruleExpressionList
                        {
                        if ( state.backtracking==0 ) {

                          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                          								
                        }
                        pushFollow(FOLLOW_72);
                        lv_expressionlist_5_0=ruleExpressionList();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;

        }

        // InternalGo.g:6553:4: (otherlv_6= '...' )?
        int alt113=2;
        int LA113_0 = input.LA(1);

        if ( (LA113_0==54) ) {
            alt113=1;
        }
        switch (alt113) {
            case 1 :
                // InternalGo.g:6554:5: otherlv_6= '...'
                {
                otherlv_6=(Token)match(input,54,FOLLOW_25); if (state.failed) return ;

                }
                break;

        }

        // InternalGo.g:6559:4: (otherlv_7= ',' )?
        int alt114=2;
        int LA114_0 = input.LA(1);

        if ( (LA114_0==52) ) {
            alt114=1;
        }
        switch (alt114) {
            case 1 :
                // InternalGo.g:6560:5: otherlv_7= ','
                {
                otherlv_7=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred138_InternalGo
    public final void synpred138_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_Key_0 = null;


        // InternalGo.g:7048:4: (this_Key_0= ruleKey otherlv_1= ':' )
        // InternalGo.g:7048:4: this_Key_0= ruleKey otherlv_1= ':'
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_36);
        this_Key_0=ruleKey();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,59,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalGo

    // $ANTLR start synpred139_InternalGo
    public final void synpred139_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:7102:3: ( ( () ruleFieldName ) )
        // InternalGo.g:7102:3: ( () ruleFieldName )
        {
        // InternalGo.g:7102:3: ( () ruleFieldName )
        // InternalGo.g:7103:4: () ruleFieldName
        {
        // InternalGo.g:7103:4: ()
        // InternalGo.g:7104:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        pushFollow(FOLLOW_2);
        ruleFieldName();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred139_InternalGo

    // $ANTLR start synpred140_InternalGo
    public final void synpred140_InternalGo_fragment() throws RecognitionException {   
        EObject this_Expression_2 = null;


        // InternalGo.g:7125:3: (this_Expression_2= ruleExpression )
        // InternalGo.g:7125:3: this_Expression_2= ruleExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Expression_2=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalGo

    // $ANTLR start synpred143_InternalGo
    public final void synpred143_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_FLOAT_LIT_1 = null;


        // InternalGo.g:7247:3: (this_FLOAT_LIT_1= ruleFLOAT_LIT )
        // InternalGo.g:7247:3: this_FLOAT_LIT_1= ruleFLOAT_LIT
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getBasicLitAccess().getFLOAT_LITParserRuleCall_1());
          		
        }
        pushFollow(FOLLOW_2);
        this_FLOAT_LIT_1=ruleFLOAT_LIT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred143_InternalGo

    // $ANTLR start synpred144_InternalGo
    public final void synpred144_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_IMAGINARY_LIT_2 = null;


        // InternalGo.g:7258:3: (this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT )
        // InternalGo.g:7258:3: this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2());
          		
        }
        pushFollow(FOLLOW_2);
        this_IMAGINARY_LIT_2=ruleIMAGINARY_LIT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalGo

    // $ANTLR start synpred146_InternalGo
    public final void synpred146_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;


        // InternalGo.g:7373:3: (this_IDENTIFIER_0= ruleIDENTIFIER )
        // InternalGo.g:7373:3: this_IDENTIFIER_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getOperandNameAccess().getIDENTIFIERParserRuleCall_0());
          		
        }
        pushFollow(FOLLOW_2);
        this_IDENTIFIER_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred146_InternalGo

    // Delegated rules

    public final boolean synpred114_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA16 dfa16 = new DFA16(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA112 dfa112 = new DFA112(this);
    static final String dfa_1s = "\10\uffff";
    static final String dfa_2s = "\1\uffff\3\4\4\uffff";
    static final String dfa_3s = "\4\4\1\uffff\1\4\1\0\1\uffff";
    static final String dfa_4s = "\1\4\3\107\1\uffff\1\4\1\0\1\uffff";
    static final String dfa_5s = "\4\uffff\1\1\2\uffff\1\2";
    static final String dfa_6s = "\6\uffff\1\0\1\uffff}>";
    static final String[] dfa_7s = {
            "\1\1",
            "\1\2\1\3\7\uffff\2\4\30\uffff\1\4\2\uffff\1\5\2\uffff\2\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\4\uffff\1\4\13\uffff\1\4",
            "\1\2\1\3\7\uffff\2\4\30\uffff\1\4\2\uffff\1\5\2\uffff\2\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\4\uffff\1\4\13\uffff\1\4",
            "\1\2\1\3\7\uffff\2\4\30\uffff\1\4\2\uffff\1\5\2\uffff\2\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\4\uffff\1\4\13\uffff\1\4",
            "",
            "\1\6",
            "\1\uffff",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "902:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_6 = input.LA(1);

                         
                        int index16_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalGo()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index16_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\1\50\1\4\10\uffff";
    static final String dfa_10s = "\2\72\10\uffff";
    static final String dfa_11s = "\2\uffff\1\2\1\3\1\4\1\5\1\7\1\10\1\1\1\6";
    static final String dfa_12s = "\12\uffff}>";
    static final String[] dfa_13s = {
            "\1\4\6\uffff\1\1\1\uffff\1\2\3\uffff\1\3\1\uffff\1\5\1\6\2\7",
            "\1\10\1\uffff\4\10\3\uffff\2\10\2\uffff\1\10\26\uffff\1\10\1\uffff\1\10\1\uffff\2\10\1\uffff\1\10\1\11\1\10\3\uffff\1\10\1\uffff\4\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1013:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType )";
        }
    }
    static final String dfa_14s = "\6\uffff";
    static final String dfa_15s = "\1\uffff\1\2\2\uffff\1\2\1\uffff";
    static final String dfa_16s = "\2\4\1\uffff\1\0\1\4\1\uffff";
    static final String dfa_17s = "\1\65\1\72\1\uffff\1\0\1\72\1\uffff";
    static final String dfa_18s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_19s = "\3\uffff\1\0\2\uffff}>";
    static final String[] dfa_20s = {
            "\1\1\60\uffff\1\2",
            "\1\3\1\4\7\uffff\2\2\30\uffff\1\2\1\5\1\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\2\uffff\2\5\1\uffff\4\5",
            "",
            "\1\uffff",
            "\1\3\1\4\7\uffff\2\2\30\uffff\1\2\1\5\1\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\2\uffff\2\5\1\uffff\4\5",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "1363:3: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ruleEmbeddedField )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_3 = input.LA(1);

                         
                        int index19_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index19_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\27\uffff";
    static final String dfa_22s = "\1\13\26\uffff";
    static final String dfa_23s = "\1\4\1\0\25\uffff";
    static final String dfa_24s = "\1\107\1\0\25\uffff";
    static final String dfa_25s = "\2\uffff\1\1\10\uffff\1\2\13\uffff";
    static final String dfa_26s = "\1\uffff\1\0\25\uffff}>";
    static final String[] dfa_27s = {
            "\1\2\10\uffff\2\13\30\uffff\1\13\1\2\1\uffff\1\13\2\uffff\1\1\1\13\1\2\1\13\1\2\1\13\1\uffff\1\13\1\2\1\13\4\2\1\13\13\uffff\1\13",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "1675:3: ( (lv_result_2_0= ruleResult ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_1 = input.LA(1);

                         
                        int index23_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 2;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index23_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\14\uffff";
    static final String dfa_29s = "\1\4\1\0\12\uffff";
    static final String dfa_30s = "\1\72\1\0\12\uffff";
    static final String dfa_31s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_32s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_33s = {
            "\1\2\43\uffff\1\2\4\uffff\1\1\1\uffff\1\2\1\uffff\1\2\3\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "1712:2: (this_Parameters_0= ruleParameters | this_Type_1= ruleType )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA24_1 = input.LA(1);

                         
                        int index24_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index24_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 24, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\1\uffff\1\2\2\uffff\2\2\2\uffff";
    static final String dfa_35s = "\2\4\1\uffff\1\0\2\4\1\uffff\1\0";
    static final String dfa_36s = "\2\72\1\uffff\1\0\2\72\1\uffff\1\0";
    static final String dfa_37s = "\2\uffff\1\2\3\uffff\1\1\1\uffff";
    static final String dfa_38s = "\3\uffff\1\1\3\uffff\1\0}>";
    static final String[] dfa_39s = {
            "\1\1\43\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\3\uffff\6\2",
            "\1\3\1\4\42\uffff\1\6\1\uffff\1\2\2\uffff\1\6\1\2\1\6\1\uffff\1\6\2\uffff\1\5\6\6",
            "",
            "\1\uffff",
            "\1\3\1\4\42\uffff\1\6\1\uffff\1\2\2\uffff\1\6\1\2\1\6\1\uffff\1\6\2\uffff\1\5\6\6",
            "\1\7\43\uffff\1\2\4\uffff\3\2\1\uffff\1\2\3\uffff\6\2",
            "",
            "\1\uffff"
    };
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_1;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "1874:3: ( (lv_indentifierL_0_0= ruleIdentifierList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA28_7 = input.LA(1);

                         
                        int index28_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_InternalGo()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index28_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA28_3 = input.LA(1);

                         
                        int index28_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_InternalGo()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index28_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 28, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\7\uffff";
    static final String dfa_41s = "\1\uffff\3\5\3\uffff";
    static final String dfa_42s = "\5\4\2\uffff";
    static final String dfa_43s = "\1\4\3\52\1\55\2\uffff";
    static final String dfa_44s = "\5\uffff\1\2\1\1";
    static final String dfa_45s = "\7\uffff}>";
    static final String[] dfa_46s = {
            "\1\1",
            "\1\2\1\3\41\uffff\1\5\2\uffff\1\4",
            "\1\2\1\3\41\uffff\1\5\2\uffff\1\4",
            "\1\2\1\3\41\uffff\1\5\2\uffff\1\4",
            "\1\5\50\uffff\1\6",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "2002:2: ( ( ruleMethodName this_Signature_1= ruleSignature ) | ( () ruleInterfaceTypeName ) )";
        }
    }
    static final String[] dfa_47s = {
            "\1\2\43\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\3\uffff\1\2\1\uffff\3\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "2225:5: (otherlv_1= '<-' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\25\uffff";
    static final String dfa_49s = "\2\uffff\1\3\14\uffff\2\3\4\uffff";
    static final String dfa_50s = "\1\4\1\uffff\1\4\1\uffff\1\4\12\uffff\2\4\1\uffff\1\0\2\uffff";
    static final String dfa_51s = "\1\115\1\uffff\1\114\1\uffff\1\4\12\uffff\2\114\1\uffff\1\0\2\uffff";
    static final String dfa_52s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\2\uffff\1\2\1\uffff\1\4\1\10";
    static final String dfa_53s = "\22\uffff\1\0\2\uffff}>";
    static final String[] dfa_54s = {
            "\1\2\1\uffff\4\3\3\uffff\2\3\2\uffff\1\3\25\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\1\3\1\uffff\1\3\1\11\2\uffff\1\3\1\uffff\4\3\1\uffff\1\4\1\5\1\6\1\7\1\12\1\uffff\1\10\1\14\1\15\1\16\1\1\1\uffff\2\1\3\uffff\1\13",
            "",
            "\1\17\1\20\11\uffff\2\3\26\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\5\uffff\1\3\1\21\16\uffff\3\3",
            "",
            "\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\17\1\20\11\uffff\2\3\26\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\5\uffff\1\3\1\21\16\uffff\3\3",
            "\1\17\1\20\11\uffff\2\3\26\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\5\uffff\1\3\1\21\16\uffff\3\3",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_48;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_53;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "2373:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_18 = input.LA(1);

                         
                        int index35_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalGo()) ) {s = 19;}

                        else if ( (synpred53_InternalGo()) ) {s = 20;}

                         
                        input.seek(index35_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_55s = "\32\uffff";
    static final String dfa_56s = "\1\4\1\uffff\23\0\5\uffff";
    static final String dfa_57s = "\1\72\1\uffff\23\0\5\uffff";
    static final String dfa_58s = "\1\uffff\1\1\23\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_59s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\5\uffff}>";
    static final String[] dfa_60s = {
            "\1\15\1\uffff\1\2\1\3\1\4\1\5\3\uffff\1\10\1\11\2\uffff\1\24\25\uffff\1\1\1\16\1\uffff\1\6\1\uffff\1\7\1\17\1\uffff\1\13\1\uffff\1\12\3\uffff\1\20\1\uffff\1\21\1\14\1\22\1\23",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_55;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "2801:2: ( ( () ruleEmptyStmt ) | this_ExpressionStmt_2= ruleExpressionStmt | this_SendStmt_3= ruleSendStmt | this_IncDecStmt_4= ruleIncDecStmt | this_Assignment_5= ruleAssignment | this_ShortVarDecl_6= ruleShortVarDecl )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_2 = input.LA(1);

                         
                        int index37_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_3 = input.LA(1);

                         
                        int index37_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA37_4 = input.LA(1);

                         
                        int index37_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA37_5 = input.LA(1);

                         
                        int index37_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA37_6 = input.LA(1);

                         
                        int index37_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA37_7 = input.LA(1);

                         
                        int index37_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA37_8 = input.LA(1);

                         
                        int index37_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA37_9 = input.LA(1);

                         
                        int index37_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA37_10 = input.LA(1);

                         
                        int index37_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA37_11 = input.LA(1);

                         
                        int index37_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA37_12 = input.LA(1);

                         
                        int index37_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA37_13 = input.LA(1);

                         
                        int index37_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index37_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA37_14 = input.LA(1);

                         
                        int index37_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA37_15 = input.LA(1);

                         
                        int index37_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA37_16 = input.LA(1);

                         
                        int index37_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA37_17 = input.LA(1);

                         
                        int index37_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA37_18 = input.LA(1);

                         
                        int index37_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA37_19 = input.LA(1);

                         
                        int index37_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA37_20 = input.LA(1);

                         
                        int index37_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 21;}

                        else if ( (synpred64_InternalGo()) ) {s = 22;}

                        else if ( (synpred65_InternalGo()) ) {s = 23;}

                        else if ( (synpred66_InternalGo()) ) {s = 24;}

                         
                        input.seek(index37_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\26\uffff";
    static final String dfa_62s = "\1\4\1\uffff\23\0\1\uffff";
    static final String dfa_63s = "\1\72\1\uffff\23\0\1\uffff";
    static final String dfa_64s = "\1\uffff\1\1\23\uffff\1\2";
    static final String dfa_65s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff}>";
    static final String[] dfa_66s = {
            "\1\15\1\uffff\1\2\1\3\1\4\1\5\3\uffff\1\10\1\11\2\uffff\1\24\25\uffff\1\1\1\16\1\uffff\1\6\1\uffff\1\7\1\17\1\uffff\1\13\1\uffff\1\12\3\uffff\1\20\1\uffff\1\21\1\14\1\22\1\23",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "3099:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_2 = input.LA(1);

                         
                        int index41_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA41_3 = input.LA(1);

                         
                        int index41_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA41_4 = input.LA(1);

                         
                        int index41_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA41_5 = input.LA(1);

                         
                        int index41_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA41_6 = input.LA(1);

                         
                        int index41_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA41_8 = input.LA(1);

                         
                        int index41_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA41_9 = input.LA(1);

                         
                        int index41_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA41_10 = input.LA(1);

                         
                        int index41_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA41_11 = input.LA(1);

                         
                        int index41_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA41_12 = input.LA(1);

                         
                        int index41_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA41_13 = input.LA(1);

                         
                        int index41_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA41_14 = input.LA(1);

                         
                        int index41_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA41_15 = input.LA(1);

                         
                        int index41_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA41_16 = input.LA(1);

                         
                        int index41_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA41_17 = input.LA(1);

                         
                        int index41_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA41_18 = input.LA(1);

                         
                        int index41_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA41_19 = input.LA(1);

                         
                        int index41_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA41_20 = input.LA(1);

                         
                        int index41_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index41_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_67s = "\30\uffff";
    static final String dfa_68s = "\1\4\1\uffff\23\0\3\uffff";
    static final String dfa_69s = "\1\120\1\uffff\23\0\3\uffff";
    static final String dfa_70s = "\1\uffff\1\4\23\uffff\1\2\1\3\1\1";
    static final String dfa_71s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\3\uffff}>";
    static final String[] dfa_72s = {
            "\1\15\1\uffff\1\2\1\3\1\4\1\5\3\uffff\1\10\1\11\2\uffff\1\24\25\uffff\1\25\1\16\1\uffff\1\6\1\uffff\1\7\1\17\1\uffff\1\13\1\uffff\1\12\1\1\2\uffff\1\20\1\uffff\1\21\1\14\1\22\1\23\25\uffff\1\26",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "()* loopback of 3356:3: ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_2 = input.LA(1);

                         
                        int index46_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA46_3 = input.LA(1);

                         
                        int index46_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA46_4 = input.LA(1);

                         
                        int index46_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA46_5 = input.LA(1);

                         
                        int index46_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA46_6 = input.LA(1);

                         
                        int index46_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA46_7 = input.LA(1);

                         
                        int index46_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA46_8 = input.LA(1);

                         
                        int index46_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA46_9 = input.LA(1);

                         
                        int index46_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA46_11 = input.LA(1);

                         
                        int index46_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA46_12 = input.LA(1);

                         
                        int index46_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA46_13 = input.LA(1);

                         
                        int index46_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA46_14 = input.LA(1);

                         
                        int index46_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA46_15 = input.LA(1);

                         
                        int index46_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA46_16 = input.LA(1);

                         
                        int index46_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA46_17 = input.LA(1);

                         
                        int index46_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA46_18 = input.LA(1);

                         
                        int index46_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA46_19 = input.LA(1);

                         
                        int index46_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA46_20 = input.LA(1);

                         
                        int index46_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalGo()) ) {s = 23;}

                        else if ( (synpred76_InternalGo()) ) {s = 21;}

                        else if ( (synpred77_InternalGo()) ) {s = 22;}

                         
                        input.seek(index46_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\2\uffff\1\5\3\uffff\2\5";
    static final String dfa_74s = "\4\4\2\uffff\2\4";
    static final String dfa_75s = "\1\4\3\107\2\uffff\2\107";
    static final String dfa_76s = "\4\uffff\1\1\1\2\2\uffff";
    static final String dfa_77s = "\10\uffff}>";
    static final String[] dfa_78s = {
            "\1\1",
            "\1\2\1\3\42\uffff\1\5\4\uffff\1\5\1\uffff\1\5\1\uffff\1\5\3\uffff\1\5\1\uffff\4\5\14\uffff\1\4",
            "\1\6\1\7\41\uffff\2\5\1\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\3\uffff\1\5\1\uffff\4\5\14\uffff\1\4",
            "\1\2\1\3\42\uffff\1\5\4\uffff\1\5\1\uffff\1\5\1\uffff\1\5\3\uffff\1\5\1\uffff\4\5\14\uffff\1\4",
            "",
            "",
            "\1\6\1\7\41\uffff\2\5\1\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\3\uffff\1\5\1\uffff\4\5\14\uffff\1\4",
            "\1\6\1\7\41\uffff\2\5\1\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\3\uffff\1\5\1\uffff\4\5\14\uffff\1\4"
    };
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_1;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "3733:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )";
        }
    }
    static final String[] dfa_79s = {
            "\1\15\1\uffff\1\2\1\3\1\4\1\5\3\uffff\1\10\1\11\2\uffff\1\24\25\uffff\1\1\1\16\1\uffff\1\6\1\uffff\1\7\1\17\1\uffff\1\13\1\uffff\1\12\1\25\2\uffff\1\20\1\uffff\1\21\1\14\1\22\1\23",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "4336:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_2 = input.LA(1);

                         
                        int index57_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_3 = input.LA(1);

                         
                        int index57_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA57_4 = input.LA(1);

                         
                        int index57_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA57_5 = input.LA(1);

                         
                        int index57_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA57_6 = input.LA(1);

                         
                        int index57_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA57_7 = input.LA(1);

                         
                        int index57_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA57_8 = input.LA(1);

                         
                        int index57_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA57_9 = input.LA(1);

                         
                        int index57_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA57_10 = input.LA(1);

                         
                        int index57_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA57_11 = input.LA(1);

                         
                        int index57_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA57_12 = input.LA(1);

                         
                        int index57_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA57_13 = input.LA(1);

                         
                        int index57_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA57_14 = input.LA(1);

                         
                        int index57_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA57_15 = input.LA(1);

                         
                        int index57_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA57_16 = input.LA(1);

                         
                        int index57_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA57_17 = input.LA(1);

                         
                        int index57_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA57_18 = input.LA(1);

                         
                        int index57_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA57_19 = input.LA(1);

                         
                        int index57_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA57_20 = input.LA(1);

                         
                        int index57_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index57_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\1\4\1\uffff\22\0\2\uffff";
    static final String dfa_81s = "\1\72\1\uffff\22\0\2\uffff";
    static final String dfa_82s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\2\uffff}>";
    static final String[] dfa_83s = {
            "\1\15\1\uffff\1\2\1\3\1\4\1\5\3\uffff\1\10\1\11\2\uffff\1\1\25\uffff\1\1\1\16\1\uffff\1\6\1\uffff\1\7\1\17\1\uffff\1\13\1\uffff\1\12\3\uffff\1\20\1\uffff\1\21\1\14\1\22\1\23",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_64;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "4554:3: (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_2 = input.LA(1);

                         
                        int index61_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_3 = input.LA(1);

                         
                        int index61_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_4 = input.LA(1);

                         
                        int index61_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA61_5 = input.LA(1);

                         
                        int index61_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA61_6 = input.LA(1);

                         
                        int index61_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA61_7 = input.LA(1);

                         
                        int index61_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA61_8 = input.LA(1);

                         
                        int index61_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA61_9 = input.LA(1);

                         
                        int index61_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA61_10 = input.LA(1);

                         
                        int index61_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA61_11 = input.LA(1);

                         
                        int index61_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA61_12 = input.LA(1);

                         
                        int index61_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA61_13 = input.LA(1);

                         
                        int index61_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA61_14 = input.LA(1);

                         
                        int index61_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA61_15 = input.LA(1);

                         
                        int index61_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA61_16 = input.LA(1);

                         
                        int index61_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA61_17 = input.LA(1);

                         
                        int index61_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA61_18 = input.LA(1);

                         
                        int index61_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA61_19 = input.LA(1);

                         
                        int index61_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index61_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_84s = "\2\4\1\uffff\2\4\1\uffff";
    static final String dfa_85s = "\1\72\1\114\1\uffff\2\114\1\uffff";
    static final String dfa_86s = "\6\uffff}>";
    static final String[] dfa_87s = {
            "\1\1\1\uffff\4\2\3\uffff\2\2\31\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\3\uffff\1\2\1\uffff\4\2",
            "\1\3\1\4\44\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\31\uffff\1\5",
            "",
            "\1\3\1\4\44\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\31\uffff\1\5",
            "\1\3\1\4\44\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\31\uffff\1\5",
            ""
    };
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_18;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "4636:3: ( ruleIDENTIFIER otherlv_1= ':=' )?";
        }
    }
    static final String dfa_88s = "\1\4\23\0\2\uffff";
    static final String dfa_89s = "\1\72\23\0\2\uffff";
    static final String dfa_90s = "\24\uffff\1\1\1\2";
    static final String dfa_91s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\2\uffff}>";
    static final String[] dfa_92s = {
            "\1\14\1\uffff\1\1\1\2\1\3\1\4\3\uffff\1\7\1\10\2\uffff\1\23\26\uffff\1\15\1\uffff\1\5\1\uffff\1\6\1\16\1\uffff\1\12\1\uffff\1\11\3\uffff\1\17\1\uffff\1\20\1\13\1\21\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "4953:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_1 = input.LA(1);

                         
                        int index66_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_2 = input.LA(1);

                         
                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_3 = input.LA(1);

                         
                        int index66_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_4 = input.LA(1);

                         
                        int index66_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_5 = input.LA(1);

                         
                        int index66_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA66_6 = input.LA(1);

                         
                        int index66_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA66_7 = input.LA(1);

                         
                        int index66_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA66_8 = input.LA(1);

                         
                        int index66_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA66_9 = input.LA(1);

                         
                        int index66_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA66_10 = input.LA(1);

                         
                        int index66_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA66_11 = input.LA(1);

                         
                        int index66_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA66_12 = input.LA(1);

                         
                        int index66_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA66_13 = input.LA(1);

                         
                        int index66_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA66_14 = input.LA(1);

                         
                        int index66_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA66_15 = input.LA(1);

                         
                        int index66_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA66_16 = input.LA(1);

                         
                        int index66_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA66_17 = input.LA(1);

                         
                        int index66_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA66_18 = input.LA(1);

                         
                        int index66_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA66_19 = input.LA(1);

                         
                        int index66_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index66_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\1\4\23\0\3\uffff";
    static final String dfa_94s = "\1\72\23\0\3\uffff";
    static final String dfa_95s = "\24\uffff\1\1\1\3\1\2";
    static final String dfa_96s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\3\uffff}>";
    static final String[] dfa_97s = {
            "\1\14\1\uffff\1\1\1\2\1\3\1\4\3\uffff\1\7\1\10\2\uffff\1\23\26\uffff\1\15\1\uffff\1\5\1\uffff\1\6\1\16\1\uffff\1\12\1\uffff\1\11\3\uffff\1\17\1\uffff\1\20\1\13\1\21\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "5031:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA68_2 = input.LA(1);

                         
                        int index68_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA68_3 = input.LA(1);

                         
                        int index68_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA68_4 = input.LA(1);

                         
                        int index68_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA68_5 = input.LA(1);

                         
                        int index68_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA68_6 = input.LA(1);

                         
                        int index68_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA68_7 = input.LA(1);

                         
                        int index68_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA68_8 = input.LA(1);

                         
                        int index68_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA68_9 = input.LA(1);

                         
                        int index68_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA68_10 = input.LA(1);

                         
                        int index68_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA68_11 = input.LA(1);

                         
                        int index68_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA68_12 = input.LA(1);

                         
                        int index68_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (synpred100_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA68_13 = input.LA(1);

                         
                        int index68_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA68_14 = input.LA(1);

                         
                        int index68_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA68_15 = input.LA(1);

                         
                        int index68_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA68_16 = input.LA(1);

                         
                        int index68_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA68_17 = input.LA(1);

                         
                        int index68_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA68_18 = input.LA(1);

                         
                        int index68_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA68_19 = input.LA(1);

                         
                        int index68_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index68_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_98s = "\1\4\1\0\24\uffff";
    static final String dfa_99s = "\1\72\1\0\24\uffff";
    static final String dfa_100s = "\2\uffff\1\1\22\uffff\1\2";
    static final String dfa_101s = "\1\uffff\1\0\24\uffff}>";
    static final String[] dfa_102s = {
            "\1\2\1\uffff\4\2\3\uffff\2\2\2\uffff\1\2\25\uffff\1\1\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\3\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "5161:3: (this_InitStmt_0= ruleInitStmt )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_103s = "\1\4\1\uffff\1\4\1\uffff\2\4\1\uffff";
    static final String dfa_104s = "\1\120\1\uffff\1\114\1\uffff\2\114\1\uffff";
    static final String dfa_105s = "\1\uffff\1\1\1\uffff\1\3\2\uffff\1\2";
    static final String[] dfa_106s = {
            "\1\2\1\uffff\4\1\3\uffff\2\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\4\1\25\uffff\1\3",
            "",
            "\1\4\1\5\12\uffff\1\1\26\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6",
            "",
            "\1\4\1\5\12\uffff\1\1\26\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6",
            "\1\4\1\5\12\uffff\1\1\26\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6",
            ""
    };
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_40;
            this.eof = dfa_40;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_45;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "5239:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ruleIdentifierList otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_107s = "\37\uffff";
    static final String dfa_108s = "\1\2\36\uffff";
    static final String dfa_109s = "\1\4\1\0\35\uffff";
    static final String dfa_110s = "\1\120\1\0\35\uffff";
    static final String dfa_111s = "\2\uffff\1\2\33\uffff\1\1";
    static final String dfa_112s = "\1\uffff\1\0\35\uffff}>";
    static final String[] dfa_113s = {
            "\1\2\1\uffff\4\2\3\uffff\3\2\1\uffff\1\2\25\uffff\1\1\1\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\1\uffff\10\2\13\uffff\1\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_107;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()* loopback of 5419:3: (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_1 = input.LA(1);

                         
                        int index72_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalGo()) ) {s = 30;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index72_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\1\4\10\uffff\12\0\2\uffff";
    static final String dfa_115s = "\1\72\10\uffff\12\0\2\uffff";
    static final String dfa_116s = "\1\uffff\1\1\21\uffff\1\2\1\3";
    static final String dfa_117s = "\11\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff}>";
    static final String[] dfa_118s = {
            "\1\14\1\uffff\4\1\3\uffff\2\1\31\uffff\1\15\1\uffff\1\1\1\uffff\1\1\1\16\1\uffff\1\12\1\uffff\1\11\3\uffff\1\17\1\uffff\1\20\1\13\1\21\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "5632:2: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_9 = input.LA(1);

                         
                        int index75_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 1;}

                        else if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA75_10 = input.LA(1);

                         
                        int index75_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 1;}

                        else if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA75_11 = input.LA(1);

                         
                        int index75_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 1;}

                        else if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA75_12 = input.LA(1);

                         
                        int index75_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 1;}

                        else if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA75_13 = input.LA(1);

                         
                        int index75_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 1;}

                        else if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA75_14 = input.LA(1);

                         
                        int index75_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalGo()) ) {s = 1;}

                        else if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA75_15 = input.LA(1);

                         
                        int index75_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_15);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA75_16 = input.LA(1);

                         
                        int index75_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA75_17 = input.LA(1);

                         
                        int index75_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_17);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA75_18 = input.LA(1);

                         
                        int index75_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_119s = "\50\uffff";
    static final String dfa_120s = "\1\4\47\uffff";
    static final String dfa_121s = "\1\4\3\0\44\uffff";
    static final String dfa_122s = "\1\120\3\0\44\uffff";
    static final String dfa_123s = "\4\uffff\1\6\36\uffff\1\1\1\4\1\2\1\3\1\5";
    static final String dfa_124s = "\1\uffff\1\0\1\1\1\2\44\uffff}>";
    static final String[] dfa_125s = {
            "\1\4\1\uffff\4\4\3\uffff\5\4\25\uffff\2\4\1\uffff\1\1\1\uffff\1\4\1\3\1\4\1\2\14\4\13\uffff\1\4\2\uffff\2\4\4\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[][] dfa_125 = unpackEncodedStringArray(dfa_125s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_119;
            this.eof = dfa_120;
            this.min = dfa_121;
            this.max = dfa_122;
            this.accept = dfa_123;
            this.special = dfa_124;
            this.transition = dfa_125;
        }
        public String getDescription() {
            return "5760:3: ( ( ruleSelector ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 35;}

                        else if ( (synpred113_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA76_2 = input.LA(1);

                         
                        int index76_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalGo()) ) {s = 37;}

                        else if ( (synpred112_InternalGo()) ) {s = 38;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index76_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA76_3 = input.LA(1);

                         
                        int index76_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalGo()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index76_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_126s = "\20\uffff";
    static final String dfa_127s = "\1\4\13\uffff\1\0\3\uffff";
    static final String dfa_128s = "\1\70\13\uffff\1\0\3\uffff";
    static final String dfa_129s = "\1\uffff\1\1\14\uffff\1\3\1\2";
    static final String dfa_130s = "\14\uffff\1\0\3\uffff}>";
    static final String[] dfa_131s = {
            "\1\14\1\uffff\4\1\3\uffff\2\1\31\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\16\1\uffff\1\1\1\uffff\1\1\6\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[][] dfa_131 = unpackEncodedStringArray(dfa_131s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_126;
            this.eof = dfa_126;
            this.min = dfa_127;
            this.max = dfa_128;
            this.accept = dfa_129;
            this.special = dfa_130;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "5975:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_12 = input.LA(1);

                         
                        int index77_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalGo()) ) {s = 1;}

                        else if ( (synpred116_InternalGo()) ) {s = 15;}

                         
                        input.seek(index77_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_132s = "\1\4\10\uffff\12\0\5\uffff";
    static final String dfa_133s = "\1\72\10\uffff\12\0\5\uffff";
    static final String dfa_134s = "\1\uffff\1\1\22\uffff\1\3\2\uffff\1\2";
    static final String dfa_135s = "\11\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\5\uffff}>";
    static final String[] dfa_136s = {
            "\1\14\1\uffff\4\1\3\uffff\2\1\2\uffff\1\1\26\uffff\1\15\1\uffff\1\1\1\uffff\1\1\1\16\1\24\1\12\1\uffff\1\11\2\uffff\1\24\1\17\1\24\1\20\1\13\1\21\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[][] dfa_136 = unpackEncodedStringArray(dfa_136s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_132;
            this.max = dfa_133;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_136;
        }
        public String getDescription() {
            return "6485:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_9 = input.LA(1);

                         
                        int index84_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_10 = input.LA(1);

                         
                        int index84_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA84_11 = input.LA(1);

                         
                        int index84_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA84_12 = input.LA(1);

                         
                        int index84_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA84_13 = input.LA(1);

                         
                        int index84_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA84_14 = input.LA(1);

                         
                        int index84_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA84_15 = input.LA(1);

                         
                        int index84_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_15);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA84_16 = input.LA(1);

                         
                        int index84_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA84_17 = input.LA(1);

                         
                        int index84_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_17);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA84_18 = input.LA(1);

                         
                        int index84_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index84_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_137s = "\1\4\24\0\2\uffff";
    static final String dfa_138s = "\1\72\24\0\2\uffff";
    static final String dfa_139s = "\25\uffff\1\1\1\2";
    static final String dfa_140s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\2\uffff}>";
    static final String[] dfa_141s = {
            "\1\1\1\uffff\1\2\1\3\1\4\1\5\3\uffff\1\10\1\11\2\uffff\1\23\26\uffff\1\15\1\uffff\1\6\1\uffff\1\7\1\16\1\uffff\1\13\1\uffff\1\12\1\24\2\uffff\1\17\1\uffff\1\20\1\14\1\21\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[][] dfa_141 = unpackEncodedStringArray(dfa_141s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_137;
            this.max = dfa_138;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_141;
        }
        public String getDescription() {
            return "7047:3: (this_Key_0= ruleKey otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_1 = input.LA(1);

                         
                        int index93_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_2 = input.LA(1);

                         
                        int index93_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA93_3 = input.LA(1);

                         
                        int index93_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA93_4 = input.LA(1);

                         
                        int index93_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA93_5 = input.LA(1);

                         
                        int index93_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA93_6 = input.LA(1);

                         
                        int index93_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA93_7 = input.LA(1);

                         
                        int index93_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA93_8 = input.LA(1);

                         
                        int index93_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA93_9 = input.LA(1);

                         
                        int index93_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA93_10 = input.LA(1);

                         
                        int index93_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA93_11 = input.LA(1);

                         
                        int index93_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA93_12 = input.LA(1);

                         
                        int index93_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA93_13 = input.LA(1);

                         
                        int index93_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA93_14 = input.LA(1);

                         
                        int index93_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA93_15 = input.LA(1);

                         
                        int index93_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA93_16 = input.LA(1);

                         
                        int index93_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA93_17 = input.LA(1);

                         
                        int index93_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA93_18 = input.LA(1);

                         
                        int index93_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA93_19 = input.LA(1);

                         
                        int index93_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA93_20 = input.LA(1);

                         
                        int index93_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_142s = "\16\uffff";
    static final String dfa_143s = "\6\uffff\2\12\1\uffff\1\12\2\uffff\2\12";
    static final String dfa_144s = "\1\6\1\uffff\1\12\1\11\2\uffff\2\4\1\uffff\1\4\1\uffff\1\0\2\4";
    static final String dfa_145s = "\1\54\1\uffff\1\53\1\11\2\uffff\2\120\1\uffff\1\120\1\uffff\1\0\2\120";
    static final String dfa_146s = "\1\uffff\1\1\2\uffff\1\4\1\5\2\uffff\1\3\1\uffff\1\2\3\uffff";
    static final String dfa_147s = "\13\uffff\1\0\2\uffff}>";
    static final String[] dfa_148s = {
            "\3\1\1\2\3\uffff\2\5\33\uffff\1\3\1\uffff\1\4",
            "",
            "\1\6\37\uffff\1\7\1\10",
            "\1\11",
            "",
            "",
            "\1\12\1\uffff\4\12\3\uffff\5\12\25\uffff\2\12\1\uffff\1\12\1\10\20\12\13\uffff\1\12\2\uffff\2\12\4\uffff\1\12",
            "\1\12\1\uffff\3\12\1\13\1\14\2\uffff\5\12\25\uffff\2\12\1\uffff\1\12\1\10\20\12\13\uffff\1\12\2\uffff\2\12\4\uffff\1\12",
            "",
            "\1\12\1\uffff\4\12\1\15\2\uffff\5\12\25\uffff\2\12\1\uffff\1\12\1\10\20\12\13\uffff\1\12\2\uffff\2\12\4\uffff\1\12",
            "",
            "\1\uffff",
            "\1\12\1\uffff\4\12\3\uffff\5\12\25\uffff\2\12\1\uffff\1\12\1\10\20\12\13\uffff\1\12\2\uffff\2\12\4\uffff\1\12",
            "\1\12\1\uffff\4\12\3\uffff\5\12\25\uffff\2\12\1\uffff\1\12\1\10\20\12\13\uffff\1\12\2\uffff\2\12\4\uffff\1\12"
    };

    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[][] dfa_148 = unpackEncodedStringArray(dfa_148s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_142;
            this.eof = dfa_143;
            this.min = dfa_144;
            this.max = dfa_145;
            this.accept = dfa_146;
            this.special = dfa_147;
            this.transition = dfa_148;
        }
        public String getDescription() {
            return "7235:2: (this_INT_LIT_0= ruleINT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_LIT_4= ruleSTRING_LIT )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_11 = input.LA(1);

                         
                        int index96_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 10;}

                        else if ( (synpred144_InternalGo()) ) {s = 8;}

                         
                        input.seek(index96_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_149s = "\1\uffff\1\5\1\uffff\1\5\4\uffff";
    static final String dfa_150s = "\2\4\1\0\2\4\2\uffff\1\0";
    static final String dfa_151s = "\1\4\1\120\1\0\1\120\1\55\2\uffff\1\0";
    static final String dfa_152s = "\5\uffff\1\1\1\2\1\uffff";
    static final String dfa_153s = "\2\uffff\1\0\4\uffff\1\1}>";
    static final String[] dfa_154s = {
            "\1\1",
            "\1\2\1\3\4\5\3\uffff\5\5\25\uffff\2\5\1\uffff\1\4\1\uffff\20\5\13\uffff\1\5\2\uffff\2\5\4\uffff\1\5",
            "\1\uffff",
            "\1\2\1\3\4\5\3\uffff\5\5\25\uffff\2\5\1\uffff\1\4\1\uffff\20\5\13\uffff\1\5\2\uffff\2\5\4\uffff\1\5",
            "\1\7\4\uffff\1\5\43\uffff\1\5",
            "",
            "",
            "\1\uffff"
    };
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[][] dfa_154 = unpackEncodedStringArray(dfa_154s);

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_1;
            this.eof = dfa_149;
            this.min = dfa_150;
            this.max = dfa_151;
            this.accept = dfa_152;
            this.special = dfa_153;
            this.transition = dfa_154;
        }
        public String getDescription() {
            return "7372:2: (this_IDENTIFIER_0= ruleIDENTIFIER | this_QualifiedIdent_1= ruleQualifiedIdent )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_2 = input.LA(1);

                         
                        int index97_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index97_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA97_7 = input.LA(1);

                         
                        int index97_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index97_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_155s = "\1\24\27\uffff";
    static final String[] dfa_156s = {
            "\1\14\1\uffff\4\1\3\uffff\2\1\2\uffff\1\1\26\uffff\1\15\1\uffff\1\1\1\uffff\1\1\1\16\1\uffff\1\12\1\uffff\1\11\2\uffff\1\24\1\17\1\24\1\20\1\13\1\21\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[][] dfa_156 = unpackEncodedStringArray(dfa_156s);

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_67;
            this.eof = dfa_155;
            this.min = dfa_132;
            this.max = dfa_133;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_156;
        }
        public String getDescription() {
            return "6485:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_9 = input.LA(1);

                         
                        int index112_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA112_10 = input.LA(1);

                         
                        int index112_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA112_11 = input.LA(1);

                         
                        int index112_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA112_12 = input.LA(1);

                         
                        int index112_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA112_13 = input.LA(1);

                         
                        int index112_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA112_14 = input.LA(1);

                         
                        int index112_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA112_15 = input.LA(1);

                         
                        int index112_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_15);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA112_16 = input.LA(1);

                         
                        int index112_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA112_17 = input.LA(1);

                         
                        int index112_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_17);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA112_18 = input.LA(1);

                         
                        int index112_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalGo()) ) {s = 1;}

                        else if ( (synpred124_InternalGo()) ) {s = 23;}

                         
                        input.seek(index112_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000010000000002L,0x0000000000020340L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000010000000002L,0x0000000000000340L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000602L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000001800L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x07A2A10000000010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x07A2B500000263D0L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0028000000000010L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x00001400000063C2L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x07A2A10000000012L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x07E2E10000000010L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0010400000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x07E2A10000000010L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0xF7AEB580000263D0L,0x000000000000237DL});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0xF7A6B580000263D2L,0x000000000000237DL});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0xF7A6B580000263D0L,0x000000000000237DL});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x07A2B500000263D2L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x07A2B580000263D0L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0008000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x07A6B580000263D0L,0x0000000000010000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000200000000010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x07A2A10000000010L,0x0000000000000080L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x07A6B580000263D0L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x07A6B500000263D0L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x07A2B500000063D0L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000A40000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0FA2B500000263D0L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x07A3B500000263D0L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x07F2F500000263D0L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0050400000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x07AEB500000263D0L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0018000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x00003400000063D0L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x00005400000063D0L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x00001400000063D0L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0050000000000002L});

}