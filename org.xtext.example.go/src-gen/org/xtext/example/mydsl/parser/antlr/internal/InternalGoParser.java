package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_LETTER", "RULE_UNICODE_DIGIT", "RULE_DECIMALS", "RULE_EXPOENT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_ASSING_OP", "RULE_BINARY_OP", "RULE_UNARY_OP", "RULE_INT_LIT", "RULE_STRING", "RULE_NEWLINE", "RULE_UNICODE_CHAR", "RULE_UNICODE_LETTER", "RULE_REL_OP", "RULE_ADD_OP", "RULE_MUL_OP", "RULE_ID", "RULE_INT", "RULE_DECIMAL_DIGIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_DECIMAL_LIT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'func'", "'package'", "'.'", "'i'", "'\\''", "'('", "')'", "'['", "']'", "'struct'", "'{'", "';'", "'}'", "','", "'*'", "'...'", "'interface'", "'map'", "'chan'", "'<-'", "':'", "'goto'", "'return'", "'break'", "'continue'", "'if'", "'else'", "'fallthrough'", "'select'", "'for'", "'defer'", "'const'", "'='", "'type'", "'var'", "'++'", "'--'", "':='", "'switch'", "'case'", "'default'", "'range'", "'import'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=25;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int RULE_BINARY_OP=13;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=23;
    public static final int RULE_INTERPRETED_STRING_LIT=11;
    public static final int RULE_UNICODE_VALUE=8;
    public static final int RULE_LITTLE_U_VALUE=31;
    public static final int RULE_ASSING_OP=12;
    public static final int RULE_HEX_BYTE_VALUE=35;
    public static final int RULE_OCTAL_BYTE_VALUE=34;
    public static final int RULE_MUL_OP=22;
    public static final int RULE_INT=24;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=36;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int RULE_EXPOENT=7;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=6;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_NEWLINE=17;
    public static final int RULE_BIG_U_VALUE=32;
    public static final int RULE_ESCAPED_CHAR=33;
    public static final int RULE_STRING=16;
    public static final int RULE_BYTE_VALUE=9;
    public static final int RULE_SL_COMMENT=37;
    public static final int RULE_UNICODE_LETTER=19;
    public static final int T__77=77;
    public static final int RULE_UNICODE_CHAR=18;
    public static final int RULE_HEX_LIT=30;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=21;
    public static final int RULE_OCTAL_DIGIT=26;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int RULE_UNICODE_DIGIT=5;
    public static final int RULE_WS=38;
    public static final int RULE_ANY_OTHER=39;
    public static final int RULE_OCTAL_LIT=29;
    public static final int RULE_LETTER=4;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=10;
    public static final int RULE_INT_LIT=15;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=14;
    public static final int T__45=45;
    public static final int RULE_REL_OP=20;
    public static final int RULE_HEX_DIGIT=27;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int RULE_DECIMAL_LIT=28;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalGo.g:70:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalGo.g:70:46: (iv_ruleModel= ruleModel EOF )
            // InternalGo.g:71:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:77:1: ruleModel returns [EObject current=null] : ( (lv_greetings_0_0= ruleCompilation_initial ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_greetings_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( (lv_greetings_0_0= ruleCompilation_initial ) ) )
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            {
            // InternalGo.g:84:2: ( (lv_greetings_0_0= ruleCompilation_initial ) )
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            {
            // InternalGo.g:85:3: (lv_greetings_0_0= ruleCompilation_initial )
            // InternalGo.g:86:4: lv_greetings_0_0= ruleCompilation_initial
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getGreetingsCompilation_initialParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_greetings_0_0=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"greetings",
              					lv_greetings_0_0,
              					"org.xtext.example.mydsl.Go.Compilation_initial");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleCompilation_initial"
    // InternalGo.g:106:1: entryRuleCompilation_initial returns [EObject current=null] : iv_ruleCompilation_initial= ruleCompilation_initial EOF ;
    public final EObject entryRuleCompilation_initial() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompilation_initial = null;


        try {
            // InternalGo.g:106:60: (iv_ruleCompilation_initial= ruleCompilation_initial EOF )
            // InternalGo.g:107:2: iv_ruleCompilation_initial= ruleCompilation_initial EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompilation_initialRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompilation_initial=ruleCompilation_initial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompilation_initial; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompilation_initial"


    // $ANTLR start "ruleCompilation_initial"
    // InternalGo.g:113:1: ruleCompilation_initial returns [EObject current=null] : ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? ) ;
    public final EObject ruleCompilation_initial() throws RecognitionException {
        EObject current = null;

        EObject lv_initial_1_0 = null;

        EObject lv_importdecl_2_0 = null;

        EObject lv_toplevel_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:119:2: ( ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? ) )
            // InternalGo.g:120:2: ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? )
            {
            // InternalGo.g:120:2: ( () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )? )
            // InternalGo.g:121:3: () ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )?
            {
            // InternalGo.g:121:3: ()
            // InternalGo.g:122:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCompilation_initialAccess().getCompilation_initialAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:131:3: ( ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )* )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==41) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalGo.g:132:4: ( (lv_initial_1_0= rulePackageClause ) ) ( (lv_importdecl_2_0= ruleImportDecl ) )* ( (lv_toplevel_3_0= ruleTopLevelDecl ) )*
                    {
                    // InternalGo.g:132:4: ( (lv_initial_1_0= rulePackageClause ) )
                    // InternalGo.g:133:5: (lv_initial_1_0= rulePackageClause )
                    {
                    // InternalGo.g:133:5: (lv_initial_1_0= rulePackageClause )
                    // InternalGo.g:134:6: lv_initial_1_0= rulePackageClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getInitialPackageClauseParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_initial_1_0=rulePackageClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                      						}
                      						set(
                      							current,
                      							"initial",
                      							lv_initial_1_0,
                      							"org.xtext.example.mydsl.Go.PackageClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:151:4: ( (lv_importdecl_2_0= ruleImportDecl ) )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==82) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalGo.g:152:5: (lv_importdecl_2_0= ruleImportDecl )
                    	    {
                    	    // InternalGo.g:152:5: (lv_importdecl_2_0= ruleImportDecl )
                    	    // InternalGo.g:153:6: lv_importdecl_2_0= ruleImportDecl
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getImportdeclImportDeclParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_importdecl_2_0=ruleImportDecl();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"importdecl",
                    	      							lv_importdecl_2_0,
                    	      							"org.xtext.example.mydsl.Go.ImportDecl");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                    // InternalGo.g:170:4: ( (lv_toplevel_3_0= ruleTopLevelDecl ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==40||LA2_0==71||(LA2_0>=73 && LA2_0<=74)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalGo.g:171:5: (lv_toplevel_3_0= ruleTopLevelDecl )
                    	    {
                    	    // InternalGo.g:171:5: (lv_toplevel_3_0= ruleTopLevelDecl )
                    	    // InternalGo.g:172:6: lv_toplevel_3_0= ruleTopLevelDecl
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getCompilation_initialAccess().getToplevelTopLevelDeclParserRuleCall_1_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_toplevel_3_0=ruleTopLevelDecl();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getCompilation_initialRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"toplevel",
                    	      							lv_toplevel_3_0,
                    	      							"org.xtext.example.mydsl.Go.TopLevelDecl");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompilation_initial"


    // $ANTLR start "entryRuleTopLevelDecl"
    // InternalGo.g:194:1: entryRuleTopLevelDecl returns [EObject current=null] : iv_ruleTopLevelDecl= ruleTopLevelDecl EOF ;
    public final EObject entryRuleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelDecl = null;


        try {
            // InternalGo.g:194:53: (iv_ruleTopLevelDecl= ruleTopLevelDecl EOF )
            // InternalGo.g:195:2: iv_ruleTopLevelDecl= ruleTopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTopLevelDecl=ruleTopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelDecl"


    // $ANTLR start "ruleTopLevelDecl"
    // InternalGo.g:201:1: ruleTopLevelDecl returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl ) ;
    public final EObject ruleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_FunctionDecl_1 = null;

        EObject this_MethodDecl_2 = null;



        	enterRule();

        try {
            // InternalGo.g:207:2: ( (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl ) )
            // InternalGo.g:208:2: (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl )
            {
            // InternalGo.g:208:2: (this_Declaration_0= ruleDeclaration | this_FunctionDecl_1= ruleFunctionDecl | this_MethodDecl_2= ruleMethodDecl )
            int alt4=3;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==71||(LA4_0>=73 && LA4_0<=74)) ) {
                alt4=1;
            }
            else if ( (LA4_0==40) ) {
                int LA4_2 = input.LA(2);

                if ( (LA4_2==45) ) {
                    alt4=3;
                }
                else if ( (LA4_2==RULE_LETTER) ) {
                    alt4=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalGo.g:209:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:221:3: this_FunctionDecl_1= ruleFunctionDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFunctionDeclParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDecl_1=ruleFunctionDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionDecl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:233:3: this_MethodDecl_2= ruleMethodDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMethodDeclParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MethodDecl_2=ruleMethodDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDecl_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelDecl"


    // $ANTLR start "entryRuleMethodDecl"
    // InternalGo.g:248:1: entryRuleMethodDecl returns [EObject current=null] : iv_ruleMethodDecl= ruleMethodDecl EOF ;
    public final EObject entryRuleMethodDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDecl = null;


        try {
            // InternalGo.g:248:51: (iv_ruleMethodDecl= ruleMethodDecl EOF )
            // InternalGo.g:249:2: iv_ruleMethodDecl= ruleMethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodDecl=ruleMethodDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDecl"


    // $ANTLR start "ruleMethodDecl"
    // InternalGo.g:255:1: ruleMethodDecl returns [EObject current=null] : ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleMethodDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_receiver_2_0 = null;

        AntlrDatatypeRuleToken lv_method_3_0 = null;

        EObject lv_signature_4_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:261:2: ( ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:262:2: ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:262:2: ( () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )? )
            // InternalGo.g:263:3: () otherlv_1= 'func' ( (lv_receiver_2_0= ruleReceiver ) ) ( (lv_method_3_0= ruleMethodName ) ) ( (lv_signature_4_0= ruleSignature ) ) ( (lv_body_5_0= ruleFunctionBody ) )?
            {
            // InternalGo.g:263:3: ()
            // InternalGo.g:264:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclAccess().getMethodDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,40,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodDeclAccess().getFuncKeyword_1());
              		
            }
            // InternalGo.g:277:3: ( (lv_receiver_2_0= ruleReceiver ) )
            // InternalGo.g:278:4: (lv_receiver_2_0= ruleReceiver )
            {
            // InternalGo.g:278:4: (lv_receiver_2_0= ruleReceiver )
            // InternalGo.g:279:5: lv_receiver_2_0= ruleReceiver
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_receiver_2_0=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"receiver",
              						lv_receiver_2_0,
              						"org.xtext.example.mydsl.Go.Receiver");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:296:3: ( (lv_method_3_0= ruleMethodName ) )
            // InternalGo.g:297:4: (lv_method_3_0= ruleMethodName )
            {
            // InternalGo.g:297:4: (lv_method_3_0= ruleMethodName )
            // InternalGo.g:298:5: lv_method_3_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getMethodMethodNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_method_3_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"method",
              						lv_method_3_0,
              						"org.xtext.example.mydsl.Go.MethodName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:315:3: ( (lv_signature_4_0= ruleSignature ) )
            // InternalGo.g:316:4: (lv_signature_4_0= ruleSignature )
            {
            // InternalGo.g:316:4: (lv_signature_4_0= ruleSignature )
            // InternalGo.g:317:5: lv_signature_4_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_signature_4_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					add(
              						current,
              						"signature",
              						lv_signature_4_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:334:3: ( (lv_body_5_0= ruleFunctionBody ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==50) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalGo.g:335:4: (lv_body_5_0= ruleFunctionBody )
                    {
                    // InternalGo.g:335:4: (lv_body_5_0= ruleFunctionBody )
                    // InternalGo.g:336:5: lv_body_5_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclAccess().getBodyFunctionBodyParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_5_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_5_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDecl"


    // $ANTLR start "entryRuleReceiver"
    // InternalGo.g:357:1: entryRuleReceiver returns [EObject current=null] : iv_ruleReceiver= ruleReceiver EOF ;
    public final EObject entryRuleReceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiver = null;


        try {
            // InternalGo.g:357:49: (iv_ruleReceiver= ruleReceiver EOF )
            // InternalGo.g:358:2: iv_ruleReceiver= ruleReceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiver=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiver"


    // $ANTLR start "ruleReceiver"
    // InternalGo.g:364:1: ruleReceiver returns [EObject current=null] : this_Parameters_0= ruleParameters ;
    public final EObject ruleReceiver() throws RecognitionException {
        EObject current = null;

        EObject this_Parameters_0 = null;



        	enterRule();

        try {
            // InternalGo.g:370:2: (this_Parameters_0= ruleParameters )
            // InternalGo.g:371:2: this_Parameters_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Parameters_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Parameters_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiver"


    // $ANTLR start "entryRuleFunctionName"
    // InternalGo.g:385:1: entryRuleFunctionName returns [String current=null] : iv_ruleFunctionName= ruleFunctionName EOF ;
    public final String entryRuleFunctionName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFunctionName = null;


        try {
            // InternalGo.g:385:52: (iv_ruleFunctionName= ruleFunctionName EOF )
            // InternalGo.g:386:2: iv_ruleFunctionName= ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionName=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalGo.g:392:1: ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFunctionName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:398:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:399:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFunctionNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleFunctionDecl"
    // InternalGo.g:412:1: entryRuleFunctionDecl returns [EObject current=null] : iv_ruleFunctionDecl= ruleFunctionDecl EOF ;
    public final EObject entryRuleFunctionDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDecl = null;


        try {
            // InternalGo.g:412:53: (iv_ruleFunctionDecl= ruleFunctionDecl EOF )
            // InternalGo.g:413:2: iv_ruleFunctionDecl= ruleFunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDecl=ruleFunctionDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDecl"


    // $ANTLR start "ruleFunctionDecl"
    // InternalGo.g:419:1: ruleFunctionDecl returns [EObject current=null] : ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) ;
    public final EObject ruleFunctionDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_functionn_2_0 = null;

        EObject lv_signature_3_0 = null;

        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:425:2: ( ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? ) )
            // InternalGo.g:426:2: ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            {
            // InternalGo.g:426:2: ( () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )? )
            // InternalGo.g:427:3: () otherlv_1= 'func' ( (lv_functionn_2_0= ruleFunctionName ) ) ( (lv_signature_3_0= ruleSignature ) ) ( (lv_body_4_0= ruleFunctionBody ) )?
            {
            // InternalGo.g:427:3: ()
            // InternalGo.g:428:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionDeclAccess().getFunctionDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,40,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionDeclAccess().getFuncKeyword_1());
              		
            }
            // InternalGo.g:441:3: ( (lv_functionn_2_0= ruleFunctionName ) )
            // InternalGo.g:442:4: (lv_functionn_2_0= ruleFunctionName )
            {
            // InternalGo.g:442:4: (lv_functionn_2_0= ruleFunctionName )
            // InternalGo.g:443:5: lv_functionn_2_0= ruleFunctionName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionnFunctionNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_functionn_2_0=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
              					}
              					set(
              						current,
              						"functionn",
              						lv_functionn_2_0,
              						"org.xtext.example.mydsl.Go.FunctionName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:460:3: ( (lv_signature_3_0= ruleSignature ) )
            // InternalGo.g:461:4: (lv_signature_3_0= ruleSignature )
            {
            // InternalGo.g:461:4: (lv_signature_3_0= ruleSignature )
            // InternalGo.g:462:5: lv_signature_3_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_signature_3_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
              					}
              					add(
              						current,
              						"signature",
              						lv_signature_3_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:479:3: ( (lv_body_4_0= ruleFunctionBody ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==50) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalGo.g:480:4: (lv_body_4_0= ruleFunctionBody )
                    {
                    // InternalGo.g:480:4: (lv_body_4_0= ruleFunctionBody )
                    // InternalGo.g:481:5: lv_body_4_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionDeclAccess().getBodyFunctionBodyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_4_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      					}
                      					add(
                      						current,
                      						"body",
                      						lv_body_4_0,
                      						"org.xtext.example.mydsl.Go.FunctionBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDecl"


    // $ANTLR start "entryRulePackageClause"
    // InternalGo.g:502:1: entryRulePackageClause returns [EObject current=null] : iv_rulePackageClause= rulePackageClause EOF ;
    public final EObject entryRulePackageClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageClause = null;


        try {
            // InternalGo.g:502:54: (iv_rulePackageClause= rulePackageClause EOF )
            // InternalGo.g:503:2: iv_rulePackageClause= rulePackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageClause=rulePackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageClause"


    // $ANTLR start "rulePackageClause"
    // InternalGo.g:509:1: rulePackageClause returns [EObject current=null] : (otherlv_0= 'package' this_PackageName_1= rulePackageName ) ;
    public final EObject rulePackageClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_PackageName_1 = null;



        	enterRule();

        try {
            // InternalGo.g:515:2: ( (otherlv_0= 'package' this_PackageName_1= rulePackageName ) )
            // InternalGo.g:516:2: (otherlv_0= 'package' this_PackageName_1= rulePackageName )
            {
            // InternalGo.g:516:2: (otherlv_0= 'package' this_PackageName_1= rulePackageName )
            // InternalGo.g:517:3: otherlv_0= 'package' this_PackageName_1= rulePackageName
            {
            otherlv_0=(Token)match(input,41,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageName_1=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageName_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageClause"


    // $ANTLR start "entryRuleIDENTIFIER"
    // InternalGo.g:536:1: entryRuleIDENTIFIER returns [String current=null] : iv_ruleIDENTIFIER= ruleIDENTIFIER EOF ;
    public final String entryRuleIDENTIFIER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIDENTIFIER = null;


        try {
            // InternalGo.g:536:50: (iv_ruleIDENTIFIER= ruleIDENTIFIER EOF )
            // InternalGo.g:537:2: iv_ruleIDENTIFIER= ruleIDENTIFIER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDENTIFIERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIDENTIFIER=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIDENTIFIER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIDENTIFIER"


    // $ANTLR start "ruleIDENTIFIER"
    // InternalGo.g:543:1: ruleIDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* ) ;
    public final AntlrDatatypeRuleToken ruleIDENTIFIER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LETTER_0=null;
        Token this_LETTER_1=null;
        Token this_UNICODE_DIGIT_2=null;


        	enterRule();

        try {
            // InternalGo.g:549:2: ( (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* ) )
            // InternalGo.g:550:2: (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* )
            {
            // InternalGo.g:550:2: (this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )* )
            // InternalGo.g:551:3: this_LETTER_0= RULE_LETTER (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )*
            {
            this_LETTER_0=(Token)match(input,RULE_LETTER,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_LETTER_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_LETTER_0, grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_0());
              		
            }
            // InternalGo.g:558:3: (this_LETTER_1= RULE_LETTER | this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT )*
            loop7:
            do {
                int alt7=3;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==RULE_LETTER) ) {
                    int LA7_2 = input.LA(2);

                    if ( (synpred8_InternalGo()) ) {
                        alt7=1;
                    }


                }
                else if ( (LA7_0==RULE_UNICODE_DIGIT) ) {
                    alt7=2;
                }


                switch (alt7) {
            	case 1 :
            	    // InternalGo.g:559:4: this_LETTER_1= RULE_LETTER
            	    {
            	    this_LETTER_1=(Token)match(input,RULE_LETTER,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_LETTER_1);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_LETTER_1, grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_1_0());
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // InternalGo.g:567:4: this_UNICODE_DIGIT_2= RULE_UNICODE_DIGIT
            	    {
            	    this_UNICODE_DIGIT_2=(Token)match(input,RULE_UNICODE_DIGIT,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_UNICODE_DIGIT_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_UNICODE_DIGIT_2, grammarAccess.getIDENTIFIERAccess().getUNICODE_DIGITTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIDENTIFIER"


    // $ANTLR start "entryRuleFLOAT_LIT"
    // InternalGo.g:579:1: entryRuleFLOAT_LIT returns [String current=null] : iv_ruleFLOAT_LIT= ruleFLOAT_LIT EOF ;
    public final String entryRuleFLOAT_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFLOAT_LIT = null;


        try {
            // InternalGo.g:579:49: (iv_ruleFLOAT_LIT= ruleFLOAT_LIT EOF )
            // InternalGo.g:580:2: iv_ruleFLOAT_LIT= ruleFLOAT_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFLOAT_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFLOAT_LIT=ruleFLOAT_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFLOAT_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFLOAT_LIT"


    // $ANTLR start "ruleFLOAT_LIT"
    // InternalGo.g:586:1: ruleFLOAT_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) ) ;
    public final AntlrDatatypeRuleToken ruleFLOAT_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMALS_0=null;
        Token kw=null;
        Token this_DECIMALS_2=null;
        Token this_EXPOENT_3=null;
        Token this_DECIMALS_4=null;
        Token this_EXPOENT_5=null;
        Token this_DECIMALS_7=null;
        Token this_EXPOENT_8=null;


        	enterRule();

        try {
            // InternalGo.g:592:2: ( ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) ) )
            // InternalGo.g:593:2: ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) )
            {
            // InternalGo.g:593:2: ( (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? ) | (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT ) | (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? ) )
            int alt11=3;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_DECIMALS) ) {
                int LA11_1 = input.LA(2);

                if ( (LA11_1==42) ) {
                    alt11=1;
                }
                else if ( (LA11_1==RULE_EXPOENT) ) {
                    alt11=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA11_0==42) ) {
                alt11=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalGo.g:594:3: (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? )
                    {
                    // InternalGo.g:594:3: (this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )? )
                    // InternalGo.g:595:4: this_DECIMALS_0= RULE_DECIMALS kw= '.' (this_DECIMALS_2= RULE_DECIMALS )? (this_EXPOENT_3= RULE_EXPOENT )?
                    {
                    this_DECIMALS_0=(Token)match(input,RULE_DECIMALS,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_0, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_0());
                      			
                    }
                    kw=(Token)match(input,42,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_0_1());
                      			
                    }
                    // InternalGo.g:607:4: (this_DECIMALS_2= RULE_DECIMALS )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==RULE_DECIMALS) ) {
                        int LA8_1 = input.LA(2);

                        if ( (synpred10_InternalGo()) ) {
                            alt8=1;
                        }
                    }
                    switch (alt8) {
                        case 1 :
                            // InternalGo.g:608:5: this_DECIMALS_2= RULE_DECIMALS
                            {
                            this_DECIMALS_2=(Token)match(input,RULE_DECIMALS,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMALS_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMALS_2, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_2());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:616:4: (this_EXPOENT_3= RULE_EXPOENT )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==RULE_EXPOENT) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalGo.g:617:5: this_EXPOENT_3= RULE_EXPOENT
                            {
                            this_EXPOENT_3=(Token)match(input,RULE_EXPOENT,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXPOENT_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXPOENT_3, grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_0_3());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:627:3: (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT )
                    {
                    // InternalGo.g:627:3: (this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT )
                    // InternalGo.g:628:4: this_DECIMALS_4= RULE_DECIMALS this_EXPOENT_5= RULE_EXPOENT
                    {
                    this_DECIMALS_4=(Token)match(input,RULE_DECIMALS,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_4, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_1_0());
                      			
                    }
                    this_EXPOENT_5=(Token)match(input,RULE_EXPOENT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_EXPOENT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_EXPOENT_5, grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:644:3: (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? )
                    {
                    // InternalGo.g:644:3: (kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )? )
                    // InternalGo.g:645:4: kw= '.' this_DECIMALS_7= RULE_DECIMALS (this_EXPOENT_8= RULE_EXPOENT )?
                    {
                    kw=(Token)match(input,42,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_DECIMALS_7=(Token)match(input,RULE_DECIMALS,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_7, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_2_1());
                      			
                    }
                    // InternalGo.g:657:4: (this_EXPOENT_8= RULE_EXPOENT )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==RULE_EXPOENT) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // InternalGo.g:658:5: this_EXPOENT_8= RULE_EXPOENT
                            {
                            this_EXPOENT_8=(Token)match(input,RULE_EXPOENT,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXPOENT_8);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXPOENT_8, grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFLOAT_LIT"


    // $ANTLR start "entryRuleIMAGINARY_LIT"
    // InternalGo.g:671:1: entryRuleIMAGINARY_LIT returns [String current=null] : iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF ;
    public final String entryRuleIMAGINARY_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIMAGINARY_LIT = null;


        try {
            // InternalGo.g:671:53: (iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF )
            // InternalGo.g:672:2: iv_ruleIMAGINARY_LIT= ruleIMAGINARY_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIMAGINARY_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIMAGINARY_LIT=ruleIMAGINARY_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIMAGINARY_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIMAGINARY_LIT"


    // $ANTLR start "ruleIMAGINARY_LIT"
    // InternalGo.g:678:1: ruleIMAGINARY_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' ) ;
    public final AntlrDatatypeRuleToken ruleIMAGINARY_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMALS_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_FLOAT_LIT_1 = null;



        	enterRule();

        try {
            // InternalGo.g:684:2: ( ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' ) )
            // InternalGo.g:685:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' )
            {
            // InternalGo.g:685:2: ( (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i' )
            // InternalGo.g:686:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT ) kw= 'i'
            {
            // InternalGo.g:686:3: (this_DECIMALS_0= RULE_DECIMALS | this_FLOAT_LIT_1= ruleFLOAT_LIT )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_DECIMALS) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==RULE_EXPOENT||LA12_1==42) ) {
                    alt12=2;
                }
                else if ( (LA12_1==43) ) {
                    alt12=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA12_0==42) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalGo.g:687:4: this_DECIMALS_0= RULE_DECIMALS
                    {
                    this_DECIMALS_0=(Token)match(input,RULE_DECIMALS,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_DECIMALS_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_DECIMALS_0, grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:695:4: this_FLOAT_LIT_1= ruleFLOAT_LIT
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_14);
                    this_FLOAT_LIT_1=ruleFLOAT_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_FLOAT_LIT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getIMAGINARY_LITAccess().getIKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIMAGINARY_LIT"


    // $ANTLR start "entryRuleRUNE_LIT"
    // InternalGo.g:715:1: entryRuleRUNE_LIT returns [String current=null] : iv_ruleRUNE_LIT= ruleRUNE_LIT EOF ;
    public final String entryRuleRUNE_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRUNE_LIT = null;


        try {
            // InternalGo.g:715:48: (iv_ruleRUNE_LIT= ruleRUNE_LIT EOF )
            // InternalGo.g:716:2: iv_ruleRUNE_LIT= ruleRUNE_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRUNE_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRUNE_LIT=ruleRUNE_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRUNE_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRUNE_LIT"


    // $ANTLR start "ruleRUNE_LIT"
    // InternalGo.g:722:1: ruleRUNE_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) ;
    public final AntlrDatatypeRuleToken ruleRUNE_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_UNICODE_VALUE_1=null;
        Token this_BYTE_VALUE_2=null;


        	enterRule();

        try {
            // InternalGo.g:728:2: ( (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' ) )
            // InternalGo.g:729:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            {
            // InternalGo.g:729:2: (kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\'' )
            // InternalGo.g:730:3: kw= '\\'' (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE ) kw= '\\''
            {
            kw=(Token)match(input,44,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_0());
              		
            }
            // InternalGo.g:735:3: (this_UNICODE_VALUE_1= RULE_UNICODE_VALUE | this_BYTE_VALUE_2= RULE_BYTE_VALUE )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_UNICODE_VALUE) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_BYTE_VALUE) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalGo.g:736:4: this_UNICODE_VALUE_1= RULE_UNICODE_VALUE
                    {
                    this_UNICODE_VALUE_1=(Token)match(input,RULE_UNICODE_VALUE,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UNICODE_VALUE_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UNICODE_VALUE_1, grammarAccess.getRUNE_LITAccess().getUNICODE_VALUETerminalRuleCall_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:744:4: this_BYTE_VALUE_2= RULE_BYTE_VALUE
                    {
                    this_BYTE_VALUE_2=(Token)match(input,RULE_BYTE_VALUE,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BYTE_VALUE_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BYTE_VALUE_2, grammarAccess.getRUNE_LITAccess().getBYTE_VALUETerminalRuleCall_1_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRUNE_LITAccess().getApostropheKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRUNE_LIT"


    // $ANTLR start "entryRuleSTRING_LIT"
    // InternalGo.g:761:1: entryRuleSTRING_LIT returns [String current=null] : iv_ruleSTRING_LIT= ruleSTRING_LIT EOF ;
    public final String entryRuleSTRING_LIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSTRING_LIT = null;


        try {
            // InternalGo.g:761:50: (iv_ruleSTRING_LIT= ruleSTRING_LIT EOF )
            // InternalGo.g:762:2: iv_ruleSTRING_LIT= ruleSTRING_LIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSTRING_LITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSTRING_LIT=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSTRING_LIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_LIT"


    // $ANTLR start "ruleSTRING_LIT"
    // InternalGo.g:768:1: ruleSTRING_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) ;
    public final AntlrDatatypeRuleToken ruleSTRING_LIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RAW_STRING_LIT_0=null;
        Token this_INTERPRETED_STRING_LIT_1=null;


        	enterRule();

        try {
            // InternalGo.g:774:2: ( (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT ) )
            // InternalGo.g:775:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            {
            // InternalGo.g:775:2: (this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT | this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_RAW_STRING_LIT) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_INTERPRETED_STRING_LIT) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalGo.g:776:3: this_RAW_STRING_LIT_0= RULE_RAW_STRING_LIT
                    {
                    this_RAW_STRING_LIT_0=(Token)match(input,RULE_RAW_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RAW_STRING_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RAW_STRING_LIT_0, grammarAccess.getSTRING_LITAccess().getRAW_STRING_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:784:3: this_INTERPRETED_STRING_LIT_1= RULE_INTERPRETED_STRING_LIT
                    {
                    this_INTERPRETED_STRING_LIT_1=(Token)match(input,RULE_INTERPRETED_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTERPRETED_STRING_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INTERPRETED_STRING_LIT_1, grammarAccess.getSTRING_LITAccess().getINTERPRETED_STRING_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_LIT"


    // $ANTLR start "entryRuleType"
    // InternalGo.g:795:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalGo.g:795:45: (iv_ruleType= ruleType EOF )
            // InternalGo.g:796:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalGo.g:802:1: ruleType returns [EObject current=null] : ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_tp_1_0 = null;

        EObject lv_tp2_2_0 = null;

        EObject lv_tp3_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:808:2: ( ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:809:2: ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:809:2: ( ( () ( (lv_tp_1_0= ruleTypeName ) ) ) | ( (lv_tp2_2_0= ruleTypeLit ) ) | (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                alt15=1;
                }
                break;
            case 40:
            case 47:
            case 49:
            case 54:
            case 56:
            case 57:
            case 58:
            case 59:
                {
                alt15=2;
                }
                break;
            case 45:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalGo.g:810:3: ( () ( (lv_tp_1_0= ruleTypeName ) ) )
                    {
                    // InternalGo.g:810:3: ( () ( (lv_tp_1_0= ruleTypeName ) ) )
                    // InternalGo.g:811:4: () ( (lv_tp_1_0= ruleTypeName ) )
                    {
                    // InternalGo.g:811:4: ()
                    // InternalGo.g:812:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeAccess().getTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:821:4: ( (lv_tp_1_0= ruleTypeName ) )
                    // InternalGo.g:822:5: (lv_tp_1_0= ruleTypeName )
                    {
                    // InternalGo.g:822:5: (lv_tp_1_0= ruleTypeName )
                    // InternalGo.g:823:6: lv_tp_1_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getTpTypeNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_tp_1_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"tp",
                      							lv_tp_1_0,
                      							"org.xtext.example.mydsl.Go.TypeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:842:3: ( (lv_tp2_2_0= ruleTypeLit ) )
                    {
                    // InternalGo.g:842:3: ( (lv_tp2_2_0= ruleTypeLit ) )
                    // InternalGo.g:843:4: (lv_tp2_2_0= ruleTypeLit )
                    {
                    // InternalGo.g:843:4: (lv_tp2_2_0= ruleTypeLit )
                    // InternalGo.g:844:5: lv_tp2_2_0= ruleTypeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getTp2TypeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tp2_2_0=ruleTypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"tp2",
                      						lv_tp2_2_0,
                      						"org.xtext.example.mydsl.Go.TypeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:862:3: (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:862:3: (otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')' )
                    // InternalGo.g:863:4: otherlv_3= '(' ( (lv_tp3_4_0= ruleType ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:867:4: ( (lv_tp3_4_0= ruleType ) )
                    // InternalGo.g:868:5: (lv_tp3_4_0= ruleType )
                    {
                    // InternalGo.g:868:5: (lv_tp3_4_0= ruleType )
                    // InternalGo.g:869:6: lv_tp3_4_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getTp3TypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_tp3_4_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"tp3",
                      							lv_tp3_4_0,
                      							"org.xtext.example.mydsl.Go.Type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleTypeName"
    // InternalGo.g:895:1: entryRuleTypeName returns [EObject current=null] : iv_ruleTypeName= ruleTypeName EOF ;
    public final EObject entryRuleTypeName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeName = null;


        try {
            // InternalGo.g:895:49: (iv_ruleTypeName= ruleTypeName EOF )
            // InternalGo.g:896:2: iv_ruleTypeName= ruleTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeName=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeName"


    // $ANTLR start "ruleTypeName"
    // InternalGo.g:902:1: ruleTypeName returns [EObject current=null] : ( ( (lv_id_0_0= ruleIDENTIFIER ) ) | ( (lv_ql_1_0= ruleQualifiedIdent ) ) ) ;
    public final EObject ruleTypeName() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_ql_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:908:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) | ( (lv_ql_1_0= ruleQualifiedIdent ) ) ) )
            // InternalGo.g:909:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) | ( (lv_ql_1_0= ruleQualifiedIdent ) ) )
            {
            // InternalGo.g:909:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) | ( (lv_ql_1_0= ruleQualifiedIdent ) ) )
            int alt16=2;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    // InternalGo.g:910:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
                    {
                    // InternalGo.g:910:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
                    // InternalGo.g:911:4: (lv_id_0_0= ruleIDENTIFIER )
                    {
                    // InternalGo.g:911:4: (lv_id_0_0= ruleIDENTIFIER )
                    // InternalGo.g:912:5: lv_id_0_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeNameAccess().getIdIDENTIFIERParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_0_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeNameRule());
                      					}
                      					set(
                      						current,
                      						"id",
                      						lv_id_0_0,
                      						"org.xtext.example.mydsl.Go.IDENTIFIER");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:930:3: ( (lv_ql_1_0= ruleQualifiedIdent ) )
                    {
                    // InternalGo.g:930:3: ( (lv_ql_1_0= ruleQualifiedIdent ) )
                    // InternalGo.g:931:4: (lv_ql_1_0= ruleQualifiedIdent )
                    {
                    // InternalGo.g:931:4: (lv_ql_1_0= ruleQualifiedIdent )
                    // InternalGo.g:932:5: lv_ql_1_0= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeNameAccess().getQlQualifiedIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ql_1_0=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeNameRule());
                      					}
                      					set(
                      						current,
                      						"ql",
                      						lv_ql_1_0,
                      						"org.xtext.example.mydsl.Go.QualifiedIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeName"


    // $ANTLR start "entryRuleQualifiedIdent"
    // InternalGo.g:953:1: entryRuleQualifiedIdent returns [EObject current=null] : iv_ruleQualifiedIdent= ruleQualifiedIdent EOF ;
    public final EObject entryRuleQualifiedIdent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedIdent = null;


        try {
            // InternalGo.g:953:55: (iv_ruleQualifiedIdent= ruleQualifiedIdent EOF )
            // InternalGo.g:954:2: iv_ruleQualifiedIdent= ruleQualifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedIdent=ruleQualifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedIdent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedIdent"


    // $ANTLR start "ruleQualifiedIdent"
    // InternalGo.g:960:1: ruleQualifiedIdent returns [EObject current=null] : ( ( (lv_pn_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_id_2_0= ruleIDENTIFIER ) ) ) ;
    public final EObject ruleQualifiedIdent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pn_0_0 = null;

        AntlrDatatypeRuleToken lv_id_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:966:2: ( ( ( (lv_pn_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_id_2_0= ruleIDENTIFIER ) ) ) )
            // InternalGo.g:967:2: ( ( (lv_pn_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_id_2_0= ruleIDENTIFIER ) ) )
            {
            // InternalGo.g:967:2: ( ( (lv_pn_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_id_2_0= ruleIDENTIFIER ) ) )
            // InternalGo.g:968:3: ( (lv_pn_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_id_2_0= ruleIDENTIFIER ) )
            {
            // InternalGo.g:968:3: ( (lv_pn_0_0= rulePackageName ) )
            // InternalGo.g:969:4: (lv_pn_0_0= rulePackageName )
            {
            // InternalGo.g:969:4: (lv_pn_0_0= rulePackageName )
            // InternalGo.g:970:5: lv_pn_0_0= rulePackageName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQualifiedIdentAccess().getPnPackageNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_pn_0_0=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQualifiedIdentRule());
              					}
              					set(
              						current,
              						"pn",
              						lv_pn_0_0,
              						"org.xtext.example.mydsl.Go.PackageName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:991:3: ( (lv_id_2_0= ruleIDENTIFIER ) )
            // InternalGo.g:992:4: (lv_id_2_0= ruleIDENTIFIER )
            {
            // InternalGo.g:992:4: (lv_id_2_0= ruleIDENTIFIER )
            // InternalGo.g:993:5: lv_id_2_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQualifiedIdentAccess().getIdIDENTIFIERParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_id_2_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQualifiedIdentRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_2_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedIdent"


    // $ANTLR start "entryRulePackageName"
    // InternalGo.g:1014:1: entryRulePackageName returns [EObject current=null] : iv_rulePackageName= rulePackageName EOF ;
    public final EObject entryRulePackageName() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageName = null;


        try {
            // InternalGo.g:1014:52: (iv_rulePackageName= rulePackageName EOF )
            // InternalGo.g:1015:2: iv_rulePackageName= rulePackageName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageName=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageName"


    // $ANTLR start "rulePackageName"
    // InternalGo.g:1021:1: rulePackageName returns [EObject current=null] : ( (lv_id_0_0= ruleIDENTIFIER ) ) ;
    public final EObject rulePackageName() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1027:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) )
            // InternalGo.g:1028:2: ( (lv_id_0_0= ruleIDENTIFIER ) )
            {
            // InternalGo.g:1028:2: ( (lv_id_0_0= ruleIDENTIFIER ) )
            // InternalGo.g:1029:3: (lv_id_0_0= ruleIDENTIFIER )
            {
            // InternalGo.g:1029:3: (lv_id_0_0= ruleIDENTIFIER )
            // InternalGo.g:1030:4: lv_id_0_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPackageNameAccess().getIdIDENTIFIERParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_id_0_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPackageNameRule());
              				}
              				set(
              					current,
              					"id",
              					lv_id_0_0,
              					"org.xtext.example.mydsl.Go.IDENTIFIER");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageName"


    // $ANTLR start "entryRuleTypeLit"
    // InternalGo.g:1050:1: entryRuleTypeLit returns [EObject current=null] : iv_ruleTypeLit= ruleTypeLit EOF ;
    public final EObject entryRuleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLit = null;


        try {
            // InternalGo.g:1050:48: (iv_ruleTypeLit= ruleTypeLit EOF )
            // InternalGo.g:1051:2: iv_ruleTypeLit= ruleTypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeLit=ruleTypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLit"


    // $ANTLR start "ruleTypeLit"
    // InternalGo.g:1057:1: ruleTypeLit returns [EObject current=null] : (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType ) ;
    public final EObject ruleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayType_0 = null;

        EObject this_StructType_1 = null;

        EObject this_PointerType_2 = null;

        EObject this_FunctionType_3 = null;

        EObject this_InterfaceType_4 = null;

        EObject this_SliceType_5 = null;

        EObject this_MapType_6 = null;

        EObject this_ChannelType_7 = null;



        	enterRule();

        try {
            // InternalGo.g:1063:2: ( (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType ) )
            // InternalGo.g:1064:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType )
            {
            // InternalGo.g:1064:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType )
            int alt17=8;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalGo.g:1065:3: this_ArrayType_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayType_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ArrayType_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:1077:3: this_StructType_1= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructType_1=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructType_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:1089:3: this_PointerType_2= rulePointerType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PointerType_2=rulePointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PointerType_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:1101:3: this_FunctionType_3= ruleFunctionType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionType_3=ruleFunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionType_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:1113:3: this_InterfaceType_4= ruleInterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InterfaceType_4=ruleInterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InterfaceType_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:1125:3: this_SliceType_5= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SliceType_5=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SliceType_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:1137:3: this_MapType_6= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapType_6=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapType_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:1149:3: this_ChannelType_7= ruleChannelType
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChannelType_7=ruleChannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChannelType_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLit"


    // $ANTLR start "entryRuleArrayType"
    // InternalGo.g:1164:1: entryRuleArrayType returns [EObject current=null] : iv_ruleArrayType= ruleArrayType EOF ;
    public final EObject entryRuleArrayType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayType = null;


        try {
            // InternalGo.g:1164:50: (iv_ruleArrayType= ruleArrayType EOF )
            // InternalGo.g:1165:2: iv_ruleArrayType= ruleArrayType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayType=ruleArrayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayType"


    // $ANTLR start "ruleArrayType"
    // InternalGo.g:1171:1: ruleArrayType returns [EObject current=null] : (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) ;
    public final EObject ruleArrayType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_ArrayLength_1 = null;

        EObject lv_elemtype_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1177:2: ( (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) ) )
            // InternalGo.g:1178:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            {
            // InternalGo.g:1178:2: (otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) ) )
            // InternalGo.g:1179:3: otherlv_0= '[' this_ArrayLength_1= ruleArrayLength otherlv_2= ']' ( (lv_elemtype_3_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_20);
            this_ArrayLength_1=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArrayLength_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,48,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalGo.g:1198:3: ( (lv_elemtype_3_0= ruleElementType ) )
            // InternalGo.g:1199:4: (lv_elemtype_3_0= ruleElementType )
            {
            // InternalGo.g:1199:4: (lv_elemtype_3_0= ruleElementType )
            // InternalGo.g:1200:5: lv_elemtype_3_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getElemtypeElementTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_3_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_3_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayType"


    // $ANTLR start "entryRuleArrayLength"
    // InternalGo.g:1221:1: entryRuleArrayLength returns [EObject current=null] : iv_ruleArrayLength= ruleArrayLength EOF ;
    public final EObject entryRuleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLength = null;


        try {
            // InternalGo.g:1221:52: (iv_ruleArrayLength= ruleArrayLength EOF )
            // InternalGo.g:1222:2: iv_ruleArrayLength= ruleArrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLength=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayLength"


    // $ANTLR start "ruleArrayLength"
    // InternalGo.g:1228:1: ruleArrayLength returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1234:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:1235:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayLength"


    // $ANTLR start "entryRuleElementType"
    // InternalGo.g:1249:1: entryRuleElementType returns [EObject current=null] : iv_ruleElementType= ruleElementType EOF ;
    public final EObject entryRuleElementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementType = null;


        try {
            // InternalGo.g:1249:52: (iv_ruleElementType= ruleElementType EOF )
            // InternalGo.g:1250:2: iv_ruleElementType= ruleElementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementType=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementType"


    // $ANTLR start "ruleElementType"
    // InternalGo.g:1256:1: ruleElementType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleElementType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1262:2: (this_Type_0= ruleType )
            // InternalGo.g:1263:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getElementTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementType"


    // $ANTLR start "entryRuleSliceType"
    // InternalGo.g:1277:1: entryRuleSliceType returns [EObject current=null] : iv_ruleSliceType= ruleSliceType EOF ;
    public final EObject entryRuleSliceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSliceType = null;


        try {
            // InternalGo.g:1277:50: (iv_ruleSliceType= ruleSliceType EOF )
            // InternalGo.g:1278:2: iv_ruleSliceType= ruleSliceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSliceType=ruleSliceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSliceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSliceType"


    // $ANTLR start "ruleSliceType"
    // InternalGo.g:1284:1: ruleSliceType returns [EObject current=null] : (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) ;
    public final EObject ruleSliceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_elemtype_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1290:2: ( (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) ) )
            // InternalGo.g:1291:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            {
            // InternalGo.g:1291:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) ) )
            // InternalGo.g:1292:3: otherlv_0= '[' otherlv_1= ']' ( (lv_elemtype_2_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,48,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:1300:3: ( (lv_elemtype_2_0= ruleElementType ) )
            // InternalGo.g:1301:4: (lv_elemtype_2_0= ruleElementType )
            {
            // InternalGo.g:1301:4: (lv_elemtype_2_0= ruleElementType )
            // InternalGo.g:1302:5: lv_elemtype_2_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceTypeAccess().getElemtypeElementTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_2_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_2_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSliceType"


    // $ANTLR start "entryRuleStructType"
    // InternalGo.g:1323:1: entryRuleStructType returns [EObject current=null] : iv_ruleStructType= ruleStructType EOF ;
    public final EObject entryRuleStructType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructType = null;


        try {
            // InternalGo.g:1323:51: (iv_ruleStructType= ruleStructType EOF )
            // InternalGo.g:1324:2: iv_ruleStructType= ruleStructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructType=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructType"


    // $ANTLR start "ruleStructType"
    // InternalGo.g:1330:1: ruleStructType returns [EObject current=null] : ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' ) ;
    public final EObject ruleStructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_fielddecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1336:2: ( ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' ) )
            // InternalGo.g:1337:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' )
            {
            // InternalGo.g:1337:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}' )
            // InternalGo.g:1338:3: () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= '}'
            {
            // InternalGo.g:1338:3: ()
            // InternalGo.g:1339:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,49,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,50,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:1356:3: ( ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==RULE_LETTER||LA18_0==54) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalGo.g:1357:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:1357:4: ( (lv_fielddecl_3_0= ruleFieldDecl ) )
            	    // InternalGo.g:1358:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    {
            	    // InternalGo.g:1358:5: (lv_fielddecl_3_0= ruleFieldDecl )
            	    // InternalGo.g:1359:6: lv_fielddecl_3_0= ruleFieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFielddeclFieldDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_fielddecl_3_0=ruleFieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"fielddecl",
            	      							lv_fielddecl_3_0,
            	      							"org.xtext.example.mydsl.Go.FieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,51,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            otherlv_5=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalGo.g:1389:1: entryRuleFieldDecl returns [EObject current=null] : iv_ruleFieldDecl= ruleFieldDecl EOF ;
    public final EObject entryRuleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldDecl = null;


        try {
            // InternalGo.g:1389:50: (iv_ruleFieldDecl= ruleFieldDecl EOF )
            // InternalGo.g:1390:2: iv_ruleFieldDecl= ruleFieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldDecl=ruleFieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalGo.g:1396:1: ruleFieldDecl returns [EObject current=null] : ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? ) ;
    public final EObject ruleFieldDecl() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_indentifierL_1_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_embedded_3_0 = null;

        AntlrDatatypeRuleToken lv_tag_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1402:2: ( ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? ) )
            // InternalGo.g:1403:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? )
            {
            // InternalGo.g:1403:2: ( () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )? )
            // InternalGo.g:1404:3: () ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) ) ( (lv_tag_4_0= ruleTag ) )?
            {
            // InternalGo.g:1404:3: ()
            // InternalGo.g:1405:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFieldDeclAccess().getFieldDeclAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1414:3: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1415:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    {
                    // InternalGo.g:1415:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
                    // InternalGo.g:1416:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) )
                    {
                    // InternalGo.g:1416:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) )
                    // InternalGo.g:1417:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1417:6: (lv_indentifierL_1_0= ruleIdentifierList )
                    // InternalGo.g:1418:7: lv_indentifierL_1_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    lv_indentifierL_1_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"indentifierL",
                      								lv_indentifierL_1_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:1435:5: ( (lv_type_2_0= ruleType ) )
                    // InternalGo.g:1436:6: (lv_type_2_0= ruleType )
                    {
                    // InternalGo.g:1436:6: (lv_type_2_0= ruleType )
                    // InternalGo.g:1437:7: lv_type_2_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_24);
                    lv_type_2_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"org.xtext.example.mydsl.Go.Type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1456:4: ( (lv_embedded_3_0= ruleEmbeddedField ) )
                    {
                    // InternalGo.g:1456:4: ( (lv_embedded_3_0= ruleEmbeddedField ) )
                    // InternalGo.g:1457:5: (lv_embedded_3_0= ruleEmbeddedField )
                    {
                    // InternalGo.g:1457:5: (lv_embedded_3_0= ruleEmbeddedField )
                    // InternalGo.g:1458:6: lv_embedded_3_0= ruleEmbeddedField
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedEmbeddedFieldParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_embedded_3_0=ruleEmbeddedField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      						}
                      						set(
                      							current,
                      							"embedded",
                      							lv_embedded_3_0,
                      							"org.xtext.example.mydsl.Go.EmbeddedField");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:1476:3: ( (lv_tag_4_0= ruleTag ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( ((LA20_0>=RULE_RAW_STRING_LIT && LA20_0<=RULE_INTERPRETED_STRING_LIT)) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalGo.g:1477:4: (lv_tag_4_0= ruleTag )
                    {
                    // InternalGo.g:1477:4: (lv_tag_4_0= ruleTag )
                    // InternalGo.g:1478:5: lv_tag_4_0= ruleTag
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tag_4_0=ruleTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      					}
                      					set(
                      						current,
                      						"tag",
                      						lv_tag_4_0,
                      						"org.xtext.example.mydsl.Go.Tag");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleIdentifierList"
    // InternalGo.g:1499:1: entryRuleIdentifierList returns [String current=null] : iv_ruleIdentifierList= ruleIdentifierList EOF ;
    public final String entryRuleIdentifierList() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierList = null;


        try {
            // InternalGo.g:1499:54: (iv_ruleIdentifierList= ruleIdentifierList EOF )
            // InternalGo.g:1500:2: iv_ruleIdentifierList= ruleIdentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierList=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierList.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierList"


    // $ANTLR start "ruleIdentifierList"
    // InternalGo.g:1506:1: ruleIdentifierList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= ruleIDENTIFIER ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )* ) ;
    public final AntlrDatatypeRuleToken ruleIdentifierList() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;

        AntlrDatatypeRuleToken this_IDENTIFIER_2 = null;



        	enterRule();

        try {
            // InternalGo.g:1512:2: ( (this_IDENTIFIER_0= ruleIDENTIFIER ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )* ) )
            // InternalGo.g:1513:2: (this_IDENTIFIER_0= ruleIDENTIFIER ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )* )
            {
            // InternalGo.g:1513:2: (this_IDENTIFIER_0= ruleIDENTIFIER ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )* )
            // InternalGo.g:1514:3: this_IDENTIFIER_0= ruleIDENTIFIER ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:1524:3: ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )*
            loop22:
            do {
                int alt22=2;
                alt22 = dfa22.predict(input);
                switch (alt22) {
            	case 1 :
            	    // InternalGo.g:1525:4: (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER
            	    {
            	    // InternalGo.g:1525:4: (kw= ',' )?
            	    int alt21=2;
            	    int LA21_0 = input.LA(1);

            	    if ( (LA21_0==53) ) {
            	        alt21=1;
            	    }
            	    switch (alt21) {
            	        case 1 :
            	            // InternalGo.g:1526:5: kw= ','
            	            {
            	            kw=(Token)match(input,53,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_25);
            	    this_IDENTIFIER_2=ruleIDENTIFIER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_IDENTIFIER_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierList"


    // $ANTLR start "entryRuleEmbeddedField"
    // InternalGo.g:1547:1: entryRuleEmbeddedField returns [EObject current=null] : iv_ruleEmbeddedField= ruleEmbeddedField EOF ;
    public final EObject entryRuleEmbeddedField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmbeddedField = null;


        try {
            // InternalGo.g:1547:54: (iv_ruleEmbeddedField= ruleEmbeddedField EOF )
            // InternalGo.g:1548:2: iv_ruleEmbeddedField= ruleEmbeddedField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmbeddedFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmbeddedField=ruleEmbeddedField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmbeddedField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmbeddedField"


    // $ANTLR start "ruleEmbeddedField"
    // InternalGo.g:1554:1: ruleEmbeddedField returns [EObject current=null] : ( (otherlv_0= '*' )? this_TypeName_1= ruleTypeName ) ;
    public final EObject ruleEmbeddedField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_TypeName_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1560:2: ( ( (otherlv_0= '*' )? this_TypeName_1= ruleTypeName ) )
            // InternalGo.g:1561:2: ( (otherlv_0= '*' )? this_TypeName_1= ruleTypeName )
            {
            // InternalGo.g:1561:2: ( (otherlv_0= '*' )? this_TypeName_1= ruleTypeName )
            // InternalGo.g:1562:3: (otherlv_0= '*' )? this_TypeName_1= ruleTypeName
            {
            // InternalGo.g:1562:3: (otherlv_0= '*' )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==54) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalGo.g:1563:4: otherlv_0= '*'
                    {
                    otherlv_0=(Token)match(input,54,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeName_1=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeName_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmbeddedField"


    // $ANTLR start "entryRuleTag"
    // InternalGo.g:1583:1: entryRuleTag returns [String current=null] : iv_ruleTag= ruleTag EOF ;
    public final String entryRuleTag() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTag = null;


        try {
            // InternalGo.g:1583:43: (iv_ruleTag= ruleTag EOF )
            // InternalGo.g:1584:2: iv_ruleTag= ruleTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTag=ruleTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTag.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTag"


    // $ANTLR start "ruleTag"
    // InternalGo.g:1590:1: ruleTag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= ruleSTRING_LIT ;
    public final AntlrDatatypeRuleToken ruleTag() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_STRING_LIT_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1596:2: (this_STRING_LIT_0= ruleSTRING_LIT )
            // InternalGo.g:1597:2: this_STRING_LIT_0= ruleSTRING_LIT
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getTagAccess().getSTRING_LITParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_STRING_LIT_0=ruleSTRING_LIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTag"


    // $ANTLR start "entryRulePointerType"
    // InternalGo.g:1610:1: entryRulePointerType returns [EObject current=null] : iv_rulePointerType= rulePointerType EOF ;
    public final EObject entryRulePointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePointerType = null;


        try {
            // InternalGo.g:1610:52: (iv_rulePointerType= rulePointerType EOF )
            // InternalGo.g:1611:2: iv_rulePointerType= rulePointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePointerType=rulePointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePointerType"


    // $ANTLR start "rulePointerType"
    // InternalGo.g:1617:1: rulePointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) ;
    public final EObject rulePointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_basetype_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1623:2: ( (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) ) )
            // InternalGo.g:1624:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            {
            // InternalGo.g:1624:2: (otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) ) )
            // InternalGo.g:1625:3: otherlv_0= '*' ( (lv_basetype_1_0= ruleBaseType ) )
            {
            otherlv_0=(Token)match(input,54,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:1629:3: ( (lv_basetype_1_0= ruleBaseType ) )
            // InternalGo.g:1630:4: (lv_basetype_1_0= ruleBaseType )
            {
            // InternalGo.g:1630:4: (lv_basetype_1_0= ruleBaseType )
            // InternalGo.g:1631:5: lv_basetype_1_0= ruleBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getBasetypeBaseTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_basetype_1_0=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"basetype",
              						lv_basetype_1_0,
              						"org.xtext.example.mydsl.Go.BaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePointerType"


    // $ANTLR start "entryRuleBaseType"
    // InternalGo.g:1652:1: entryRuleBaseType returns [EObject current=null] : iv_ruleBaseType= ruleBaseType EOF ;
    public final EObject entryRuleBaseType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseType = null;


        try {
            // InternalGo.g:1652:49: (iv_ruleBaseType= ruleBaseType EOF )
            // InternalGo.g:1653:2: iv_ruleBaseType= ruleBaseType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseType=ruleBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseType"


    // $ANTLR start "ruleBaseType"
    // InternalGo.g:1659:1: ruleBaseType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleBaseType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1665:2: (this_Type_0= ruleType )
            // InternalGo.g:1666:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseType"


    // $ANTLR start "entryRuleFunctionType"
    // InternalGo.g:1680:1: entryRuleFunctionType returns [EObject current=null] : iv_ruleFunctionType= ruleFunctionType EOF ;
    public final EObject entryRuleFunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionType = null;


        try {
            // InternalGo.g:1680:53: (iv_ruleFunctionType= ruleFunctionType EOF )
            // InternalGo.g:1681:2: iv_ruleFunctionType= ruleFunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionType=ruleFunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionType"


    // $ANTLR start "ruleFunctionType"
    // InternalGo.g:1687:1: ruleFunctionType returns [EObject current=null] : (otherlv_0= 'func' this_Signature_1= ruleSignature ) ;
    public final EObject ruleFunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Signature_1 = null;



        	enterRule();

        try {
            // InternalGo.g:1693:2: ( (otherlv_0= 'func' this_Signature_1= ruleSignature ) )
            // InternalGo.g:1694:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            {
            // InternalGo.g:1694:2: (otherlv_0= 'func' this_Signature_1= ruleSignature )
            // InternalGo.g:1695:3: otherlv_0= 'func' this_Signature_1= ruleSignature
            {
            otherlv_0=(Token)match(input,40,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Signature_1=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Signature_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionType"


    // $ANTLR start "entryRuleSignature"
    // InternalGo.g:1714:1: entryRuleSignature returns [EObject current=null] : iv_ruleSignature= ruleSignature EOF ;
    public final EObject entryRuleSignature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignature = null;


        try {
            // InternalGo.g:1714:50: (iv_ruleSignature= ruleSignature EOF )
            // InternalGo.g:1715:2: iv_ruleSignature= ruleSignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignature=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignature"


    // $ANTLR start "ruleSignature"
    // InternalGo.g:1721:1: ruleSignature returns [EObject current=null] : ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? ) ;
    public final EObject ruleSignature() throws RecognitionException {
        EObject current = null;

        EObject lv_parameters_0_0 = null;

        EObject lv_result_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1727:2: ( ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? ) )
            // InternalGo.g:1728:2: ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? )
            {
            // InternalGo.g:1728:2: ( ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )? )
            // InternalGo.g:1729:3: ( (lv_parameters_0_0= ruleParameters ) ) ( (lv_result_1_0= ruleResult ) )?
            {
            // InternalGo.g:1729:3: ( (lv_parameters_0_0= ruleParameters ) )
            // InternalGo.g:1730:4: (lv_parameters_0_0= ruleParameters )
            {
            // InternalGo.g:1730:4: (lv_parameters_0_0= ruleParameters )
            // InternalGo.g:1731:5: lv_parameters_0_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_parameters_0_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignatureRule());
              					}
              					set(
              						current,
              						"parameters",
              						lv_parameters_0_0,
              						"org.xtext.example.mydsl.Go.Parameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1748:3: ( (lv_result_1_0= ruleResult ) )?
            int alt24=2;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalGo.g:1749:4: (lv_result_1_0= ruleResult )
                    {
                    // InternalGo.g:1749:4: (lv_result_1_0= ruleResult )
                    // InternalGo.g:1750:5: lv_result_1_0= ruleResult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_result_1_0=ruleResult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"result",
                      						lv_result_1_0,
                      						"org.xtext.example.mydsl.Go.Result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignature"


    // $ANTLR start "entryRuleResult"
    // InternalGo.g:1771:1: entryRuleResult returns [EObject current=null] : iv_ruleResult= ruleResult EOF ;
    public final EObject entryRuleResult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResult = null;


        try {
            // InternalGo.g:1771:47: (iv_ruleResult= ruleResult EOF )
            // InternalGo.g:1772:2: iv_ruleResult= ruleResult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResult=ruleResult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResult"


    // $ANTLR start "ruleResult"
    // InternalGo.g:1778:1: ruleResult returns [EObject current=null] : ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) ) ;
    public final EObject ruleResult() throws RecognitionException {
        EObject current = null;

        EObject lv_parameteres_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1784:2: ( ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) ) )
            // InternalGo.g:1785:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )
            {
            // InternalGo.g:1785:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )
            int alt25=2;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalGo.g:1786:3: ( (lv_parameteres_0_0= ruleParameters ) )
                    {
                    // InternalGo.g:1786:3: ( (lv_parameteres_0_0= ruleParameters ) )
                    // InternalGo.g:1787:4: (lv_parameteres_0_0= ruleParameters )
                    {
                    // InternalGo.g:1787:4: (lv_parameteres_0_0= ruleParameters )
                    // InternalGo.g:1788:5: lv_parameteres_0_0= ruleParameters
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getParameteresParametersParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameteres_0_0=ruleParameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"parameteres",
                      						lv_parameteres_0_0,
                      						"org.xtext.example.mydsl.Go.Parameters");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1806:3: ( (lv_type_1_0= ruleType ) )
                    {
                    // InternalGo.g:1806:3: ( (lv_type_1_0= ruleType ) )
                    // InternalGo.g:1807:4: (lv_type_1_0= ruleType )
                    {
                    // InternalGo.g:1807:4: (lv_type_1_0= ruleType )
                    // InternalGo.g:1808:5: lv_type_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.example.mydsl.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResult"


    // $ANTLR start "entryRuleParameters"
    // InternalGo.g:1829:1: entryRuleParameters returns [EObject current=null] : iv_ruleParameters= ruleParameters EOF ;
    public final EObject entryRuleParameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameters = null;


        try {
            // InternalGo.g:1829:51: (iv_ruleParameters= ruleParameters EOF )
            // InternalGo.g:1830:2: iv_ruleParameters= ruleParameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameters=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameters"


    // $ANTLR start "ruleParameters"
    // InternalGo.g:1836:1: ruleParameters returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) ;
    public final EObject ruleParameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_parameterlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1842:2: ( ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) )
            // InternalGo.g:1843:2: ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            {
            // InternalGo.g:1843:2: ( () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            // InternalGo.g:1844:3: () otherlv_1= '(' ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')'
            {
            // InternalGo.g:1844:3: ()
            // InternalGo.g:1845:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParametersAccess().getParametersAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:1858:3: ( ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_LETTER||LA27_0==40||LA27_0==45||LA27_0==47||LA27_0==49||(LA27_0>=54 && LA27_0<=59)) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalGo.g:1859:4: ( (lv_parameterlist_2_0= ruleParameterList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:1859:4: ( (lv_parameterlist_2_0= ruleParameterList ) )
                    // InternalGo.g:1860:5: (lv_parameterlist_2_0= ruleParameterList )
                    {
                    // InternalGo.g:1860:5: (lv_parameterlist_2_0= ruleParameterList )
                    // InternalGo.g:1861:6: lv_parameterlist_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_parameterlist_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParametersRule());
                      						}
                      						set(
                      							current,
                      							"parameterlist",
                      							lv_parameterlist_2_0,
                      							"org.xtext.example.mydsl.Go.ParameterList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:1878:4: (otherlv_3= ',' )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==53) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalGo.g:1879:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,53,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameters"


    // $ANTLR start "entryRuleParameterList"
    // InternalGo.g:1893:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalGo.g:1893:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalGo.g:1894:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalGo.g:1900:1: ruleParameterList returns [EObject current=null] : ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_parameterDecl1_1_0 = null;

        EObject lv_parameterdecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1906:2: ( ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* ) )
            // InternalGo.g:1907:2: ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* )
            {
            // InternalGo.g:1907:2: ( () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )* )
            // InternalGo.g:1908:3: () ( (lv_parameterDecl1_1_0= ruleParameterDecl ) ) (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )*
            {
            // InternalGo.g:1908:3: ()
            // InternalGo.g:1909:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParameterListAccess().getParameterListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1918:3: ( (lv_parameterDecl1_1_0= ruleParameterDecl ) )
            // InternalGo.g:1919:4: (lv_parameterDecl1_1_0= ruleParameterDecl )
            {
            // InternalGo.g:1919:4: (lv_parameterDecl1_1_0= ruleParameterDecl )
            // InternalGo.g:1920:5: lv_parameterDecl1_1_0= ruleParameterDecl
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDecl1ParameterDeclParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_parameterDecl1_1_0=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterListRule());
              					}
              					set(
              						current,
              						"parameterDecl1",
              						lv_parameterDecl1_1_0,
              						"org.xtext.example.mydsl.Go.ParameterDecl");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1937:3: (otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==53) ) {
                    int LA28_1 = input.LA(2);

                    if ( (LA28_1==RULE_LETTER||LA28_1==40||LA28_1==45||LA28_1==47||LA28_1==49||(LA28_1>=54 && LA28_1<=59)) ) {
                        alt28=1;
                    }


                }


                switch (alt28) {
            	case 1 :
            	    // InternalGo.g:1938:4: otherlv_2= ',' ( (lv_parameterdecl_3_0= ruleParameterDecl ) )
            	    {
            	    otherlv_2=(Token)match(input,53,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalGo.g:1942:4: ( (lv_parameterdecl_3_0= ruleParameterDecl ) )
            	    // InternalGo.g:1943:5: (lv_parameterdecl_3_0= ruleParameterDecl )
            	    {
            	    // InternalGo.g:1943:5: (lv_parameterdecl_3_0= ruleParameterDecl )
            	    // InternalGo.g:1944:6: lv_parameterdecl_3_0= ruleParameterDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameterListAccess().getParameterdeclParameterDeclParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_parameterdecl_3_0=ruleParameterDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameterListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"parameterdecl",
            	      							lv_parameterdecl_3_0,
            	      							"org.xtext.example.mydsl.Go.ParameterDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleParameterDecl"
    // InternalGo.g:1966:1: entryRuleParameterDecl returns [EObject current=null] : iv_ruleParameterDecl= ruleParameterDecl EOF ;
    public final EObject entryRuleParameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterDecl = null;


        try {
            // InternalGo.g:1966:54: (iv_ruleParameterDecl= ruleParameterDecl EOF )
            // InternalGo.g:1967:2: iv_ruleParameterDecl= ruleParameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterDecl=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterDecl"


    // $ANTLR start "ruleParameterDecl"
    // InternalGo.g:1973:1: ruleParameterDecl returns [EObject current=null] : ( ( (lv_identifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) ) ;
    public final EObject ruleParameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_identifierL_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1979:2: ( ( ( (lv_identifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) ) )
            // InternalGo.g:1980:2: ( ( (lv_identifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) )
            {
            // InternalGo.g:1980:2: ( ( (lv_identifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) ) )
            // InternalGo.g:1981:3: ( (lv_identifierL_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruleType ) )
            {
            // InternalGo.g:1981:3: ( (lv_identifierL_0_0= ruleIdentifierList ) )?
            int alt29=2;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // InternalGo.g:1982:4: (lv_identifierL_0_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1982:4: (lv_identifierL_0_0= ruleIdentifierList )
                    // InternalGo.g:1983:5: lv_identifierL_0_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierLIdentifierListParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_30);
                    lv_identifierL_0_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"identifierL",
                      						lv_identifierL_0_0,
                      						"org.xtext.example.mydsl.Go.IdentifierList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:2000:3: (otherlv_1= '...' )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==55) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalGo.g:2001:4: otherlv_1= '...'
                    {
                    otherlv_1=(Token)match(input,55,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:2006:3: ( (lv_type_2_0= ruleType ) )
            // InternalGo.g:2007:4: (lv_type_2_0= ruleType )
            {
            // InternalGo.g:2007:4: (lv_type_2_0= ruleType )
            // InternalGo.g:2008:5: lv_type_2_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterDecl"


    // $ANTLR start "entryRuleInterfaceType"
    // InternalGo.g:2029:1: entryRuleInterfaceType returns [EObject current=null] : iv_ruleInterfaceType= ruleInterfaceType EOF ;
    public final EObject entryRuleInterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceType = null;


        try {
            // InternalGo.g:2029:54: (iv_ruleInterfaceType= ruleInterfaceType EOF )
            // InternalGo.g:2030:2: iv_ruleInterfaceType= ruleInterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceType=ruleInterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceType"


    // $ANTLR start "ruleInterfaceType"
    // InternalGo.g:2036:1: ruleInterfaceType returns [EObject current=null] : ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' ) ;
    public final EObject ruleInterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_methodspec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2042:2: ( ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' ) )
            // InternalGo.g:2043:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' )
            {
            // InternalGo.g:2043:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}' )
            // InternalGo.g:2044:3: () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )* otherlv_5= '}'
            {
            // InternalGo.g:2044:3: ()
            // InternalGo.g:2045:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,56,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,50,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:2062:3: ( ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_LETTER) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalGo.g:2063:4: ( (lv_methodspec_3_0= ruleMethodSpec ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:2063:4: ( (lv_methodspec_3_0= ruleMethodSpec ) )
            	    // InternalGo.g:2064:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    {
            	    // InternalGo.g:2064:5: (lv_methodspec_3_0= ruleMethodSpec )
            	    // InternalGo.g:2065:6: lv_methodspec_3_0= ruleMethodSpec
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodspecMethodSpecParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_methodspec_3_0=ruleMethodSpec();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"methodspec",
            	      							lv_methodspec_3_0,
            	      							"org.xtext.example.mydsl.Go.MethodSpec");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,51,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            otherlv_5=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceType"


    // $ANTLR start "entryRuleMethodSpec"
    // InternalGo.g:2095:1: entryRuleMethodSpec returns [EObject current=null] : iv_ruleMethodSpec= ruleMethodSpec EOF ;
    public final EObject entryRuleMethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodSpec = null;


        try {
            // InternalGo.g:2095:51: (iv_ruleMethodSpec= ruleMethodSpec EOF )
            // InternalGo.g:2096:2: iv_ruleMethodSpec= ruleMethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodSpec=ruleMethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodSpec"


    // $ANTLR start "ruleMethodSpec"
    // InternalGo.g:2102:1: ruleMethodSpec returns [EObject current=null] : ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) ) ;
    public final EObject ruleMethodSpec() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_mn_0_0 = null;

        EObject lv_signature_1_0 = null;

        EObject lv_itn_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2108:2: ( ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) ) )
            // InternalGo.g:2109:2: ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) )
            {
            // InternalGo.g:2109:2: ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) )
            int alt32=2;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalGo.g:2110:3: ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) )
                    {
                    // InternalGo.g:2110:3: ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) )
                    // InternalGo.g:2111:4: ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) )
                    {
                    // InternalGo.g:2111:4: ( (lv_mn_0_0= ruleMethodName ) )
                    // InternalGo.g:2112:5: (lv_mn_0_0= ruleMethodName )
                    {
                    // InternalGo.g:2112:5: (lv_mn_0_0= ruleMethodName )
                    // InternalGo.g:2113:6: lv_mn_0_0= ruleMethodName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getMnMethodNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_mn_0_0=ruleMethodName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"mn",
                      							lv_mn_0_0,
                      							"org.xtext.example.mydsl.Go.MethodName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2130:4: ( (lv_signature_1_0= ruleSignature ) )
                    // InternalGo.g:2131:5: (lv_signature_1_0= ruleSignature )
                    {
                    // InternalGo.g:2131:5: (lv_signature_1_0= ruleSignature )
                    // InternalGo.g:2132:6: lv_signature_1_0= ruleSignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_signature_1_0=ruleSignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"signature",
                      							lv_signature_1_0,
                      							"org.xtext.example.mydsl.Go.Signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2151:3: ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) )
                    {
                    // InternalGo.g:2151:3: ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) )
                    // InternalGo.g:2152:4: () ( (lv_itn_3_0= ruleInterfaceTypeName ) )
                    {
                    // InternalGo.g:2152:4: ()
                    // InternalGo.g:2153:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getMethodSpecAccess().getMethodSpecAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2162:4: ( (lv_itn_3_0= ruleInterfaceTypeName ) )
                    // InternalGo.g:2163:5: (lv_itn_3_0= ruleInterfaceTypeName )
                    {
                    // InternalGo.g:2163:5: (lv_itn_3_0= ruleInterfaceTypeName )
                    // InternalGo.g:2164:6: lv_itn_3_0= ruleInterfaceTypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getItnInterfaceTypeNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_itn_3_0=ruleInterfaceTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"itn",
                      							lv_itn_3_0,
                      							"org.xtext.example.mydsl.Go.InterfaceTypeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodSpec"


    // $ANTLR start "entryRuleMethodName"
    // InternalGo.g:2186:1: entryRuleMethodName returns [String current=null] : iv_ruleMethodName= ruleMethodName EOF ;
    public final String entryRuleMethodName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethodName = null;


        try {
            // InternalGo.g:2186:50: (iv_ruleMethodName= ruleMethodName EOF )
            // InternalGo.g:2187:2: iv_ruleMethodName= ruleMethodName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodName=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodName"


    // $ANTLR start "ruleMethodName"
    // InternalGo.g:2193:1: ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleMethodName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2199:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:2200:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getMethodNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodName"


    // $ANTLR start "entryRuleInterfaceTypeName"
    // InternalGo.g:2213:1: entryRuleInterfaceTypeName returns [EObject current=null] : iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF ;
    public final EObject entryRuleInterfaceTypeName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceTypeName = null;


        try {
            // InternalGo.g:2213:58: (iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF )
            // InternalGo.g:2214:2: iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceTypeName=ruleInterfaceTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceTypeName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceTypeName"


    // $ANTLR start "ruleInterfaceTypeName"
    // InternalGo.g:2220:1: ruleInterfaceTypeName returns [EObject current=null] : this_TypeName_0= ruleTypeName ;
    public final EObject ruleInterfaceTypeName() throws RecognitionException {
        EObject current = null;

        EObject this_TypeName_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2226:2: (this_TypeName_0= ruleTypeName )
            // InternalGo.g:2227:2: this_TypeName_0= ruleTypeName
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_TypeName_0=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_TypeName_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceTypeName"


    // $ANTLR start "entryRuleMapType"
    // InternalGo.g:2241:1: entryRuleMapType returns [EObject current=null] : iv_ruleMapType= ruleMapType EOF ;
    public final EObject entryRuleMapType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapType = null;


        try {
            // InternalGo.g:2241:48: (iv_ruleMapType= ruleMapType EOF )
            // InternalGo.g:2242:2: iv_ruleMapType= ruleMapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapType=ruleMapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapType"


    // $ANTLR start "ruleMapType"
    // InternalGo.g:2248:1: ruleMapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleMapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_keytype_2_0 = null;

        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2254:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2255:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2255:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2256:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_keytype_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_elemtype_4_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,57,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,47,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:2264:3: ( (lv_keytype_2_0= ruleKeyType ) )
            // InternalGo.g:2265:4: (lv_keytype_2_0= ruleKeyType )
            {
            // InternalGo.g:2265:4: (lv_keytype_2_0= ruleKeyType )
            // InternalGo.g:2266:5: lv_keytype_2_0= ruleKeyType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getKeytypeKeyTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_keytype_2_0=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"keytype",
              						lv_keytype_2_0,
              						"org.xtext.example.mydsl.Go.KeyType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,48,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:2287:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2288:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2288:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2289:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElemtypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapType"


    // $ANTLR start "entryRuleKeyType"
    // InternalGo.g:2310:1: entryRuleKeyType returns [EObject current=null] : iv_ruleKeyType= ruleKeyType EOF ;
    public final EObject entryRuleKeyType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyType = null;


        try {
            // InternalGo.g:2310:48: (iv_ruleKeyType= ruleKeyType EOF )
            // InternalGo.g:2311:2: iv_ruleKeyType= ruleKeyType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyType=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyType"


    // $ANTLR start "ruleKeyType"
    // InternalGo.g:2317:1: ruleKeyType returns [EObject current=null] : this_Type_0= ruleType ;
    public final EObject ruleKeyType() throws RecognitionException {
        EObject current = null;

        EObject this_Type_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2323:2: (this_Type_0= ruleType )
            // InternalGo.g:2324:2: this_Type_0= ruleType
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Type_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Type_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyType"


    // $ANTLR start "entryRuleChannelType"
    // InternalGo.g:2338:1: entryRuleChannelType returns [EObject current=null] : iv_ruleChannelType= ruleChannelType EOF ;
    public final EObject entryRuleChannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelType = null;


        try {
            // InternalGo.g:2338:52: (iv_ruleChannelType= ruleChannelType EOF )
            // InternalGo.g:2339:2: iv_ruleChannelType= ruleChannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelType=ruleChannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelType"


    // $ANTLR start "ruleChannelType"
    // InternalGo.g:2345:1: ruleChannelType returns [EObject current=null] : ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) ;
    public final EObject ruleChannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_elemtype_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2351:2: ( ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) ) )
            // InternalGo.g:2352:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:2352:2: ( ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) ) )
            // InternalGo.g:2353:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) ) ( (lv_elemtype_4_0= ruleElementType ) )
            {
            // InternalGo.g:2353:3: ( (otherlv_0= 'chan' (otherlv_1= '<-' )? ) | (otherlv_2= '<-' otherlv_3= 'chan' ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==58) ) {
                alt34=1;
            }
            else if ( (LA34_0==59) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalGo.g:2354:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    {
                    // InternalGo.g:2354:4: (otherlv_0= 'chan' (otherlv_1= '<-' )? )
                    // InternalGo.g:2355:5: otherlv_0= 'chan' (otherlv_1= '<-' )?
                    {
                    otherlv_0=(Token)match(input,58,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0_0());
                      				
                    }
                    // InternalGo.g:2359:5: (otherlv_1= '<-' )?
                    int alt33=2;
                    alt33 = dfa33.predict(input);
                    switch (alt33) {
                        case 1 :
                            // InternalGo.g:2360:6: otherlv_1= '<-'
                            {
                            otherlv_1=(Token)match(input,59,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_0_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2367:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    {
                    // InternalGo.g:2367:4: (otherlv_2= '<-' otherlv_3= 'chan' )
                    // InternalGo.g:2368:5: otherlv_2= '<-' otherlv_3= 'chan'
                    {
                    otherlv_2=(Token)match(input,59,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0());
                      				
                    }
                    otherlv_3=(Token)match(input,58,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:2378:3: ( (lv_elemtype_4_0= ruleElementType ) )
            // InternalGo.g:2379:4: (lv_elemtype_4_0= ruleElementType )
            {
            // InternalGo.g:2379:4: (lv_elemtype_4_0= ruleElementType )
            // InternalGo.g:2380:5: lv_elemtype_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElemtypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemtype_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"elemtype",
              						lv_elemtype_4_0,
              						"org.xtext.example.mydsl.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelType"


    // $ANTLR start "entryRuleBlock"
    // InternalGo.g:2401:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalGo.g:2401:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalGo.g:2402:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalGo.g:2408:1: ruleBlock returns [EObject current=null] : (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_StatementList_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2414:2: ( (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' ) )
            // InternalGo.g:2415:2: (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' )
            {
            // InternalGo.g:2415:2: (otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}' )
            // InternalGo.g:2416:3: otherlv_0= '{' this_StatementList_1= ruleStatementList otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,50,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_35);
            this_StatementList_1=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StatementList_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleStatementList"
    // InternalGo.g:2439:1: entryRuleStatementList returns [EObject current=null] : iv_ruleStatementList= ruleStatementList EOF ;
    public final EObject entryRuleStatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatementList = null;


        try {
            // InternalGo.g:2439:54: (iv_ruleStatementList= ruleStatementList EOF )
            // InternalGo.g:2440:2: iv_ruleStatementList= ruleStatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatementList=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementList"


    // $ANTLR start "ruleStatementList"
    // InternalGo.g:2446:1: ruleStatementList returns [EObject current=null] : ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleStatementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_statment_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2452:2: ( ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* ) )
            // InternalGo.g:2453:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* )
            {
            // InternalGo.g:2453:2: ( () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )* )
            // InternalGo.g:2454:3: () ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )*
            {
            // InternalGo.g:2454:3: ()
            // InternalGo.g:2455:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStatementListAccess().getStatementListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:2464:3: ( ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )? )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==RULE_LETTER||LA36_0==RULE_DECIMALS||(LA36_0>=RULE_UNARY_OP && LA36_0<=RULE_STRING)||LA36_0==40||LA36_0==42||(LA36_0>=44 && LA36_0<=45)||LA36_0==47||(LA36_0>=49 && LA36_0<=51)||LA36_0==54||(LA36_0>=56 && LA36_0<=59)||(LA36_0>=61 && LA36_0<=65)||(LA36_0>=67 && LA36_0<=71)||(LA36_0>=73 && LA36_0<=74)||LA36_0==78) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalGo.g:2465:4: ( (lv_statment_1_0= ruleStatement ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalGo.g:2465:4: ( (lv_statment_1_0= ruleStatement ) )
            	    // InternalGo.g:2466:5: (lv_statment_1_0= ruleStatement )
            	    {
            	    // InternalGo.g:2466:5: (lv_statment_1_0= ruleStatement )
            	    // InternalGo.g:2467:6: lv_statment_1_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStatementListAccess().getStatmentStatementParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_statment_1_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"statment",
            	      							lv_statment_1_0,
            	      							"org.xtext.example.mydsl.Go.Statement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:2484:4: (otherlv_2= ';' )?
            	    int alt35=2;
            	    int LA35_0 = input.LA(1);

            	    if ( (LA35_0==51) ) {
            	        int LA35_1 = input.LA(2);

            	        if ( (synpred45_InternalGo()) ) {
            	            alt35=1;
            	        }
            	    }
            	    switch (alt35) {
            	        case 1 :
            	            // InternalGo.g:2485:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,51,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementList"


    // $ANTLR start "entryRuleStatement"
    // InternalGo.g:2495:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalGo.g:2495:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalGo.g:2496:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalGo.g:2502:1: ruleStatement returns [EObject current=null] : ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_0 = null;

        EObject lv_labest_2_0 = null;

        EObject lv_simplest_3_0 = null;

        AntlrDatatypeRuleToken lv_gotst_4_0 = null;

        EObject this_ReturnStmt_5 = null;

        AntlrDatatypeRuleToken lv_breakst_6_0 = null;

        AntlrDatatypeRuleToken lv_continuest_7_0 = null;

        AntlrDatatypeRuleToken lv_gotost_8_0 = null;

        AntlrDatatypeRuleToken lv_falltst_9_0 = null;

        EObject lv_block1_10_0 = null;

        EObject lv_if_11_0 = null;

        EObject lv_switch_12_0 = null;

        EObject lv_selectst_13_0 = null;

        EObject lv_forst_14_0 = null;

        EObject lv_deferst_15_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2508:2: ( ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) ) )
            // InternalGo.g:2509:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            {
            // InternalGo.g:2509:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )
            int alt37=15;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalGo.g:2510:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    {
                    // InternalGo.g:2510:3: ( () ( (lv_declaration_1_0= ruleDeclaration ) ) )
                    // InternalGo.g:2511:4: () ( (lv_declaration_1_0= ruleDeclaration ) )
                    {
                    // InternalGo.g:2511:4: ()
                    // InternalGo.g:2512:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getStatementAccess().getStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2521:4: ( (lv_declaration_1_0= ruleDeclaration ) )
                    // InternalGo.g:2522:5: (lv_declaration_1_0= ruleDeclaration )
                    {
                    // InternalGo.g:2522:5: (lv_declaration_1_0= ruleDeclaration )
                    // InternalGo.g:2523:6: lv_declaration_1_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_1_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_1_0,
                      							"org.xtext.example.mydsl.Go.Declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2542:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    {
                    // InternalGo.g:2542:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
                    // InternalGo.g:2543:4: (lv_labest_2_0= ruleLabeledStmt )
                    {
                    // InternalGo.g:2543:4: (lv_labest_2_0= ruleLabeledStmt )
                    // InternalGo.g:2544:5: lv_labest_2_0= ruleLabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_labest_2_0=ruleLabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"labest",
                      						lv_labest_2_0,
                      						"org.xtext.example.mydsl.Go.LabeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2562:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    {
                    // InternalGo.g:2562:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
                    // InternalGo.g:2563:4: (lv_simplest_3_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:2563:4: (lv_simplest_3_0= ruleSimpleStmt )
                    // InternalGo.g:2564:5: lv_simplest_3_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simplest_3_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"simplest",
                      						lv_simplest_3_0,
                      						"org.xtext.example.mydsl.Go.SimpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:2582:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    {
                    // InternalGo.g:2582:3: ( (lv_gotst_4_0= ruleGoStmt ) )
                    // InternalGo.g:2583:4: (lv_gotst_4_0= ruleGoStmt )
                    {
                    // InternalGo.g:2583:4: (lv_gotst_4_0= ruleGoStmt )
                    // InternalGo.g:2584:5: lv_gotst_4_0= ruleGoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotst_4_0=ruleGoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotst",
                      						lv_gotst_4_0,
                      						"org.xtext.example.mydsl.Go.GoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:2602:3: this_ReturnStmt_5= ruleReturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStmt_5=ruleReturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReturnStmt_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2614:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    {
                    // InternalGo.g:2614:3: ( (lv_breakst_6_0= ruleBreakStmt ) )
                    // InternalGo.g:2615:4: (lv_breakst_6_0= ruleBreakStmt )
                    {
                    // InternalGo.g:2615:4: (lv_breakst_6_0= ruleBreakStmt )
                    // InternalGo.g:2616:5: lv_breakst_6_0= ruleBreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBreakstBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_breakst_6_0=ruleBreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"breakst",
                      						lv_breakst_6_0,
                      						"org.xtext.example.mydsl.Go.BreakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:2634:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    {
                    // InternalGo.g:2634:3: ( (lv_continuest_7_0= ruleContinueStmt ) )
                    // InternalGo.g:2635:4: (lv_continuest_7_0= ruleContinueStmt )
                    {
                    // InternalGo.g:2635:4: (lv_continuest_7_0= ruleContinueStmt )
                    // InternalGo.g:2636:5: lv_continuest_7_0= ruleContinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContinuestContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_continuest_7_0=ruleContinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"continuest",
                      						lv_continuest_7_0,
                      						"org.xtext.example.mydsl.Go.ContinueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:2654:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    {
                    // InternalGo.g:2654:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
                    // InternalGo.g:2655:4: (lv_gotost_8_0= ruleGotoStmt )
                    {
                    // InternalGo.g:2655:4: (lv_gotost_8_0= ruleGotoStmt )
                    // InternalGo.g:2656:5: lv_gotost_8_0= ruleGotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotost_8_0=ruleGotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotost",
                      						lv_gotost_8_0,
                      						"org.xtext.example.mydsl.Go.GotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:2674:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    {
                    // InternalGo.g:2674:3: ( (lv_falltst_9_0= ruleFallthroughStmt ) )
                    // InternalGo.g:2675:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    {
                    // InternalGo.g:2675:4: (lv_falltst_9_0= ruleFallthroughStmt )
                    // InternalGo.g:2676:5: lv_falltst_9_0= ruleFallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getFalltstFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_falltst_9_0=ruleFallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"falltst",
                      						lv_falltst_9_0,
                      						"org.xtext.example.mydsl.Go.FallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:2694:3: ( (lv_block1_10_0= ruleBlock ) )
                    {
                    // InternalGo.g:2694:3: ( (lv_block1_10_0= ruleBlock ) )
                    // InternalGo.g:2695:4: (lv_block1_10_0= ruleBlock )
                    {
                    // InternalGo.g:2695:4: (lv_block1_10_0= ruleBlock )
                    // InternalGo.g:2696:5: lv_block1_10_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBlock1BlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block1_10_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"block1",
                      						lv_block1_10_0,
                      						"org.xtext.example.mydsl.Go.Block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:2714:3: ( (lv_if_11_0= ruleIfStmt ) )
                    {
                    // InternalGo.g:2714:3: ( (lv_if_11_0= ruleIfStmt ) )
                    // InternalGo.g:2715:4: (lv_if_11_0= ruleIfStmt )
                    {
                    // InternalGo.g:2715:4: (lv_if_11_0= ruleIfStmt )
                    // InternalGo.g:2716:5: lv_if_11_0= ruleIfStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIfIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_if_11_0=ruleIfStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"if",
                      						lv_if_11_0,
                      						"org.xtext.example.mydsl.Go.IfStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:2734:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    {
                    // InternalGo.g:2734:3: ( (lv_switch_12_0= ruleSwitchStmt ) )
                    // InternalGo.g:2735:4: (lv_switch_12_0= ruleSwitchStmt )
                    {
                    // InternalGo.g:2735:4: (lv_switch_12_0= ruleSwitchStmt )
                    // InternalGo.g:2736:5: lv_switch_12_0= ruleSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSwitchSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_switch_12_0=ruleSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"switch",
                      						lv_switch_12_0,
                      						"org.xtext.example.mydsl.Go.SwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:2754:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    {
                    // InternalGo.g:2754:3: ( (lv_selectst_13_0= ruleSelectStmt ) )
                    // InternalGo.g:2755:4: (lv_selectst_13_0= ruleSelectStmt )
                    {
                    // InternalGo.g:2755:4: (lv_selectst_13_0= ruleSelectStmt )
                    // InternalGo.g:2756:5: lv_selectst_13_0= ruleSelectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelectstSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selectst_13_0=ruleSelectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"selectst",
                      						lv_selectst_13_0,
                      						"org.xtext.example.mydsl.Go.SelectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:2774:3: ( (lv_forst_14_0= ruleForStmt ) )
                    {
                    // InternalGo.g:2774:3: ( (lv_forst_14_0= ruleForStmt ) )
                    // InternalGo.g:2775:4: (lv_forst_14_0= ruleForStmt )
                    {
                    // InternalGo.g:2775:4: (lv_forst_14_0= ruleForStmt )
                    // InternalGo.g:2776:5: lv_forst_14_0= ruleForStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getForstForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_forst_14_0=ruleForStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"forst",
                      						lv_forst_14_0,
                      						"org.xtext.example.mydsl.Go.ForStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:2794:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    {
                    // InternalGo.g:2794:3: ( (lv_deferst_15_0= ruleDeferStmt ) )
                    // InternalGo.g:2795:4: (lv_deferst_15_0= ruleDeferStmt )
                    {
                    // InternalGo.g:2795:4: (lv_deferst_15_0= ruleDeferStmt )
                    // InternalGo.g:2796:5: lv_deferst_15_0= ruleDeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeferstDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_deferst_15_0=ruleDeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"deferst",
                      						lv_deferst_15_0,
                      						"org.xtext.example.mydsl.Go.DeferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleDeclaration"
    // InternalGo.g:2817:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalGo.g:2817:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalGo.g:2818:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalGo.g:2824:1: ruleDeclaration returns [EObject current=null] : (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ConstDecl_0 = null;

        EObject this_TypeDecl_1 = null;

        EObject this_VarDecl_2 = null;



        	enterRule();

        try {
            // InternalGo.g:2830:2: ( (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl ) )
            // InternalGo.g:2831:2: (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl )
            {
            // InternalGo.g:2831:2: (this_ConstDecl_0= ruleConstDecl | this_TypeDecl_1= ruleTypeDecl | this_VarDecl_2= ruleVarDecl )
            int alt38=3;
            switch ( input.LA(1) ) {
            case 71:
                {
                alt38=1;
                }
                break;
            case 73:
                {
                alt38=2;
                }
                break;
            case 74:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalGo.g:2832:3: this_ConstDecl_0= ruleConstDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstDecl_0=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2844:3: this_TypeDecl_1= ruleTypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDecl_1=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDecl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:2856:3: this_VarDecl_2= ruleVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VarDecl_2=ruleVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VarDecl_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleLabeledStmt"
    // InternalGo.g:2871:1: entryRuleLabeledStmt returns [EObject current=null] : iv_ruleLabeledStmt= ruleLabeledStmt EOF ;
    public final EObject entryRuleLabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabeledStmt = null;


        try {
            // InternalGo.g:2871:52: (iv_ruleLabeledStmt= ruleLabeledStmt EOF )
            // InternalGo.g:2872:2: iv_ruleLabeledStmt= ruleLabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabeledStmt=ruleLabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabeledStmt"


    // $ANTLR start "ruleLabeledStmt"
    // InternalGo.g:2878:1: ruleLabeledStmt returns [EObject current=null] : ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) ;
    public final EObject ruleLabeledStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_label_0_0 = null;

        EObject lv_statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2884:2: ( ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) ) )
            // InternalGo.g:2885:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            {
            // InternalGo.g:2885:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) ) )
            // InternalGo.g:2886:3: ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_statement_2_0= ruleStatement ) )
            {
            // InternalGo.g:2886:3: ( (lv_label_0_0= ruleLabel ) )
            // InternalGo.g:2887:4: (lv_label_0_0= ruleLabel )
            {
            // InternalGo.g:2887:4: (lv_label_0_0= ruleLabel )
            // InternalGo.g:2888:5: lv_label_0_0= ruleLabel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_37);
            lv_label_0_0=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"label",
              						lv_label_0_0,
              						"org.xtext.example.mydsl.Go.Label");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,60,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2909:3: ( (lv_statement_2_0= ruleStatement ) )
            // InternalGo.g:2910:4: (lv_statement_2_0= ruleStatement )
            {
            // InternalGo.g:2910:4: (lv_statement_2_0= ruleStatement )
            // InternalGo.g:2911:5: lv_statement_2_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_2_0,
              						"org.xtext.example.mydsl.Go.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabeledStmt"


    // $ANTLR start "entryRuleSimpleStmt"
    // InternalGo.g:2932:1: entryRuleSimpleStmt returns [EObject current=null] : iv_ruleSimpleStmt= ruleSimpleStmt EOF ;
    public final EObject entryRuleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStmt = null;


        try {
            // InternalGo.g:2932:51: (iv_ruleSimpleStmt= ruleSimpleStmt EOF )
            // InternalGo.g:2933:2: iv_ruleSimpleStmt= ruleSimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStmt=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStmt"


    // $ANTLR start "ruleSimpleStmt"
    // InternalGo.g:2939:1: ruleSimpleStmt returns [EObject current=null] : ( ( () ( (lv_empty_1_0= ruleEmptyStmt ) ) ) | ( (lv_es_2_0= ruleExpressionStmt ) ) | ( (lv_ss_3_0= ruleSendStmt ) ) | ( (lv_inc_4_0= ruleIncDecStmt ) ) | ( (lv_ass_5_0= ruleAssignment ) ) | ( (lv_svd_6_0= ruleShortVarDecl ) ) ) ;
    public final EObject ruleSimpleStmt() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_empty_1_0 = null;

        EObject lv_es_2_0 = null;

        EObject lv_ss_3_0 = null;

        EObject lv_inc_4_0 = null;

        EObject lv_ass_5_0 = null;

        EObject lv_svd_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2945:2: ( ( ( () ( (lv_empty_1_0= ruleEmptyStmt ) ) ) | ( (lv_es_2_0= ruleExpressionStmt ) ) | ( (lv_ss_3_0= ruleSendStmt ) ) | ( (lv_inc_4_0= ruleIncDecStmt ) ) | ( (lv_ass_5_0= ruleAssignment ) ) | ( (lv_svd_6_0= ruleShortVarDecl ) ) ) )
            // InternalGo.g:2946:2: ( ( () ( (lv_empty_1_0= ruleEmptyStmt ) ) ) | ( (lv_es_2_0= ruleExpressionStmt ) ) | ( (lv_ss_3_0= ruleSendStmt ) ) | ( (lv_inc_4_0= ruleIncDecStmt ) ) | ( (lv_ass_5_0= ruleAssignment ) ) | ( (lv_svd_6_0= ruleShortVarDecl ) ) )
            {
            // InternalGo.g:2946:2: ( ( () ( (lv_empty_1_0= ruleEmptyStmt ) ) ) | ( (lv_es_2_0= ruleExpressionStmt ) ) | ( (lv_ss_3_0= ruleSendStmt ) ) | ( (lv_inc_4_0= ruleIncDecStmt ) ) | ( (lv_ass_5_0= ruleAssignment ) ) | ( (lv_svd_6_0= ruleShortVarDecl ) ) )
            int alt39=6;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // InternalGo.g:2947:3: ( () ( (lv_empty_1_0= ruleEmptyStmt ) ) )
                    {
                    // InternalGo.g:2947:3: ( () ( (lv_empty_1_0= ruleEmptyStmt ) ) )
                    // InternalGo.g:2948:4: () ( (lv_empty_1_0= ruleEmptyStmt ) )
                    {
                    // InternalGo.g:2948:4: ()
                    // InternalGo.g:2949:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSimpleStmtAccess().getSimpleStmtAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:2958:4: ( (lv_empty_1_0= ruleEmptyStmt ) )
                    // InternalGo.g:2959:5: (lv_empty_1_0= ruleEmptyStmt )
                    {
                    // InternalGo.g:2959:5: (lv_empty_1_0= ruleEmptyStmt )
                    // InternalGo.g:2960:6: lv_empty_1_0= ruleEmptyStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyEmptyStmtParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_empty_1_0=ruleEmptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      						}
                      						set(
                      							current,
                      							"empty",
                      							lv_empty_1_0,
                      							"org.xtext.example.mydsl.Go.EmptyStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2979:3: ( (lv_es_2_0= ruleExpressionStmt ) )
                    {
                    // InternalGo.g:2979:3: ( (lv_es_2_0= ruleExpressionStmt ) )
                    // InternalGo.g:2980:4: (lv_es_2_0= ruleExpressionStmt )
                    {
                    // InternalGo.g:2980:4: (lv_es_2_0= ruleExpressionStmt )
                    // InternalGo.g:2981:5: lv_es_2_0= ruleExpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEsExpressionStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_es_2_0=ruleExpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"es",
                      						lv_es_2_0,
                      						"org.xtext.example.mydsl.Go.ExpressionStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2999:3: ( (lv_ss_3_0= ruleSendStmt ) )
                    {
                    // InternalGo.g:2999:3: ( (lv_ss_3_0= ruleSendStmt ) )
                    // InternalGo.g:3000:4: (lv_ss_3_0= ruleSendStmt )
                    {
                    // InternalGo.g:3000:4: (lv_ss_3_0= ruleSendStmt )
                    // InternalGo.g:3001:5: lv_ss_3_0= ruleSendStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSsSendStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ss_3_0=ruleSendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ss",
                      						lv_ss_3_0,
                      						"org.xtext.example.mydsl.Go.SendStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3019:3: ( (lv_inc_4_0= ruleIncDecStmt ) )
                    {
                    // InternalGo.g:3019:3: ( (lv_inc_4_0= ruleIncDecStmt ) )
                    // InternalGo.g:3020:4: (lv_inc_4_0= ruleIncDecStmt )
                    {
                    // InternalGo.g:3020:4: (lv_inc_4_0= ruleIncDecStmt )
                    // InternalGo.g:3021:5: lv_inc_4_0= ruleIncDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncIncDecStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_inc_4_0=ruleIncDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"inc",
                      						lv_inc_4_0,
                      						"org.xtext.example.mydsl.Go.IncDecStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3039:3: ( (lv_ass_5_0= ruleAssignment ) )
                    {
                    // InternalGo.g:3039:3: ( (lv_ass_5_0= ruleAssignment ) )
                    // InternalGo.g:3040:4: (lv_ass_5_0= ruleAssignment )
                    {
                    // InternalGo.g:3040:4: (lv_ass_5_0= ruleAssignment )
                    // InternalGo.g:3041:5: lv_ass_5_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssAssignmentParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ass_5_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ass",
                      						lv_ass_5_0,
                      						"org.xtext.example.mydsl.Go.Assignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3059:3: ( (lv_svd_6_0= ruleShortVarDecl ) )
                    {
                    // InternalGo.g:3059:3: ( (lv_svd_6_0= ruleShortVarDecl ) )
                    // InternalGo.g:3060:4: (lv_svd_6_0= ruleShortVarDecl )
                    {
                    // InternalGo.g:3060:4: (lv_svd_6_0= ruleShortVarDecl )
                    // InternalGo.g:3061:5: lv_svd_6_0= ruleShortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSvdShortVarDeclParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_svd_6_0=ruleShortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"svd",
                      						lv_svd_6_0,
                      						"org.xtext.example.mydsl.Go.ShortVarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStmt"


    // $ANTLR start "entryRuleGoStmt"
    // InternalGo.g:3082:1: entryRuleGoStmt returns [String current=null] : iv_ruleGoStmt= ruleGoStmt EOF ;
    public final String entryRuleGoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGoStmt = null;


        try {
            // InternalGo.g:3082:46: (iv_ruleGoStmt= ruleGoStmt EOF )
            // InternalGo.g:3083:2: iv_ruleGoStmt= ruleGoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoStmt=ruleGoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoStmt"


    // $ANTLR start "ruleGoStmt"
    // InternalGo.g:3089:1: ruleGoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3095:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:3096:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:3096:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:3097:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,61,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoStmt"


    // $ANTLR start "entryRuleReturnStmt"
    // InternalGo.g:3116:1: entryRuleReturnStmt returns [EObject current=null] : iv_ruleReturnStmt= ruleReturnStmt EOF ;
    public final EObject entryRuleReturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStmt = null;


        try {
            // InternalGo.g:3116:51: (iv_ruleReturnStmt= ruleReturnStmt EOF )
            // InternalGo.g:3117:2: iv_ruleReturnStmt= ruleReturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStmt=ruleReturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStmt"


    // $ANTLR start "ruleReturnStmt"
    // InternalGo.g:3123:1: ruleReturnStmt returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) ;
    public final EObject ruleReturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3129:2: ( ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? ) )
            // InternalGo.g:3130:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            {
            // InternalGo.g:3130:2: ( () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )? )
            // InternalGo.g:3131:3: () otherlv_1= 'return' ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            {
            // InternalGo.g:3131:3: ()
            // InternalGo.g:3132:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,62,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
              		
            }
            // InternalGo.g:3145:3: ( (lv_expressionlist_2_0= ruleExpressionList ) )?
            int alt40=2;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3146:4: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:3146:4: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:3147:5: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"expressionlist",
                      						lv_expressionlist_2_0,
                      						"org.xtext.example.mydsl.Go.ExpressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStmt"


    // $ANTLR start "entryRuleBreakStmt"
    // InternalGo.g:3168:1: entryRuleBreakStmt returns [String current=null] : iv_ruleBreakStmt= ruleBreakStmt EOF ;
    public final String entryRuleBreakStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBreakStmt = null;


        try {
            // InternalGo.g:3168:49: (iv_ruleBreakStmt= ruleBreakStmt EOF )
            // InternalGo.g:3169:2: iv_ruleBreakStmt= ruleBreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStmt=ruleBreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBreakStmt"


    // $ANTLR start "ruleBreakStmt"
    // InternalGo.g:3175:1: ruleBreakStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'break' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleBreakStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3181:2: ( (kw= 'break' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:3182:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:3182:2: (kw= 'break' (this_Label_1= ruleLabel )? )
            // InternalGo.g:3183:3: kw= 'break' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getBreakStmtAccess().getBreakKeyword_0());
              		
            }
            // InternalGo.g:3188:3: (this_Label_1= ruleLabel )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_LETTER) ) {
                int LA41_1 = input.LA(2);

                if ( (synpred69_InternalGo()) ) {
                    alt41=1;
                }
            }
            switch (alt41) {
                case 1 :
                    // InternalGo.g:3189:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBreakStmt"


    // $ANTLR start "entryRuleContinueStmt"
    // InternalGo.g:3204:1: entryRuleContinueStmt returns [String current=null] : iv_ruleContinueStmt= ruleContinueStmt EOF ;
    public final String entryRuleContinueStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleContinueStmt = null;


        try {
            // InternalGo.g:3204:52: (iv_ruleContinueStmt= ruleContinueStmt EOF )
            // InternalGo.g:3205:2: iv_ruleContinueStmt= ruleContinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStmt=ruleContinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContinueStmt"


    // $ANTLR start "ruleContinueStmt"
    // InternalGo.g:3211:1: ruleContinueStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'continue' (this_Label_1= ruleLabel )? ) ;
    public final AntlrDatatypeRuleToken ruleContinueStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3217:2: ( (kw= 'continue' (this_Label_1= ruleLabel )? ) )
            // InternalGo.g:3218:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            {
            // InternalGo.g:3218:2: (kw= 'continue' (this_Label_1= ruleLabel )? )
            // InternalGo.g:3219:3: kw= 'continue' (this_Label_1= ruleLabel )?
            {
            kw=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getContinueStmtAccess().getContinueKeyword_0());
              		
            }
            // InternalGo.g:3224:3: (this_Label_1= ruleLabel )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_LETTER) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred70_InternalGo()) ) {
                    alt42=1;
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalGo.g:3225:4: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Label_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContinueStmt"


    // $ANTLR start "entryRuleGotoStmt"
    // InternalGo.g:3240:1: entryRuleGotoStmt returns [String current=null] : iv_ruleGotoStmt= ruleGotoStmt EOF ;
    public final String entryRuleGotoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGotoStmt = null;


        try {
            // InternalGo.g:3240:48: (iv_ruleGotoStmt= ruleGotoStmt EOF )
            // InternalGo.g:3241:2: iv_ruleGotoStmt= ruleGotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGotoStmt=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGotoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGotoStmt"


    // $ANTLR start "ruleGotoStmt"
    // InternalGo.g:3247:1: ruleGotoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_Label_1= ruleLabel ) ;
    public final AntlrDatatypeRuleToken ruleGotoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Label_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3253:2: ( (kw= 'goto' this_Label_1= ruleLabel ) )
            // InternalGo.g:3254:2: (kw= 'goto' this_Label_1= ruleLabel )
            {
            // InternalGo.g:3254:2: (kw= 'goto' this_Label_1= ruleLabel )
            // InternalGo.g:3255:3: kw= 'goto' this_Label_1= ruleLabel
            {
            kw=(Token)match(input,61,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Label_1=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Label_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGotoStmt"


    // $ANTLR start "entryRuleIfStmt"
    // InternalGo.g:3274:1: entryRuleIfStmt returns [EObject current=null] : iv_ruleIfStmt= ruleIfStmt EOF ;
    public final EObject entryRuleIfStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStmt = null;


        try {
            // InternalGo.g:3274:47: (iv_ruleIfStmt= ruleIfStmt EOF )
            // InternalGo.g:3275:2: iv_ruleIfStmt= ruleIfStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStmt=ruleIfStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStmt"


    // $ANTLR start "ruleIfStmt"
    // InternalGo.g:3281:1: ruleIfStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) ;
    public final EObject ruleIfStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_simst_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_block_4_0 = null;

        EObject lv_ifs_6_0 = null;

        EObject lv_block2_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3287:2: ( (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? ) )
            // InternalGo.g:3288:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            {
            // InternalGo.g:3288:2: (otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )? )
            // InternalGo.g:3289:3: otherlv_0= 'if' ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleExpression ) ) ( (lv_block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            {
            otherlv_0=(Token)match(input,65,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:3293:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?
            int alt43=2;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3294:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:3294:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:3295:5: (lv_simst_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:3295:5: (lv_simst_1_0= ruleSimpleStmt )
                    // InternalGo.g:3296:6: lv_simst_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_simst_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"simst",
                      							lv_simst_1_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,51,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3318:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalGo.g:3319:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalGo.g:3319:4: (lv_expression_3_0= ruleExpression )
            // InternalGo.g:3320:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3337:3: ( (lv_block_4_0= ruleBlock ) )
            // InternalGo.g:3338:4: (lv_block_4_0= ruleBlock )
            {
            // InternalGo.g:3338:4: (lv_block_4_0= ruleBlock )
            // InternalGo.g:3339:5: lv_block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_42);
            lv_block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3356:3: (otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==66) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalGo.g:3357:4: otherlv_5= 'else' ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    {
                    otherlv_5=(Token)match(input,66,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:3361:4: ( ( (lv_ifs_6_0= ruleIfStmt ) ) | ( (lv_block2_7_0= ruleBlock ) ) )
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==65) ) {
                        alt44=1;
                    }
                    else if ( (LA44_0==50) ) {
                        alt44=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 0, input);

                        throw nvae;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalGo.g:3362:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            {
                            // InternalGo.g:3362:5: ( (lv_ifs_6_0= ruleIfStmt ) )
                            // InternalGo.g:3363:6: (lv_ifs_6_0= ruleIfStmt )
                            {
                            // InternalGo.g:3363:6: (lv_ifs_6_0= ruleIfStmt )
                            // InternalGo.g:3364:7: lv_ifs_6_0= ruleIfStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfsIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ifs_6_0=ruleIfStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"ifs",
                              								lv_ifs_6_0,
                              								"org.xtext.example.mydsl.Go.IfStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:3382:5: ( (lv_block2_7_0= ruleBlock ) )
                            {
                            // InternalGo.g:3382:5: ( (lv_block2_7_0= ruleBlock ) )
                            // InternalGo.g:3383:6: (lv_block2_7_0= ruleBlock )
                            {
                            // InternalGo.g:3383:6: (lv_block2_7_0= ruleBlock )
                            // InternalGo.g:3384:7: lv_block2_7_0= ruleBlock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getBlock2BlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_block2_7_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"block2",
                              								lv_block2_7_0,
                              								"org.xtext.example.mydsl.Go.Block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStmt"


    // $ANTLR start "entryRuleFallthroughStmt"
    // InternalGo.g:3407:1: entryRuleFallthroughStmt returns [String current=null] : iv_ruleFallthroughStmt= ruleFallthroughStmt EOF ;
    public final String entryRuleFallthroughStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFallthroughStmt = null;


        try {
            // InternalGo.g:3407:55: (iv_ruleFallthroughStmt= ruleFallthroughStmt EOF )
            // InternalGo.g:3408:2: iv_ruleFallthroughStmt= ruleFallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFallthroughStmt=ruleFallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFallthroughStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallthroughStmt"


    // $ANTLR start "ruleFallthroughStmt"
    // InternalGo.g:3414:1: ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'fallthrough' ;
    public final AntlrDatatypeRuleToken ruleFallthroughStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:3420:2: (kw= 'fallthrough' )
            // InternalGo.g:3421:2: kw= 'fallthrough'
            {
            kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallthroughStmt"


    // $ANTLR start "entryRuleSwitchStmt"
    // InternalGo.g:3429:1: entryRuleSwitchStmt returns [EObject current=null] : iv_ruleSwitchStmt= ruleSwitchStmt EOF ;
    public final EObject entryRuleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStmt = null;


        try {
            // InternalGo.g:3429:51: (iv_ruleSwitchStmt= ruleSwitchStmt EOF )
            // InternalGo.g:3430:2: iv_ruleSwitchStmt= ruleSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStmt=ruleSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchStmt"


    // $ANTLR start "ruleSwitchStmt"
    // InternalGo.g:3436:1: ruleSwitchStmt returns [EObject current=null] : (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt ) ;
    public final EObject ruleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject this_ExprSwitchStmt_0 = null;

        EObject this_TypeSwitchStmt_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3442:2: ( (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt ) )
            // InternalGo.g:3443:2: (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt )
            {
            // InternalGo.g:3443:2: (this_ExprSwitchStmt_0= ruleExprSwitchStmt | this_TypeSwitchStmt_1= ruleTypeSwitchStmt )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==78) ) {
                int LA46_1 = input.LA(2);

                if ( (synpred74_InternalGo()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalGo.g:3444:3: this_ExprSwitchStmt_0= ruleExprSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExprSwitchStmt_0=ruleExprSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExprSwitchStmt_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3456:3: this_TypeSwitchStmt_1= ruleTypeSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeSwitchStmt_1=ruleTypeSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeSwitchStmt_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchStmt"


    // $ANTLR start "entryRuleSelectStmt"
    // InternalGo.g:3471:1: entryRuleSelectStmt returns [EObject current=null] : iv_ruleSelectStmt= ruleSelectStmt EOF ;
    public final EObject entryRuleSelectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectStmt = null;


        try {
            // InternalGo.g:3471:51: (iv_ruleSelectStmt= ruleSelectStmt EOF )
            // InternalGo.g:3472:2: iv_ruleSelectStmt= ruleSelectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectStmt=ruleSelectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectStmt"


    // $ANTLR start "ruleSelectStmt"
    // InternalGo.g:3478:1: ruleSelectStmt returns [EObject current=null] : ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) ;
    public final EObject ruleSelectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_commclause_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3484:2: ( ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' ) )
            // InternalGo.g:3485:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            {
            // InternalGo.g:3485:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            // InternalGo.g:3486:3: () otherlv_1= 'select' otherlv_2= '{' ( (lv_commclause_3_0= ruleCommClause ) )* otherlv_4= '}'
            {
            // InternalGo.g:3486:3: ()
            // InternalGo.g:3487:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,68,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,50,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:3504:3: ( (lv_commclause_3_0= ruleCommClause ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( ((LA47_0>=79 && LA47_0<=80)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalGo.g:3505:4: (lv_commclause_3_0= ruleCommClause )
            	    {
            	    // InternalGo.g:3505:4: (lv_commclause_3_0= ruleCommClause )
            	    // InternalGo.g:3506:5: lv_commclause_3_0= ruleCommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommclauseCommClauseParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_commclause_3_0=ruleCommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"commclause",
            	      						lv_commclause_3_0,
            	      						"org.xtext.example.mydsl.Go.CommClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            otherlv_4=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectStmt"


    // $ANTLR start "entryRuleForStmt"
    // InternalGo.g:3531:1: entryRuleForStmt returns [EObject current=null] : iv_ruleForStmt= ruleForStmt EOF ;
    public final EObject entryRuleForStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStmt = null;


        try {
            // InternalGo.g:3531:48: (iv_ruleForStmt= ruleForStmt EOF )
            // InternalGo.g:3532:2: iv_ruleForStmt= ruleForStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStmt=ruleForStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForStmt"


    // $ANTLR start "ruleForStmt"
    // InternalGo.g:3538:1: ruleForStmt returns [EObject current=null] : (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) ) ;
    public final EObject ruleForStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_condition_1_0 = null;

        EObject lv_for_2_0 = null;

        EObject lv_range_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3544:2: ( (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) ) )
            // InternalGo.g:3545:2: (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) )
            {
            // InternalGo.g:3545:2: (otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) ) )
            // InternalGo.g:3546:3: otherlv_0= 'for' ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )* ( (lv_block_4_0= ruleBlock ) )
            {
            otherlv_0=(Token)match(input,69,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
              		
            }
            // InternalGo.g:3550:3: ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )*
            loop48:
            do {
                int alt48=4;
                alt48 = dfa48.predict(input);
                switch (alt48) {
            	case 1 :
            	    // InternalGo.g:3551:4: ( (lv_condition_1_0= ruleCondition ) )
            	    {
            	    // InternalGo.g:3551:4: ( (lv_condition_1_0= ruleCondition ) )
            	    // InternalGo.g:3552:5: (lv_condition_1_0= ruleCondition )
            	    {
            	    // InternalGo.g:3552:5: (lv_condition_1_0= ruleCondition )
            	    // InternalGo.g:3553:6: lv_condition_1_0= ruleCondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_condition_1_0=ruleCondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForStmtRule());
            	      						}
            	      						add(
            	      							current,
            	      							"condition",
            	      							lv_condition_1_0,
            	      							"org.xtext.example.mydsl.Go.Condition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGo.g:3571:4: ( (lv_for_2_0= ruleForClause ) )
            	    {
            	    // InternalGo.g:3571:4: ( (lv_for_2_0= ruleForClause ) )
            	    // InternalGo.g:3572:5: (lv_for_2_0= ruleForClause )
            	    {
            	    // InternalGo.g:3572:5: (lv_for_2_0= ruleForClause )
            	    // InternalGo.g:3573:6: lv_for_2_0= ruleForClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_for_2_0=ruleForClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForStmtRule());
            	      						}
            	      						add(
            	      							current,
            	      							"for",
            	      							lv_for_2_0,
            	      							"org.xtext.example.mydsl.Go.ForClause");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalGo.g:3591:4: ( (lv_range_3_0= ruleRangeClause ) )
            	    {
            	    // InternalGo.g:3591:4: ( (lv_range_3_0= ruleRangeClause ) )
            	    // InternalGo.g:3592:5: (lv_range_3_0= ruleRangeClause )
            	    {
            	    // InternalGo.g:3592:5: (lv_range_3_0= ruleRangeClause )
            	    // InternalGo.g:3593:6: lv_range_3_0= ruleRangeClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_range_3_0=ruleRangeClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForStmtRule());
            	      						}
            	      						add(
            	      							current,
            	      							"range",
            	      							lv_range_3_0,
            	      							"org.xtext.example.mydsl.Go.RangeClause");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            // InternalGo.g:3611:3: ( (lv_block_4_0= ruleBlock ) )
            // InternalGo.g:3612:4: (lv_block_4_0= ruleBlock )
            {
            // InternalGo.g:3612:4: (lv_block_4_0= ruleBlock )
            // InternalGo.g:3613:5: lv_block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.example.mydsl.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForStmt"


    // $ANTLR start "entryRuleDeferStmt"
    // InternalGo.g:3634:1: entryRuleDeferStmt returns [EObject current=null] : iv_ruleDeferStmt= ruleDeferStmt EOF ;
    public final EObject entryRuleDeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeferStmt = null;


        try {
            // InternalGo.g:3634:50: (iv_ruleDeferStmt= ruleDeferStmt EOF )
            // InternalGo.g:3635:2: iv_ruleDeferStmt= ruleDeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeferStmt=ruleDeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeferStmt"


    // $ANTLR start "ruleDeferStmt"
    // InternalGo.g:3641:1: ruleDeferStmt returns [EObject current=null] : (otherlv_0= 'defer' this_Expression_1= ruleExpression ) ;
    public final EObject ruleDeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Expression_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3647:2: ( (otherlv_0= 'defer' this_Expression_1= ruleExpression ) )
            // InternalGo.g:3648:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            {
            // InternalGo.g:3648:2: (otherlv_0= 'defer' this_Expression_1= ruleExpression )
            // InternalGo.g:3649:3: otherlv_0= 'defer' this_Expression_1= ruleExpression
            {
            otherlv_0=(Token)match(input,70,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Expression_1=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeferStmt"


    // $ANTLR start "entryRuleConstDecl"
    // InternalGo.g:3668:1: entryRuleConstDecl returns [EObject current=null] : iv_ruleConstDecl= ruleConstDecl EOF ;
    public final EObject entryRuleConstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstDecl = null;


        try {
            // InternalGo.g:3668:50: (iv_ruleConstDecl= ruleConstDecl EOF )
            // InternalGo.g:3669:2: iv_ruleConstDecl= ruleConstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstDecl=ruleConstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstDecl"


    // $ANTLR start "ruleConstDecl"
    // InternalGo.g:3675:1: ruleConstDecl returns [EObject current=null] : ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleConstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_constspec_2_0 = null;

        EObject lv_constspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3681:2: ( ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3682:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3682:2: ( () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:3683:3: () otherlv_1= 'const' ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3683:3: ()
            // InternalGo.g:3684:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
              		
            }
            // InternalGo.g:3697:3: ( ( (lv_constspec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_LETTER) ) {
                alt50=1;
            }
            else if ( (LA50_0==45) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalGo.g:3698:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    {
                    // InternalGo.g:3698:4: ( (lv_constspec_2_0= ruleConstSpec ) )
                    // InternalGo.g:3699:5: (lv_constspec_2_0= ruleConstSpec )
                    {
                    // InternalGo.g:3699:5: (lv_constspec_2_0= ruleConstSpec )
                    // InternalGo.g:3700:6: lv_constspec_2_0= ruleConstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getConstspecConstSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constspec_2_0=ruleConstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						set(
                      							current,
                      							"constspec",
                      							lv_constspec_2_0,
                      							"org.xtext.example.mydsl.Go.ConstSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3718:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3718:4: (otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:3719:5: otherlv_3= '(' ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3723:5: ( ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';' )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==RULE_LETTER) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    // InternalGo.g:3724:6: ( (lv_constspec2_4_0= ruleConstSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:3724:6: ( (lv_constspec2_4_0= ruleConstSpec ) )
                    	    // InternalGo.g:3725:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    {
                    	    // InternalGo.g:3725:7: (lv_constspec2_4_0= ruleConstSpec )
                    	    // InternalGo.g:3726:8: lv_constspec2_4_0= ruleConstSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getConstDeclAccess().getConstspec2ConstSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_constspec2_4_0=ruleConstSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"constspec2",
                    	      									lv_constspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.ConstSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,51,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstDecl"


    // $ANTLR start "entryRuleConstSpec"
    // InternalGo.g:3758:1: entryRuleConstSpec returns [EObject current=null] : iv_ruleConstSpec= ruleConstSpec EOF ;
    public final EObject entryRuleConstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstSpec = null;


        try {
            // InternalGo.g:3758:50: (iv_ruleConstSpec= ruleConstSpec EOF )
            // InternalGo.g:3759:2: iv_ruleConstSpec= ruleConstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstSpec=ruleConstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstSpec"


    // $ANTLR start "ruleConstSpec"
    // InternalGo.g:3765:1: ruleConstSpec returns [EObject current=null] : ( () ( (lv_id_1_0= ruleIdentifierList ) ) ( (lv_tp_2_0= ruleType ) ) otherlv_3= '=' ( (lv_expressionlist_4_0= ruleExpressionList ) ) ) ;
    public final EObject ruleConstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_id_1_0 = null;

        EObject lv_tp_2_0 = null;

        EObject lv_expressionlist_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3771:2: ( ( () ( (lv_id_1_0= ruleIdentifierList ) ) ( (lv_tp_2_0= ruleType ) ) otherlv_3= '=' ( (lv_expressionlist_4_0= ruleExpressionList ) ) ) )
            // InternalGo.g:3772:2: ( () ( (lv_id_1_0= ruleIdentifierList ) ) ( (lv_tp_2_0= ruleType ) ) otherlv_3= '=' ( (lv_expressionlist_4_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:3772:2: ( () ( (lv_id_1_0= ruleIdentifierList ) ) ( (lv_tp_2_0= ruleType ) ) otherlv_3= '=' ( (lv_expressionlist_4_0= ruleExpressionList ) ) )
            // InternalGo.g:3773:3: () ( (lv_id_1_0= ruleIdentifierList ) ) ( (lv_tp_2_0= ruleType ) ) otherlv_3= '=' ( (lv_expressionlist_4_0= ruleExpressionList ) )
            {
            // InternalGo.g:3773:3: ()
            // InternalGo.g:3774:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstSpecAccess().getConstSpecAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:3783:3: ( (lv_id_1_0= ruleIdentifierList ) )
            // InternalGo.g:3784:4: (lv_id_1_0= ruleIdentifierList )
            {
            // InternalGo.g:3784:4: (lv_id_1_0= ruleIdentifierList )
            // InternalGo.g:3785:5: lv_id_1_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getIdIdentifierListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_id_1_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_1_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3802:3: ( (lv_tp_2_0= ruleType ) )
            // InternalGo.g:3803:4: (lv_tp_2_0= ruleType )
            {
            // InternalGo.g:3803:4: (lv_tp_2_0= ruleType )
            // InternalGo.g:3804:5: lv_tp_2_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getTpTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_tp_2_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"tp",
              						lv_tp_2_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,72,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalGo.g:3825:3: ( (lv_expressionlist_4_0= ruleExpressionList ) )
            // InternalGo.g:3826:4: (lv_expressionlist_4_0= ruleExpressionList )
            {
            // InternalGo.g:3826:4: (lv_expressionlist_4_0= ruleExpressionList )
            // InternalGo.g:3827:5: lv_expressionlist_4_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionlist_4_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"expressionlist",
              						lv_expressionlist_4_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstSpec"


    // $ANTLR start "entryRuleTypeDecl"
    // InternalGo.g:3848:1: entryRuleTypeDecl returns [EObject current=null] : iv_ruleTypeDecl= ruleTypeDecl EOF ;
    public final EObject entryRuleTypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDecl = null;


        try {
            // InternalGo.g:3848:49: (iv_ruleTypeDecl= ruleTypeDecl EOF )
            // InternalGo.g:3849:2: iv_ruleTypeDecl= ruleTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDecl=ruleTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDecl"


    // $ANTLR start "ruleTypeDecl"
    // InternalGo.g:3855:1: ruleTypeDecl returns [EObject current=null] : ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleTypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_typespec_2_0 = null;

        EObject lv_typespec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3861:2: ( ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:3862:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:3862:2: ( () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:3863:3: () otherlv_1= 'type' ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:3863:3: ()
            // InternalGo.g:3864:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
              		
            }
            // InternalGo.g:3877:3: ( ( (lv_typespec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_LETTER) ) {
                alt52=1;
            }
            else if ( (LA52_0==45) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalGo.g:3878:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    {
                    // InternalGo.g:3878:4: ( (lv_typespec_2_0= ruleTypeSpec ) )
                    // InternalGo.g:3879:5: (lv_typespec_2_0= ruleTypeSpec )
                    {
                    // InternalGo.g:3879:5: (lv_typespec_2_0= ruleTypeSpec )
                    // InternalGo.g:3880:6: lv_typespec_2_0= ruleTypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespecTypeSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typespec_2_0=ruleTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						set(
                      							current,
                      							"typespec",
                      							lv_typespec_2_0,
                      							"org.xtext.example.mydsl.Go.TypeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3898:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:3898:4: (otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:3899:5: otherlv_3= '(' ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:3903:5: ( ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';' )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==RULE_LETTER) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalGo.g:3904:6: ( (lv_typespec2_4_0= ruleTypeSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:3904:6: ( (lv_typespec2_4_0= ruleTypeSpec ) )
                    	    // InternalGo.g:3905:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    {
                    	    // InternalGo.g:3905:7: (lv_typespec2_4_0= ruleTypeSpec )
                    	    // InternalGo.g:3906:8: lv_typespec2_4_0= ruleTypeSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypespec2TypeSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_typespec2_4_0=ruleTypeSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"typespec2",
                    	      									lv_typespec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.TypeSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,51,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDecl"


    // $ANTLR start "entryRuleTypeSpec"
    // InternalGo.g:3938:1: entryRuleTypeSpec returns [EObject current=null] : iv_ruleTypeSpec= ruleTypeSpec EOF ;
    public final EObject entryRuleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSpec = null;


        try {
            // InternalGo.g:3938:49: (iv_ruleTypeSpec= ruleTypeSpec EOF )
            // InternalGo.g:3939:2: iv_ruleTypeSpec= ruleTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSpec=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSpec"


    // $ANTLR start "ruleTypeSpec"
    // InternalGo.g:3945:1: ruleTypeSpec returns [EObject current=null] : (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) ;
    public final EObject ruleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject this_AliasDecl_0 = null;

        EObject this_TypeDef_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3951:2: ( (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) )
            // InternalGo.g:3952:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            {
            // InternalGo.g:3952:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalGo.g:3953:3: this_AliasDecl_0= ruleAliasDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AliasDecl_0=ruleAliasDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AliasDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3965:3: this_TypeDef_1= ruleTypeDef
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDef_1=ruleTypeDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSpec"


    // $ANTLR start "entryRuleTypeDef"
    // InternalGo.g:3980:1: entryRuleTypeDef returns [EObject current=null] : iv_ruleTypeDef= ruleTypeDef EOF ;
    public final EObject entryRuleTypeDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDef = null;


        try {
            // InternalGo.g:3980:48: (iv_ruleTypeDef= ruleTypeDef EOF )
            // InternalGo.g:3981:2: iv_ruleTypeDef= ruleTypeDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDef=ruleTypeDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDef"


    // $ANTLR start "ruleTypeDef"
    // InternalGo.g:3987:1: ruleTypeDef returns [EObject current=null] : ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) ) ;
    public final EObject ruleTypeDef() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_tp_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3993:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) ) )
            // InternalGo.g:3994:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) )
            {
            // InternalGo.g:3994:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) ) )
            // InternalGo.g:3995:3: ( (lv_id_0_0= ruleIDENTIFIER ) ) ( (lv_tp_1_0= ruleType ) )
            {
            // InternalGo.g:3995:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
            // InternalGo.g:3996:4: (lv_id_0_0= ruleIDENTIFIER )
            {
            // InternalGo.g:3996:4: (lv_id_0_0= ruleIDENTIFIER )
            // InternalGo.g:3997:5: lv_id_0_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getIdIDENTIFIERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_id_0_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4014:3: ( (lv_tp_1_0= ruleType ) )
            // InternalGo.g:4015:4: (lv_tp_1_0= ruleType )
            {
            // InternalGo.g:4015:4: (lv_tp_1_0= ruleType )
            // InternalGo.g:4016:5: lv_tp_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getTpTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_tp_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"tp",
              						lv_tp_1_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDef"


    // $ANTLR start "entryRuleAliasDecl"
    // InternalGo.g:4037:1: entryRuleAliasDecl returns [EObject current=null] : iv_ruleAliasDecl= ruleAliasDecl EOF ;
    public final EObject entryRuleAliasDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasDecl = null;


        try {
            // InternalGo.g:4037:50: (iv_ruleAliasDecl= ruleAliasDecl EOF )
            // InternalGo.g:4038:2: iv_ruleAliasDecl= ruleAliasDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasDecl=ruleAliasDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasDecl"


    // $ANTLR start "ruleAliasDecl"
    // InternalGo.g:4044:1: ruleAliasDecl returns [EObject current=null] : ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= '=' ( (lv_tp_2_0= ruleType ) ) ) ;
    public final EObject ruleAliasDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_tp_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4050:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= '=' ( (lv_tp_2_0= ruleType ) ) ) )
            // InternalGo.g:4051:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= '=' ( (lv_tp_2_0= ruleType ) ) )
            {
            // InternalGo.g:4051:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= '=' ( (lv_tp_2_0= ruleType ) ) )
            // InternalGo.g:4052:3: ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= '=' ( (lv_tp_2_0= ruleType ) )
            {
            // InternalGo.g:4052:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
            // InternalGo.g:4053:4: (lv_id_0_0= ruleIDENTIFIER )
            {
            // InternalGo.g:4053:4: (lv_id_0_0= ruleIDENTIFIER )
            // InternalGo.g:4054:5: lv_id_0_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getIdIDENTIFIERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_id_0_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IDENTIFIER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,72,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalGo.g:4075:3: ( (lv_tp_2_0= ruleType ) )
            // InternalGo.g:4076:4: (lv_tp_2_0= ruleType )
            {
            // InternalGo.g:4076:4: (lv_tp_2_0= ruleType )
            // InternalGo.g:4077:5: lv_tp_2_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getTpTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_tp_2_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"tp",
              						lv_tp_2_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasDecl"


    // $ANTLR start "entryRuleVarDecl"
    // InternalGo.g:4098:1: entryRuleVarDecl returns [EObject current=null] : iv_ruleVarDecl= ruleVarDecl EOF ;
    public final EObject entryRuleVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDecl = null;


        try {
            // InternalGo.g:4098:48: (iv_ruleVarDecl= ruleVarDecl EOF )
            // InternalGo.g:4099:2: iv_ruleVarDecl= ruleVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDecl=ruleVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDecl"


    // $ANTLR start "ruleVarDecl"
    // InternalGo.g:4105:1: ruleVarDecl returns [EObject current=null] : ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_varspec_2_0 = null;

        EObject lv_varspec2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4111:2: ( ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:4112:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:4112:2: ( () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:4113:3: () otherlv_1= 'var' ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:4113:3: ()
            // InternalGo.g:4114:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,74,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
              		
            }
            // InternalGo.g:4127:3: ( ( (lv_varspec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_LETTER) ) {
                alt55=1;
            }
            else if ( (LA55_0==45) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalGo.g:4128:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    {
                    // InternalGo.g:4128:4: ( (lv_varspec_2_0= ruleVarSpec ) )
                    // InternalGo.g:4129:5: (lv_varspec_2_0= ruleVarSpec )
                    {
                    // InternalGo.g:4129:5: (lv_varspec_2_0= ruleVarSpec )
                    // InternalGo.g:4130:6: lv_varspec_2_0= ruleVarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getVarspecVarSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_varspec_2_0=ruleVarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						set(
                      							current,
                      							"varspec",
                      							lv_varspec_2_0,
                      							"org.xtext.example.mydsl.Go.VarSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4148:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:4148:4: (otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:4149:5: otherlv_3= '(' ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:4153:5: ( ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';' )*
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==RULE_LETTER) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // InternalGo.g:4154:6: ( (lv_varspec2_4_0= ruleVarSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:4154:6: ( (lv_varspec2_4_0= ruleVarSpec ) )
                    	    // InternalGo.g:4155:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    {
                    	    // InternalGo.g:4155:7: (lv_varspec2_4_0= ruleVarSpec )
                    	    // InternalGo.g:4156:8: lv_varspec2_4_0= ruleVarSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVarDeclAccess().getVarspec2VarSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_23);
                    	    lv_varspec2_4_0=ruleVarSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"varspec2",
                    	      									lv_varspec2_4_0,
                    	      									"org.xtext.example.mydsl.Go.VarSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,51,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDecl"


    // $ANTLR start "entryRuleVarSpec"
    // InternalGo.g:4188:1: entryRuleVarSpec returns [EObject current=null] : iv_ruleVarSpec= ruleVarSpec EOF ;
    public final EObject entryRuleVarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarSpec = null;


        try {
            // InternalGo.g:4188:48: (iv_ruleVarSpec= ruleVarSpec EOF )
            // InternalGo.g:4189:2: iv_ruleVarSpec= ruleVarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarSpec=ruleVarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarSpec"


    // $ANTLR start "ruleVarSpec"
    // InternalGo.g:4195:1: ruleVarSpec returns [EObject current=null] : ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) ) ) ) ;
    public final EObject ruleVarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_tp2_1_0 = null;

        EObject lv_expressionlist_3_0 = null;

        EObject lv_el_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4201:2: ( ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) ) ) ) )
            // InternalGo.g:4202:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) ) ) )
            {
            // InternalGo.g:4202:2: ( ( (lv_id_0_0= ruleIdentifierList ) ) ( ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) ) ) )
            // InternalGo.g:4203:3: ( (lv_id_0_0= ruleIdentifierList ) ) ( ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) ) )
            {
            // InternalGo.g:4203:3: ( (lv_id_0_0= ruleIdentifierList ) )
            // InternalGo.g:4204:4: (lv_id_0_0= ruleIdentifierList )
            {
            // InternalGo.g:4204:4: (lv_id_0_0= ruleIdentifierList )
            // InternalGo.g:4205:5: lv_id_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarSpecAccess().getIdIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_id_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarSpecRule());
              					}
              					set(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4222:3: ( ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) ) )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_LETTER||LA57_0==40||LA57_0==45||LA57_0==47||LA57_0==49||LA57_0==54||(LA57_0>=56 && LA57_0<=59)) ) {
                alt57=1;
            }
            else if ( (LA57_0==72) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalGo.g:4223:4: ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
                    {
                    // InternalGo.g:4223:4: ( ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )? )
                    // InternalGo.g:4224:5: ( (lv_tp2_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
                    {
                    // InternalGo.g:4224:5: ( (lv_tp2_1_0= ruleType ) )
                    // InternalGo.g:4225:6: (lv_tp2_1_0= ruleType )
                    {
                    // InternalGo.g:4225:6: (lv_tp2_1_0= ruleType )
                    // InternalGo.g:4226:7: lv_tp2_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getTp2TypeParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_50);
                    lv_tp2_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							add(
                      								current,
                      								"tp2",
                      								lv_tp2_1_0,
                      								"org.xtext.example.mydsl.Go.Type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:4243:5: (otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) ) )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==72) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalGo.g:4244:6: otherlv_2= '=' ( (lv_expressionlist_3_0= ruleExpressionList ) )
                            {
                            otherlv_2=(Token)match(input,72,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
                              					
                            }
                            // InternalGo.g:4248:6: ( (lv_expressionlist_3_0= ruleExpressionList ) )
                            // InternalGo.g:4249:7: (lv_expressionlist_3_0= ruleExpressionList )
                            {
                            // InternalGo.g:4249:7: (lv_expressionlist_3_0= ruleExpressionList )
                            // InternalGo.g:4250:8: lv_expressionlist_3_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionlistExpressionListParserRuleCall_1_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_expressionlist_3_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVarSpecRule());
                              								}
                              								set(
                              									current,
                              									"expressionlist",
                              									lv_expressionlist_3_0,
                              									"org.xtext.example.mydsl.Go.ExpressionList");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4270:4: (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) )
                    {
                    // InternalGo.g:4270:4: (otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) ) )
                    // InternalGo.g:4271:5: otherlv_4= '=' ( (lv_el_5_0= ruleExpressionList ) )
                    {
                    otherlv_4=(Token)match(input,72,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:4275:5: ( (lv_el_5_0= ruleExpressionList ) )
                    // InternalGo.g:4276:6: (lv_el_5_0= ruleExpressionList )
                    {
                    // InternalGo.g:4276:6: (lv_el_5_0= ruleExpressionList )
                    // InternalGo.g:4277:7: lv_el_5_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getElExpressionListParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_el_5_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							set(
                      								current,
                      								"el",
                      								lv_el_5_0,
                      								"org.xtext.example.mydsl.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarSpec"


    // $ANTLR start "entryRuleEmptyStmt"
    // InternalGo.g:4300:1: entryRuleEmptyStmt returns [String current=null] : iv_ruleEmptyStmt= ruleEmptyStmt EOF ;
    public final String entryRuleEmptyStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmptyStmt = null;


        try {
            // InternalGo.g:4300:49: (iv_ruleEmptyStmt= ruleEmptyStmt EOF )
            // InternalGo.g:4301:2: iv_ruleEmptyStmt= ruleEmptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStmt=ruleEmptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyStmt"


    // $ANTLR start "ruleEmptyStmt"
    // InternalGo.g:4307:1: ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ';' ;
    public final AntlrDatatypeRuleToken ruleEmptyStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:4313:2: (kw= ';' )
            // InternalGo.g:4314:2: kw= ';'
            {
            kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getEmptyStmtAccess().getSemicolonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyStmt"


    // $ANTLR start "entryRuleExpressionStmt"
    // InternalGo.g:4322:1: entryRuleExpressionStmt returns [EObject current=null] : iv_ruleExpressionStmt= ruleExpressionStmt EOF ;
    public final EObject entryRuleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStmt = null;


        try {
            // InternalGo.g:4322:55: (iv_ruleExpressionStmt= ruleExpressionStmt EOF )
            // InternalGo.g:4323:2: iv_ruleExpressionStmt= ruleExpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStmt=ruleExpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionStmt"


    // $ANTLR start "ruleExpressionStmt"
    // InternalGo.g:4329:1: ruleExpressionStmt returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4335:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:4336:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionStmt"


    // $ANTLR start "entryRuleSendStmt"
    // InternalGo.g:4350:1: entryRuleSendStmt returns [EObject current=null] : iv_ruleSendStmt= ruleSendStmt EOF ;
    public final EObject entryRuleSendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSendStmt = null;


        try {
            // InternalGo.g:4350:49: (iv_ruleSendStmt= ruleSendStmt EOF )
            // InternalGo.g:4351:2: iv_ruleSendStmt= ruleSendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSendStmt=ruleSendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSendStmt"


    // $ANTLR start "ruleSendStmt"
    // InternalGo.g:4357:1: ruleSendStmt returns [EObject current=null] : ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleSendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ch_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4363:2: ( ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalGo.g:4364:2: ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalGo.g:4364:2: ( ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalGo.g:4365:3: ( (lv_ch_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalGo.g:4365:3: ( (lv_ch_0_0= ruleChannel ) )
            // InternalGo.g:4366:4: (lv_ch_0_0= ruleChannel )
            {
            // InternalGo.g:4366:4: (lv_ch_0_0= ruleChannel )
            // InternalGo.g:4367:5: lv_ch_0_0= ruleChannel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getChChannelParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_ch_0_0=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"ch",
              						lv_ch_0_0,
              						"org.xtext.example.mydsl.Go.Channel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,59,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalGo.g:4388:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalGo.g:4389:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalGo.g:4389:4: (lv_expression_2_0= ruleExpression )
            // InternalGo.g:4390:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSendStmt"


    // $ANTLR start "entryRuleChannel"
    // InternalGo.g:4411:1: entryRuleChannel returns [EObject current=null] : iv_ruleChannel= ruleChannel EOF ;
    public final EObject entryRuleChannel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannel = null;


        try {
            // InternalGo.g:4411:48: (iv_ruleChannel= ruleChannel EOF )
            // InternalGo.g:4412:2: iv_ruleChannel= ruleChannel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannel=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannel"


    // $ANTLR start "ruleChannel"
    // InternalGo.g:4418:1: ruleChannel returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleChannel() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4424:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:4425:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getChannelAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannel"


    // $ANTLR start "entryRuleIncDecStmt"
    // InternalGo.g:4439:1: entryRuleIncDecStmt returns [EObject current=null] : iv_ruleIncDecStmt= ruleIncDecStmt EOF ;
    public final EObject entryRuleIncDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncDecStmt = null;


        try {
            // InternalGo.g:4439:51: (iv_ruleIncDecStmt= ruleIncDecStmt EOF )
            // InternalGo.g:4440:2: iv_ruleIncDecStmt= ruleIncDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncDecStmt=ruleIncDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncDecStmt"


    // $ANTLR start "ruleIncDecStmt"
    // InternalGo.g:4446:1: ruleIncDecStmt returns [EObject current=null] : (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) ) ;
    public final EObject ruleIncDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4452:2: ( (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) ) )
            // InternalGo.g:4453:2: (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) )
            {
            // InternalGo.g:4453:2: (this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' ) )
            // InternalGo.g:4454:3: this_Expression_0= ruleExpression (otherlv_1= '++' | otherlv_2= '--' )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_52);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:4465:3: (otherlv_1= '++' | otherlv_2= '--' )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==75) ) {
                alt58=1;
            }
            else if ( (LA58_0==76) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalGo.g:4466:4: otherlv_1= '++'
                    {
                    otherlv_1=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:4471:4: otherlv_2= '--'
                    {
                    otherlv_2=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncDecStmt"


    // $ANTLR start "entryRuleAssignment"
    // InternalGo.g:4480:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalGo.g:4480:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalGo.g:4481:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalGo.g:4487:1: ruleAssignment returns [EObject current=null] : ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) ( (lv_asop_1_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_2_0= ruleExpressionList ) ) ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_asop_1_0=null;
        EObject lv_expressionlist_0_0 = null;

        EObject lv_expressionlist2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4493:2: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) ( (lv_asop_1_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_2_0= ruleExpressionList ) ) ) )
            // InternalGo.g:4494:2: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) ( (lv_asop_1_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_2_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:4494:2: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) ( (lv_asop_1_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_2_0= ruleExpressionList ) ) )
            // InternalGo.g:4495:3: ( (lv_expressionlist_0_0= ruleExpressionList ) ) ( (lv_asop_1_0= RULE_ASSING_OP ) ) ( (lv_expressionlist2_2_0= ruleExpressionList ) )
            {
            // InternalGo.g:4495:3: ( (lv_expressionlist_0_0= ruleExpressionList ) )
            // InternalGo.g:4496:4: (lv_expressionlist_0_0= ruleExpressionList )
            {
            // InternalGo.g:4496:4: (lv_expressionlist_0_0= ruleExpressionList )
            // InternalGo.g:4497:5: lv_expressionlist_0_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlistExpressionListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_expressionlist_0_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist",
              						lv_expressionlist_0_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4514:3: ( (lv_asop_1_0= RULE_ASSING_OP ) )
            // InternalGo.g:4515:4: (lv_asop_1_0= RULE_ASSING_OP )
            {
            // InternalGo.g:4515:4: (lv_asop_1_0= RULE_ASSING_OP )
            // InternalGo.g:4516:5: lv_asop_1_0= RULE_ASSING_OP
            {
            lv_asop_1_0=(Token)match(input,RULE_ASSING_OP,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_asop_1_0, grammarAccess.getAssignmentAccess().getAsopASSING_OPTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAssignmentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"asop",
              						lv_asop_1_0,
              						"org.xtext.example.mydsl.Go.ASSING_OP");
              				
            }

            }


            }

            // InternalGo.g:4532:3: ( (lv_expressionlist2_2_0= ruleExpressionList ) )
            // InternalGo.g:4533:4: (lv_expressionlist2_2_0= ruleExpressionList )
            {
            // InternalGo.g:4533:4: (lv_expressionlist2_2_0= ruleExpressionList )
            // InternalGo.g:4534:5: lv_expressionlist2_2_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionlist2ExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionlist2_2_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionlist2",
              						lv_expressionlist2_2_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleShortVarDecl"
    // InternalGo.g:4555:1: entryRuleShortVarDecl returns [EObject current=null] : iv_ruleShortVarDecl= ruleShortVarDecl EOF ;
    public final EObject entryRuleShortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShortVarDecl = null;


        try {
            // InternalGo.g:4555:53: (iv_ruleShortVarDecl= ruleShortVarDecl EOF )
            // InternalGo.g:4556:2: iv_ruleShortVarDecl= ruleShortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShortVarDecl=ruleShortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShortVarDecl"


    // $ANTLR start "ruleShortVarDecl"
    // InternalGo.g:4562:1: ruleShortVarDecl returns [EObject current=null] : ( ( (lv_idl_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_epl_2_0= ruleExpressionList ) ) ) ;
    public final EObject ruleShortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_idl_0_0 = null;

        EObject lv_epl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4568:2: ( ( ( (lv_idl_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_epl_2_0= ruleExpressionList ) ) ) )
            // InternalGo.g:4569:2: ( ( (lv_idl_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_epl_2_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:4569:2: ( ( (lv_idl_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_epl_2_0= ruleExpressionList ) ) )
            // InternalGo.g:4570:3: ( (lv_idl_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_epl_2_0= ruleExpressionList ) )
            {
            // InternalGo.g:4570:3: ( (lv_idl_0_0= ruleIdentifierList ) )
            // InternalGo.g:4571:4: (lv_idl_0_0= ruleIdentifierList )
            {
            // InternalGo.g:4571:4: (lv_idl_0_0= ruleIdentifierList )
            // InternalGo.g:4572:5: lv_idl_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdlIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_54);
            lv_idl_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"idl",
              						lv_idl_0_0,
              						"org.xtext.example.mydsl.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,77,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalGo.g:4593:3: ( (lv_epl_2_0= ruleExpressionList ) )
            // InternalGo.g:4594:4: (lv_epl_2_0= ruleExpressionList )
            {
            // InternalGo.g:4594:4: (lv_epl_2_0= ruleExpressionList )
            // InternalGo.g:4595:5: lv_epl_2_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getEplExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_epl_2_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"epl",
              						lv_epl_2_0,
              						"org.xtext.example.mydsl.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShortVarDecl"


    // $ANTLR start "entryRuleExprSwitchStmt"
    // InternalGo.g:4616:1: entryRuleExprSwitchStmt returns [EObject current=null] : iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF ;
    public final EObject entryRuleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchStmt = null;


        try {
            // InternalGo.g:4616:55: (iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF )
            // InternalGo.g:4617:2: iv_ruleExprSwitchStmt= ruleExprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchStmt=ruleExprSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchStmt"


    // $ANTLR start "ruleExprSwitchStmt"
    // InternalGo.g:4623:1: ruleExprSwitchStmt returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) ;
    public final EObject ruleExprSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_simplestmt_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_exprcase_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4629:2: ( ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' ) )
            // InternalGo.g:4630:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            {
            // InternalGo.g:4630:2: ( () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}' )
            // InternalGo.g:4631:3: () otherlv_1= 'switch' ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )? ( (lv_expression_4_0= ruleExpression ) )? otherlv_5= '{' ( (lv_exprcase_6_0= ruleExprCaseClause ) )* otherlv_7= '}'
            {
            // InternalGo.g:4631:3: ()
            // InternalGo.g:4632:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1());
              		
            }
            // InternalGo.g:4645:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )?
            int alt59=2;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalGo.g:4646:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';'
                    {
                    // InternalGo.g:4646:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
                    // InternalGo.g:4647:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:4647:5: (lv_simplestmt_2_0= ruleSimpleStmt )
                    // InternalGo.g:4648:6: lv_simplestmt_2_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_simplestmt_2_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplestmt",
                      							lv_simplestmt_2_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,51,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4670:3: ( (lv_expression_4_0= ruleExpression ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_LETTER||LA60_0==RULE_DECIMALS||(LA60_0>=RULE_UNARY_OP && LA60_0<=RULE_STRING)||LA60_0==40||LA60_0==42||(LA60_0>=44 && LA60_0<=45)||LA60_0==47||LA60_0==49||LA60_0==54||(LA60_0>=56 && LA60_0<=59)) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalGo.g:4671:4: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalGo.g:4671:4: (lv_expression_4_0= ruleExpression )
                    // InternalGo.g:4672:5: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_21);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_4_0,
                      						"org.xtext.example.mydsl.Go.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,50,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalGo.g:4693:3: ( (lv_exprcase_6_0= ruleExprCaseClause ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=79 && LA61_0<=80)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalGo.g:4694:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    {
            	    // InternalGo.g:4694:4: (lv_exprcase_6_0= ruleExprCaseClause )
            	    // InternalGo.g:4695:5: lv_exprcase_6_0= ruleExprCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprcaseExprCaseClauseParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_exprcase_6_0=ruleExprCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"exprcase",
            	      						lv_exprcase_6_0,
            	      						"org.xtext.example.mydsl.Go.ExprCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            otherlv_7=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchStmt"


    // $ANTLR start "entryRuleExprCaseClause"
    // InternalGo.g:4720:1: entryRuleExprCaseClause returns [EObject current=null] : iv_ruleExprCaseClause= ruleExprCaseClause EOF ;
    public final EObject entryRuleExprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprCaseClause = null;


        try {
            // InternalGo.g:4720:55: (iv_ruleExprCaseClause= ruleExprCaseClause EOF )
            // InternalGo.g:4721:2: iv_ruleExprCaseClause= ruleExprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprCaseClause=ruleExprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprCaseClause"


    // $ANTLR start "ruleExprCaseClause"
    // InternalGo.g:4727:1: ruleExprCaseClause returns [EObject current=null] : (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleExprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ExprSwitchCase_0 = null;

        EObject lv_statementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4733:2: ( (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:4734:2: (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:4734:2: (this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            // InternalGo.g:4735:3: this_ExprSwitchCase_0= ruleExprSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_37);
            this_ExprSwitchCase_0=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExprSwitchCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,60,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:4750:3: ( (lv_statementlist_2_0= ruleStatementList ) )
            // InternalGo.g:4751:4: (lv_statementlist_2_0= ruleStatementList )
            {
            // InternalGo.g:4751:4: (lv_statementlist_2_0= ruleStatementList )
            // InternalGo.g:4752:5: lv_statementlist_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprCaseClause"


    // $ANTLR start "entryRuleExprSwitchCase"
    // InternalGo.g:4773:1: entryRuleExprSwitchCase returns [EObject current=null] : iv_ruleExprSwitchCase= ruleExprSwitchCase EOF ;
    public final EObject entryRuleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchCase = null;


        try {
            // InternalGo.g:4773:55: (iv_ruleExprSwitchCase= ruleExprSwitchCase EOF )
            // InternalGo.g:4774:2: iv_ruleExprSwitchCase= ruleExprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchCase=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchCase"


    // $ANTLR start "ruleExprSwitchCase"
    // InternalGo.g:4780:1: ruleExprSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4786:2: ( ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:4787:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:4787:2: ( ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==79) ) {
                alt62=1;
            }
            else if ( (LA62_0==80) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalGo.g:4788:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    {
                    // InternalGo.g:4788:3: ( () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
                    // InternalGo.g:4789:4: () otherlv_1= 'case' ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    {
                    // InternalGo.g:4789:4: ()
                    // InternalGo.g:4790:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,79,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:4803:4: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                    // InternalGo.g:4804:5: (lv_expressionlist_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:4804:5: (lv_expressionlist_2_0= ruleExpressionList )
                    // InternalGo.g:4805:6: lv_expressionlist_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionlistExpressionListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionlist_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"expressionlist",
                      							lv_expressionlist_2_0,
                      							"org.xtext.example.mydsl.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4824:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:4824:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:4825:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:4825:4: ()
                    // InternalGo.g:4826:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchCase"


    // $ANTLR start "entryRuleTypeSwitchStmt"
    // InternalGo.g:4844:1: entryRuleTypeSwitchStmt returns [EObject current=null] : iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF ;
    public final EObject entryRuleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchStmt = null;


        try {
            // InternalGo.g:4844:55: (iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF )
            // InternalGo.g:4845:2: iv_ruleTypeSwitchStmt= ruleTypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchStmt=ruleTypeSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchStmt"


    // $ANTLR start "ruleTypeSwitchStmt"
    // InternalGo.g:4851:1: ruleTypeSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruleTypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simplestm_1_0 = null;

        EObject lv_typesg_3_0 = null;

        EObject lv_typecc_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4857:2: ( (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:4858:2: (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:4858:2: (otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:4859:3: otherlv_0= 'switch' ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_typesg_3_0= ruleTypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typecc_5_0= ruleTypeCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,78,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:4863:3: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalGo.g:4864:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:4864:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:4865:5: (lv_simplestm_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:4865:5: (lv_simplestm_1_0= ruleSimpleStmt )
                    // InternalGo.g:4866:6: lv_simplestm_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimplestmSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_simplestm_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplestm",
                      							lv_simplestm_1_0,
                      							"org.xtext.example.mydsl.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,51,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4888:3: ( (lv_typesg_3_0= ruleTypeSwitchGuard ) )
            // InternalGo.g:4889:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            {
            // InternalGo.g:4889:4: (lv_typesg_3_0= ruleTypeSwitchGuard )
            // InternalGo.g:4890:5: lv_typesg_3_0= ruleTypeSwitchGuard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypesgTypeSwitchGuardParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_typesg_3_0=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
              					}
              					set(
              						current,
              						"typesg",
              						lv_typesg_3_0,
              						"org.xtext.example.mydsl.Go.TypeSwitchGuard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,50,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:4911:3: ( (lv_typecc_5_0= ruleTypeCaseClause ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=79 && LA64_0<=80)) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalGo.g:4912:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    {
            	    // InternalGo.g:4912:4: (lv_typecc_5_0= ruleTypeCaseClause )
            	    // InternalGo.g:4913:5: lv_typecc_5_0= ruleTypeCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeccTypeCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_typecc_5_0=ruleTypeCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"typecc",
            	      						lv_typecc_5_0,
            	      						"org.xtext.example.mydsl.Go.TypeCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            otherlv_6=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchStmt"


    // $ANTLR start "entryRuleTypeSwitchGuard"
    // InternalGo.g:4938:1: entryRuleTypeSwitchGuard returns [EObject current=null] : iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF ;
    public final EObject entryRuleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchGuard = null;


        try {
            // InternalGo.g:4938:56: (iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF )
            // InternalGo.g:4939:2: iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchGuard"


    // $ANTLR start "ruleTypeSwitchGuard"
    // InternalGo.g:4945:1: ruleTypeSwitchGuard returns [EObject current=null] : ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;

        EObject lv_per_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4951:2: ( ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:4952:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:4952:2: ( ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:4953:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_per_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:4953:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalGo.g:4954:4: ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':='
                    {
                    // InternalGo.g:4954:4: ( (lv_id_0_0= ruleIDENTIFIER ) )
                    // InternalGo.g:4955:5: (lv_id_0_0= ruleIDENTIFIER )
                    {
                    // InternalGo.g:4955:5: (lv_id_0_0= ruleIDENTIFIER )
                    // InternalGo.g:4956:6: lv_id_0_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getIdIDENTIFIERParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    lv_id_0_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
                      						}
                      						set(
                      							current,
                      							"id",
                      							lv_id_0_0,
                      							"org.xtext.example.mydsl.Go.IDENTIFIER");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,77,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4978:3: ( (lv_per_2_0= rulePrimaryExpr ) )
            // InternalGo.g:4979:4: (lv_per_2_0= rulePrimaryExpr )
            {
            // InternalGo.g:4979:4: (lv_per_2_0= rulePrimaryExpr )
            // InternalGo.g:4980:5: lv_per_2_0= rulePrimaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPerPrimaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_per_2_0=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
              					}
              					set(
              						current,
              						"per",
              						lv_per_2_0,
              						"org.xtext.example.mydsl.Go.PrimaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,42,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,45,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,73,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchGuard"


    // $ANTLR start "entryRuleTypeCaseClause"
    // InternalGo.g:5017:1: entryRuleTypeCaseClause returns [EObject current=null] : iv_ruleTypeCaseClause= ruleTypeCaseClause EOF ;
    public final EObject entryRuleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeCaseClause = null;


        try {
            // InternalGo.g:5017:55: (iv_ruleTypeCaseClause= ruleTypeCaseClause EOF )
            // InternalGo.g:5018:2: iv_ruleTypeCaseClause= ruleTypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeCaseClause=ruleTypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeCaseClause"


    // $ANTLR start "ruleTypeCaseClause"
    // InternalGo.g:5024:1: ruleTypeCaseClause returns [EObject current=null] : (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypeSwitchCase_0 = null;

        EObject lv_statementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5030:2: ( (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:5031:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:5031:2: (this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) ) )
            // InternalGo.g:5032:3: this_TypeSwitchCase_0= ruleTypeSwitchCase otherlv_1= ':' ( (lv_statementlist_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_37);
            this_TypeSwitchCase_0=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeSwitchCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,60,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:5047:3: ( (lv_statementlist_2_0= ruleStatementList ) )
            // InternalGo.g:5048:4: (lv_statementlist_2_0= ruleStatementList )
            {
            // InternalGo.g:5048:4: (lv_statementlist_2_0= ruleStatementList )
            // InternalGo.g:5049:5: lv_statementlist_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"statementlist",
              						lv_statementlist_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeCaseClause"


    // $ANTLR start "entryRuleTypeSwitchCase"
    // InternalGo.g:5070:1: entryRuleTypeSwitchCase returns [EObject current=null] : iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF ;
    public final EObject entryRuleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchCase = null;


        try {
            // InternalGo.g:5070:55: (iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF )
            // InternalGo.g:5071:2: iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchCase=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchCase"


    // $ANTLR start "ruleTypeSwitchCase"
    // InternalGo.g:5077:1: ruleTypeSwitchCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_typelist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5083:2: ( ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:5084:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:5084:2: ( ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) ) | ( () otherlv_4= 'default' ) )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==79) ) {
                alt66=1;
            }
            else if ( (LA66_0==80) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalGo.g:5085:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    {
                    // InternalGo.g:5085:3: ( () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) ) )
                    // InternalGo.g:5086:4: () otherlv_1= 'case' ( (lv_typelist_2_0= ruleTypeList ) )
                    {
                    // InternalGo.g:5086:4: ()
                    // InternalGo.g:5087:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,79,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:5100:4: ( (lv_typelist_2_0= ruleTypeList ) )
                    // InternalGo.g:5101:5: (lv_typelist_2_0= ruleTypeList )
                    {
                    // InternalGo.g:5101:5: (lv_typelist_2_0= ruleTypeList )
                    // InternalGo.g:5102:6: lv_typelist_2_0= ruleTypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypelistTypeListParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typelist_2_0=ruleTypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"typelist",
                      							lv_typelist_2_0,
                      							"org.xtext.example.mydsl.Go.TypeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5121:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:5121:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:5122:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:5122:4: ()
                    // InternalGo.g:5123:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchCase"


    // $ANTLR start "entryRuleTypeList"
    // InternalGo.g:5141:1: entryRuleTypeList returns [EObject current=null] : iv_ruleTypeList= ruleTypeList EOF ;
    public final EObject entryRuleTypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeList = null;


        try {
            // InternalGo.g:5141:49: (iv_ruleTypeList= ruleTypeList EOF )
            // InternalGo.g:5142:2: iv_ruleTypeList= ruleTypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeList=ruleTypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeList"


    // $ANTLR start "ruleTypeList"
    // InternalGo.g:5148:1: ruleTypeList returns [EObject current=null] : ( ( (lv_type_0_0= ruleType ) ) ( (otherlv_1= ',' )? ( (lv_type2_2_0= ruleType ) ) )* ) ;
    public final EObject ruleTypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_type_0_0 = null;

        EObject lv_type2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5154:2: ( ( ( (lv_type_0_0= ruleType ) ) ( (otherlv_1= ',' )? ( (lv_type2_2_0= ruleType ) ) )* ) )
            // InternalGo.g:5155:2: ( ( (lv_type_0_0= ruleType ) ) ( (otherlv_1= ',' )? ( (lv_type2_2_0= ruleType ) ) )* )
            {
            // InternalGo.g:5155:2: ( ( (lv_type_0_0= ruleType ) ) ( (otherlv_1= ',' )? ( (lv_type2_2_0= ruleType ) ) )* )
            // InternalGo.g:5156:3: ( (lv_type_0_0= ruleType ) ) ( (otherlv_1= ',' )? ( (lv_type2_2_0= ruleType ) ) )*
            {
            // InternalGo.g:5156:3: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:5157:4: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:5157:4: (lv_type_0_0= ruleType )
            // InternalGo.g:5158:5: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_59);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5175:3: ( (otherlv_1= ',' )? ( (lv_type2_2_0= ruleType ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==RULE_LETTER||LA68_0==40||LA68_0==45||LA68_0==47||LA68_0==49||(LA68_0>=53 && LA68_0<=54)||(LA68_0>=56 && LA68_0<=59)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalGo.g:5176:4: (otherlv_1= ',' )? ( (lv_type2_2_0= ruleType ) )
            	    {
            	    // InternalGo.g:5176:4: (otherlv_1= ',' )?
            	    int alt67=2;
            	    int LA67_0 = input.LA(1);

            	    if ( (LA67_0==53) ) {
            	        alt67=1;
            	    }
            	    switch (alt67) {
            	        case 1 :
            	            // InternalGo.g:5177:5: otherlv_1= ','
            	            {
            	            otherlv_1=(Token)match(input,53,FOLLOW_17); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalGo.g:5182:4: ( (lv_type2_2_0= ruleType ) )
            	    // InternalGo.g:5183:5: (lv_type2_2_0= ruleType )
            	    {
            	    // InternalGo.g:5183:5: (lv_type2_2_0= ruleType )
            	    // InternalGo.g:5184:6: lv_type2_2_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getType2TypeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_type2_2_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"type2",
            	      							lv_type2_2_0,
            	      							"org.xtext.example.mydsl.Go.Type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeList"


    // $ANTLR start "entryRuleCommClause"
    // InternalGo.g:5206:1: entryRuleCommClause returns [EObject current=null] : iv_ruleCommClause= ruleCommClause EOF ;
    public final EObject entryRuleCommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommClause = null;


        try {
            // InternalGo.g:5206:51: (iv_ruleCommClause= ruleCommClause EOF )
            // InternalGo.g:5207:2: iv_ruleCommClause= ruleCommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommClause=ruleCommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommClause"


    // $ANTLR start "ruleCommClause"
    // InternalGo.g:5213:1: ruleCommClause returns [EObject current=null] : (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleCommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_CommCase_0 = null;

        EObject lv_statementlist2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5219:2: ( (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:5220:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:5220:2: (this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) ) )
            // InternalGo.g:5221:3: this_CommCase_0= ruleCommCase otherlv_1= ':' ( (lv_statementlist2_2_0= ruleStatementList ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_37);
            this_CommCase_0=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CommCase_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,60,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:5236:3: ( (lv_statementlist2_2_0= ruleStatementList ) )
            // InternalGo.g:5237:4: (lv_statementlist2_2_0= ruleStatementList )
            {
            // InternalGo.g:5237:4: (lv_statementlist2_2_0= ruleStatementList )
            // InternalGo.g:5238:5: lv_statementlist2_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementlist2StatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementlist2_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"statementlist2",
              						lv_statementlist2_2_0,
              						"org.xtext.example.mydsl.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommClause"


    // $ANTLR start "entryRuleCommCase"
    // InternalGo.g:5259:1: entryRuleCommCase returns [EObject current=null] : iv_ruleCommCase= ruleCommCase EOF ;
    public final EObject entryRuleCommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommCase = null;


        try {
            // InternalGo.g:5259:49: (iv_ruleCommCase= ruleCommCase EOF )
            // InternalGo.g:5260:2: iv_ruleCommCase= ruleCommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommCase=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommCase"


    // $ANTLR start "ruleCommCase"
    // InternalGo.g:5266:1: ruleCommCase returns [EObject current=null] : ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) ;
    public final EObject ruleCommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_sendstmt_2_0 = null;

        EObject lv_recvstmt_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5272:2: ( ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) ) )
            // InternalGo.g:5273:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            {
            // InternalGo.g:5273:2: ( ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) ) | ( () otherlv_5= 'default' ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==79) ) {
                alt70=1;
            }
            else if ( (LA70_0==80) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalGo.g:5274:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    {
                    // InternalGo.g:5274:3: ( () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) ) )
                    // InternalGo.g:5275:4: () otherlv_1= 'case' ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    {
                    // InternalGo.g:5275:4: ()
                    // InternalGo.g:5276:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,79,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCommCaseAccess().getCaseKeyword_0_1());
                      			
                    }
                    // InternalGo.g:5289:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )
                    int alt69=2;
                    alt69 = dfa69.predict(input);
                    switch (alt69) {
                        case 1 :
                            // InternalGo.g:5290:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            {
                            // InternalGo.g:5290:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
                            // InternalGo.g:5291:6: (lv_sendstmt_2_0= ruleSendStmt )
                            {
                            // InternalGo.g:5291:6: (lv_sendstmt_2_0= ruleSendStmt )
                            // InternalGo.g:5292:7: lv_sendstmt_2_0= ruleSendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sendstmt_2_0=ruleSendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"sendstmt",
                              								lv_sendstmt_2_0,
                              								"org.xtext.example.mydsl.Go.SendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:5310:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            {
                            // InternalGo.g:5310:5: ( (lv_recvstmt_3_0= ruleRecvStmt ) )
                            // InternalGo.g:5311:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            {
                            // InternalGo.g:5311:6: (lv_recvstmt_3_0= ruleRecvStmt )
                            // InternalGo.g:5312:7: lv_recvstmt_3_0= ruleRecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvstmtRecvStmtParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_recvstmt_3_0=ruleRecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"recvstmt",
                              								lv_recvstmt_3_0,
                              								"org.xtext.example.mydsl.Go.RecvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5332:3: ( () otherlv_5= 'default' )
                    {
                    // InternalGo.g:5332:3: ( () otherlv_5= 'default' )
                    // InternalGo.g:5333:4: () otherlv_5= 'default'
                    {
                    // InternalGo.g:5333:4: ()
                    // InternalGo.g:5334:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommCase"


    // $ANTLR start "entryRuleRecvStmt"
    // InternalGo.g:5352:1: entryRuleRecvStmt returns [EObject current=null] : iv_ruleRecvStmt= ruleRecvStmt EOF ;
    public final EObject entryRuleRecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvStmt = null;


        try {
            // InternalGo.g:5352:49: (iv_ruleRecvStmt= ruleRecvStmt EOF )
            // InternalGo.g:5353:2: iv_ruleRecvStmt= ruleRecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvStmt=ruleRecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvStmt"


    // $ANTLR start "ruleRecvStmt"
    // InternalGo.g:5359:1: ruleRecvStmt returns [EObject current=null] : ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) ;
    public final EObject ruleRecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_ExpressionList_0 = null;

        AntlrDatatypeRuleToken lv_idl_2_0 = null;

        EObject lv_recvexpr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5365:2: ( ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) ) )
            // InternalGo.g:5366:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            {
            // InternalGo.g:5366:2: ( ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) ) )
            // InternalGo.g:5367:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            {
            // InternalGo.g:5367:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt71=3;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalGo.g:5368:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    {
                    // InternalGo.g:5368:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
                    // InternalGo.g:5369:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FOLLOW_48);
                    this_ExpressionList_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_ExpressionList_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    otherlv_1=(Token)match(input,72,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5386:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:5386:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:5387:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:5387:5: ( (lv_idl_2_0= ruleIdentifierList ) )
                    // InternalGo.g:5388:6: (lv_idl_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:5388:6: (lv_idl_2_0= ruleIdentifierList )
                    // InternalGo.g:5389:7: lv_idl_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_54);
                    lv_idl_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"idl",
                      								lv_idl_2_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,77,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:5412:3: ( (lv_recvexpr_4_0= ruleRecvExpr ) )
            // InternalGo.g:5413:4: (lv_recvexpr_4_0= ruleRecvExpr )
            {
            // InternalGo.g:5413:4: (lv_recvexpr_4_0= ruleRecvExpr )
            // InternalGo.g:5414:5: lv_recvexpr_4_0= ruleRecvExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getRecvexprRecvExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_recvexpr_4_0=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"recvexpr",
              						lv_recvexpr_4_0,
              						"org.xtext.example.mydsl.Go.RecvExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvStmt"


    // $ANTLR start "entryRuleRecvExpr"
    // InternalGo.g:5435:1: entryRuleRecvExpr returns [EObject current=null] : iv_ruleRecvExpr= ruleRecvExpr EOF ;
    public final EObject entryRuleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvExpr = null;


        try {
            // InternalGo.g:5435:49: (iv_ruleRecvExpr= ruleRecvExpr EOF )
            // InternalGo.g:5436:2: iv_ruleRecvExpr= ruleRecvExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvExpr=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvExpr"


    // $ANTLR start "ruleRecvExpr"
    // InternalGo.g:5442:1: ruleRecvExpr returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5448:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:5449:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getRecvExprAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvExpr"


    // $ANTLR start "entryRuleCondition"
    // InternalGo.g:5463:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalGo.g:5463:50: (iv_ruleCondition= ruleCondition EOF )
            // InternalGo.g:5464:2: iv_ruleCondition= ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalGo.g:5470:1: ruleCondition returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5476:2: (this_Expression_0= ruleExpression )
            // InternalGo.g:5477:2: this_Expression_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getConditionAccess().getExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Expression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleForClause"
    // InternalGo.g:5491:1: entryRuleForClause returns [EObject current=null] : iv_ruleForClause= ruleForClause EOF ;
    public final EObject entryRuleForClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForClause = null;


        try {
            // InternalGo.g:5491:50: (iv_ruleForClause= ruleForClause EOF )
            // InternalGo.g:5492:2: iv_ruleForClause= ruleForClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForClause=ruleForClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForClause"


    // $ANTLR start "ruleForClause"
    // InternalGo.g:5498:1: ruleForClause returns [EObject current=null] : ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) ) ;
    public final EObject ruleForClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_InitStmt_0 = null;

        EObject lv_condition_2_0 = null;

        EObject lv_poststmt_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5504:2: ( ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) ) )
            // InternalGo.g:5505:2: ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) )
            {
            // InternalGo.g:5505:2: ( (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) ) )
            // InternalGo.g:5506:3: (this_InitStmt_0= ruleInitStmt )? otherlv_1= ';' ( (lv_condition_2_0= ruleCondition ) )? otherlv_3= ';' ( (lv_poststmt_4_0= rulePostStmt ) )
            {
            // InternalGo.g:5506:3: (this_InitStmt_0= ruleInitStmt )?
            int alt72=2;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // InternalGo.g:5507:4: this_InitStmt_0= ruleInitStmt
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getForClauseAccess().getInitStmtParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_23);
                    this_InitStmt_0=ruleInitStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_InitStmt_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,51,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForClauseAccess().getSemicolonKeyword_1());
              		
            }
            // InternalGo.g:5523:3: ( (lv_condition_2_0= ruleCondition ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_LETTER||LA73_0==RULE_DECIMALS||(LA73_0>=RULE_UNARY_OP && LA73_0<=RULE_STRING)||LA73_0==40||LA73_0==42||(LA73_0>=44 && LA73_0<=45)||LA73_0==47||LA73_0==49||LA73_0==54||(LA73_0>=56 && LA73_0<=59)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalGo.g:5524:4: (lv_condition_2_0= ruleCondition )
                    {
                    // InternalGo.g:5524:4: (lv_condition_2_0= ruleCondition )
                    // InternalGo.g:5525:5: lv_condition_2_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_condition_2_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_2_0,
                      						"org.xtext.example.mydsl.Go.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,51,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getForClauseAccess().getSemicolonKeyword_3());
              		
            }
            // InternalGo.g:5546:3: ( (lv_poststmt_4_0= rulePostStmt ) )
            // InternalGo.g:5547:4: (lv_poststmt_4_0= rulePostStmt )
            {
            // InternalGo.g:5547:4: (lv_poststmt_4_0= rulePostStmt )
            // InternalGo.g:5548:5: lv_poststmt_4_0= rulePostStmt
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForClauseAccess().getPoststmtPostStmtParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_poststmt_4_0=rulePostStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForClauseRule());
              					}
              					set(
              						current,
              						"poststmt",
              						lv_poststmt_4_0,
              						"org.xtext.example.mydsl.Go.PostStmt");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForClause"


    // $ANTLR start "entryRuleRangeClause"
    // InternalGo.g:5569:1: entryRuleRangeClause returns [EObject current=null] : iv_ruleRangeClause= ruleRangeClause EOF ;
    public final EObject entryRuleRangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeClause = null;


        try {
            // InternalGo.g:5569:52: (iv_ruleRangeClause= ruleRangeClause EOF )
            // InternalGo.g:5570:2: iv_ruleRangeClause= ruleRangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeClause=ruleRangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeClause"


    // $ANTLR start "ruleRangeClause"
    // InternalGo.g:5576:1: ruleRangeClause returns [EObject current=null] : ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) ;
    public final EObject ruleRangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressionlist_0_0 = null;

        AntlrDatatypeRuleToken lv_idl_2_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5582:2: ( ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) ) )
            // InternalGo.g:5583:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            {
            // InternalGo.g:5583:2: ( ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) ) )
            // InternalGo.g:5584:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleExpression ) )
            {
            // InternalGo.g:5584:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt74=3;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalGo.g:5585:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:5585:4: ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:5586:5: ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:5586:5: ( (lv_expressionlist_0_0= ruleExpressionList ) )
                    // InternalGo.g:5587:6: (lv_expressionlist_0_0= ruleExpressionList )
                    {
                    // InternalGo.g:5587:6: (lv_expressionlist_0_0= ruleExpressionList )
                    // InternalGo.g:5588:7: lv_expressionlist_0_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionlistExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_48);
                    lv_expressionlist_0_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"expressionlist",
                      								lv_expressionlist_0_0,
                      								"org.xtext.example.mydsl.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,72,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5611:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:5611:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:5612:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:5612:5: ( (lv_idl_2_0= ruleIdentifierList ) )
                    // InternalGo.g:5613:6: (lv_idl_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:5613:6: (lv_idl_2_0= ruleIdentifierList )
                    // InternalGo.g:5614:7: lv_idl_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_54);
                    lv_idl_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"idl",
                      								lv_idl_2_0,
                      								"org.xtext.example.mydsl.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,77,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,81,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:5641:3: ( (lv_expression_5_0= ruleExpression ) )
            // InternalGo.g:5642:4: (lv_expression_5_0= ruleExpression )
            {
            // InternalGo.g:5642:4: (lv_expression_5_0= ruleExpression )
            // InternalGo.g:5643:5: lv_expression_5_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeClause"


    // $ANTLR start "entryRuleInitStmt"
    // InternalGo.g:5664:1: entryRuleInitStmt returns [EObject current=null] : iv_ruleInitStmt= ruleInitStmt EOF ;
    public final EObject entryRuleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitStmt = null;


        try {
            // InternalGo.g:5664:49: (iv_ruleInitStmt= ruleInitStmt EOF )
            // InternalGo.g:5665:2: iv_ruleInitStmt= ruleInitStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitStmt=ruleInitStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitStmt"


    // $ANTLR start "ruleInitStmt"
    // InternalGo.g:5671:1: ruleInitStmt returns [EObject current=null] : ( (lv_simple_0_0= ruleSimpleStmt ) ) ;
    public final EObject ruleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_simple_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5677:2: ( ( (lv_simple_0_0= ruleSimpleStmt ) ) )
            // InternalGo.g:5678:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:5678:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            // InternalGo.g:5679:3: (lv_simple_0_0= ruleSimpleStmt )
            {
            // InternalGo.g:5679:3: (lv_simple_0_0= ruleSimpleStmt )
            // InternalGo.g:5680:4: lv_simple_0_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getInitStmtAccess().getSimpleSimpleStmtParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_simple_0_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getInitStmtRule());
              				}
              				set(
              					current,
              					"simple",
              					lv_simple_0_0,
              					"org.xtext.example.mydsl.Go.SimpleStmt");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitStmt"


    // $ANTLR start "entryRulePostStmt"
    // InternalGo.g:5700:1: entryRulePostStmt returns [EObject current=null] : iv_rulePostStmt= rulePostStmt EOF ;
    public final EObject entryRulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostStmt = null;


        try {
            // InternalGo.g:5700:49: (iv_rulePostStmt= rulePostStmt EOF )
            // InternalGo.g:5701:2: iv_rulePostStmt= rulePostStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostStmt=rulePostStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostStmt"


    // $ANTLR start "rulePostStmt"
    // InternalGo.g:5707:1: rulePostStmt returns [EObject current=null] : ( (lv_simple_0_0= ruleSimpleStmt ) ) ;
    public final EObject rulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_simple_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5713:2: ( ( (lv_simple_0_0= ruleSimpleStmt ) ) )
            // InternalGo.g:5714:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:5714:2: ( (lv_simple_0_0= ruleSimpleStmt ) )
            // InternalGo.g:5715:3: (lv_simple_0_0= ruleSimpleStmt )
            {
            // InternalGo.g:5715:3: (lv_simple_0_0= ruleSimpleStmt )
            // InternalGo.g:5716:4: lv_simple_0_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleSimpleStmtParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_simple_0_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPostStmtRule());
              				}
              				set(
              					current,
              					"simple",
              					lv_simple_0_0,
              					"org.xtext.example.mydsl.Go.SimpleStmt");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostStmt"


    // $ANTLR start "entryRuleLabel"
    // InternalGo.g:5736:1: entryRuleLabel returns [String current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final String entryRuleLabel() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLabel = null;


        try {
            // InternalGo.g:5736:45: (iv_ruleLabel= ruleLabel EOF )
            // InternalGo.g:5737:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalGo.g:5743:1: ruleLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleLabel() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5749:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:5750:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getLabelAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleExpressionList"
    // InternalGo.g:5763:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // InternalGo.g:5763:55: (iv_ruleExpressionList= ruleExpressionList EOF )
            // InternalGo.g:5764:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionList=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionList"


    // $ANTLR start "ruleExpressionList"
    // InternalGo.g:5770:1: ruleExpressionList returns [EObject current=null] : (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_Expression_0 = null;

        EObject lv_expression2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5776:2: ( (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* ) )
            // InternalGo.g:5777:2: (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* )
            {
            // InternalGo.g:5777:2: (this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )* )
            // InternalGo.g:5778:3: this_Expression_0= ruleExpression (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_61);
            this_Expression_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:5789:3: (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )*
            loop75:
            do {
                int alt75=2;
                alt75 = dfa75.predict(input);
                switch (alt75) {
            	case 1 :
            	    // InternalGo.g:5790:4: otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,51,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getSemicolonKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:5794:4: ( (lv_expression2_2_0= ruleExpression ) )
            	    // InternalGo.g:5795:5: (lv_expression2_2_0= ruleExpression )
            	    {
            	    // InternalGo.g:5795:5: (lv_expression2_2_0= ruleExpression )
            	    // InternalGo.g:5796:6: lv_expression2_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_expression2_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expression2",
            	      							lv_expression2_2_0,
            	      							"org.xtext.example.mydsl.Go.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionList"


    // $ANTLR start "entryRuleExpression"
    // InternalGo.g:5818:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalGo.g:5818:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalGo.g:5819:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalGo.g:5825:1: ruleExpression returns [EObject current=null] : ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_up_1_0 = null;

        EObject lv_exp_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5831:2: ( ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) ) )
            // InternalGo.g:5832:2: ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) )
            {
            // InternalGo.g:5832:2: ( () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) ) )
            // InternalGo.g:5833:3: () ( (lv_up_1_0= ruleUnaryExpr ) ) ( (lv_exp_2_0= ruleExpression2 ) )
            {
            // InternalGo.g:5833:3: ()
            // InternalGo.g:5834:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionAccess().getExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5843:3: ( (lv_up_1_0= ruleUnaryExpr ) )
            // InternalGo.g:5844:4: (lv_up_1_0= ruleUnaryExpr )
            {
            // InternalGo.g:5844:4: (lv_up_1_0= ruleUnaryExpr )
            // InternalGo.g:5845:5: lv_up_1_0= ruleUnaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getUpUnaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_62);
            lv_up_1_0=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"up",
              						lv_up_1_0,
              						"org.xtext.example.mydsl.Go.UnaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5862:3: ( (lv_exp_2_0= ruleExpression2 ) )
            // InternalGo.g:5863:4: (lv_exp_2_0= ruleExpression2 )
            {
            // InternalGo.g:5863:4: (lv_exp_2_0= ruleExpression2 )
            // InternalGo.g:5864:5: lv_exp_2_0= ruleExpression2
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpExpression2ParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exp_2_0=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_2_0,
              						"org.xtext.example.mydsl.Go.Expression2");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleExpression2"
    // InternalGo.g:5885:1: entryRuleExpression2 returns [EObject current=null] : iv_ruleExpression2= ruleExpression2 EOF ;
    public final EObject entryRuleExpression2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression2 = null;


        try {
            // InternalGo.g:5885:52: (iv_ruleExpression2= ruleExpression2 EOF )
            // InternalGo.g:5886:2: iv_ruleExpression2= ruleExpression2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression2=ruleExpression2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression2"


    // $ANTLR start "ruleExpression2"
    // InternalGo.g:5892:1: ruleExpression2 returns [EObject current=null] : ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) ;
    public final EObject ruleExpression2() throws RecognitionException {
        EObject current = null;

        Token lv_bop_1_0=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5898:2: ( ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? ) )
            // InternalGo.g:5899:2: ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            {
            // InternalGo.g:5899:2: ( () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )? )
            // InternalGo.g:5900:3: () ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            {
            // InternalGo.g:5900:3: ()
            // InternalGo.g:5901:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpression2Access().getExpression2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:5910:3: ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_BINARY_OP) ) {
                int LA76_1 = input.LA(2);

                if ( (synpred108_InternalGo()) ) {
                    alt76=1;
                }
            }
            switch (alt76) {
                case 1 :
                    // InternalGo.g:5911:4: ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
                    {
                    // InternalGo.g:5911:4: ( (lv_bop_1_0= RULE_BINARY_OP ) )
                    // InternalGo.g:5912:5: (lv_bop_1_0= RULE_BINARY_OP )
                    {
                    // InternalGo.g:5912:5: (lv_bop_1_0= RULE_BINARY_OP )
                    // InternalGo.g:5913:6: lv_bop_1_0= RULE_BINARY_OP
                    {
                    lv_bop_1_0=(Token)match(input,RULE_BINARY_OP,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_bop_1_0, grammarAccess.getExpression2Access().getBopBINARY_OPTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExpression2Rule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"bop",
                      							lv_bop_1_0,
                      							"org.xtext.example.mydsl.Go.BINARY_OP");
                      					
                    }

                    }


                    }

                    // InternalGo.g:5929:4: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalGo.g:5930:5: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalGo.g:5930:5: (lv_expression_2_0= ruleExpression )
                    // InternalGo.g:5931:6: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5948:4: ( (lv_expression2_3_0= ruleExpression2 ) )
                    // InternalGo.g:5949:5: (lv_expression2_3_0= ruleExpression2 )
                    {
                    // InternalGo.g:5949:5: (lv_expression2_3_0= ruleExpression2 )
                    // InternalGo.g:5950:6: lv_expression2_3_0= ruleExpression2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression2_3_0=ruleExpression2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression2Rule());
                      						}
                      						set(
                      							current,
                      							"expression2",
                      							lv_expression2_3_0,
                      							"org.xtext.example.mydsl.Go.Expression2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression2"


    // $ANTLR start "entryRuleUnaryExpr"
    // InternalGo.g:5972:1: entryRuleUnaryExpr returns [EObject current=null] : iv_ruleUnaryExpr= ruleUnaryExpr EOF ;
    public final EObject entryRuleUnaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpr = null;


        try {
            // InternalGo.g:5972:50: (iv_ruleUnaryExpr= ruleUnaryExpr EOF )
            // InternalGo.g:5973:2: iv_ruleUnaryExpr= ruleUnaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpr=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpr"


    // $ANTLR start "ruleUnaryExpr"
    // InternalGo.g:5979:1: ruleUnaryExpr returns [EObject current=null] : (this_PrimaryExpr_0= rulePrimaryExpr | ( ( (lv_up_1_0= RULE_UNARY_OP ) ) ( (lv_ue_2_0= ruleUnaryExpr ) ) ) ) ;
    public final EObject ruleUnaryExpr() throws RecognitionException {
        EObject current = null;

        Token lv_up_1_0=null;
        EObject this_PrimaryExpr_0 = null;

        EObject lv_ue_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5985:2: ( (this_PrimaryExpr_0= rulePrimaryExpr | ( ( (lv_up_1_0= RULE_UNARY_OP ) ) ( (lv_ue_2_0= ruleUnaryExpr ) ) ) ) )
            // InternalGo.g:5986:2: (this_PrimaryExpr_0= rulePrimaryExpr | ( ( (lv_up_1_0= RULE_UNARY_OP ) ) ( (lv_ue_2_0= ruleUnaryExpr ) ) ) )
            {
            // InternalGo.g:5986:2: (this_PrimaryExpr_0= rulePrimaryExpr | ( ( (lv_up_1_0= RULE_UNARY_OP ) ) ( (lv_ue_2_0= ruleUnaryExpr ) ) ) )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_LETTER||LA77_0==RULE_DECIMALS||(LA77_0>=RULE_INT_LIT && LA77_0<=RULE_STRING)||LA77_0==40||LA77_0==42||(LA77_0>=44 && LA77_0<=45)||LA77_0==47||LA77_0==49||LA77_0==54||(LA77_0>=56 && LA77_0<=59)) ) {
                alt77=1;
            }
            else if ( (LA77_0==RULE_UNARY_OP) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalGo.g:5987:3: this_PrimaryExpr_0= rulePrimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpr_0=rulePrimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpr_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5999:3: ( ( (lv_up_1_0= RULE_UNARY_OP ) ) ( (lv_ue_2_0= ruleUnaryExpr ) ) )
                    {
                    // InternalGo.g:5999:3: ( ( (lv_up_1_0= RULE_UNARY_OP ) ) ( (lv_ue_2_0= ruleUnaryExpr ) ) )
                    // InternalGo.g:6000:4: ( (lv_up_1_0= RULE_UNARY_OP ) ) ( (lv_ue_2_0= ruleUnaryExpr ) )
                    {
                    // InternalGo.g:6000:4: ( (lv_up_1_0= RULE_UNARY_OP ) )
                    // InternalGo.g:6001:5: (lv_up_1_0= RULE_UNARY_OP )
                    {
                    // InternalGo.g:6001:5: (lv_up_1_0= RULE_UNARY_OP )
                    // InternalGo.g:6002:6: lv_up_1_0= RULE_UNARY_OP
                    {
                    lv_up_1_0=(Token)match(input,RULE_UNARY_OP,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_up_1_0, grammarAccess.getUnaryExprAccess().getUpUNARY_OPTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnaryExprRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"up",
                      							lv_up_1_0,
                      							"org.xtext.example.mydsl.Go.UNARY_OP");
                      					
                    }

                    }


                    }

                    // InternalGo.g:6018:4: ( (lv_ue_2_0= ruleUnaryExpr ) )
                    // InternalGo.g:6019:5: (lv_ue_2_0= ruleUnaryExpr )
                    {
                    // InternalGo.g:6019:5: (lv_ue_2_0= ruleUnaryExpr )
                    // InternalGo.g:6020:6: lv_ue_2_0= ruleUnaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUeUnaryExprParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ue_2_0=ruleUnaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"ue",
                      							lv_ue_2_0,
                      							"org.xtext.example.mydsl.Go.UnaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpr"


    // $ANTLR start "entryRulePrimaryExpr"
    // InternalGo.g:6042:1: entryRulePrimaryExpr returns [EObject current=null] : iv_rulePrimaryExpr= rulePrimaryExpr EOF ;
    public final EObject entryRulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr = null;


        try {
            // InternalGo.g:6042:52: (iv_rulePrimaryExpr= rulePrimaryExpr EOF )
            // InternalGo.g:6043:2: iv_rulePrimaryExpr= rulePrimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr"


    // $ANTLR start "rulePrimaryExpr"
    // InternalGo.g:6049:1: rulePrimaryExpr returns [EObject current=null] : ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) ) ;
    public final EObject rulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject this_Operand_0 = null;

        EObject lv_pr_1_0 = null;

        EObject this_Conversion_2 = null;

        EObject lv_pr_3_0 = null;

        EObject this_MethodExpr_4 = null;

        EObject lv_pr_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6055:2: ( ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) ) )
            // InternalGo.g:6056:2: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) )
            {
            // InternalGo.g:6056:2: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) )
            int alt78=3;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalGo.g:6057:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6057:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6058:4: this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) )
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_63);
                    this_Operand_0=ruleOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Operand_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:6069:4: ( (lv_pr_1_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6070:5: (lv_pr_1_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6070:5: (lv_pr_1_0= rulePrimaryExpr2 )
                    // InternalGo.g:6071:6: lv_pr_1_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_1_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_1_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6090:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6090:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6091:4: this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) )
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_63);
                    this_Conversion_2=ruleConversion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Conversion_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:6102:4: ( (lv_pr_3_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6103:5: (lv_pr_3_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6103:5: (lv_pr_3_0= rulePrimaryExpr2 )
                    // InternalGo.g:6104:6: lv_pr_3_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_3_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_3_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6123:3: (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6123:3: (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6124:4: this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) )
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExprAccess().getMethodExprParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_63);
                    this_MethodExpr_4=ruleMethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MethodExpr_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:6135:4: ( (lv_pr_5_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6136:5: (lv_pr_5_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6136:5: (lv_pr_5_0= rulePrimaryExpr2 )
                    // InternalGo.g:6137:6: lv_pr_5_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_5_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"pr",
                      							lv_pr_5_0,
                      							"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr"


    // $ANTLR start "entryRulePrimaryExpr2"
    // InternalGo.g:6159:1: entryRulePrimaryExpr2 returns [EObject current=null] : iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF ;
    public final EObject entryRulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr2 = null;


        try {
            // InternalGo.g:6159:53: (iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF )
            // InternalGo.g:6160:2: iv_rulePrimaryExpr2= rulePrimaryExpr2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpr2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr2=rulePrimaryExpr2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr2"


    // $ANTLR start "rulePrimaryExpr2"
    // InternalGo.g:6166:1: rulePrimaryExpr2 returns [EObject current=null] : ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) ;
    public final EObject rulePrimaryExpr2() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_selector_1_0 = null;

        EObject lv_pr_2_0 = null;

        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;

        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;

        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6172:2: ( ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? ) )
            // InternalGo.g:6173:2: ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            {
            // InternalGo.g:6173:2: ( () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )? )
            // InternalGo.g:6174:3: () ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            {
            // InternalGo.g:6174:3: ()
            // InternalGo.g:6175:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExpr2Access().getPrimaryExpr2Action_0(),
              					current);
              			
            }

            }

            // InternalGo.g:6184:3: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?
            int alt79=6;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalGo.g:6185:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6185:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6186:5: ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6186:5: ( (lv_selector_1_0= ruleSelector ) )
                    // InternalGo.g:6187:6: (lv_selector_1_0= ruleSelector )
                    {
                    // InternalGo.g:6187:6: (lv_selector_1_0= ruleSelector )
                    // InternalGo.g:6188:7: lv_selector_1_0= ruleSelector
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorSelectorParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_63);
                    lv_selector_1_0=ruleSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"selector",
                      								lv_selector_1_0,
                      								"org.xtext.example.mydsl.Go.Selector");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6205:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6206:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6206:6: (lv_pr_2_0= rulePrimaryExpr2 )
                    // InternalGo.g:6207:7: lv_pr_2_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_2_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_2_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6226:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6226:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6227:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6227:5: ( (lv_index_3_0= ruleIndex ) )
                    // InternalGo.g:6228:6: (lv_index_3_0= ruleIndex )
                    {
                    // InternalGo.g:6228:6: (lv_index_3_0= ruleIndex )
                    // InternalGo.g:6229:7: lv_index_3_0= ruleIndex
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_63);
                    lv_index_3_0=ruleIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"index",
                      								lv_index_3_0,
                      								"org.xtext.example.mydsl.Go.Index");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6246:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6247:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6247:6: (lv_pr_4_0= rulePrimaryExpr2 )
                    // InternalGo.g:6248:7: lv_pr_4_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_4_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_4_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6267:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6267:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6268:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6268:5: ( (lv_slice_5_0= ruleSlice ) )
                    // InternalGo.g:6269:6: (lv_slice_5_0= ruleSlice )
                    {
                    // InternalGo.g:6269:6: (lv_slice_5_0= ruleSlice )
                    // InternalGo.g:6270:7: lv_slice_5_0= ruleSlice
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
                      						
                    }
                    pushFollow(FOLLOW_63);
                    lv_slice_5_0=ruleSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"slice",
                      								lv_slice_5_0,
                      								"org.xtext.example.mydsl.Go.Slice");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6287:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6288:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6288:6: (lv_pr_6_0= rulePrimaryExpr2 )
                    // InternalGo.g:6289:7: lv_pr_6_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_6_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_6_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6308:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6308:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6309:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6309:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
                    // InternalGo.g:6310:6: (lv_typeass_7_0= ruleTypeAssertion )
                    {
                    // InternalGo.g:6310:6: (lv_typeass_7_0= ruleTypeAssertion )
                    // InternalGo.g:6311:7: lv_typeass_7_0= ruleTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
                      						
                    }
                    pushFollow(FOLLOW_63);
                    lv_typeass_7_0=ruleTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"typeass",
                      								lv_typeass_7_0,
                      								"org.xtext.example.mydsl.Go.TypeAssertion");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6328:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6329:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6329:6: (lv_pr_8_0= rulePrimaryExpr2 )
                    // InternalGo.g:6330:7: lv_pr_8_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_8_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_8_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6349:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    {
                    // InternalGo.g:6349:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
                    // InternalGo.g:6350:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    {
                    // InternalGo.g:6350:5: ( (lv_arguments_9_0= ruleArguments ) )
                    // InternalGo.g:6351:6: (lv_arguments_9_0= ruleArguments )
                    {
                    // InternalGo.g:6351:6: (lv_arguments_9_0= ruleArguments )
                    // InternalGo.g:6352:7: lv_arguments_9_0= ruleArguments
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
                      						
                    }
                    pushFollow(FOLLOW_63);
                    lv_arguments_9_0=ruleArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"arguments",
                      								lv_arguments_9_0,
                      								"org.xtext.example.mydsl.Go.Arguments");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6369:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
                    // InternalGo.g:6370:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    {
                    // InternalGo.g:6370:6: (lv_pr_10_0= rulePrimaryExpr2 )
                    // InternalGo.g:6371:7: lv_pr_10_0= rulePrimaryExpr2
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_pr_10_0=rulePrimaryExpr2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrimaryExpr2Rule());
                      							}
                      							set(
                      								current,
                      								"pr",
                      								lv_pr_10_0,
                      								"org.xtext.example.mydsl.Go.PrimaryExpr2");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr2"


    // $ANTLR start "entryRuleOperand"
    // InternalGo.g:6394:1: entryRuleOperand returns [EObject current=null] : iv_ruleOperand= ruleOperand EOF ;
    public final EObject entryRuleOperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperand = null;


        try {
            // InternalGo.g:6394:48: (iv_ruleOperand= ruleOperand EOF )
            // InternalGo.g:6395:2: iv_ruleOperand= ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperand=ruleOperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalGo.g:6401:1: ruleOperand returns [EObject current=null] : ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleOperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_literal_1_0 = null;

        EObject lv_operandn_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6407:2: ( ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:6408:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:6408:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            int alt80=3;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalGo.g:6409:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    {
                    // InternalGo.g:6409:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
                    // InternalGo.g:6410:4: () ( (lv_literal_1_0= ruleLiteral ) )
                    {
                    // InternalGo.g:6410:4: ()
                    // InternalGo.g:6411:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandAccess().getOperandAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:6420:4: ( (lv_literal_1_0= ruleLiteral ) )
                    // InternalGo.g:6421:5: (lv_literal_1_0= ruleLiteral )
                    {
                    // InternalGo.g:6421:5: (lv_literal_1_0= ruleLiteral )
                    // InternalGo.g:6422:6: lv_literal_1_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_1_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"literal",
                      							lv_literal_1_0,
                      							"org.xtext.example.mydsl.Go.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6441:3: ( (lv_operandn_2_0= ruleOperandName ) )
                    {
                    // InternalGo.g:6441:3: ( (lv_operandn_2_0= ruleOperandName ) )
                    // InternalGo.g:6442:4: (lv_operandn_2_0= ruleOperandName )
                    {
                    // InternalGo.g:6442:4: (lv_operandn_2_0= ruleOperandName )
                    // InternalGo.g:6443:5: lv_operandn_2_0= ruleOperandName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_operandn_2_0=ruleOperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"operandn",
                      						lv_operandn_2_0,
                      						"org.xtext.example.mydsl.Go.OperandName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6461:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:6461:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
                    // InternalGo.g:6462:4: otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:6466:4: ( (lv_expression_4_0= ruleExpression ) )
                    // InternalGo.g:6467:5: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalGo.g:6467:5: (lv_expression_4_0= ruleExpression )
                    // InternalGo.g:6468:6: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleConversion"
    // InternalGo.g:6494:1: entryRuleConversion returns [EObject current=null] : iv_ruleConversion= ruleConversion EOF ;
    public final EObject entryRuleConversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConversion = null;


        try {
            // InternalGo.g:6494:51: (iv_ruleConversion= ruleConversion EOF )
            // InternalGo.g:6495:2: iv_ruleConversion= ruleConversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConversion=ruleConversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConversion"


    // $ANTLR start "ruleConversion"
    // InternalGo.g:6501:1: ruleConversion returns [EObject current=null] : ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) ;
    public final EObject ruleConversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6507:2: ( ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) )
            // InternalGo.g:6508:2: ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            {
            // InternalGo.g:6508:2: ( ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            // InternalGo.g:6509:3: ( (lv_type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')'
            {
            // InternalGo.g:6509:3: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:6510:4: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:6510:4: (lv_type_0_0= ruleType )
            // InternalGo.g:6511:5: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.example.mydsl.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,45,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:6532:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalGo.g:6533:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalGo.g:6533:4: (lv_expression_2_0= ruleExpression )
            // InternalGo.g:6534:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6551:3: (otherlv_3= ',' )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==53) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalGo.g:6552:4: otherlv_3= ','
                    {
                    otherlv_3=(Token)match(input,53,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConversion"


    // $ANTLR start "entryRuleMethodExpr"
    // InternalGo.g:6565:1: entryRuleMethodExpr returns [EObject current=null] : iv_ruleMethodExpr= ruleMethodExpr EOF ;
    public final EObject entryRuleMethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodExpr = null;


        try {
            // InternalGo.g:6565:51: (iv_ruleMethodExpr= ruleMethodExpr EOF )
            // InternalGo.g:6566:2: iv_ruleMethodExpr= ruleMethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodExpr=ruleMethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodExpr"


    // $ANTLR start "ruleMethodExpr"
    // InternalGo.g:6572:1: ruleMethodExpr returns [EObject current=null] : (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) ) ;
    public final EObject ruleMethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ReceiverType_0 = null;

        AntlrDatatypeRuleToken lv_methodn_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6578:2: ( (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) ) )
            // InternalGo.g:6579:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) )
            {
            // InternalGo.g:6579:2: (this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) ) )
            // InternalGo.g:6580:3: this_ReceiverType_0= ruleReceiverType otherlv_1= '.' ( (lv_methodn_2_0= ruleMethodName ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_9);
            this_ReceiverType_0=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ReceiverType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:6595:3: ( (lv_methodn_2_0= ruleMethodName ) )
            // InternalGo.g:6596:4: (lv_methodn_2_0= ruleMethodName )
            {
            // InternalGo.g:6596:4: (lv_methodn_2_0= ruleMethodName )
            // InternalGo.g:6597:5: lv_methodn_2_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getMethodnMethodNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_methodn_2_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"methodn",
              						lv_methodn_2_0,
              						"org.xtext.example.mydsl.Go.MethodName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodExpr"


    // $ANTLR start "entryRuleSelector"
    // InternalGo.g:6618:1: entryRuleSelector returns [String current=null] : iv_ruleSelector= ruleSelector EOF ;
    public final String entryRuleSelector() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSelector = null;


        try {
            // InternalGo.g:6618:48: (iv_ruleSelector= ruleSelector EOF )
            // InternalGo.g:6619:2: iv_ruleSelector= ruleSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelector=ruleSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelector.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelector"


    // $ANTLR start "ruleSelector"
    // InternalGo.g:6625:1: ruleSelector returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleSelector() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_1 = null;



        	enterRule();

        try {
            // InternalGo.g:6631:2: ( (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER ) )
            // InternalGo.g:6632:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            {
            // InternalGo.g:6632:2: (kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER )
            // InternalGo.g:6633:3: kw= '.' this_IDENTIFIER_1= ruleIDENTIFIER
            {
            kw=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSelectorAccess().getIDENTIFIERParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_1=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelector"


    // $ANTLR start "entryRuleIndex"
    // InternalGo.g:6652:1: entryRuleIndex returns [EObject current=null] : iv_ruleIndex= ruleIndex EOF ;
    public final EObject entryRuleIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndex = null;


        try {
            // InternalGo.g:6652:46: (iv_ruleIndex= ruleIndex EOF )
            // InternalGo.g:6653:2: iv_ruleIndex= ruleIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndex=ruleIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndex"


    // $ANTLR start "ruleIndex"
    // InternalGo.g:6659:1: ruleIndex returns [EObject current=null] : (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6665:2: ( (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' ) )
            // InternalGo.g:6666:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            {
            // InternalGo.g:6666:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']' )
            // InternalGo.g:6667:3: otherlv_0= '[' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:6671:3: ( (lv_expression_1_0= ruleExpression ) )
            // InternalGo.g:6672:4: (lv_expression_1_0= ruleExpression )
            {
            // InternalGo.g:6672:4: (lv_expression_1_0= ruleExpression )
            // InternalGo.g:6673:5: lv_expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIndexRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"org.xtext.example.mydsl.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndex"


    // $ANTLR start "entryRuleSlice"
    // InternalGo.g:6698:1: entryRuleSlice returns [EObject current=null] : iv_ruleSlice= ruleSlice EOF ;
    public final EObject entryRuleSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSlice = null;


        try {
            // InternalGo.g:6698:46: (iv_ruleSlice= ruleSlice EOF )
            // InternalGo.g:6699:2: iv_ruleSlice= ruleSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSlice=ruleSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSlice"


    // $ANTLR start "ruleSlice"
    // InternalGo.g:6705:1: ruleSlice returns [EObject current=null] : ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) ;
    public final EObject ruleSlice() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;

        EObject lv_expression3_7_0 = null;

        EObject lv_expression4_9_0 = null;

        EObject lv_expression5_11_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6711:2: ( ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) ) )
            // InternalGo.g:6712:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            {
            // InternalGo.g:6712:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) | (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==47) ) {
                int LA85_1 = input.LA(2);

                if ( (synpred122_InternalGo()) ) {
                    alt85=1;
                }
                else if ( (true) ) {
                    alt85=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 85, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalGo.g:6713:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    {
                    // InternalGo.g:6713:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
                    // InternalGo.g:6714:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
                    {
                    // InternalGo.g:6714:4: ()
                    // InternalGo.g:6715:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSliceAccess().getSliceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,47,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0_1());
                      			
                    }
                    // InternalGo.g:6728:4: ( (lv_expression_2_0= ruleExpression ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==RULE_LETTER||LA82_0==RULE_DECIMALS||(LA82_0>=RULE_UNARY_OP && LA82_0<=RULE_STRING)||LA82_0==40||LA82_0==42||(LA82_0>=44 && LA82_0<=45)||LA82_0==47||LA82_0==49||LA82_0==54||(LA82_0>=56 && LA82_0<=59)) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalGo.g:6729:5: (lv_expression_2_0= ruleExpression )
                            {
                            // InternalGo.g:6729:5: (lv_expression_2_0= ruleExpression )
                            // InternalGo.g:6730:6: lv_expression_2_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_37);
                            lv_expression_2_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_2_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,60,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSliceAccess().getColonKeyword_0_3());
                      			
                    }
                    // InternalGo.g:6751:4: ( (lv_expression2_4_0= ruleExpression ) )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==RULE_LETTER||LA83_0==RULE_DECIMALS||(LA83_0>=RULE_UNARY_OP && LA83_0<=RULE_STRING)||LA83_0==40||LA83_0==42||(LA83_0>=44 && LA83_0<=45)||LA83_0==47||LA83_0==49||LA83_0==54||(LA83_0>=56 && LA83_0<=59)) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalGo.g:6752:5: (lv_expression2_4_0= ruleExpression )
                            {
                            // InternalGo.g:6752:5: (lv_expression2_4_0= ruleExpression )
                            // InternalGo.g:6753:6: lv_expression2_4_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_20);
                            lv_expression2_4_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression2",
                              							lv_expression2_4_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6776:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    {
                    // InternalGo.g:6776:3: (otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']' )
                    // InternalGo.g:6777:4: otherlv_6= '[' ( (lv_expression3_7_0= ruleExpression ) )? otherlv_8= ':' ( (lv_expression4_9_0= ruleExpression ) ) otherlv_10= ':' ( (lv_expression5_11_0= ruleExpression ) ) otherlv_12= ']'
                    {
                    otherlv_6=(Token)match(input,47,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalGo.g:6781:4: ( (lv_expression3_7_0= ruleExpression ) )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==RULE_LETTER||LA84_0==RULE_DECIMALS||(LA84_0>=RULE_UNARY_OP && LA84_0<=RULE_STRING)||LA84_0==40||LA84_0==42||(LA84_0>=44 && LA84_0<=45)||LA84_0==47||LA84_0==49||LA84_0==54||(LA84_0>=56 && LA84_0<=59)) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // InternalGo.g:6782:5: (lv_expression3_7_0= ruleExpression )
                            {
                            // InternalGo.g:6782:5: (lv_expression3_7_0= ruleExpression )
                            // InternalGo.g:6783:6: lv_expression3_7_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSliceAccess().getExpression3ExpressionParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_37);
                            lv_expression3_7_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSliceRule());
                              						}
                              						set(
                              							current,
                              							"expression3",
                              							lv_expression3_7_0,
                              							"org.xtext.example.mydsl.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,60,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSliceAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalGo.g:6804:4: ( (lv_expression4_9_0= ruleExpression ) )
                    // InternalGo.g:6805:5: (lv_expression4_9_0= ruleExpression )
                    {
                    // InternalGo.g:6805:5: (lv_expression4_9_0= ruleExpression )
                    // InternalGo.g:6806:6: lv_expression4_9_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression4ExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_expression4_9_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression4",
                      							lv_expression4_9_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,60,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSliceAccess().getColonKeyword_1_4());
                      			
                    }
                    // InternalGo.g:6827:4: ( (lv_expression5_11_0= ruleExpression ) )
                    // InternalGo.g:6828:5: (lv_expression5_11_0= ruleExpression )
                    {
                    // InternalGo.g:6828:5: (lv_expression5_11_0= ruleExpression )
                    // InternalGo.g:6829:6: lv_expression5_11_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSliceAccess().getExpression5ExpressionParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_expression5_11_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSliceRule());
                      						}
                      						set(
                      							current,
                      							"expression5",
                      							lv_expression5_11_0,
                      							"org.xtext.example.mydsl.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSlice"


    // $ANTLR start "entryRuleTypeAssertion"
    // InternalGo.g:6855:1: entryRuleTypeAssertion returns [EObject current=null] : iv_ruleTypeAssertion= ruleTypeAssertion EOF ;
    public final EObject entryRuleTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeAssertion = null;


        try {
            // InternalGo.g:6855:54: (iv_ruleTypeAssertion= ruleTypeAssertion EOF )
            // InternalGo.g:6856:2: iv_ruleTypeAssertion= ruleTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeAssertion=ruleTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeAssertion"


    // $ANTLR start "ruleTypeAssertion"
    // InternalGo.g:6862:1: ruleTypeAssertion returns [EObject current=null] : (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) ;
    public final EObject ruleTypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_Type_2 = null;



        	enterRule();

        try {
            // InternalGo.g:6868:2: ( (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' ) )
            // InternalGo.g:6869:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            {
            // InternalGo.g:6869:2: (otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')' )
            // InternalGo.g:6870:3: otherlv_0= '.' otherlv_1= '(' this_Type_2= ruleType otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,45,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_18);
            this_Type_2=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Type_2;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeAssertion"


    // $ANTLR start "entryRuleArguments"
    // InternalGo.g:6897:1: entryRuleArguments returns [EObject current=null] : iv_ruleArguments= ruleArguments EOF ;
    public final EObject entryRuleArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArguments = null;


        try {
            // InternalGo.g:6897:50: (iv_ruleArguments= ruleArguments EOF )
            // InternalGo.g:6898:2: iv_ruleArguments= ruleArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArguments=ruleArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArguments"


    // $ANTLR start "ruleArguments"
    // InternalGo.g:6904:1: ruleArguments returns [EObject current=null] : ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) ;
    public final EObject ruleArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_expressionlist_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6910:2: ( ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) )
            // InternalGo.g:6911:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            {
            // InternalGo.g:6911:2: ( () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            // InternalGo.g:6912:3: () otherlv_1= '(' ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')'
            {
            // InternalGo.g:6912:3: ()
            // InternalGo.g:6913:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:6926:3: ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==RULE_LETTER||LA91_0==RULE_DECIMALS||(LA91_0>=RULE_UNARY_OP && LA91_0<=RULE_STRING)||LA91_0==40||LA91_0==42||(LA91_0>=44 && LA91_0<=45)||LA91_0==47||LA91_0==49||(LA91_0>=53 && LA91_0<=59)) ) {
                alt91=1;
            }
            else if ( (LA91_0==46) ) {
                int LA91_2 = input.LA(2);

                if ( (synpred130_InternalGo()) ) {
                    alt91=1;
                }
            }
            switch (alt91) {
                case 1 :
                    // InternalGo.g:6927:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )?
                    {
                    // InternalGo.g:6927:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?
                    int alt88=3;
                    alt88 = dfa88.predict(input);
                    switch (alt88) {
                        case 1 :
                            // InternalGo.g:6928:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            {
                            // InternalGo.g:6928:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                            // InternalGo.g:6929:6: (lv_expressionlist_2_0= ruleExpressionList )
                            {
                            // InternalGo.g:6929:6: (lv_expressionlist_2_0= ruleExpressionList )
                            // InternalGo.g:6930:7: lv_expressionlist_2_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_67);
                            lv_expressionlist_2_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"expressionlist",
                              								lv_expressionlist_2_0,
                              								"org.xtext.example.mydsl.Go.ExpressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:6948:5: ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            {
                            // InternalGo.g:6948:5: ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                            // InternalGo.g:6949:6: ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            {
                            // InternalGo.g:6949:6: ( (lv_type_3_0= ruleType ) )
                            // InternalGo.g:6950:7: (lv_type_3_0= ruleType )
                            {
                            // InternalGo.g:6950:7: (lv_type_3_0= ruleType )
                            // InternalGo.g:6951:8: lv_type_3_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_66);
                            lv_type_3_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_3_0,
                              									"org.xtext.example.mydsl.Go.Type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:6968:6: ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                            int alt87=2;
                            int LA87_0 = input.LA(1);

                            if ( (LA87_0==53) ) {
                                int LA87_1 = input.LA(2);

                                if ( (LA87_1==RULE_LETTER||LA87_1==RULE_DECIMALS||(LA87_1>=RULE_UNARY_OP && LA87_1<=RULE_STRING)||LA87_1==40||LA87_1==42||(LA87_1>=44 && LA87_1<=45)||LA87_1==47||LA87_1==49||LA87_1==54||(LA87_1>=56 && LA87_1<=59)) ) {
                                    alt87=1;
                                }
                            }
                            else if ( (LA87_0==RULE_LETTER||LA87_0==RULE_DECIMALS||(LA87_0>=RULE_UNARY_OP && LA87_0<=RULE_STRING)||LA87_0==40||LA87_0==42||(LA87_0>=44 && LA87_0<=45)||LA87_0==47||LA87_0==49||LA87_0==54||(LA87_0>=56 && LA87_0<=59)) ) {
                                alt87=1;
                            }
                            switch (alt87) {
                                case 1 :
                                    // InternalGo.g:6969:7: (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    {
                                    // InternalGo.g:6969:7: (otherlv_4= ',' )?
                                    int alt86=2;
                                    int LA86_0 = input.LA(1);

                                    if ( (LA86_0==53) ) {
                                        alt86=1;
                                    }
                                    switch (alt86) {
                                        case 1 :
                                            // InternalGo.g:6970:8: otherlv_4= ','
                                            {
                                            otherlv_4=(Token)match(input,53,FOLLOW_19); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
                                              							
                                            }

                                            }
                                            break;

                                    }

                                    // InternalGo.g:6975:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                                    // InternalGo.g:6976:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    {
                                    // InternalGo.g:6976:8: (lv_expressionlist_5_0= ruleExpressionList )
                                    // InternalGo.g:6977:9: lv_expressionlist_5_0= ruleExpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_67);
                                    lv_expressionlist_5_0=ruleExpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"expressionlist",
                                      										lv_expressionlist_5_0,
                                      										"org.xtext.example.mydsl.Go.ExpressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:6997:4: (otherlv_6= '...' )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==55) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalGo.g:6998:5: otherlv_6= '...'
                            {
                            otherlv_6=(Token)match(input,55,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:7003:4: (otherlv_7= ',' )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==53) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalGo.g:7004:5: otherlv_7= ','
                            {
                            otherlv_7=(Token)match(input,53,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArguments"


    // $ANTLR start "entryRuleLiteral"
    // InternalGo.g:7018:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalGo.g:7018:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalGo.g:7019:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalGo.g:7025:1: ruleLiteral returns [EObject current=null] : ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_basic_1_0 = null;

        EObject lv_cl_2_0 = null;

        EObject lv_fl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7031:2: ( ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) ) )
            // InternalGo.g:7032:2: ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) )
            {
            // InternalGo.g:7032:2: ( ( () ( (lv_basic_1_0= ruleBasicLit ) ) ) | ( (lv_cl_2_0= ruleCompositeLit ) ) | ( (lv_fl_3_0= ruleFunctionLit ) ) )
            int alt92=3;
            switch ( input.LA(1) ) {
            case RULE_DECIMALS:
            case RULE_INT_LIT:
            case RULE_STRING:
            case 42:
            case 44:
                {
                alt92=1;
                }
                break;
            case RULE_LETTER:
            case 47:
            case 49:
            case 57:
                {
                alt92=2;
                }
                break;
            case 40:
                {
                alt92=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }

            switch (alt92) {
                case 1 :
                    // InternalGo.g:7033:3: ( () ( (lv_basic_1_0= ruleBasicLit ) ) )
                    {
                    // InternalGo.g:7033:3: ( () ( (lv_basic_1_0= ruleBasicLit ) ) )
                    // InternalGo.g:7034:4: () ( (lv_basic_1_0= ruleBasicLit ) )
                    {
                    // InternalGo.g:7034:4: ()
                    // InternalGo.g:7035:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralAccess().getLiteralAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7044:4: ( (lv_basic_1_0= ruleBasicLit ) )
                    // InternalGo.g:7045:5: (lv_basic_1_0= ruleBasicLit )
                    {
                    // InternalGo.g:7045:5: (lv_basic_1_0= ruleBasicLit )
                    // InternalGo.g:7046:6: lv_basic_1_0= ruleBasicLit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getBasicBasicLitParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_basic_1_0=ruleBasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"basic",
                      							lv_basic_1_0,
                      							"org.xtext.example.mydsl.Go.BasicLit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7065:3: ( (lv_cl_2_0= ruleCompositeLit ) )
                    {
                    // InternalGo.g:7065:3: ( (lv_cl_2_0= ruleCompositeLit ) )
                    // InternalGo.g:7066:4: (lv_cl_2_0= ruleCompositeLit )
                    {
                    // InternalGo.g:7066:4: (lv_cl_2_0= ruleCompositeLit )
                    // InternalGo.g:7067:5: lv_cl_2_0= ruleCompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getClCompositeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_cl_2_0=ruleCompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"cl",
                      						lv_cl_2_0,
                      						"org.xtext.example.mydsl.Go.CompositeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7085:3: ( (lv_fl_3_0= ruleFunctionLit ) )
                    {
                    // InternalGo.g:7085:3: ( (lv_fl_3_0= ruleFunctionLit ) )
                    // InternalGo.g:7086:4: (lv_fl_3_0= ruleFunctionLit )
                    {
                    // InternalGo.g:7086:4: (lv_fl_3_0= ruleFunctionLit )
                    // InternalGo.g:7087:5: lv_fl_3_0= ruleFunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getFlFunctionLitParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_fl_3_0=ruleFunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"fl",
                      						lv_fl_3_0,
                      						"org.xtext.example.mydsl.Go.FunctionLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleFunctionLit"
    // InternalGo.g:7108:1: entryRuleFunctionLit returns [EObject current=null] : iv_ruleFunctionLit= ruleFunctionLit EOF ;
    public final EObject entryRuleFunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionLit = null;


        try {
            // InternalGo.g:7108:52: (iv_ruleFunctionLit= ruleFunctionLit EOF )
            // InternalGo.g:7109:2: iv_ruleFunctionLit= ruleFunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionLit=ruleFunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionLit"


    // $ANTLR start "ruleFunctionLit"
    // InternalGo.g:7115:1: ruleFunctionLit returns [EObject current=null] : (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) ;
    public final EObject ruleFunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_signature_1_0 = null;

        EObject lv_functionbody_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7121:2: ( (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) ) )
            // InternalGo.g:7122:2: (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            {
            // InternalGo.g:7122:2: (otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) ) )
            // InternalGo.g:7123:3: otherlv_0= 'func' ( (lv_signature_1_0= ruleSignature ) ) ( (lv_functionbody_2_0= ruleFunctionBody ) )
            {
            otherlv_0=(Token)match(input,40,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:7127:3: ( (lv_signature_1_0= ruleSignature ) )
            // InternalGo.g:7128:4: (lv_signature_1_0= ruleSignature )
            {
            // InternalGo.g:7128:4: (lv_signature_1_0= ruleSignature )
            // InternalGo.g:7129:5: lv_signature_1_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_signature_1_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_1_0,
              						"org.xtext.example.mydsl.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7146:3: ( (lv_functionbody_2_0= ruleFunctionBody ) )
            // InternalGo.g:7147:4: (lv_functionbody_2_0= ruleFunctionBody )
            {
            // InternalGo.g:7147:4: (lv_functionbody_2_0= ruleFunctionBody )
            // InternalGo.g:7148:5: lv_functionbody_2_0= ruleFunctionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionbodyFunctionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_functionbody_2_0=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"functionbody",
              						lv_functionbody_2_0,
              						"org.xtext.example.mydsl.Go.FunctionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionLit"


    // $ANTLR start "entryRuleCompositeLit"
    // InternalGo.g:7169:1: entryRuleCompositeLit returns [EObject current=null] : iv_ruleCompositeLit= ruleCompositeLit EOF ;
    public final EObject entryRuleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompositeLit = null;


        try {
            // InternalGo.g:7169:53: (iv_ruleCompositeLit= ruleCompositeLit EOF )
            // InternalGo.g:7170:2: iv_ruleCompositeLit= ruleCompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompositeLit=ruleCompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompositeLit"


    // $ANTLR start "ruleCompositeLit"
    // InternalGo.g:7176:1: ruleCompositeLit returns [EObject current=null] : ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) ;
    public final EObject ruleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_literalt_0_0 = null;

        EObject lv_literalv_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7182:2: ( ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) ) )
            // InternalGo.g:7183:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            {
            // InternalGo.g:7183:2: ( ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) ) )
            // InternalGo.g:7184:3: ( (lv_literalt_0_0= ruleLiteralType ) ) ( (lv_literalv_1_0= ruleLiteralValue ) )
            {
            // InternalGo.g:7184:3: ( (lv_literalt_0_0= ruleLiteralType ) )
            // InternalGo.g:7185:4: (lv_literalt_0_0= ruleLiteralType )
            {
            // InternalGo.g:7185:4: (lv_literalt_0_0= ruleLiteralType )
            // InternalGo.g:7186:5: lv_literalt_0_0= ruleLiteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteraltLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_literalt_0_0=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalt",
              						lv_literalt_0_0,
              						"org.xtext.example.mydsl.Go.LiteralType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7203:3: ( (lv_literalv_1_0= ruleLiteralValue ) )
            // InternalGo.g:7204:4: (lv_literalv_1_0= ruleLiteralValue )
            {
            // InternalGo.g:7204:4: (lv_literalv_1_0= ruleLiteralValue )
            // InternalGo.g:7205:5: lv_literalv_1_0= ruleLiteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralvLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_literalv_1_0=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalv",
              						lv_literalv_1_0,
              						"org.xtext.example.mydsl.Go.LiteralValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompositeLit"


    // $ANTLR start "entryRuleLiteralType"
    // InternalGo.g:7226:1: entryRuleLiteralType returns [EObject current=null] : iv_ruleLiteralType= ruleLiteralType EOF ;
    public final EObject entryRuleLiteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralType = null;


        try {
            // InternalGo.g:7226:52: (iv_ruleLiteralType= ruleLiteralType EOF )
            // InternalGo.g:7227:2: iv_ruleLiteralType= ruleLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralType=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralType"


    // $ANTLR start "ruleLiteralType"
    // InternalGo.g:7233:1: ruleLiteralType returns [EObject current=null] : ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) ;
    public final EObject ruleLiteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_structtype_1_0 = null;

        EObject lv_arraytype_2_0 = null;

        EObject lv_elementype_6_0 = null;

        EObject lv_slicetype_7_0 = null;

        EObject lv_maptype_8_0 = null;

        EObject lv_typename_9_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7239:2: ( ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) ) )
            // InternalGo.g:7240:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            {
            // InternalGo.g:7240:2: ( ( () ( (lv_structtype_1_0= ruleStructType ) ) ) | ( (lv_arraytype_2_0= ruleArrayType ) ) | (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) ) | ( (lv_slicetype_7_0= ruleSliceType ) ) | ( (lv_maptype_8_0= ruleMapType ) ) | ( (lv_typename_9_0= ruleTypeName ) ) )
            int alt93=6;
            switch ( input.LA(1) ) {
            case 49:
                {
                alt93=1;
                }
                break;
            case 47:
                {
                switch ( input.LA(2) ) {
                case 55:
                    {
                    alt93=3;
                    }
                    break;
                case RULE_LETTER:
                case RULE_DECIMALS:
                case RULE_UNARY_OP:
                case RULE_INT_LIT:
                case RULE_STRING:
                case 40:
                case 42:
                case 44:
                case 45:
                case 47:
                case 49:
                case 54:
                case 56:
                case 57:
                case 58:
                case 59:
                    {
                    alt93=2;
                    }
                    break;
                case 48:
                    {
                    alt93=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 2, input);

                    throw nvae;
                }

                }
                break;
            case 57:
                {
                alt93=5;
                }
                break;
            case RULE_LETTER:
                {
                alt93=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // InternalGo.g:7241:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    {
                    // InternalGo.g:7241:3: ( () ( (lv_structtype_1_0= ruleStructType ) ) )
                    // InternalGo.g:7242:4: () ( (lv_structtype_1_0= ruleStructType ) )
                    {
                    // InternalGo.g:7242:4: ()
                    // InternalGo.g:7243:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralTypeAccess().getLiteralTypeAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7252:4: ( (lv_structtype_1_0= ruleStructType ) )
                    // InternalGo.g:7253:5: (lv_structtype_1_0= ruleStructType )
                    {
                    // InternalGo.g:7253:5: (lv_structtype_1_0= ruleStructType )
                    // InternalGo.g:7254:6: lv_structtype_1_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructtypeStructTypeParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_structtype_1_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"structtype",
                      							lv_structtype_1_0,
                      							"org.xtext.example.mydsl.Go.StructType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7273:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    {
                    // InternalGo.g:7273:3: ( (lv_arraytype_2_0= ruleArrayType ) )
                    // InternalGo.g:7274:4: (lv_arraytype_2_0= ruleArrayType )
                    {
                    // InternalGo.g:7274:4: (lv_arraytype_2_0= ruleArrayType )
                    // InternalGo.g:7275:5: lv_arraytype_2_0= ruleArrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getArraytypeArrayTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arraytype_2_0=ruleArrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"arraytype",
                      						lv_arraytype_2_0,
                      						"org.xtext.example.mydsl.Go.ArrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7293:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    {
                    // InternalGo.g:7293:3: (otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) ) )
                    // InternalGo.g:7294:4: otherlv_3= '[' otherlv_4= '...' otherlv_5= ']' ( (lv_elementype_6_0= ruleElementType ) )
                    {
                    otherlv_3=(Token)match(input,47,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_4=(Token)match(input,55,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_5=(Token)match(input,48,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }
                    // InternalGo.g:7306:4: ( (lv_elementype_6_0= ruleElementType ) )
                    // InternalGo.g:7307:5: (lv_elementype_6_0= ruleElementType )
                    {
                    // InternalGo.g:7307:5: (lv_elementype_6_0= ruleElementType )
                    // InternalGo.g:7308:6: lv_elementype_6_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementypeElementTypeParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elementype_6_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"elementype",
                      							lv_elementype_6_0,
                      							"org.xtext.example.mydsl.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:7327:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    {
                    // InternalGo.g:7327:3: ( (lv_slicetype_7_0= ruleSliceType ) )
                    // InternalGo.g:7328:4: (lv_slicetype_7_0= ruleSliceType )
                    {
                    // InternalGo.g:7328:4: (lv_slicetype_7_0= ruleSliceType )
                    // InternalGo.g:7329:5: lv_slicetype_7_0= ruleSliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getSlicetypeSliceTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_slicetype_7_0=ruleSliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"slicetype",
                      						lv_slicetype_7_0,
                      						"org.xtext.example.mydsl.Go.SliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:7347:3: ( (lv_maptype_8_0= ruleMapType ) )
                    {
                    // InternalGo.g:7347:3: ( (lv_maptype_8_0= ruleMapType ) )
                    // InternalGo.g:7348:4: (lv_maptype_8_0= ruleMapType )
                    {
                    // InternalGo.g:7348:4: (lv_maptype_8_0= ruleMapType )
                    // InternalGo.g:7349:5: lv_maptype_8_0= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMaptypeMapTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_maptype_8_0=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"maptype",
                      						lv_maptype_8_0,
                      						"org.xtext.example.mydsl.Go.MapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:7367:3: ( (lv_typename_9_0= ruleTypeName ) )
                    {
                    // InternalGo.g:7367:3: ( (lv_typename_9_0= ruleTypeName ) )
                    // InternalGo.g:7368:4: (lv_typename_9_0= ruleTypeName )
                    {
                    // InternalGo.g:7368:4: (lv_typename_9_0= ruleTypeName )
                    // InternalGo.g:7369:5: lv_typename_9_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypenameTypeNameParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typename_9_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"typename",
                      						lv_typename_9_0,
                      						"org.xtext.example.mydsl.Go.TypeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralType"


    // $ANTLR start "entryRuleLiteralValue"
    // InternalGo.g:7390:1: entryRuleLiteralValue returns [EObject current=null] : iv_ruleLiteralValue= ruleLiteralValue EOF ;
    public final EObject entryRuleLiteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValue = null;


        try {
            // InternalGo.g:7390:53: (iv_ruleLiteralValue= ruleLiteralValue EOF )
            // InternalGo.g:7391:2: iv_ruleLiteralValue= ruleLiteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValue=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValue"


    // $ANTLR start "ruleLiteralValue"
    // InternalGo.g:7397:1: ruleLiteralValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) ;
    public final EObject ruleLiteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elementlist_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7403:2: ( ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) )
            // InternalGo.g:7404:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            {
            // InternalGo.g:7404:2: ( () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            // InternalGo.g:7405:3: () otherlv_1= '{' ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}'
            {
            // InternalGo.g:7405:3: ()
            // InternalGo.g:7406:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:7419:3: ( ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )? )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_LETTER||LA95_0==RULE_DECIMALS||(LA95_0>=RULE_UNARY_OP && LA95_0<=RULE_STRING)||LA95_0==40||LA95_0==42||(LA95_0>=44 && LA95_0<=45)||LA95_0==47||(LA95_0>=49 && LA95_0<=50)||LA95_0==54||(LA95_0>=56 && LA95_0<=59)) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalGo.g:7420:4: ( (lv_elementlist_2_0= ruleElementList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:7420:4: ( (lv_elementlist_2_0= ruleElementList ) )
                    // InternalGo.g:7421:5: (lv_elementlist_2_0= ruleElementList )
                    {
                    // InternalGo.g:7421:5: (lv_elementlist_2_0= ruleElementList )
                    // InternalGo.g:7422:6: lv_elementlist_2_0= ruleElementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementlistElementListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_elementlist_2_0=ruleElementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"elementlist",
                      							lv_elementlist_2_0,
                      							"org.xtext.example.mydsl.Go.ElementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7439:4: (otherlv_3= ',' )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==53) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalGo.g:7440:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,53,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValue"


    // $ANTLR start "entryRuleElementList"
    // InternalGo.g:7454:1: entryRuleElementList returns [EObject current=null] : iv_ruleElementList= ruleElementList EOF ;
    public final EObject entryRuleElementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementList = null;


        try {
            // InternalGo.g:7454:52: (iv_ruleElementList= ruleElementList EOF )
            // InternalGo.g:7455:2: iv_ruleElementList= ruleElementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementList=ruleElementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementList"


    // $ANTLR start "ruleElementList"
    // InternalGo.g:7461:1: ruleElementList returns [EObject current=null] : (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) ;
    public final EObject ruleElementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_KeyedElement_0 = null;

        EObject lv_keyedelement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7467:2: ( (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* ) )
            // InternalGo.g:7468:2: (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            {
            // InternalGo.g:7468:2: (this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )* )
            // InternalGo.g:7469:3: this_KeyedElement_0= ruleKeyedElement ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_71);
            this_KeyedElement_0=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_KeyedElement_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:7480:3: ( (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==53) ) {
                    int LA97_1 = input.LA(2);

                    if ( (LA97_1==RULE_LETTER||LA97_1==RULE_DECIMALS||(LA97_1>=RULE_UNARY_OP && LA97_1<=RULE_STRING)||LA97_1==40||LA97_1==42||(LA97_1>=44 && LA97_1<=45)||LA97_1==47||(LA97_1>=49 && LA97_1<=50)||LA97_1==54||(LA97_1>=56 && LA97_1<=59)) ) {
                        alt97=1;
                    }


                }
                else if ( (LA97_0==RULE_LETTER||LA97_0==RULE_DECIMALS||(LA97_0>=RULE_UNARY_OP && LA97_0<=RULE_STRING)||LA97_0==40||LA97_0==42||(LA97_0>=44 && LA97_0<=45)||LA97_0==47||(LA97_0>=49 && LA97_0<=50)||LA97_0==54||(LA97_0>=56 && LA97_0<=59)) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalGo.g:7481:4: (otherlv_1= ',' )? ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    {
            	    // InternalGo.g:7481:4: (otherlv_1= ',' )?
            	    int alt96=2;
            	    int LA96_0 = input.LA(1);

            	    if ( (LA96_0==53) ) {
            	        alt96=1;
            	    }
            	    switch (alt96) {
            	        case 1 :
            	            // InternalGo.g:7482:5: otherlv_1= ','
            	            {
            	            otherlv_1=(Token)match(input,53,FOLLOW_56); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalGo.g:7487:4: ( (lv_keyedelement_2_0= ruleKeyedElement ) )
            	    // InternalGo.g:7488:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    {
            	    // InternalGo.g:7488:5: (lv_keyedelement_2_0= ruleKeyedElement )
            	    // InternalGo.g:7489:6: lv_keyedelement_2_0= ruleKeyedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedelementKeyedElementParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_keyedelement_2_0=ruleKeyedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getElementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"keyedelement",
            	      							lv_keyedelement_2_0,
            	      							"org.xtext.example.mydsl.Go.KeyedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementList"


    // $ANTLR start "entryRuleKeyedElement"
    // InternalGo.g:7511:1: entryRuleKeyedElement returns [EObject current=null] : iv_ruleKeyedElement= ruleKeyedElement EOF ;
    public final EObject entryRuleKeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyedElement = null;


        try {
            // InternalGo.g:7511:53: (iv_ruleKeyedElement= ruleKeyedElement EOF )
            // InternalGo.g:7512:2: iv_ruleKeyedElement= ruleKeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyedElement=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyedElement"


    // $ANTLR start "ruleKeyedElement"
    // InternalGo.g:7518:1: ruleKeyedElement returns [EObject current=null] : ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) ;
    public final EObject ruleKeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_Key_0 = null;

        EObject lv_element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7524:2: ( ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) ) )
            // InternalGo.g:7525:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            {
            // InternalGo.g:7525:2: ( (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) ) )
            // InternalGo.g:7526:3: (this_Key_0= ruleKey otherlv_1= ':' )? ( (lv_element_2_0= ruleElement ) )
            {
            // InternalGo.g:7526:3: (this_Key_0= ruleKey otherlv_1= ':' )?
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalGo.g:7527:4: this_Key_0= ruleKey otherlv_1= ':'
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_37);
                    this_Key_0=ruleKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Key_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_1=(Token)match(input,60,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:7543:3: ( (lv_element_2_0= ruleElement ) )
            // InternalGo.g:7544:4: (lv_element_2_0= ruleElement )
            {
            // InternalGo.g:7544:4: (lv_element_2_0= ruleElement )
            // InternalGo.g:7545:5: lv_element_2_0= ruleElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_element_2_0=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"element",
              						lv_element_2_0,
              						"org.xtext.example.mydsl.Go.Element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyedElement"


    // $ANTLR start "entryRuleKey"
    // InternalGo.g:7566:1: entryRuleKey returns [EObject current=null] : iv_ruleKey= ruleKey EOF ;
    public final EObject entryRuleKey() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKey = null;


        try {
            // InternalGo.g:7566:44: (iv_ruleKey= ruleKey EOF )
            // InternalGo.g:7567:2: iv_ruleKey= ruleKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKey=ruleKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKey"


    // $ANTLR start "ruleKey"
    // InternalGo.g:7573:1: ruleKey returns [EObject current=null] : ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) ;
    public final EObject ruleKey() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_fieldn_1_0 = null;

        EObject this_Expression_2 = null;

        EObject this_LiteralValue_3 = null;



        	enterRule();

        try {
            // InternalGo.g:7579:2: ( ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue ) )
            // InternalGo.g:7580:2: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            {
            // InternalGo.g:7580:2: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) | this_Expression_2= ruleExpression | this_LiteralValue_3= ruleLiteralValue )
            int alt99=3;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                int LA99_1 = input.LA(2);

                if ( (synpred143_InternalGo()) ) {
                    alt99=1;
                }
                else if ( (synpred144_InternalGo()) ) {
                    alt99=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DECIMALS:
            case RULE_UNARY_OP:
            case RULE_INT_LIT:
            case RULE_STRING:
            case 40:
            case 42:
            case 44:
            case 45:
            case 47:
            case 49:
            case 54:
            case 56:
            case 57:
            case 58:
            case 59:
                {
                alt99=2;
                }
                break;
            case 50:
                {
                alt99=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // InternalGo.g:7581:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
                    {
                    // InternalGo.g:7581:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
                    // InternalGo.g:7582:4: () ( (lv_fieldn_1_0= ruleFieldName ) )
                    {
                    // InternalGo.g:7582:4: ()
                    // InternalGo.g:7583:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getKeyAccess().getKeyAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7592:4: ( (lv_fieldn_1_0= ruleFieldName ) )
                    // InternalGo.g:7593:5: (lv_fieldn_1_0= ruleFieldName )
                    {
                    // InternalGo.g:7593:5: (lv_fieldn_1_0= ruleFieldName )
                    // InternalGo.g:7594:6: lv_fieldn_1_0= ruleFieldName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyAccess().getFieldnFieldNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_fieldn_1_0=ruleFieldName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyRule());
                      						}
                      						set(
                      							current,
                      							"fieldn",
                      							lv_fieldn_1_0,
                      							"org.xtext.example.mydsl.Go.FieldName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7613:3: this_Expression_2= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_2=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:7625:3: this_LiteralValue_3= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_3=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKey"


    // $ANTLR start "entryRuleFieldName"
    // InternalGo.g:7640:1: entryRuleFieldName returns [String current=null] : iv_ruleFieldName= ruleFieldName EOF ;
    public final String entryRuleFieldName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFieldName = null;


        try {
            // InternalGo.g:7640:49: (iv_ruleFieldName= ruleFieldName EOF )
            // InternalGo.g:7641:2: iv_ruleFieldName= ruleFieldName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldName=ruleFieldName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldName"


    // $ANTLR start "ruleFieldName"
    // InternalGo.g:7647:1: ruleFieldName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IDENTIFIER_0= ruleIDENTIFIER ;
    public final AntlrDatatypeRuleToken ruleFieldName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IDENTIFIER_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7653:2: (this_IDENTIFIER_0= ruleIDENTIFIER )
            // InternalGo.g:7654:2: this_IDENTIFIER_0= ruleIDENTIFIER
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFieldNameAccess().getIDENTIFIERParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_IDENTIFIER_0=ruleIDENTIFIER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldName"


    // $ANTLR start "entryRuleElement"
    // InternalGo.g:7667:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalGo.g:7667:48: (iv_ruleElement= ruleElement EOF )
            // InternalGo.g:7668:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalGo.g:7674:1: ruleElement returns [EObject current=null] : (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;

        EObject this_LiteralValue_1 = null;



        	enterRule();

        try {
            // InternalGo.g:7680:2: ( (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue ) )
            // InternalGo.g:7681:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            {
            // InternalGo.g:7681:2: (this_Expression_0= ruleExpression | this_LiteralValue_1= ruleLiteralValue )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==RULE_LETTER||LA100_0==RULE_DECIMALS||(LA100_0>=RULE_UNARY_OP && LA100_0<=RULE_STRING)||LA100_0==40||LA100_0==42||(LA100_0>=44 && LA100_0<=45)||LA100_0==47||LA100_0==49||LA100_0==54||(LA100_0>=56 && LA100_0<=59)) ) {
                alt100=1;
            }
            else if ( (LA100_0==50) ) {
                alt100=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalGo.g:7682:3: this_Expression_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7694:3: this_LiteralValue_1= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValue_1=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleBasicLit"
    // InternalGo.g:7709:1: entryRuleBasicLit returns [String current=null] : iv_ruleBasicLit= ruleBasicLit EOF ;
    public final String entryRuleBasicLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBasicLit = null;


        try {
            // InternalGo.g:7709:48: (iv_ruleBasicLit= ruleBasicLit EOF )
            // InternalGo.g:7710:2: iv_ruleBasicLit= ruleBasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicLit=ruleBasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicLit"


    // $ANTLR start "ruleBasicLit"
    // InternalGo.g:7716:1: ruleBasicLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING ) ;
    public final AntlrDatatypeRuleToken ruleBasicLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_LIT_0=null;
        Token this_STRING_4=null;
        AntlrDatatypeRuleToken this_FLOAT_LIT_1 = null;

        AntlrDatatypeRuleToken this_IMAGINARY_LIT_2 = null;

        AntlrDatatypeRuleToken this_RUNE_LIT_3 = null;



        	enterRule();

        try {
            // InternalGo.g:7722:2: ( (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING ) )
            // InternalGo.g:7723:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING )
            {
            // InternalGo.g:7723:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING )
            int alt101=5;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalGo.g:7724:3: this_INT_LIT_0= RULE_INT_LIT
                    {
                    this_INT_LIT_0=(Token)match(input,RULE_INT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INT_LIT_0, grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:7732:3: this_FLOAT_LIT_1= ruleFLOAT_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getFLOAT_LITParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FLOAT_LIT_1=ruleFLOAT_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FLOAT_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:7743:3: this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IMAGINARY_LIT_2=ruleIMAGINARY_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IMAGINARY_LIT_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:7754:3: this_RUNE_LIT_3= ruleRUNE_LIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicLitAccess().getRUNE_LITParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RUNE_LIT_3=ruleRUNE_LIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RUNE_LIT_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:7765:3: this_STRING_4= RULE_STRING
                    {
                    this_STRING_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_4, grammarAccess.getBasicLitAccess().getSTRINGTerminalRuleCall_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicLit"


    // $ANTLR start "entryRuleReceiverType"
    // InternalGo.g:7776:1: entryRuleReceiverType returns [EObject current=null] : iv_ruleReceiverType= ruleReceiverType EOF ;
    public final EObject entryRuleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiverType = null;


        try {
            // InternalGo.g:7776:53: (iv_ruleReceiverType= ruleReceiverType EOF )
            // InternalGo.g:7777:2: iv_ruleReceiverType= ruleReceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiverType=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiverType"


    // $ANTLR start "ruleReceiverType"
    // InternalGo.g:7783:1: ruleReceiverType returns [EObject current=null] : ( (lv_type_0_0= ruleType ) ) ;
    public final EObject ruleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7789:2: ( ( (lv_type_0_0= ruleType ) ) )
            // InternalGo.g:7790:2: ( (lv_type_0_0= ruleType ) )
            {
            // InternalGo.g:7790:2: ( (lv_type_0_0= ruleType ) )
            // InternalGo.g:7791:3: (lv_type_0_0= ruleType )
            {
            // InternalGo.g:7791:3: (lv_type_0_0= ruleType )
            // InternalGo.g:7792:4: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
              				}
              				set(
              					current,
              					"type",
              					lv_type_0_0,
              					"org.xtext.example.mydsl.Go.Type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiverType"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalGo.g:7812:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBody = null;


        try {
            // InternalGo.g:7812:53: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalGo.g:7813:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalGo.g:7819:1: ruleFunctionBody returns [EObject current=null] : this_Block_0= ruleBlock ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7825:2: (this_Block_0= ruleBlock )
            // InternalGo.g:7826:2: this_Block_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Block_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Block_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleOperandName"
    // InternalGo.g:7840:1: entryRuleOperandName returns [EObject current=null] : iv_ruleOperandName= ruleOperandName EOF ;
    public final EObject entryRuleOperandName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperandName = null;


        try {
            // InternalGo.g:7840:52: (iv_ruleOperandName= ruleOperandName EOF )
            // InternalGo.g:7841:2: iv_ruleOperandName= ruleOperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperandName=ruleOperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperandName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperandName"


    // $ANTLR start "ruleOperandName"
    // InternalGo.g:7847:1: ruleOperandName returns [EObject current=null] : ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | this_QualifiedIdent_2= ruleQualifiedIdent ) ;
    public final EObject ruleOperandName() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_id_1_0 = null;

        EObject this_QualifiedIdent_2 = null;



        	enterRule();

        try {
            // InternalGo.g:7853:2: ( ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | this_QualifiedIdent_2= ruleQualifiedIdent ) )
            // InternalGo.g:7854:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | this_QualifiedIdent_2= ruleQualifiedIdent )
            {
            // InternalGo.g:7854:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | this_QualifiedIdent_2= ruleQualifiedIdent )
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalGo.g:7855:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
                    {
                    // InternalGo.g:7855:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
                    // InternalGo.g:7856:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )
                    {
                    // InternalGo.g:7856:4: ()
                    // InternalGo.g:7857:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getOperandNameAccess().getOperandNameAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7866:4: ( (lv_id_1_0= ruleIDENTIFIER ) )
                    // InternalGo.g:7867:5: (lv_id_1_0= ruleIDENTIFIER )
                    {
                    // InternalGo.g:7867:5: (lv_id_1_0= ruleIDENTIFIER )
                    // InternalGo.g:7868:6: lv_id_1_0= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandNameAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_1_0=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      						}
                      						set(
                      							current,
                      							"id",
                      							lv_id_1_0,
                      							"org.xtext.example.mydsl.Go.IDENTIFIER");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7887:3: this_QualifiedIdent_2= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedIdent_2=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QualifiedIdent_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperandName"


    // $ANTLR start "entryRuleImportDecl"
    // InternalGo.g:7902:1: entryRuleImportDecl returns [EObject current=null] : iv_ruleImportDecl= ruleImportDecl EOF ;
    public final EObject entryRuleImportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDecl = null;


        try {
            // InternalGo.g:7902:51: (iv_ruleImportDecl= ruleImportDecl EOF )
            // InternalGo.g:7903:2: iv_ruleImportDecl= ruleImportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDecl=ruleImportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportDecl"


    // $ANTLR start "ruleImportDecl"
    // InternalGo.g:7909:1: ruleImportDecl returns [EObject current=null] : ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) ) ;
    public final EObject ruleImportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_imports_2_0 = null;

        AntlrDatatypeRuleToken lv_imports2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7915:2: ( ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:7916:2: ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:7916:2: ( () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) ) )
            // InternalGo.g:7917:3: () otherlv_1= 'import' ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) )
            {
            // InternalGo.g:7917:3: ()
            // InternalGo.g:7918:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,82,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
              		
            }
            // InternalGo.g:7931:3: ( ( (lv_imports_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' ) )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==RULE_LETTER||LA104_0==RULE_STRING||LA104_0==42) ) {
                alt104=1;
            }
            else if ( (LA104_0==45) ) {
                alt104=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // InternalGo.g:7932:4: ( (lv_imports_2_0= ruleImportSpec ) )
                    {
                    // InternalGo.g:7932:4: ( (lv_imports_2_0= ruleImportSpec ) )
                    // InternalGo.g:7933:5: (lv_imports_2_0= ruleImportSpec )
                    {
                    // InternalGo.g:7933:5: (lv_imports_2_0= ruleImportSpec )
                    // InternalGo.g:7934:6: lv_imports_2_0= ruleImportSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportDeclAccess().getImportsImportSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_imports_2_0=ruleImportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportDeclRule());
                      						}
                      						add(
                      							current,
                      							"imports",
                      							lv_imports_2_0,
                      							"org.xtext.example.mydsl.Go.ImportSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7952:4: (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' )
                    {
                    // InternalGo.g:7952:4: (otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')' )
                    // InternalGo.g:7953:5: otherlv_3= '(' ( (lv_imports2_4_0= ruleImportSpec ) )* otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:7957:5: ( (lv_imports2_4_0= ruleImportSpec ) )*
                    loop103:
                    do {
                        int alt103=2;
                        int LA103_0 = input.LA(1);

                        if ( (LA103_0==RULE_LETTER||LA103_0==RULE_STRING||LA103_0==42) ) {
                            alt103=1;
                        }


                        switch (alt103) {
                    	case 1 :
                    	    // InternalGo.g:7958:6: (lv_imports2_4_0= ruleImportSpec )
                    	    {
                    	    // InternalGo.g:7958:6: (lv_imports2_4_0= ruleImportSpec )
                    	    // InternalGo.g:7959:7: lv_imports2_4_0= ruleImportSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImportDeclAccess().getImports2ImportSpecParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_73);
                    	    lv_imports2_4_0=ruleImportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImportDeclRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"imports2",
                    	      								lv_imports2_4_0,
                    	      								"org.xtext.example.mydsl.Go.ImportSpec");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop103;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportDecl"


    // $ANTLR start "entryRuleImportSpec"
    // InternalGo.g:7986:1: entryRuleImportSpec returns [String current=null] : iv_ruleImportSpec= ruleImportSpec EOF ;
    public final String entryRuleImportSpec() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImportSpec = null;


        try {
            // InternalGo.g:7986:50: (iv_ruleImportSpec= ruleImportSpec EOF )
            // InternalGo.g:7987:2: iv_ruleImportSpec= ruleImportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportSpec=ruleImportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportSpec.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportSpec"


    // $ANTLR start "ruleImportSpec"
    // InternalGo.g:7993:1: ruleImportSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath ) ;
    public final AntlrDatatypeRuleToken ruleImportSpec() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_1 = null;

        AntlrDatatypeRuleToken this_ImportPath_2 = null;



        	enterRule();

        try {
            // InternalGo.g:7999:2: ( ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath ) )
            // InternalGo.g:8000:2: ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath )
            {
            // InternalGo.g:8000:2: ( (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath )
            // InternalGo.g:8001:3: (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )? this_ImportPath_2= ruleImportPath
            {
            // InternalGo.g:8001:3: (kw= '.' | this_IDENTIFIER_1= ruleIDENTIFIER )?
            int alt105=3;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==42) ) {
                alt105=1;
            }
            else if ( (LA105_0==RULE_LETTER) ) {
                alt105=2;
            }
            switch (alt105) {
                case 1 :
                    // InternalGo.g:8002:4: kw= '.'
                    {
                    kw=(Token)match(input,42,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:8008:4: this_IDENTIFIER_1= ruleIDENTIFIER
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getImportSpecAccess().getIDENTIFIERParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_74);
                    this_IDENTIFIER_1=ruleIDENTIFIER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_IDENTIFIER_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ImportPath_2=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ImportPath_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportSpec"


    // $ANTLR start "entryRuleImportPath"
    // InternalGo.g:8033:1: entryRuleImportPath returns [String current=null] : iv_ruleImportPath= ruleImportPath EOF ;
    public final String entryRuleImportPath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImportPath = null;


        try {
            // InternalGo.g:8033:50: (iv_ruleImportPath= ruleImportPath EOF )
            // InternalGo.g:8034:2: iv_ruleImportPath= ruleImportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportPath=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportPath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportPath"


    // $ANTLR start "ruleImportPath"
    // InternalGo.g:8040:1: ruleImportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleImportPath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;


        	enterRule();

        try {
            // InternalGo.g:8046:2: (this_STRING_0= RULE_STRING )
            // InternalGo.g:8047:2: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_0, grammarAccess.getImportPathAccess().getSTRINGTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportPath"

    // $ANTLR start synpred8_InternalGo
    public final void synpred8_InternalGo_fragment() throws RecognitionException {   
        Token this_LETTER_1=null;

        // InternalGo.g:559:4: (this_LETTER_1= RULE_LETTER )
        // InternalGo.g:559:4: this_LETTER_1= RULE_LETTER
        {
        this_LETTER_1=(Token)match(input,RULE_LETTER,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_InternalGo

    // $ANTLR start synpred10_InternalGo
    public final void synpred10_InternalGo_fragment() throws RecognitionException {   
        Token this_DECIMALS_2=null;

        // InternalGo.g:608:5: (this_DECIMALS_2= RULE_DECIMALS )
        // InternalGo.g:608:5: this_DECIMALS_2= RULE_DECIMALS
        {
        this_DECIMALS_2=(Token)match(input,RULE_DECIMALS,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred10_InternalGo

    // $ANTLR start synpred20_InternalGo
    public final void synpred20_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_0_0 = null;


        // InternalGo.g:910:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) )
        // InternalGo.g:910:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
        {
        // InternalGo.g:910:3: ( (lv_id_0_0= ruleIDENTIFIER ) )
        // InternalGo.g:911:4: (lv_id_0_0= ruleIDENTIFIER )
        {
        // InternalGo.g:911:4: (lv_id_0_0= ruleIDENTIFIER )
        // InternalGo.g:912:5: lv_id_0_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTypeNameAccess().getIdIDENTIFIERParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_id_0_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalGo

    // $ANTLR start synpred29_InternalGo
    public final void synpred29_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_indentifierL_1_0 = null;

        EObject lv_type_2_0 = null;


        // InternalGo.g:1415:4: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) )
        // InternalGo.g:1415:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
        {
        // InternalGo.g:1415:4: ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) )
        // InternalGo.g:1416:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) )
        {
        // InternalGo.g:1416:5: ( (lv_indentifierL_1_0= ruleIdentifierList ) )
        // InternalGo.g:1417:6: (lv_indentifierL_1_0= ruleIdentifierList )
        {
        // InternalGo.g:1417:6: (lv_indentifierL_1_0= ruleIdentifierList )
        // InternalGo.g:1418:7: lv_indentifierL_1_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_17);
        lv_indentifierL_1_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:1435:5: ( (lv_type_2_0= ruleType ) )
        // InternalGo.g:1436:6: (lv_type_2_0= ruleType )
        {
        // InternalGo.g:1436:6: (lv_type_2_0= ruleType )
        // InternalGo.g:1437:7: lv_type_2_0= ruleType
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_type_2_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalGo

    // $ANTLR start synpred32_InternalGo
    public final void synpred32_InternalGo_fragment() throws RecognitionException {   
        Token kw=null;
        AntlrDatatypeRuleToken this_IDENTIFIER_2 = null;


        // InternalGo.g:1525:4: ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )
        // InternalGo.g:1525:4: (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER
        {
        // InternalGo.g:1525:4: (kw= ',' )?
        int alt110=2;
        int LA110_0 = input.LA(1);

        if ( (LA110_0==53) ) {
            alt110=1;
        }
        switch (alt110) {
            case 1 :
                // InternalGo.g:1526:5: kw= ','
                {
                kw=(Token)match(input,53,FOLLOW_6); if (state.failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_2);
        this_IDENTIFIER_2=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalGo

    // $ANTLR start synpred34_InternalGo
    public final void synpred34_InternalGo_fragment() throws RecognitionException {   
        EObject lv_result_1_0 = null;


        // InternalGo.g:1749:4: ( (lv_result_1_0= ruleResult ) )
        // InternalGo.g:1749:4: (lv_result_1_0= ruleResult )
        {
        // InternalGo.g:1749:4: (lv_result_1_0= ruleResult )
        // InternalGo.g:1750:5: lv_result_1_0= ruleResult
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_result_1_0=ruleResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalGo

    // $ANTLR start synpred35_InternalGo
    public final void synpred35_InternalGo_fragment() throws RecognitionException {   
        EObject lv_parameteres_0_0 = null;


        // InternalGo.g:1786:3: ( ( (lv_parameteres_0_0= ruleParameters ) ) )
        // InternalGo.g:1786:3: ( (lv_parameteres_0_0= ruleParameters ) )
        {
        // InternalGo.g:1786:3: ( (lv_parameteres_0_0= ruleParameters ) )
        // InternalGo.g:1787:4: (lv_parameteres_0_0= ruleParameters )
        {
        // InternalGo.g:1787:4: (lv_parameteres_0_0= ruleParameters )
        // InternalGo.g:1788:5: lv_parameteres_0_0= ruleParameters
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getResultAccess().getParameteresParametersParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_parameteres_0_0=ruleParameters();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred35_InternalGo

    // $ANTLR start synpred39_InternalGo
    public final void synpred39_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_identifierL_0_0 = null;


        // InternalGo.g:1982:4: ( (lv_identifierL_0_0= ruleIdentifierList ) )
        // InternalGo.g:1982:4: (lv_identifierL_0_0= ruleIdentifierList )
        {
        // InternalGo.g:1982:4: (lv_identifierL_0_0= ruleIdentifierList )
        // InternalGo.g:1983:5: lv_identifierL_0_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierLIdentifierListParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_identifierL_0_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred39_InternalGo

    // $ANTLR start synpred43_InternalGo
    public final void synpred43_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;

        // InternalGo.g:2360:6: (otherlv_1= '<-' )
        // InternalGo.g:2360:6: otherlv_1= '<-'
        {
        otherlv_1=(Token)match(input,59,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred43_InternalGo

    // $ANTLR start synpred45_InternalGo
    public final void synpred45_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;

        // InternalGo.g:2485:5: (otherlv_2= ';' )
        // InternalGo.g:2485:5: otherlv_2= ';'
        {
        otherlv_2=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred45_InternalGo

    // $ANTLR start synpred48_InternalGo
    public final void synpred48_InternalGo_fragment() throws RecognitionException {   
        EObject lv_labest_2_0 = null;


        // InternalGo.g:2542:3: ( ( (lv_labest_2_0= ruleLabeledStmt ) ) )
        // InternalGo.g:2542:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
        {
        // InternalGo.g:2542:3: ( (lv_labest_2_0= ruleLabeledStmt ) )
        // InternalGo.g:2543:4: (lv_labest_2_0= ruleLabeledStmt )
        {
        // InternalGo.g:2543:4: (lv_labest_2_0= ruleLabeledStmt )
        // InternalGo.g:2544:5: lv_labest_2_0= ruleLabeledStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_labest_2_0=ruleLabeledStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred48_InternalGo

    // $ANTLR start synpred49_InternalGo
    public final void synpred49_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simplest_3_0 = null;


        // InternalGo.g:2562:3: ( ( (lv_simplest_3_0= ruleSimpleStmt ) ) )
        // InternalGo.g:2562:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
        {
        // InternalGo.g:2562:3: ( (lv_simplest_3_0= ruleSimpleStmt ) )
        // InternalGo.g:2563:4: (lv_simplest_3_0= ruleSimpleStmt )
        {
        // InternalGo.g:2563:4: (lv_simplest_3_0= ruleSimpleStmt )
        // InternalGo.g:2564:5: lv_simplest_3_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_simplest_3_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred49_InternalGo

    // $ANTLR start synpred50_InternalGo
    public final void synpred50_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotst_4_0 = null;


        // InternalGo.g:2582:3: ( ( (lv_gotst_4_0= ruleGoStmt ) ) )
        // InternalGo.g:2582:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        {
        // InternalGo.g:2582:3: ( (lv_gotst_4_0= ruleGoStmt ) )
        // InternalGo.g:2583:4: (lv_gotst_4_0= ruleGoStmt )
        {
        // InternalGo.g:2583:4: (lv_gotst_4_0= ruleGoStmt )
        // InternalGo.g:2584:5: lv_gotst_4_0= ruleGoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotst_4_0=ruleGoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred50_InternalGo

    // $ANTLR start synpred54_InternalGo
    public final void synpred54_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_gotost_8_0 = null;


        // InternalGo.g:2654:3: ( ( (lv_gotost_8_0= ruleGotoStmt ) ) )
        // InternalGo.g:2654:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        {
        // InternalGo.g:2654:3: ( (lv_gotost_8_0= ruleGotoStmt ) )
        // InternalGo.g:2655:4: (lv_gotost_8_0= ruleGotoStmt )
        {
        // InternalGo.g:2655:4: (lv_gotost_8_0= ruleGotoStmt )
        // InternalGo.g:2656:5: lv_gotost_8_0= ruleGotoStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_gotost_8_0=ruleGotoStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred54_InternalGo

    // $ANTLR start synpred64_InternalGo
    public final void synpred64_InternalGo_fragment() throws RecognitionException {   
        EObject lv_es_2_0 = null;


        // InternalGo.g:2979:3: ( ( (lv_es_2_0= ruleExpressionStmt ) ) )
        // InternalGo.g:2979:3: ( (lv_es_2_0= ruleExpressionStmt ) )
        {
        // InternalGo.g:2979:3: ( (lv_es_2_0= ruleExpressionStmt ) )
        // InternalGo.g:2980:4: (lv_es_2_0= ruleExpressionStmt )
        {
        // InternalGo.g:2980:4: (lv_es_2_0= ruleExpressionStmt )
        // InternalGo.g:2981:5: lv_es_2_0= ruleExpressionStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEsExpressionStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_es_2_0=ruleExpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred64_InternalGo

    // $ANTLR start synpred65_InternalGo
    public final void synpred65_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ss_3_0 = null;


        // InternalGo.g:2999:3: ( ( (lv_ss_3_0= ruleSendStmt ) ) )
        // InternalGo.g:2999:3: ( (lv_ss_3_0= ruleSendStmt ) )
        {
        // InternalGo.g:2999:3: ( (lv_ss_3_0= ruleSendStmt ) )
        // InternalGo.g:3000:4: (lv_ss_3_0= ruleSendStmt )
        {
        // InternalGo.g:3000:4: (lv_ss_3_0= ruleSendStmt )
        // InternalGo.g:3001:5: lv_ss_3_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSsSendStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ss_3_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred65_InternalGo

    // $ANTLR start synpred66_InternalGo
    public final void synpred66_InternalGo_fragment() throws RecognitionException {   
        EObject lv_inc_4_0 = null;


        // InternalGo.g:3019:3: ( ( (lv_inc_4_0= ruleIncDecStmt ) ) )
        // InternalGo.g:3019:3: ( (lv_inc_4_0= ruleIncDecStmt ) )
        {
        // InternalGo.g:3019:3: ( (lv_inc_4_0= ruleIncDecStmt ) )
        // InternalGo.g:3020:4: (lv_inc_4_0= ruleIncDecStmt )
        {
        // InternalGo.g:3020:4: (lv_inc_4_0= ruleIncDecStmt )
        // InternalGo.g:3021:5: lv_inc_4_0= ruleIncDecStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncIncDecStmtParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_inc_4_0=ruleIncDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred66_InternalGo

    // $ANTLR start synpred67_InternalGo
    public final void synpred67_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ass_5_0 = null;


        // InternalGo.g:3039:3: ( ( (lv_ass_5_0= ruleAssignment ) ) )
        // InternalGo.g:3039:3: ( (lv_ass_5_0= ruleAssignment ) )
        {
        // InternalGo.g:3039:3: ( (lv_ass_5_0= ruleAssignment ) )
        // InternalGo.g:3040:4: (lv_ass_5_0= ruleAssignment )
        {
        // InternalGo.g:3040:4: (lv_ass_5_0= ruleAssignment )
        // InternalGo.g:3041:5: lv_ass_5_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssAssignmentParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ass_5_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred67_InternalGo

    // $ANTLR start synpred68_InternalGo
    public final void synpred68_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionlist_2_0 = null;


        // InternalGo.g:3146:4: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        // InternalGo.g:3146:4: (lv_expressionlist_2_0= ruleExpressionList )
        {
        // InternalGo.g:3146:4: (lv_expressionlist_2_0= ruleExpressionList )
        // InternalGo.g:3147:5: lv_expressionlist_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred68_InternalGo

    // $ANTLR start synpred69_InternalGo
    public final void synpred69_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_Label_1 = null;


        // InternalGo.g:3189:4: (this_Label_1= ruleLabel )
        // InternalGo.g:3189:4: this_Label_1= ruleLabel
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
          			
        }
        pushFollow(FOLLOW_2);
        this_Label_1=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_InternalGo

    // $ANTLR start synpred70_InternalGo
    public final void synpred70_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_Label_1 = null;


        // InternalGo.g:3225:4: (this_Label_1= ruleLabel )
        // InternalGo.g:3225:4: this_Label_1= ruleLabel
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
          			
        }
        pushFollow(FOLLOW_2);
        this_Label_1=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_InternalGo

    // $ANTLR start synpred71_InternalGo
    public final void synpred71_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simst_1_0 = null;


        // InternalGo.g:3294:4: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:3294:4: ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:3294:4: ( (lv_simst_1_0= ruleSimpleStmt ) )
        // InternalGo.g:3295:5: (lv_simst_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:3295:5: (lv_simst_1_0= ruleSimpleStmt )
        // InternalGo.g:3296:6: lv_simst_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_23);
        lv_simst_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_InternalGo

    // $ANTLR start synpred74_InternalGo
    public final void synpred74_InternalGo_fragment() throws RecognitionException {   
        EObject this_ExprSwitchStmt_0 = null;


        // InternalGo.g:3444:3: (this_ExprSwitchStmt_0= ruleExprSwitchStmt )
        // InternalGo.g:3444:3: this_ExprSwitchStmt_0= ruleExprSwitchStmt
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_ExprSwitchStmt_0=ruleExprSwitchStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_InternalGo

    // $ANTLR start synpred76_InternalGo
    public final void synpred76_InternalGo_fragment() throws RecognitionException {   
        EObject lv_condition_1_0 = null;


        // InternalGo.g:3551:4: ( ( (lv_condition_1_0= ruleCondition ) ) )
        // InternalGo.g:3551:4: ( (lv_condition_1_0= ruleCondition ) )
        {
        // InternalGo.g:3551:4: ( (lv_condition_1_0= ruleCondition ) )
        // InternalGo.g:3552:5: (lv_condition_1_0= ruleCondition )
        {
        // InternalGo.g:3552:5: (lv_condition_1_0= ruleCondition )
        // InternalGo.g:3553:6: lv_condition_1_0= ruleCondition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_1_0=ruleCondition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalGo

    // $ANTLR start synpred77_InternalGo
    public final void synpred77_InternalGo_fragment() throws RecognitionException {   
        EObject lv_for_2_0 = null;


        // InternalGo.g:3571:4: ( ( (lv_for_2_0= ruleForClause ) ) )
        // InternalGo.g:3571:4: ( (lv_for_2_0= ruleForClause ) )
        {
        // InternalGo.g:3571:4: ( (lv_for_2_0= ruleForClause ) )
        // InternalGo.g:3572:5: (lv_for_2_0= ruleForClause )
        {
        // InternalGo.g:3572:5: (lv_for_2_0= ruleForClause )
        // InternalGo.g:3573:6: lv_for_2_0= ruleForClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_for_2_0=ruleForClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred77_InternalGo

    // $ANTLR start synpred78_InternalGo
    public final void synpred78_InternalGo_fragment() throws RecognitionException {   
        EObject lv_range_3_0 = null;


        // InternalGo.g:3591:4: ( ( (lv_range_3_0= ruleRangeClause ) ) )
        // InternalGo.g:3591:4: ( (lv_range_3_0= ruleRangeClause ) )
        {
        // InternalGo.g:3591:4: ( (lv_range_3_0= ruleRangeClause ) )
        // InternalGo.g:3592:5: (lv_range_3_0= ruleRangeClause )
        {
        // InternalGo.g:3592:5: (lv_range_3_0= ruleRangeClause )
        // InternalGo.g:3593:6: lv_range_3_0= ruleRangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_range_3_0=ruleRangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred78_InternalGo

    // $ANTLR start synpred89_InternalGo
    public final void synpred89_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_simplestmt_2_0 = null;


        // InternalGo.g:4646:4: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )
        // InternalGo.g:4646:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';'
        {
        // InternalGo.g:4646:4: ( (lv_simplestmt_2_0= ruleSimpleStmt ) )
        // InternalGo.g:4647:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        {
        // InternalGo.g:4647:5: (lv_simplestmt_2_0= ruleSimpleStmt )
        // InternalGo.g:4648:6: lv_simplestmt_2_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_23);
        lv_simplestmt_2_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred89_InternalGo

    // $ANTLR start synpred93_InternalGo
    public final void synpred93_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simplestm_1_0 = null;


        // InternalGo.g:4864:4: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:4864:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:4864:4: ( (lv_simplestm_1_0= ruleSimpleStmt ) )
        // InternalGo.g:4865:5: (lv_simplestm_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:4865:5: (lv_simplestm_1_0= ruleSimpleStmt )
        // InternalGo.g:4866:6: lv_simplestm_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimplestmSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_23);
        lv_simplestm_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_InternalGo

    // $ANTLR start synpred99_InternalGo
    public final void synpred99_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sendstmt_2_0 = null;


        // InternalGo.g:5290:5: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) )
        // InternalGo.g:5290:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        {
        // InternalGo.g:5290:5: ( (lv_sendstmt_2_0= ruleSendStmt ) )
        // InternalGo.g:5291:6: (lv_sendstmt_2_0= ruleSendStmt )
        {
        // InternalGo.g:5291:6: (lv_sendstmt_2_0= ruleSendStmt )
        // InternalGo.g:5292:7: lv_sendstmt_2_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_sendstmt_2_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred99_InternalGo

    // $ANTLR start synpred101_InternalGo
    public final void synpred101_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_ExpressionList_0 = null;


        // InternalGo.g:5368:4: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) )
        // InternalGo.g:5368:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        {
        // InternalGo.g:5368:4: (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' )
        // InternalGo.g:5369:5: this_ExpressionList_0= ruleExpressionList otherlv_1= '='
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }
        pushFollow(FOLLOW_48);
        this_ExpressionList_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,72,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred101_InternalGo

    // $ANTLR start synpred102_InternalGo
    public final void synpred102_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_idl_2_0 = null;


        // InternalGo.g:5386:4: ( ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )
        // InternalGo.g:5386:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        {
        // InternalGo.g:5386:4: ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        // InternalGo.g:5387:5: ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':='
        {
        // InternalGo.g:5387:5: ( (lv_idl_2_0= ruleIdentifierList ) )
        // InternalGo.g:5388:6: (lv_idl_2_0= ruleIdentifierList )
        {
        // InternalGo.g:5388:6: (lv_idl_2_0= ruleIdentifierList )
        // InternalGo.g:5389:7: lv_idl_2_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdlIdentifierListParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_54);
        lv_idl_2_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,77,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred102_InternalGo

    // $ANTLR start synpred103_InternalGo
    public final void synpred103_InternalGo_fragment() throws RecognitionException {   
        EObject this_InitStmt_0 = null;


        // InternalGo.g:5507:4: (this_InitStmt_0= ruleInitStmt )
        // InternalGo.g:5507:4: this_InitStmt_0= ruleInitStmt
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_2);
        this_InitStmt_0=ruleInitStmt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalGo

    // $ANTLR start synpred107_InternalGo
    public final void synpred107_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_expression2_2_0 = null;


        // InternalGo.g:5790:4: (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )
        // InternalGo.g:5790:4: otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) )
        {
        otherlv_1=(Token)match(input,51,FOLLOW_19); if (state.failed) return ;
        // InternalGo.g:5794:4: ( (lv_expression2_2_0= ruleExpression ) )
        // InternalGo.g:5795:5: (lv_expression2_2_0= ruleExpression )
        {
        // InternalGo.g:5795:5: (lv_expression2_2_0= ruleExpression )
        // InternalGo.g:5796:6: lv_expression2_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression2_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred107_InternalGo

    // $ANTLR start synpred108_InternalGo
    public final void synpred108_InternalGo_fragment() throws RecognitionException {   
        Token lv_bop_1_0=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_3_0 = null;


        // InternalGo.g:5911:4: ( ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) ) )
        // InternalGo.g:5911:4: ( (lv_bop_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleExpression ) ) ( (lv_expression2_3_0= ruleExpression2 ) )
        {
        // InternalGo.g:5911:4: ( (lv_bop_1_0= RULE_BINARY_OP ) )
        // InternalGo.g:5912:5: (lv_bop_1_0= RULE_BINARY_OP )
        {
        // InternalGo.g:5912:5: (lv_bop_1_0= RULE_BINARY_OP )
        // InternalGo.g:5913:6: lv_bop_1_0= RULE_BINARY_OP
        {
        lv_bop_1_0=(Token)match(input,RULE_BINARY_OP,FOLLOW_19); if (state.failed) return ;

        }


        }

        // InternalGo.g:5929:4: ( (lv_expression_2_0= ruleExpression ) )
        // InternalGo.g:5930:5: (lv_expression_2_0= ruleExpression )
        {
        // InternalGo.g:5930:5: (lv_expression_2_0= ruleExpression )
        // InternalGo.g:5931:6: lv_expression_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_62);
        lv_expression_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5948:4: ( (lv_expression2_3_0= ruleExpression2 ) )
        // InternalGo.g:5949:5: (lv_expression2_3_0= ruleExpression2 )
        {
        // InternalGo.g:5949:5: (lv_expression2_3_0= ruleExpression2 )
        // InternalGo.g:5950:6: lv_expression2_3_0= ruleExpression2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression2_3_0=ruleExpression2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred108_InternalGo

    // $ANTLR start synpred110_InternalGo
    public final void synpred110_InternalGo_fragment() throws RecognitionException {   
        EObject this_Operand_0 = null;

        EObject lv_pr_1_0 = null;


        // InternalGo.g:6057:3: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6057:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6057:3: (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6058:4: this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) )
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_63);
        this_Operand_0=ruleOperand();

        state._fsp--;
        if (state.failed) return ;
        // InternalGo.g:6069:4: ( (lv_pr_1_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6070:5: (lv_pr_1_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6070:5: (lv_pr_1_0= rulePrimaryExpr2 )
        // InternalGo.g:6071:6: lv_pr_1_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_1_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred110_InternalGo

    // $ANTLR start synpred111_InternalGo
    public final void synpred111_InternalGo_fragment() throws RecognitionException {   
        EObject this_Conversion_2 = null;

        EObject lv_pr_3_0 = null;


        // InternalGo.g:6090:3: ( (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6090:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6090:3: (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6091:4: this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) )
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_63);
        this_Conversion_2=ruleConversion();

        state._fsp--;
        if (state.failed) return ;
        // InternalGo.g:6102:4: ( (lv_pr_3_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6103:5: (lv_pr_3_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6103:5: (lv_pr_3_0= rulePrimaryExpr2 )
        // InternalGo.g:6104:6: lv_pr_3_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pr_3_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred111_InternalGo

    // $ANTLR start synpred112_InternalGo
    public final void synpred112_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_selector_1_0 = null;

        EObject lv_pr_2_0 = null;


        // InternalGo.g:6185:4: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6185:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6185:4: ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6186:5: ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6186:5: ( (lv_selector_1_0= ruleSelector ) )
        // InternalGo.g:6187:6: (lv_selector_1_0= ruleSelector )
        {
        // InternalGo.g:6187:6: (lv_selector_1_0= ruleSelector )
        // InternalGo.g:6188:7: lv_selector_1_0= ruleSelector
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSelectorSelectorParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_63);
        lv_selector_1_0=ruleSelector();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6205:5: ( (lv_pr_2_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6206:6: (lv_pr_2_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6206:6: (lv_pr_2_0= rulePrimaryExpr2 )
        // InternalGo.g:6207:7: lv_pr_2_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_2_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred112_InternalGo

    // $ANTLR start synpred113_InternalGo
    public final void synpred113_InternalGo_fragment() throws RecognitionException {   
        EObject lv_index_3_0 = null;

        EObject lv_pr_4_0 = null;


        // InternalGo.g:6226:4: ( ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6226:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6226:4: ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6227:5: ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6227:5: ( (lv_index_3_0= ruleIndex ) )
        // InternalGo.g:6228:6: (lv_index_3_0= ruleIndex )
        {
        // InternalGo.g:6228:6: (lv_index_3_0= ruleIndex )
        // InternalGo.g:6229:7: lv_index_3_0= ruleIndex
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FOLLOW_63);
        lv_index_3_0=ruleIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6246:5: ( (lv_pr_4_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6247:6: (lv_pr_4_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6247:6: (lv_pr_4_0= rulePrimaryExpr2 )
        // InternalGo.g:6248:7: lv_pr_4_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_4_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred113_InternalGo

    // $ANTLR start synpred114_InternalGo
    public final void synpred114_InternalGo_fragment() throws RecognitionException {   
        EObject lv_slice_5_0 = null;

        EObject lv_pr_6_0 = null;


        // InternalGo.g:6267:4: ( ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6267:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6267:4: ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6268:5: ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6268:5: ( (lv_slice_5_0= ruleSlice ) )
        // InternalGo.g:6269:6: (lv_slice_5_0= ruleSlice )
        {
        // InternalGo.g:6269:6: (lv_slice_5_0= ruleSlice )
        // InternalGo.g:6270:7: lv_slice_5_0= ruleSlice
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0());
          						
        }
        pushFollow(FOLLOW_63);
        lv_slice_5_0=ruleSlice();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6287:5: ( (lv_pr_6_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6288:6: (lv_pr_6_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6288:6: (lv_pr_6_0= rulePrimaryExpr2 )
        // InternalGo.g:6289:7: lv_pr_6_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_6_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred114_InternalGo

    // $ANTLR start synpred115_InternalGo
    public final void synpred115_InternalGo_fragment() throws RecognitionException {   
        EObject lv_typeass_7_0 = null;

        EObject lv_pr_8_0 = null;


        // InternalGo.g:6308:4: ( ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6308:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6308:4: ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6309:5: ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6309:5: ( (lv_typeass_7_0= ruleTypeAssertion ) )
        // InternalGo.g:6310:6: (lv_typeass_7_0= ruleTypeAssertion )
        {
        // InternalGo.g:6310:6: (lv_typeass_7_0= ruleTypeAssertion )
        // InternalGo.g:6311:7: lv_typeass_7_0= ruleTypeAssertion
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0());
          						
        }
        pushFollow(FOLLOW_63);
        lv_typeass_7_0=ruleTypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6328:5: ( (lv_pr_8_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6329:6: (lv_pr_8_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6329:6: (lv_pr_8_0= rulePrimaryExpr2 )
        // InternalGo.g:6330:7: lv_pr_8_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_8_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred115_InternalGo

    // $ANTLR start synpred116_InternalGo
    public final void synpred116_InternalGo_fragment() throws RecognitionException {   
        EObject lv_arguments_9_0 = null;

        EObject lv_pr_10_0 = null;


        // InternalGo.g:6349:4: ( ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )
        // InternalGo.g:6349:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        {
        // InternalGo.g:6349:4: ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) )
        // InternalGo.g:6350:5: ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        {
        // InternalGo.g:6350:5: ( (lv_arguments_9_0= ruleArguments ) )
        // InternalGo.g:6351:6: (lv_arguments_9_0= ruleArguments )
        {
        // InternalGo.g:6351:6: (lv_arguments_9_0= ruleArguments )
        // InternalGo.g:6352:7: lv_arguments_9_0= ruleArguments
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0());
          						
        }
        pushFollow(FOLLOW_63);
        lv_arguments_9_0=ruleArguments();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6369:5: ( (lv_pr_10_0= rulePrimaryExpr2 ) )
        // InternalGo.g:6370:6: (lv_pr_10_0= rulePrimaryExpr2 )
        {
        // InternalGo.g:6370:6: (lv_pr_10_0= rulePrimaryExpr2 )
        // InternalGo.g:6371:7: lv_pr_10_0= rulePrimaryExpr2
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_pr_10_0=rulePrimaryExpr2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred116_InternalGo

    // $ANTLR start synpred117_InternalGo
    public final void synpred117_InternalGo_fragment() throws RecognitionException {   
        EObject lv_literal_1_0 = null;


        // InternalGo.g:6409:3: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) )
        // InternalGo.g:6409:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        {
        // InternalGo.g:6409:3: ( () ( (lv_literal_1_0= ruleLiteral ) ) )
        // InternalGo.g:6410:4: () ( (lv_literal_1_0= ruleLiteral ) )
        {
        // InternalGo.g:6410:4: ()
        // InternalGo.g:6411:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:6420:4: ( (lv_literal_1_0= ruleLiteral ) )
        // InternalGo.g:6421:5: (lv_literal_1_0= ruleLiteral )
        {
        // InternalGo.g:6421:5: (lv_literal_1_0= ruleLiteral )
        // InternalGo.g:6422:6: lv_literal_1_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_literal_1_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred117_InternalGo

    // $ANTLR start synpred118_InternalGo
    public final void synpred118_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operandn_2_0 = null;


        // InternalGo.g:6441:3: ( ( (lv_operandn_2_0= ruleOperandName ) ) )
        // InternalGo.g:6441:3: ( (lv_operandn_2_0= ruleOperandName ) )
        {
        // InternalGo.g:6441:3: ( (lv_operandn_2_0= ruleOperandName ) )
        // InternalGo.g:6442:4: (lv_operandn_2_0= ruleOperandName )
        {
        // InternalGo.g:6442:4: (lv_operandn_2_0= ruleOperandName )
        // InternalGo.g:6443:5: lv_operandn_2_0= ruleOperandName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_operandn_2_0=ruleOperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred118_InternalGo

    // $ANTLR start synpred122_InternalGo
    public final void synpred122_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_expression2_4_0 = null;


        // InternalGo.g:6713:3: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' ) )
        // InternalGo.g:6713:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        {
        // InternalGo.g:6713:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']' )
        // InternalGo.g:6714:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleExpression ) )? otherlv_3= ':' ( (lv_expression2_4_0= ruleExpression ) )? otherlv_5= ']'
        {
        // InternalGo.g:6714:4: ()
        // InternalGo.g:6715:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        otherlv_1=(Token)match(input,47,FOLLOW_64); if (state.failed) return ;
        // InternalGo.g:6728:4: ( (lv_expression_2_0= ruleExpression ) )?
        int alt118=2;
        int LA118_0 = input.LA(1);

        if ( (LA118_0==RULE_LETTER||LA118_0==RULE_DECIMALS||(LA118_0>=RULE_UNARY_OP && LA118_0<=RULE_STRING)||LA118_0==40||LA118_0==42||(LA118_0>=44 && LA118_0<=45)||LA118_0==47||LA118_0==49||LA118_0==54||(LA118_0>=56 && LA118_0<=59)) ) {
            alt118=1;
        }
        switch (alt118) {
            case 1 :
                // InternalGo.g:6729:5: (lv_expression_2_0= ruleExpression )
                {
                // InternalGo.g:6729:5: (lv_expression_2_0= ruleExpression )
                // InternalGo.g:6730:6: lv_expression_2_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0());
                  					
                }
                pushFollow(FOLLOW_37);
                lv_expression_2_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,60,FOLLOW_65); if (state.failed) return ;
        // InternalGo.g:6751:4: ( (lv_expression2_4_0= ruleExpression ) )?
        int alt119=2;
        int LA119_0 = input.LA(1);

        if ( (LA119_0==RULE_LETTER||LA119_0==RULE_DECIMALS||(LA119_0>=RULE_UNARY_OP && LA119_0<=RULE_STRING)||LA119_0==40||LA119_0==42||(LA119_0>=44 && LA119_0<=45)||LA119_0==47||LA119_0==49||LA119_0==54||(LA119_0>=56 && LA119_0<=59)) ) {
            alt119=1;
        }
        switch (alt119) {
            case 1 :
                // InternalGo.g:6752:5: (lv_expression2_4_0= ruleExpression )
                {
                // InternalGo.g:6752:5: (lv_expression2_4_0= ruleExpression )
                // InternalGo.g:6753:6: lv_expression2_4_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0());
                  					
                }
                pushFollow(FOLLOW_20);
                lv_expression2_4_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred122_InternalGo

    // $ANTLR start synpred124_InternalGo
    public final void synpred124_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionlist_2_0 = null;


        // InternalGo.g:6928:5: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) )
        // InternalGo.g:6928:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        {
        // InternalGo.g:6928:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
        // InternalGo.g:6929:6: (lv_expressionlist_2_0= ruleExpressionList )
        {
        // InternalGo.g:6929:6: (lv_expressionlist_2_0= ruleExpressionList )
        // InternalGo.g:6930:7: lv_expressionlist_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expressionlist_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred124_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;


        // InternalGo.g:6948:5: ( ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )
        // InternalGo.g:6948:5: ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
        {
        // InternalGo.g:6948:5: ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
        // InternalGo.g:6949:6: ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
        {
        // InternalGo.g:6949:6: ( (lv_type_3_0= ruleType ) )
        // InternalGo.g:6950:7: (lv_type_3_0= ruleType )
        {
        // InternalGo.g:6950:7: (lv_type_3_0= ruleType )
        // InternalGo.g:6951:8: lv_type_3_0= ruleType
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
          							
        }
        pushFollow(FOLLOW_75);
        lv_type_3_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6968:6: ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
        int alt122=2;
        int LA122_0 = input.LA(1);

        if ( (LA122_0==RULE_LETTER||LA122_0==RULE_DECIMALS||(LA122_0>=RULE_UNARY_OP && LA122_0<=RULE_STRING)||LA122_0==40||LA122_0==42||(LA122_0>=44 && LA122_0<=45)||LA122_0==47||LA122_0==49||(LA122_0>=53 && LA122_0<=54)||(LA122_0>=56 && LA122_0<=59)) ) {
            alt122=1;
        }
        switch (alt122) {
            case 1 :
                // InternalGo.g:6969:7: (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) )
                {
                // InternalGo.g:6969:7: (otherlv_4= ',' )?
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==53) ) {
                    alt121=1;
                }
                switch (alt121) {
                    case 1 :
                        // InternalGo.g:6970:8: otherlv_4= ','
                        {
                        otherlv_4=(Token)match(input,53,FOLLOW_19); if (state.failed) return ;

                        }
                        break;

                }

                // InternalGo.g:6975:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                // InternalGo.g:6976:8: (lv_expressionlist_5_0= ruleExpressionList )
                {
                // InternalGo.g:6976:8: (lv_expressionlist_5_0= ruleExpressionList )
                // InternalGo.g:6977:9: lv_expressionlist_5_0= ruleExpressionList
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                  								
                }
                pushFollow(FOLLOW_2);
                lv_expressionlist_5_0=ruleExpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred130_InternalGo
    public final void synpred130_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_expressionlist_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionlist_5_0 = null;


        // InternalGo.g:6927:4: ( ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )? )
        // InternalGo.g:6927:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )? (otherlv_6= '...' )? (otherlv_7= ',' )?
        {
        // InternalGo.g:6927:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?
        int alt125=3;
        alt125 = dfa125.predict(input);
        switch (alt125) {
            case 1 :
                // InternalGo.g:6928:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                {
                // InternalGo.g:6928:5: ( (lv_expressionlist_2_0= ruleExpressionList ) )
                // InternalGo.g:6929:6: (lv_expressionlist_2_0= ruleExpressionList )
                {
                // InternalGo.g:6929:6: (lv_expressionlist_2_0= ruleExpressionList )
                // InternalGo.g:6930:7: lv_expressionlist_2_0= ruleExpressionList
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0());
                  						
                }
                pushFollow(FOLLOW_76);
                lv_expressionlist_2_0=ruleExpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:6948:5: ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                {
                // InternalGo.g:6948:5: ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? )
                // InternalGo.g:6949:6: ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                {
                // InternalGo.g:6949:6: ( (lv_type_3_0= ruleType ) )
                // InternalGo.g:6950:7: (lv_type_3_0= ruleType )
                {
                // InternalGo.g:6950:7: (lv_type_3_0= ruleType )
                // InternalGo.g:6951:8: lv_type_3_0= ruleType
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                  							
                }
                pushFollow(FOLLOW_77);
                lv_type_3_0=ruleType();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGo.g:6968:6: ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )?
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==53) ) {
                    int LA124_1 = input.LA(2);

                    if ( (LA124_1==RULE_LETTER||LA124_1==RULE_DECIMALS||(LA124_1>=RULE_UNARY_OP && LA124_1<=RULE_STRING)||LA124_1==40||LA124_1==42||(LA124_1>=44 && LA124_1<=45)||LA124_1==47||LA124_1==49||LA124_1==54||(LA124_1>=56 && LA124_1<=59)) ) {
                        alt124=1;
                    }
                }
                else if ( (LA124_0==RULE_LETTER||LA124_0==RULE_DECIMALS||(LA124_0>=RULE_UNARY_OP && LA124_0<=RULE_STRING)||LA124_0==40||LA124_0==42||(LA124_0>=44 && LA124_0<=45)||LA124_0==47||LA124_0==49||LA124_0==54||(LA124_0>=56 && LA124_0<=59)) ) {
                    alt124=1;
                }
                switch (alt124) {
                    case 1 :
                        // InternalGo.g:6969:7: (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) )
                        {
                        // InternalGo.g:6969:7: (otherlv_4= ',' )?
                        int alt123=2;
                        int LA123_0 = input.LA(1);

                        if ( (LA123_0==53) ) {
                            alt123=1;
                        }
                        switch (alt123) {
                            case 1 :
                                // InternalGo.g:6970:8: otherlv_4= ','
                                {
                                otherlv_4=(Token)match(input,53,FOLLOW_19); if (state.failed) return ;

                                }
                                break;

                        }

                        // InternalGo.g:6975:7: ( (lv_expressionlist_5_0= ruleExpressionList ) )
                        // InternalGo.g:6976:8: (lv_expressionlist_5_0= ruleExpressionList )
                        {
                        // InternalGo.g:6976:8: (lv_expressionlist_5_0= ruleExpressionList )
                        // InternalGo.g:6977:9: lv_expressionlist_5_0= ruleExpressionList
                        {
                        if ( state.backtracking==0 ) {

                          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0());
                          								
                        }
                        pushFollow(FOLLOW_76);
                        lv_expressionlist_5_0=ruleExpressionList();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;

        }

        // InternalGo.g:6997:4: (otherlv_6= '...' )?
        int alt126=2;
        int LA126_0 = input.LA(1);

        if ( (LA126_0==55) ) {
            alt126=1;
        }
        switch (alt126) {
            case 1 :
                // InternalGo.g:6998:5: otherlv_6= '...'
                {
                otherlv_6=(Token)match(input,55,FOLLOW_29); if (state.failed) return ;

                }
                break;

        }

        // InternalGo.g:7003:4: (otherlv_7= ',' )?
        int alt127=2;
        int LA127_0 = input.LA(1);

        if ( (LA127_0==53) ) {
            alt127=1;
        }
        switch (alt127) {
            case 1 :
                // InternalGo.g:7004:5: otherlv_7= ','
                {
                otherlv_7=(Token)match(input,53,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred130_InternalGo

    // $ANTLR start synpred142_InternalGo
    public final void synpred142_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_Key_0 = null;


        // InternalGo.g:7527:4: (this_Key_0= ruleKey otherlv_1= ':' )
        // InternalGo.g:7527:4: this_Key_0= ruleKey otherlv_1= ':'
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_37);
        this_Key_0=ruleKey();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,60,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalGo

    // $ANTLR start synpred143_InternalGo
    public final void synpred143_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_fieldn_1_0 = null;


        // InternalGo.g:7581:3: ( ( () ( (lv_fieldn_1_0= ruleFieldName ) ) ) )
        // InternalGo.g:7581:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
        {
        // InternalGo.g:7581:3: ( () ( (lv_fieldn_1_0= ruleFieldName ) ) )
        // InternalGo.g:7582:4: () ( (lv_fieldn_1_0= ruleFieldName ) )
        {
        // InternalGo.g:7582:4: ()
        // InternalGo.g:7583:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:7592:4: ( (lv_fieldn_1_0= ruleFieldName ) )
        // InternalGo.g:7593:5: (lv_fieldn_1_0= ruleFieldName )
        {
        // InternalGo.g:7593:5: (lv_fieldn_1_0= ruleFieldName )
        // InternalGo.g:7594:6: lv_fieldn_1_0= ruleFieldName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyAccess().getFieldnFieldNameParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_fieldn_1_0=ruleFieldName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred143_InternalGo

    // $ANTLR start synpred144_InternalGo
    public final void synpred144_InternalGo_fragment() throws RecognitionException {   
        EObject this_Expression_2 = null;


        // InternalGo.g:7613:3: (this_Expression_2= ruleExpression )
        // InternalGo.g:7613:3: this_Expression_2= ruleExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Expression_2=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalGo

    // $ANTLR start synpred147_InternalGo
    public final void synpred147_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_FLOAT_LIT_1 = null;


        // InternalGo.g:7732:3: (this_FLOAT_LIT_1= ruleFLOAT_LIT )
        // InternalGo.g:7732:3: this_FLOAT_LIT_1= ruleFLOAT_LIT
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getBasicLitAccess().getFLOAT_LITParserRuleCall_1());
          		
        }
        pushFollow(FOLLOW_2);
        this_FLOAT_LIT_1=ruleFLOAT_LIT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalGo

    // $ANTLR start synpred148_InternalGo
    public final void synpred148_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_IMAGINARY_LIT_2 = null;


        // InternalGo.g:7743:3: (this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT )
        // InternalGo.g:7743:3: this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2());
          		
        }
        pushFollow(FOLLOW_2);
        this_IMAGINARY_LIT_2=ruleIMAGINARY_LIT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalGo

    // $ANTLR start synpred150_InternalGo
    public final void synpred150_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_1_0 = null;


        // InternalGo.g:7855:3: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) )
        // InternalGo.g:7855:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
        {
        // InternalGo.g:7855:3: ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) )
        // InternalGo.g:7856:4: () ( (lv_id_1_0= ruleIDENTIFIER ) )
        {
        // InternalGo.g:7856:4: ()
        // InternalGo.g:7857:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:7866:4: ( (lv_id_1_0= ruleIDENTIFIER ) )
        // InternalGo.g:7867:5: (lv_id_1_0= ruleIDENTIFIER )
        {
        // InternalGo.g:7867:5: (lv_id_1_0= ruleIDENTIFIER )
        // InternalGo.g:7868:6: lv_id_1_0= ruleIDENTIFIER
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOperandNameAccess().getIdIDENTIFIERParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_1_0=ruleIDENTIFIER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred150_InternalGo

    // Delegated rules

    public final boolean synpred150_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA16 dfa16 = new DFA16(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA125 dfa125 = new DFA125(this);
    static final String dfa_1s = "\10\uffff";
    static final String dfa_2s = "\1\uffff\1\4\1\uffff\1\4\4\uffff";
    static final String dfa_3s = "\2\4\1\0\1\4\1\uffff\1\4\1\uffff\1\0";
    static final String dfa_4s = "\1\4\1\120\1\0\1\120\1\uffff\1\6\1\uffff\1\0";
    static final String dfa_5s = "\4\uffff\1\1\1\uffff\1\2\1\uffff";
    static final String dfa_6s = "\2\uffff\1\0\4\uffff\1\1}>";
    static final String[] dfa_7s = {
            "\1\1",
            "\1\2\1\3\1\4\3\uffff\2\4\2\uffff\3\4\27\uffff\1\4\1\uffff\1\5\1\uffff\26\4\1\uffff\10\4\3\uffff\3\4",
            "\1\uffff",
            "\1\2\1\3\1\4\3\uffff\2\4\2\uffff\3\4\27\uffff\1\4\1\uffff\1\5\1\uffff\26\4\1\uffff\10\4\3\uffff\3\4",
            "",
            "\1\7\1\uffff\1\4",
            "",
            "\1\uffff"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "909:2: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) | ( (lv_ql_1_0= ruleQualifiedIdent ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_2 = input.LA(1);

                         
                        int index16_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalGo()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index16_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA16_7 = input.LA(1);

                         
                        int index16_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalGo()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index16_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\1\50\1\4\10\uffff";
    static final String dfa_10s = "\2\73\10\uffff";
    static final String dfa_11s = "\2\uffff\1\2\1\3\1\4\1\5\1\7\1\10\1\1\1\6";
    static final String dfa_12s = "\12\uffff}>";
    static final String[] dfa_13s = {
            "\1\4\6\uffff\1\1\1\uffff\1\2\4\uffff\1\3\1\uffff\1\5\1\6\2\7",
            "\1\10\1\uffff\1\10\7\uffff\3\10\27\uffff\1\10\1\uffff\1\10\1\uffff\2\10\1\uffff\1\10\1\11\1\10\4\uffff\1\10\1\uffff\4\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1064:2: (this_ArrayType_0= ruleArrayType | this_StructType_1= ruleStructType | this_PointerType_2= rulePointerType | this_FunctionType_3= ruleFunctionType | this_InterfaceType_4= ruleInterfaceType | this_SliceType_5= ruleSliceType | this_MapType_6= ruleMapType | this_ChannelType_7= ruleChannelType )";
        }
    }
    static final String dfa_14s = "\6\uffff";
    static final String dfa_15s = "\1\uffff\1\2\2\uffff\1\2\1\uffff";
    static final String dfa_16s = "\2\4\1\uffff\1\0\1\4\1\uffff";
    static final String dfa_17s = "\1\66\1\73\1\uffff\1\0\1\73\1\uffff";
    static final String dfa_18s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_19s = "\3\uffff\1\0\2\uffff}>";
    static final String[] dfa_20s = {
            "\1\1\61\uffff\1\2",
            "\1\3\1\4\4\uffff\2\2\34\uffff\1\5\1\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\2\1\uffff\2\5\1\uffff\4\5",
            "",
            "\1\uffff",
            "\1\3\1\4\4\uffff\2\2\34\uffff\1\5\1\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\2\1\uffff\2\5\1\uffff\4\5",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "1414:3: ( ( ( (lv_indentifierL_1_0= ruleIdentifierList ) ) ( (lv_type_2_0= ruleType ) ) ) | ( (lv_embedded_3_0= ruleEmbeddedField ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_3 = input.LA(1);

                         
                        int index19_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index19_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\20\uffff";
    static final String dfa_22s = "\1\2\17\uffff";
    static final String dfa_23s = "\1\4\1\0\16\uffff";
    static final String dfa_24s = "\1\115\1\0\16\uffff";
    static final String dfa_25s = "\2\uffff\1\2\14\uffff\1\1";
    static final String dfa_26s = "\1\uffff\1\0\16\uffff}>";
    static final String[] dfa_27s = {
            "\1\1\43\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\3\uffff\1\17\6\2\14\uffff\1\2\4\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "()* loopback of 1524:3: ( (kw= ',' )? this_IDENTIFIER_2= ruleIDENTIFIER )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA22_1 = input.LA(1);

                         
                        int index22_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalGo()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index22_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 22, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\55\uffff";
    static final String dfa_29s = "\1\13\54\uffff";
    static final String dfa_30s = "\1\4\12\0\42\uffff";
    static final String dfa_31s = "\1\120\12\0\42\uffff";
    static final String dfa_32s = "\13\uffff\1\2\40\uffff\1\1";
    static final String dfa_33s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\42\uffff}>";
    static final String[] dfa_34s = {
            "\1\2\1\uffff\1\13\3\uffff\2\13\2\uffff\3\13\27\uffff\1\6\1\uffff\1\13\1\uffff\1\13\1\1\1\13\1\3\1\13\1\4\4\13\1\5\1\13\1\7\1\10\1\11\1\12\6\13\1\uffff\10\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_28;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "1748:3: ( (lv_result_1_0= ruleResult ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA24_1 = input.LA(1);

                         
                        int index24_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA24_2 = input.LA(1);

                         
                        int index24_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA24_3 = input.LA(1);

                         
                        int index24_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA24_4 = input.LA(1);

                         
                        int index24_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA24_5 = input.LA(1);

                         
                        int index24_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA24_6 = input.LA(1);

                         
                        int index24_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA24_7 = input.LA(1);

                         
                        int index24_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA24_8 = input.LA(1);

                         
                        int index24_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA24_9 = input.LA(1);

                         
                        int index24_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA24_10 = input.LA(1);

                         
                        int index24_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 44;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index24_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 24, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_35s = "\14\uffff";
    static final String dfa_36s = "\1\4\1\0\12\uffff";
    static final String dfa_37s = "\1\73\1\0\12\uffff";
    static final String dfa_38s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_40s = {
            "\1\2\43\uffff\1\2\4\uffff\1\1\1\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "1785:2: ( ( (lv_parameteres_0_0= ruleParameters ) ) | ( (lv_type_1_0= ruleType ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_1 = input.LA(1);

                         
                        int index25_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index25_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\uffff\1\2\2\uffff\2\2\2\uffff";
    static final String dfa_42s = "\2\4\1\uffff\1\0\2\4\1\uffff\1\0";
    static final String dfa_43s = "\2\73\1\uffff\1\0\2\73\1\uffff\1\0";
    static final String dfa_44s = "\2\uffff\1\2\3\uffff\1\1\1\uffff";
    static final String dfa_45s = "\3\uffff\1\1\3\uffff\1\0}>";
    static final String[] dfa_46s = {
            "\1\1\43\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\6\2",
            "\1\3\1\4\42\uffff\1\6\1\uffff\1\2\2\uffff\1\6\1\2\1\6\1\uffff\1\6\3\uffff\1\5\6\6",
            "",
            "\1\uffff",
            "\1\3\1\4\42\uffff\1\6\1\uffff\1\2\2\uffff\1\6\1\2\1\6\1\uffff\1\6\3\uffff\1\5\6\6",
            "\1\7\43\uffff\1\2\4\uffff\3\2\1\uffff\1\2\4\uffff\6\2",
            "",
            "\1\uffff"
    };
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_1;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "1981:3: ( (lv_identifierL_0_0= ruleIdentifierList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_7 = input.LA(1);

                         
                        int index29_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_InternalGo()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index29_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA29_3 = input.LA(1);

                         
                        int index29_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_InternalGo()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index29_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\1\uffff\3\4\2\uffff";
    static final String dfa_48s = "\4\4\2\uffff";
    static final String dfa_49s = "\1\4\3\63\2\uffff";
    static final String dfa_50s = "\4\uffff\1\2\1\1";
    static final String dfa_51s = "\6\uffff}>";
    static final String[] dfa_52s = {
            "\1\1",
            "\1\2\1\3\44\uffff\1\4\2\uffff\1\5\5\uffff\1\4",
            "\1\2\1\3\44\uffff\1\4\2\uffff\1\5\5\uffff\1\4",
            "\1\2\1\3\44\uffff\1\4\2\uffff\1\5\5\uffff\1\4",
            "",
            ""
    };
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_14;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "2109:2: ( ( ( (lv_mn_0_0= ruleMethodName ) ) ( (lv_signature_1_0= ruleSignature ) ) ) | ( () ( (lv_itn_3_0= ruleInterfaceTypeName ) ) ) )";
        }
    }
    static final String[] dfa_53s = {
            "\1\2\43\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\3\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "2359:5: (otherlv_1= '<-' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\25\uffff";
    static final String dfa_55s = "\2\uffff\1\3\15\uffff\1\3\4\uffff";
    static final String dfa_56s = "\1\4\1\uffff\1\4\1\uffff\1\4\12\uffff\1\0\1\4\1\uffff\1\0\2\uffff";
    static final String dfa_57s = "\1\116\1\uffff\1\120\1\uffff\1\4\12\uffff\1\0\1\120\1\uffff\1\0\2\uffff";
    static final String dfa_58s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\2\uffff\1\2\1\uffff\1\4\1\10";
    static final String dfa_59s = "\17\uffff\1\1\2\uffff\1\0\2\uffff}>";
    static final String[] dfa_60s = {
            "\1\2\1\uffff\1\3\7\uffff\3\3\27\uffff\1\3\1\uffff\1\3\1\uffff\2\3\1\uffff\1\3\1\uffff\1\3\1\11\1\3\2\uffff\1\3\1\uffff\4\3\1\uffff\1\4\1\5\1\6\1\7\1\12\1\uffff\1\10\1\14\1\15\1\16\1\1\1\uffff\2\1\3\uffff\1\13",
            "",
            "\1\17\1\20\1\3\5\uffff\5\3\27\uffff\1\3\1\uffff\1\3\1\uffff\2\3\1\uffff\1\3\1\uffff\6\3\1\uffff\4\3\1\21\5\3\1\uffff\5\3\1\uffff\10\3",
            "",
            "\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\17\1\20\1\3\5\uffff\5\3\27\uffff\1\3\1\uffff\1\3\1\uffff\2\3\1\uffff\1\3\1\uffff\6\3\1\uffff\4\3\1\21\5\3\1\uffff\5\3\1\uffff\10\3",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "2509:2: ( ( () ( (lv_declaration_1_0= ruleDeclaration ) ) ) | ( (lv_labest_2_0= ruleLabeledStmt ) ) | ( (lv_simplest_3_0= ruleSimpleStmt ) ) | ( (lv_gotst_4_0= ruleGoStmt ) ) | this_ReturnStmt_5= ruleReturnStmt | ( (lv_breakst_6_0= ruleBreakStmt ) ) | ( (lv_continuest_7_0= ruleContinueStmt ) ) | ( (lv_gotost_8_0= ruleGotoStmt ) ) | ( (lv_falltst_9_0= ruleFallthroughStmt ) ) | ( (lv_block1_10_0= ruleBlock ) ) | ( (lv_if_11_0= ruleIfStmt ) ) | ( (lv_switch_12_0= ruleSwitchStmt ) ) | ( (lv_selectst_13_0= ruleSelectStmt ) ) | ( (lv_forst_14_0= ruleForStmt ) ) | ( (lv_deferst_15_0= ruleDeferStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_18 = input.LA(1);

                         
                        int index37_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalGo()) ) {s = 19;}

                        else if ( (synpred54_InternalGo()) ) {s = 20;}

                         
                        input.seek(index37_18);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_15 = input.LA(1);

                         
                        int index37_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalGo()) ) {s = 17;}

                        else if ( (synpred49_InternalGo()) ) {s = 3;}

                         
                        input.seek(index37_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\27\uffff";
    static final String dfa_62s = "\1\4\1\uffff\20\0\5\uffff";
    static final String dfa_63s = "\1\73\1\uffff\20\0\5\uffff";
    static final String dfa_64s = "\1\uffff\1\1\20\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_65s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\5\uffff}>";
    static final String[] dfa_66s = {
            "\1\12\1\uffff\1\3\7\uffff\1\21\1\2\1\6\27\uffff\1\13\1\uffff\1\4\1\uffff\1\5\1\14\1\uffff\1\10\1\uffff\1\7\1\uffff\1\1\2\uffff\1\15\1\uffff\1\16\1\11\1\17\1\20",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "2946:2: ( ( () ( (lv_empty_1_0= ruleEmptyStmt ) ) ) | ( (lv_es_2_0= ruleExpressionStmt ) ) | ( (lv_ss_3_0= ruleSendStmt ) ) | ( (lv_inc_4_0= ruleIncDecStmt ) ) | ( (lv_ass_5_0= ruleAssignment ) ) | ( (lv_svd_6_0= ruleShortVarDecl ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_2 = input.LA(1);

                         
                        int index39_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA39_3 = input.LA(1);

                         
                        int index39_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA39_4 = input.LA(1);

                         
                        int index39_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA39_5 = input.LA(1);

                         
                        int index39_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA39_6 = input.LA(1);

                         
                        int index39_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA39_7 = input.LA(1);

                         
                        int index39_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA39_8 = input.LA(1);

                         
                        int index39_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA39_9 = input.LA(1);

                         
                        int index39_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA39_10 = input.LA(1);

                         
                        int index39_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index39_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA39_11 = input.LA(1);

                         
                        int index39_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA39_12 = input.LA(1);

                         
                        int index39_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA39_13 = input.LA(1);

                         
                        int index39_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA39_14 = input.LA(1);

                         
                        int index39_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA39_15 = input.LA(1);

                         
                        int index39_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA39_16 = input.LA(1);

                         
                        int index39_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA39_17 = input.LA(1);

                         
                        int index39_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 18;}

                        else if ( (synpred65_InternalGo()) ) {s = 19;}

                        else if ( (synpred66_InternalGo()) ) {s = 20;}

                        else if ( (synpred67_InternalGo()) ) {s = 21;}

                         
                        input.seek(index39_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_67s = "\45\uffff";
    static final String dfa_68s = "\1\21\44\uffff";
    static final String dfa_69s = "\1\4\20\0\24\uffff";
    static final String dfa_70s = "\1\120\20\0\24\uffff";
    static final String dfa_71s = "\21\uffff\1\2\22\uffff\1\1";
    static final String dfa_72s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\24\uffff}>";
    static final String[] dfa_73s = {
            "\1\11\1\uffff\1\2\7\uffff\1\20\1\1\1\5\27\uffff\1\12\1\uffff\1\3\1\uffff\1\4\1\13\1\uffff\1\7\1\uffff\1\6\3\21\1\uffff\1\14\1\uffff\1\15\1\10\1\16\1\17\1\uffff\5\21\1\uffff\5\21\1\uffff\2\21\3\uffff\3\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_67;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "3145:3: ( (lv_expressionlist_2_0= ruleExpressionList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA40_2 = input.LA(1);

                         
                        int index40_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA40_3 = input.LA(1);

                         
                        int index40_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA40_4 = input.LA(1);

                         
                        int index40_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA40_5 = input.LA(1);

                         
                        int index40_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA40_6 = input.LA(1);

                         
                        int index40_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA40_7 = input.LA(1);

                         
                        int index40_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA40_8 = input.LA(1);

                         
                        int index40_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA40_9 = input.LA(1);

                         
                        int index40_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA40_10 = input.LA(1);

                         
                        int index40_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA40_11 = input.LA(1);

                         
                        int index40_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA40_12 = input.LA(1);

                         
                        int index40_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA40_13 = input.LA(1);

                         
                        int index40_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA40_14 = input.LA(1);

                         
                        int index40_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA40_15 = input.LA(1);

                         
                        int index40_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA40_16 = input.LA(1);

                         
                        int index40_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_74s = "\23\uffff";
    static final String dfa_75s = "\1\4\1\uffff\20\0\1\uffff";
    static final String dfa_76s = "\1\73\1\uffff\20\0\1\uffff";
    static final String dfa_77s = "\1\uffff\1\1\20\uffff\1\2";
    static final String dfa_78s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\uffff}>";
    static final String[] dfa_79s = {
            "\1\12\1\uffff\1\3\7\uffff\1\21\1\2\1\6\27\uffff\1\13\1\uffff\1\4\1\uffff\1\5\1\14\1\uffff\1\10\1\uffff\1\7\1\uffff\1\1\2\uffff\1\15\1\uffff\1\16\1\11\1\17\1\20",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "3293:3: ( ( (lv_simst_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_2 = input.LA(1);

                         
                        int index43_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_3 = input.LA(1);

                         
                        int index43_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_4 = input.LA(1);

                         
                        int index43_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_5 = input.LA(1);

                         
                        int index43_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_6 = input.LA(1);

                         
                        int index43_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA43_7 = input.LA(1);

                         
                        int index43_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA43_10 = input.LA(1);

                         
                        int index43_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA43_11 = input.LA(1);

                         
                        int index43_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA43_12 = input.LA(1);

                         
                        int index43_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA43_13 = input.LA(1);

                         
                        int index43_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA43_14 = input.LA(1);

                         
                        int index43_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA43_15 = input.LA(1);

                         
                        int index43_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA43_16 = input.LA(1);

                         
                        int index43_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA43_17 = input.LA(1);

                         
                        int index43_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index43_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\1\4\1\uffff\20\0\3\uffff";
    static final String dfa_81s = "\1\121\1\uffff\20\0\3\uffff";
    static final String dfa_82s = "\1\uffff\1\4\20\uffff\1\2\1\3\1\1";
    static final String dfa_83s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff}>";
    static final String[] dfa_84s = {
            "\1\12\1\uffff\1\3\7\uffff\1\21\1\2\1\6\27\uffff\1\13\1\uffff\1\4\1\uffff\1\5\1\14\1\uffff\1\10\1\uffff\1\7\1\1\1\22\2\uffff\1\15\1\uffff\1\16\1\11\1\17\1\20\25\uffff\1\23",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_54;
            this.eof = dfa_54;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "()* loopback of 3550:3: ( ( (lv_condition_1_0= ruleCondition ) ) | ( (lv_for_2_0= ruleForClause ) ) | ( (lv_range_3_0= ruleRangeClause ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_4 = input.LA(1);

                         
                        int index48_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_5 = input.LA(1);

                         
                        int index48_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_6 = input.LA(1);

                         
                        int index48_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA48_8 = input.LA(1);

                         
                        int index48_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA48_9 = input.LA(1);

                         
                        int index48_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA48_11 = input.LA(1);

                         
                        int index48_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA48_12 = input.LA(1);

                         
                        int index48_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA48_13 = input.LA(1);

                         
                        int index48_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA48_14 = input.LA(1);

                         
                        int index48_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA48_15 = input.LA(1);

                         
                        int index48_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA48_16 = input.LA(1);

                         
                        int index48_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA48_17 = input.LA(1);

                         
                        int index48_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 20;}

                        else if ( (synpred77_InternalGo()) ) {s = 18;}

                        else if ( (synpred78_InternalGo()) ) {s = 19;}

                         
                        input.seek(index48_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_85s = "\2\uffff\1\5\3\uffff\6\5";
    static final String dfa_86s = "\4\4\2\uffff\6\4";
    static final String dfa_87s = "\1\4\1\110\1\120\1\110\2\uffff\6\120";
    static final String dfa_88s = "\4\uffff\1\1\1\2\6\uffff";
    static final String dfa_89s = "\14\uffff}>";
    static final String[] dfa_90s = {
            "\1\1",
            "\1\2\1\3\42\uffff\1\5\4\uffff\1\5\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\1\uffff\4\5\14\uffff\1\4",
            "\1\6\1\7\1\5\7\uffff\3\5\27\uffff\1\5\1\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\4\5\1\uffff\1\5\1\uffff\4\5\1\uffff\5\5\1\uffff\5\5\1\4\2\5\3\uffff\3\5",
            "\1\2\1\3\42\uffff\1\5\4\uffff\1\5\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\1\uffff\4\5\14\uffff\1\4",
            "",
            "",
            "\1\10\1\11\1\5\5\uffff\5\5\27\uffff\1\5\1\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\6\5\1\uffff\12\5\1\uffff\5\5\1\4\10\5",
            "\1\6\1\7\1\5\7\uffff\3\5\27\uffff\1\5\1\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\4\5\1\uffff\1\5\1\uffff\4\5\1\uffff\5\5\1\uffff\5\5\1\4\2\5\3\uffff\3\5",
            "\1\12\1\13\1\5\5\uffff\5\5\27\uffff\1\5\1\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\6\5\1\uffff\12\5\1\uffff\5\5\1\4\10\5",
            "\1\10\1\11\1\5\5\uffff\5\5\27\uffff\1\5\1\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\6\5\1\uffff\12\5\1\uffff\5\5\1\4\10\5",
            "\1\12\1\13\1\5\5\uffff\5\5\27\uffff\1\5\1\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\6\5\1\uffff\12\5\1\uffff\5\5\1\4\10\5",
            "\1\12\1\13\1\5\5\uffff\5\5\27\uffff\1\5\1\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\6\5\1\uffff\12\5\1\uffff\5\5\1\4\10\5"
    };
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_35;
            this.eof = dfa_85;
            this.min = dfa_86;
            this.max = dfa_87;
            this.accept = dfa_88;
            this.special = dfa_89;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "3952:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )";
        }
    }
    static final String[] dfa_91s = {
            "\1\12\1\uffff\1\3\7\uffff\1\21\1\2\1\6\27\uffff\1\13\1\uffff\1\4\1\uffff\1\5\1\14\1\uffff\1\10\1\uffff\1\7\1\22\1\1\2\uffff\1\15\1\uffff\1\16\1\11\1\17\1\20",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "4645:3: ( ( (lv_simplestmt_2_0= ruleSimpleStmt ) ) otherlv_3= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_2 = input.LA(1);

                         
                        int index59_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_3 = input.LA(1);

                         
                        int index59_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_4 = input.LA(1);

                         
                        int index59_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_5 = input.LA(1);

                         
                        int index59_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_6 = input.LA(1);

                         
                        int index59_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA59_7 = input.LA(1);

                         
                        int index59_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA59_8 = input.LA(1);

                         
                        int index59_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA59_9 = input.LA(1);

                         
                        int index59_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA59_10 = input.LA(1);

                         
                        int index59_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA59_11 = input.LA(1);

                         
                        int index59_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA59_12 = input.LA(1);

                         
                        int index59_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA59_13 = input.LA(1);

                         
                        int index59_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA59_14 = input.LA(1);

                         
                        int index59_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA59_15 = input.LA(1);

                         
                        int index59_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA59_16 = input.LA(1);

                         
                        int index59_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA59_17 = input.LA(1);

                         
                        int index59_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index59_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_92s = "\1\4\1\uffff\17\0\2\uffff";
    static final String dfa_93s = "\1\73\1\uffff\17\0\2\uffff";
    static final String dfa_94s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_95s = {
            "\1\12\1\uffff\1\3\7\uffff\1\1\1\2\1\6\27\uffff\1\13\1\uffff\1\4\1\uffff\1\5\1\14\1\uffff\1\10\1\uffff\1\7\1\uffff\1\1\2\uffff\1\15\1\uffff\1\16\1\11\1\17\1\20",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_77;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "4863:3: ( ( (lv_simplestm_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_2 = input.LA(1);

                         
                        int index63_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_3 = input.LA(1);

                         
                        int index63_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA63_4 = input.LA(1);

                         
                        int index63_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA63_5 = input.LA(1);

                         
                        int index63_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA63_6 = input.LA(1);

                         
                        int index63_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA63_7 = input.LA(1);

                         
                        int index63_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA63_8 = input.LA(1);

                         
                        int index63_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA63_9 = input.LA(1);

                         
                        int index63_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA63_10 = input.LA(1);

                         
                        int index63_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA63_11 = input.LA(1);

                         
                        int index63_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA63_12 = input.LA(1);

                         
                        int index63_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA63_13 = input.LA(1);

                         
                        int index63_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA63_14 = input.LA(1);

                         
                        int index63_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA63_15 = input.LA(1);

                         
                        int index63_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA63_16 = input.LA(1);

                         
                        int index63_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index63_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\2\4\1\uffff\2\4\1\uffff";
    static final String dfa_97s = "\1\73\1\115\1\uffff\2\115\1\uffff";
    static final String[] dfa_98s = {
            "\1\1\1\uffff\1\2\10\uffff\2\2\27\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\4\2",
            "\1\3\1\4\44\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\32\uffff\1\5",
            "",
            "\1\3\1\4\44\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\32\uffff\1\5",
            "\1\3\1\4\44\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\32\uffff\1\5",
            ""
    };
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_18;
            this.special = dfa_51;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "4953:3: ( ( (lv_id_0_0= ruleIDENTIFIER ) ) otherlv_1= ':=' )?";
        }
    }
    static final String dfa_99s = "\1\4\20\0\2\uffff";
    static final String dfa_100s = "\1\73\20\0\2\uffff";
    static final String dfa_101s = "\21\uffff\1\1\1\2";
    static final String dfa_102s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\2\uffff}>";
    static final String[] dfa_103s = {
            "\1\11\1\uffff\1\2\7\uffff\1\20\1\1\1\5\27\uffff\1\12\1\uffff\1\3\1\uffff\1\4\1\13\1\uffff\1\7\1\uffff\1\6\4\uffff\1\14\1\uffff\1\15\1\10\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "5289:4: ( ( (lv_sendstmt_2_0= ruleSendStmt ) ) | ( (lv_recvstmt_3_0= ruleRecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_2 = input.LA(1);

                         
                        int index69_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_3 = input.LA(1);

                         
                        int index69_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA69_4 = input.LA(1);

                         
                        int index69_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA69_5 = input.LA(1);

                         
                        int index69_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA69_6 = input.LA(1);

                         
                        int index69_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA69_7 = input.LA(1);

                         
                        int index69_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA69_8 = input.LA(1);

                         
                        int index69_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA69_9 = input.LA(1);

                         
                        int index69_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA69_10 = input.LA(1);

                         
                        int index69_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA69_11 = input.LA(1);

                         
                        int index69_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA69_14 = input.LA(1);

                         
                        int index69_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA69_15 = input.LA(1);

                         
                        int index69_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA69_16 = input.LA(1);

                         
                        int index69_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index69_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_104s = "\24\uffff";
    static final String dfa_105s = "\1\4\20\0\3\uffff";
    static final String dfa_106s = "\1\73\20\0\3\uffff";
    static final String dfa_107s = "\21\uffff\1\1\1\3\1\2";
    static final String dfa_108s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff}>";
    static final String[] dfa_109s = {
            "\1\11\1\uffff\1\2\7\uffff\1\20\1\1\1\5\27\uffff\1\12\1\uffff\1\3\1\uffff\1\4\1\13\1\uffff\1\7\1\uffff\1\6\4\uffff\1\14\1\uffff\1\15\1\10\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[][] dfa_109 = unpackEncodedStringArray(dfa_109s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_104;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "5367:3: ( (this_ExpressionList_0= ruleExpressionList otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_2 = input.LA(1);

                         
                        int index71_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_3 = input.LA(1);

                         
                        int index71_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_4 = input.LA(1);

                         
                        int index71_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_6 = input.LA(1);

                         
                        int index71_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA71_7 = input.LA(1);

                         
                        int index71_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA71_8 = input.LA(1);

                         
                        int index71_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA71_9 = input.LA(1);

                         
                        int index71_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (synpred102_InternalGo()) ) {s = 19;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA71_10 = input.LA(1);

                         
                        int index71_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA71_11 = input.LA(1);

                         
                        int index71_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA71_12 = input.LA(1);

                         
                        int index71_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA71_13 = input.LA(1);

                         
                        int index71_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA71_14 = input.LA(1);

                         
                        int index71_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA71_15 = input.LA(1);

                         
                        int index71_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA71_16 = input.LA(1);

                         
                        int index71_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index71_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_110s = "\1\4\1\0\21\uffff";
    static final String dfa_111s = "\1\73\1\0\21\uffff";
    static final String dfa_112s = "\2\uffff\1\1\17\uffff\1\2";
    static final String dfa_113s = "\1\uffff\1\0\21\uffff}>";
    static final String[] dfa_114s = {
            "\1\2\1\uffff\1\2\7\uffff\3\2\27\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\1\2\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[][] dfa_114 = unpackEncodedStringArray(dfa_114s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_112;
            this.special = dfa_113;
            this.transition = dfa_114;
        }
        public String getDescription() {
            return "5506:3: (this_InitStmt_0= ruleInitStmt )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_1 = input.LA(1);

                         
                        int index72_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 2;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index72_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_115s = "\11\uffff";
    static final String dfa_116s = "\1\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4";
    static final String dfa_117s = "\1\121\1\uffff\1\115\1\uffff\2\115\1\uffff\2\115";
    static final String dfa_118s = "\1\uffff\1\1\1\uffff\1\3\2\uffff\1\2\2\uffff";
    static final String dfa_119s = "\11\uffff}>";
    static final String[] dfa_120s = {
            "\1\2\1\uffff\1\1\7\uffff\3\1\27\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\uffff\4\1\25\uffff\1\3",
            "",
            "\1\4\1\5\7\uffff\1\1\34\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6",
            "",
            "\1\7\1\10\7\uffff\1\1\34\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6",
            "\1\4\1\5\7\uffff\1\1\34\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6",
            "",
            "\1\7\1\10\7\uffff\1\1\34\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6",
            "\1\7\1\10\7\uffff\1\1\34\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\6\22\uffff\1\1\4\uffff\1\6"
    };

    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_115;
            this.eof = dfa_115;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "5584:3: ( ( ( (lv_expressionlist_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idl_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_121s = "\54\uffff";
    static final String dfa_122s = "\1\2\53\uffff";
    static final String dfa_123s = "\1\4\1\0\52\uffff";
    static final String dfa_124s = "\1\121\1\0\52\uffff";
    static final String dfa_125s = "\2\uffff\1\2\50\uffff\1\1";
    static final String dfa_126s = "\1\uffff\1\0\52\uffff}>";
    static final String[] dfa_127s = {
            "\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff\3\2\27\uffff\1\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\1\1\16\2\1\uffff\10\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[][] dfa_127 = unpackEncodedStringArray(dfa_127s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_121;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "()* loopback of 5789:3: (otherlv_1= ';' ( (lv_expression2_2_0= ruleExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_128s = "\22\uffff";
    static final String dfa_129s = "\1\4\5\uffff\12\0\2\uffff";
    static final String dfa_130s = "\1\73\5\uffff\12\0\2\uffff";
    static final String dfa_131s = "\1\uffff\1\1\16\uffff\1\2\1\3";
    static final String dfa_132s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff}>";
    static final String[] dfa_133s = {
            "\1\11\1\uffff\1\1\10\uffff\2\1\27\uffff\1\12\1\uffff\1\1\1\uffff\1\1\1\13\1\uffff\1\7\1\uffff\1\6\4\uffff\1\14\1\uffff\1\15\1\10\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[][] dfa_133 = unpackEncodedStringArray(dfa_133s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_128;
            this.eof = dfa_128;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_131;
            this.special = dfa_132;
            this.transition = dfa_133;
        }
        public String getDescription() {
            return "6056:2: ( (this_Operand_0= ruleOperand ( (lv_pr_1_0= rulePrimaryExpr2 ) ) ) | (this_Conversion_2= ruleConversion ( (lv_pr_3_0= rulePrimaryExpr2 ) ) ) | (this_MethodExpr_4= ruleMethodExpr ( (lv_pr_5_0= rulePrimaryExpr2 ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 1;}

                        else if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_7 = input.LA(1);

                         
                        int index78_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 1;}

                        else if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_8 = input.LA(1);

                         
                        int index78_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 1;}

                        else if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 1;}

                        else if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 1;}

                        else if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_11 = input.LA(1);

                         
                        int index78_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 1;}

                        else if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA78_12 = input.LA(1);

                         
                        int index78_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA78_13 = input.LA(1);

                         
                        int index78_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA78_14 = input.LA(1);

                         
                        int index78_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA78_15 = input.LA(1);

                         
                        int index78_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index78_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_134s = "\64\uffff";
    static final String dfa_135s = "\1\4\63\uffff";
    static final String dfa_136s = "\1\4\3\0\60\uffff";
    static final String dfa_137s = "\1\121\3\0\60\uffff";
    static final String dfa_138s = "\4\uffff\1\6\52\uffff\1\1\1\4\1\2\1\3\1\5";
    static final String dfa_139s = "\1\uffff\1\0\1\1\1\2\60\uffff}>";
    static final String[] dfa_140s = {
            "\1\4\1\uffff\1\4\5\uffff\5\4\27\uffff\1\4\1\uffff\1\1\1\uffff\1\4\1\3\1\4\1\2\22\4\1\uffff\12\4\1\uffff\4\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final char[] dfa_136 = DFA.unpackEncodedStringToUnsignedChars(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[][] dfa_140 = unpackEncodedStringArray(dfa_140s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_134;
            this.eof = dfa_135;
            this.min = dfa_136;
            this.max = dfa_137;
            this.accept = dfa_138;
            this.special = dfa_139;
            this.transition = dfa_140;
        }
        public String getDescription() {
            return "6184:3: ( ( ( (lv_selector_1_0= ruleSelector ) ) ( (lv_pr_2_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_index_3_0= ruleIndex ) ) ( (lv_pr_4_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_slice_5_0= ruleSlice ) ) ( (lv_pr_6_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_typeass_7_0= ruleTypeAssertion ) ) ( (lv_pr_8_0= rulePrimaryExpr2 ) ) ) | ( ( (lv_arguments_9_0= ruleArguments ) ) ( (lv_pr_10_0= rulePrimaryExpr2 ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_1 = input.LA(1);

                         
                        int index79_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalGo()) ) {s = 47;}

                        else if ( (synpred115_InternalGo()) ) {s = 48;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index79_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA79_2 = input.LA(1);

                         
                        int index79_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalGo()) ) {s = 49;}

                        else if ( (synpred114_InternalGo()) ) {s = 50;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index79_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA79_3 = input.LA(1);

                         
                        int index79_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalGo()) ) {s = 51;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index79_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_141s = "\15\uffff";
    static final String dfa_142s = "\1\4\10\uffff\1\0\3\uffff";
    static final String dfa_143s = "\1\71\10\uffff\1\0\3\uffff";
    static final String dfa_144s = "\1\uffff\1\1\11\uffff\1\3\1\2";
    static final String dfa_145s = "\11\uffff\1\0\3\uffff}>";
    static final String[] dfa_146s = {
            "\1\11\1\uffff\1\1\10\uffff\2\1\27\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\13\1\uffff\1\1\1\uffff\1\1\7\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[][] dfa_146 = unpackEncodedStringArray(dfa_146s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_141;
            this.eof = dfa_141;
            this.min = dfa_142;
            this.max = dfa_143;
            this.accept = dfa_144;
            this.special = dfa_145;
            this.transition = dfa_146;
        }
        public String getDescription() {
            return "6408:2: ( ( () ( (lv_literal_1_0= ruleLiteral ) ) ) | ( (lv_operandn_2_0= ruleOperandName ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_9 = input.LA(1);

                         
                        int index80_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalGo()) ) {s = 1;}

                        else if ( (synpred118_InternalGo()) ) {s = 12;}

                         
                        input.seek(index80_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_147s = "\1\4\5\uffff\12\0\5\uffff";
    static final String dfa_148s = "\1\73\5\uffff\12\0\5\uffff";
    static final String dfa_149s = "\1\uffff\1\1\17\uffff\1\3\2\uffff\1\2";
    static final String dfa_150s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\5\uffff}>";
    static final String[] dfa_151s = {
            "\1\11\1\uffff\1\1\7\uffff\3\1\27\uffff\1\12\1\uffff\1\1\1\uffff\1\1\1\13\1\21\1\7\1\uffff\1\6\3\uffff\1\21\1\14\1\21\1\15\1\10\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final char[] dfa_148 = DFA.unpackEncodedStringToUnsignedChars(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final short[][] dfa_151 = unpackEncodedStringArray(dfa_151s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_54;
            this.eof = dfa_54;
            this.min = dfa_147;
            this.max = dfa_148;
            this.accept = dfa_149;
            this.special = dfa_150;
            this.transition = dfa_151;
        }
        public String getDescription() {
            return "6927:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_6 = input.LA(1);

                         
                        int index88_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_7 = input.LA(1);

                         
                        int index88_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA88_8 = input.LA(1);

                         
                        int index88_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA88_9 = input.LA(1);

                         
                        int index88_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA88_10 = input.LA(1);

                         
                        int index88_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA88_11 = input.LA(1);

                         
                        int index88_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA88_12 = input.LA(1);

                         
                        int index88_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA88_13 = input.LA(1);

                         
                        int index88_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA88_14 = input.LA(1);

                         
                        int index88_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA88_15 = input.LA(1);

                         
                        int index88_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index88_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_152s = "\1\4\21\0\2\uffff";
    static final String dfa_153s = "\1\73\21\0\2\uffff";
    static final String dfa_154s = "\22\uffff\1\1\1\2";
    static final String dfa_155s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff}>";
    static final String[] dfa_156s = {
            "\1\1\1\uffff\1\3\7\uffff\1\20\1\2\1\6\27\uffff\1\12\1\uffff\1\4\1\uffff\1\5\1\13\1\uffff\1\10\1\uffff\1\7\1\21\3\uffff\1\14\1\uffff\1\15\1\11\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[][] dfa_156 = unpackEncodedStringArray(dfa_156s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_104;
            this.eof = dfa_104;
            this.min = dfa_152;
            this.max = dfa_153;
            this.accept = dfa_154;
            this.special = dfa_155;
            this.transition = dfa_156;
        }
        public String getDescription() {
            return "7526:3: (this_Key_0= ruleKey otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_1 = input.LA(1);

                         
                        int index98_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_2 = input.LA(1);

                         
                        int index98_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_3 = input.LA(1);

                         
                        int index98_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA98_4 = input.LA(1);

                         
                        int index98_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA98_5 = input.LA(1);

                         
                        int index98_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA98_6 = input.LA(1);

                         
                        int index98_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA98_7 = input.LA(1);

                         
                        int index98_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA98_8 = input.LA(1);

                         
                        int index98_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA98_9 = input.LA(1);

                         
                        int index98_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA98_10 = input.LA(1);

                         
                        int index98_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA98_11 = input.LA(1);

                         
                        int index98_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA98_12 = input.LA(1);

                         
                        int index98_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA98_13 = input.LA(1);

                         
                        int index98_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA98_14 = input.LA(1);

                         
                        int index98_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA98_15 = input.LA(1);

                         
                        int index98_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA98_16 = input.LA(1);

                         
                        int index98_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA98_17 = input.LA(1);

                         
                        int index98_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_157s = "\16\uffff";
    static final String dfa_158s = "\6\uffff\2\12\1\uffff\1\12\2\uffff\2\12";
    static final String dfa_159s = "\1\6\1\uffff\1\7\1\6\2\uffff\2\4\1\uffff\1\4\1\uffff\1\0\2\4";
    static final String dfa_160s = "\1\54\1\uffff\1\53\1\6\2\uffff\2\121\1\uffff\1\121\1\uffff\1\0\2\121";
    static final String dfa_161s = "\1\uffff\1\1\2\uffff\1\4\1\5\2\uffff\1\3\1\uffff\1\2\3\uffff";
    static final String dfa_162s = "\13\uffff\1\0\2\uffff}>";
    static final String[] dfa_163s = {
            "\1\2\10\uffff\1\1\1\5\31\uffff\1\3\1\uffff\1\4",
            "",
            "\1\6\42\uffff\1\7\1\10",
            "\1\11",
            "",
            "",
            "\1\12\1\uffff\1\12\5\uffff\5\12\27\uffff\1\12\1\uffff\1\12\1\10\26\12\1\uffff\12\12\1\uffff\4\12",
            "\1\12\1\uffff\1\13\1\14\4\uffff\5\12\27\uffff\1\12\1\uffff\1\12\1\10\26\12\1\uffff\12\12\1\uffff\4\12",
            "",
            "\1\12\1\uffff\1\12\1\15\4\uffff\5\12\27\uffff\1\12\1\uffff\1\12\1\10\26\12\1\uffff\12\12\1\uffff\4\12",
            "",
            "\1\uffff",
            "\1\12\1\uffff\1\12\5\uffff\5\12\27\uffff\1\12\1\uffff\1\12\1\10\26\12\1\uffff\12\12\1\uffff\4\12",
            "\1\12\1\uffff\1\12\5\uffff\5\12\27\uffff\1\12\1\uffff\1\12\1\10\26\12\1\uffff\12\12\1\uffff\4\12"
    };

    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[][] dfa_163 = unpackEncodedStringArray(dfa_163s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_157;
            this.eof = dfa_158;
            this.min = dfa_159;
            this.max = dfa_160;
            this.accept = dfa_161;
            this.special = dfa_162;
            this.transition = dfa_163;
        }
        public String getDescription() {
            return "7723:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= ruleFLOAT_LIT | this_IMAGINARY_LIT_2= ruleIMAGINARY_LIT | this_RUNE_LIT_3= ruleRUNE_LIT | this_STRING_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_11 = input.LA(1);

                         
                        int index101_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 10;}

                        else if ( (synpred148_InternalGo()) ) {s = 8;}

                         
                        input.seek(index101_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_164s = "\1\uffff\1\5\1\uffff\1\5\4\uffff";
    static final String dfa_165s = "\2\4\1\0\2\4\2\uffff\1\0";
    static final String dfa_166s = "\1\4\1\121\1\0\1\121\1\55\2\uffff\1\0";
    static final String dfa_167s = "\5\uffff\1\1\1\2\1\uffff";
    static final String[] dfa_168s = {
            "\1\1",
            "\1\2\1\3\1\5\5\uffff\5\5\27\uffff\1\5\1\uffff\1\4\1\uffff\26\5\1\uffff\12\5\1\uffff\4\5",
            "\1\uffff",
            "\1\2\1\3\1\5\5\uffff\5\5\27\uffff\1\5\1\uffff\1\4\1\uffff\26\5\1\uffff\12\5\1\uffff\4\5",
            "\1\7\1\uffff\1\5\46\uffff\1\5",
            "",
            "",
            "\1\uffff"
    };
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[][] dfa_168 = unpackEncodedStringArray(dfa_168s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_1;
            this.eof = dfa_164;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_6;
            this.transition = dfa_168;
        }
        public String getDescription() {
            return "7854:2: ( ( () ( (lv_id_1_0= ruleIDENTIFIER ) ) ) | this_QualifiedIdent_2= ruleQualifiedIdent )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_2 = input.LA(1);

                         
                        int index102_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index102_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_7 = input.LA(1);

                         
                        int index102_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index102_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_169s = "\1\21\24\uffff";
    static final String[] dfa_170s = {
            "\1\11\1\uffff\1\1\7\uffff\3\1\27\uffff\1\12\1\uffff\1\1\1\uffff\1\1\1\13\1\uffff\1\7\1\uffff\1\6\3\uffff\1\21\1\14\1\21\1\15\1\10\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_54;
            this.eof = dfa_169;
            this.min = dfa_147;
            this.max = dfa_148;
            this.accept = dfa_149;
            this.special = dfa_150;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "6927:4: ( ( (lv_expressionlist_2_0= ruleExpressionList ) ) | ( ( (lv_type_3_0= ruleType ) ) ( (otherlv_4= ',' )? ( (lv_expressionlist_5_0= ruleExpressionList ) ) )? ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_6 = input.LA(1);

                         
                        int index125_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA125_7 = input.LA(1);

                         
                        int index125_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA125_8 = input.LA(1);

                         
                        int index125_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA125_9 = input.LA(1);

                         
                        int index125_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA125_10 = input.LA(1);

                         
                        int index125_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA125_11 = input.LA(1);

                         
                        int index125_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA125_12 = input.LA(1);

                         
                        int index125_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA125_13 = input.LA(1);

                         
                        int index125_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA125_14 = input.LA(1);

                         
                        int index125_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA125_15 = input.LA(1);

                         
                        int index125_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalGo()) ) {s = 1;}

                        else if ( (synpred127_InternalGo()) ) {s = 20;}

                         
                        input.seek(index125_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000010000000002L,0x0000000000040680L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000010000000002L,0x0000000000000680L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x00000000000000C2L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000300L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0F42A10000000010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0F42B5000001C050L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0050000000000010L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000C02L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0020000000000012L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0F42A10000000012L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0FC2E10000000010L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0020400000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0FC2A10000000010L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0010000000000010L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0xEF5EB5000001C050L,0x00000000000046FBL});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0xEF4EB5000001C052L,0x00000000000046FBL});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0xEF4EB5000001C050L,0x00000000000046FBL});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0F42B5000001C052L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0F4AB5000001C050L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0010000000000000L,0x0000000000018000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0F4EB5000001C050L,0x0000000000020000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000200000000010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0F42A10000000010L,0x0000000000000100L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0F4EB5000001C050L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0F46B5000001C050L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0F42B50000018050L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0F62A10000000012L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000A40000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x1F42B5000001C050L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0F43B5000001C050L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0FE2F5000001C050L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00A0400000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0F56B5000001C050L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0030000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0F66B5000001C052L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000240000010010L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000440000010010L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000040000010010L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0F62B5000001C052L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00A0000000000002L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0FE2B5000001C052L});

}