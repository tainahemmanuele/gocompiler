/*
 * generated by Xtext 2.13.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
		(rule__Model__GreetingsAssignment)
		{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompilation_initial
entryRuleCompilation_initial
:
{ before(grammarAccess.getCompilation_initialRule()); }
	 ruleCompilation_initial
{ after(grammarAccess.getCompilation_initialRule()); } 
	 EOF 
;

// Rule Compilation_initial
ruleCompilation_initial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompilation_initialAccess().getGroup()); }
		(rule__Compilation_initial__Group__0)
		{ after(grammarAccess.getCompilation_initialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTopLevelDecl
entryRuleTopLevelDecl
:
{ before(grammarAccess.getTopLevelDeclRule()); }
	 ruleTopLevelDecl
{ after(grammarAccess.getTopLevelDeclRule()); } 
	 EOF 
;

// Rule TopLevelDecl
ruleTopLevelDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
		(rule__TopLevelDecl__Alternatives)
		{ after(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDecl
entryRuleMethodDecl
:
{ before(grammarAccess.getMethodDeclRule()); }
	 ruleMethodDecl
{ after(grammarAccess.getMethodDeclRule()); } 
	 EOF 
;

// Rule MethodDecl
ruleMethodDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclAccess().getGroup()); }
		(rule__MethodDecl__Group__0)
		{ after(grammarAccess.getMethodDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiver
entryRuleReceiver
:
{ before(grammarAccess.getReceiverRule()); }
	 ruleReceiver
{ after(grammarAccess.getReceiverRule()); } 
	 EOF 
;

// Rule Receiver
ruleReceiver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
		ruleParameters
		{ after(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionName
entryRuleFunctionName
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIDENTIFIERParserRuleCall()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getFunctionNameAccess().getIDENTIFIERParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl
:
{ before(grammarAccess.getFunctionDeclRule()); }
	 ruleFunctionDecl
{ after(grammarAccess.getFunctionDeclRule()); } 
	 EOF 
;

// Rule FunctionDecl
ruleFunctionDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getGroup()); }
		(rule__FunctionDecl__Group__0)
		{ after(grammarAccess.getFunctionDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageClause
entryRulePackageClause
:
{ before(grammarAccess.getPackageClauseRule()); }
	 rulePackageClause
{ after(grammarAccess.getPackageClauseRule()); } 
	 EOF 
;

// Rule PackageClause
rulePackageClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageClauseAccess().getGroup()); }
		(rule__PackageClause__Group__0)
		{ after(grammarAccess.getPackageClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIDENTIFIER
entryRuleIDENTIFIER
:
{ before(grammarAccess.getIDENTIFIERRule()); }
	 ruleIDENTIFIER
{ after(grammarAccess.getIDENTIFIERRule()); } 
	 EOF 
;

// Rule IDENTIFIER
ruleIDENTIFIER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIDENTIFIERAccess().getGroup()); }
		(rule__IDENTIFIER__Group__0)
		{ after(grammarAccess.getIDENTIFIERAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINT_LIT
entryRuleINT_LIT
:
{ before(grammarAccess.getINT_LITRule()); }
	 ruleINT_LIT
{ after(grammarAccess.getINT_LITRule()); } 
	 EOF 
;

// Rule INT_LIT
ruleINT_LIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINT_LITAccess().getAlternatives()); }
		(rule__INT_LIT__Alternatives)
		{ after(grammarAccess.getINT_LITAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLOAT_LIT
entryRuleFLOAT_LIT
:
{ before(grammarAccess.getFLOAT_LITRule()); }
	 ruleFLOAT_LIT
{ after(grammarAccess.getFLOAT_LITRule()); } 
	 EOF 
;

// Rule FLOAT_LIT
ruleFLOAT_LIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getAlternatives()); }
		(rule__FLOAT_LIT__Alternatives)
		{ after(grammarAccess.getFLOAT_LITAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIMAGINARY_LIT
entryRuleIMAGINARY_LIT
:
{ before(grammarAccess.getIMAGINARY_LITRule()); }
	 ruleIMAGINARY_LIT
{ after(grammarAccess.getIMAGINARY_LITRule()); } 
	 EOF 
;

// Rule IMAGINARY_LIT
ruleIMAGINARY_LIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getGroup()); }
		(rule__IMAGINARY_LIT__Group__0)
		{ after(grammarAccess.getIMAGINARY_LITAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRUNE_LIT
entryRuleRUNE_LIT
:
{ before(grammarAccess.getRUNE_LITRule()); }
	 ruleRUNE_LIT
{ after(grammarAccess.getRUNE_LITRule()); } 
	 EOF 
;

// Rule RUNE_LIT
ruleRUNE_LIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRUNE_LITAccess().getGroup()); }
		(rule__RUNE_LIT__Group__0)
		{ after(grammarAccess.getRUNE_LITAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTRING_LIT
entryRuleSTRING_LIT
:
{ before(grammarAccess.getSTRING_LITRule()); }
	 ruleSTRING_LIT
{ after(grammarAccess.getSTRING_LITRule()); } 
	 EOF 
;

// Rule STRING_LIT
ruleSTRING_LIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRING_LITAccess().getAlternatives()); }
		(rule__STRING_LIT__Alternatives)
		{ after(grammarAccess.getSTRING_LITAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getAlternatives()); }
		(rule__TypeName__Alternatives)
		{ after(grammarAccess.getTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedIdent
entryRuleQualifiedIdent
:
{ before(grammarAccess.getQualifiedIdentRule()); }
	 ruleQualifiedIdent
{ after(grammarAccess.getQualifiedIdentRule()); } 
	 EOF 
;

// Rule QualifiedIdent
ruleQualifiedIdent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedIdentAccess().getGroup()); }
		(rule__QualifiedIdent__Group__0)
		{ after(grammarAccess.getQualifiedIdentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageName
entryRulePackageName
:
{ before(grammarAccess.getPackageNameRule()); }
	 rulePackageName
{ after(grammarAccess.getPackageNameRule()); } 
	 EOF 
;

// Rule PackageName
rulePackageName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageNameAccess().getIDENTIFIERParserRuleCall()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getPackageNameAccess().getIDENTIFIERParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLit
entryRuleTypeLit
:
{ before(grammarAccess.getTypeLitRule()); }
	 ruleTypeLit
{ after(grammarAccess.getTypeLitRule()); } 
	 EOF 
;

// Rule TypeLit
ruleTypeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLitAccess().getAlternatives()); }
		(rule__TypeLit__Alternatives)
		{ after(grammarAccess.getTypeLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
		(rule__ArrayType__Group__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayLength
entryRuleArrayLength
:
{ before(grammarAccess.getArrayLengthRule()); }
	 ruleArrayLength
{ after(grammarAccess.getArrayLengthRule()); } 
	 EOF 
;

// Rule ArrayLength
ruleArrayLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementType
entryRuleElementType
:
{ before(grammarAccess.getElementTypeRule()); }
	 ruleElementType
{ after(grammarAccess.getElementTypeRule()); } 
	 EOF 
;

// Rule ElementType
ruleElementType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeParserRuleCall()); }
		ruleType
		{ after(grammarAccess.getElementTypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSliceType
entryRuleSliceType
:
{ before(grammarAccess.getSliceTypeRule()); }
	 ruleSliceType
{ after(grammarAccess.getSliceTypeRule()); } 
	 EOF 
;

// Rule SliceType
ruleSliceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceTypeAccess().getGroup()); }
		(rule__SliceType__Group__0)
		{ after(grammarAccess.getSliceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructType
entryRuleStructType
:
{ before(grammarAccess.getStructTypeRule()); }
	 ruleStructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule StructType
ruleStructType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructTypeAccess().getGroup()); }
		(rule__StructType__Group__0)
		{ after(grammarAccess.getStructTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl
:
{ before(grammarAccess.getFieldDeclRule()); }
	 ruleFieldDecl
{ after(grammarAccess.getFieldDeclRule()); } 
	 EOF 
;

// Rule FieldDecl
ruleFieldDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup()); }
		(rule__FieldDecl__Group__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList
:
{ before(grammarAccess.getIdentifierListRule()); }
	 ruleIdentifierList
{ after(grammarAccess.getIdentifierListRule()); } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierListAccess().getGroup()); }
		(rule__IdentifierList__Group__0)
		{ after(grammarAccess.getIdentifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField
:
{ before(grammarAccess.getEmbeddedFieldRule()); }
	 ruleEmbeddedField
{ after(grammarAccess.getEmbeddedFieldRule()); } 
	 EOF 
;

// Rule EmbeddedField
ruleEmbeddedField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
		(rule__EmbeddedField__Group__0)
		{ after(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getSTRING_LITParserRuleCall()); }
		ruleSTRING_LIT
		{ after(grammarAccess.getTagAccess().getSTRING_LITParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointerType
entryRulePointerType
:
{ before(grammarAccess.getPointerTypeRule()); }
	 rulePointerType
{ after(grammarAccess.getPointerTypeRule()); } 
	 EOF 
;

// Rule PointerType
rulePointerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerTypeAccess().getGroup()); }
		(rule__PointerType__Group__0)
		{ after(grammarAccess.getPointerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseType
entryRuleBaseType
:
{ before(grammarAccess.getBaseTypeRule()); }
	 ruleBaseType
{ after(grammarAccess.getBaseTypeRule()); } 
	 EOF 
;

// Rule BaseType
ruleBaseType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall()); }
		ruleType
		{ after(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionType
entryRuleFunctionType
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 ruleFunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule FunctionType
ruleFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
		(rule__FunctionType__Group__0)
		{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl
:
{ before(grammarAccess.getParameterDeclRule()); }
	 ruleParameterDecl
{ after(grammarAccess.getParameterDeclRule()); } 
	 EOF 
;

// Rule ParameterDecl
ruleParameterDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclAccess().getGroup()); }
		(rule__ParameterDecl__Group__0)
		{ after(grammarAccess.getParameterDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType
:
{ before(grammarAccess.getInterfaceTypeRule()); }
	 ruleInterfaceType
{ after(grammarAccess.getInterfaceTypeRule()); } 
	 EOF 
;

// Rule InterfaceType
ruleInterfaceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getGroup()); }
		(rule__InterfaceType__Group__0)
		{ after(grammarAccess.getInterfaceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec
:
{ before(grammarAccess.getMethodSpecRule()); }
	 ruleMethodSpec
{ after(grammarAccess.getMethodSpecRule()); } 
	 EOF 
;

// Rule MethodSpec
ruleMethodSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodSpecAccess().getAlternatives()); }
		(rule__MethodSpec__Alternatives)
		{ after(grammarAccess.getMethodSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodName
entryRuleMethodName
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodNameAccess().getIDENTIFIERParserRuleCall()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getMethodNameAccess().getIDENTIFIERParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName
:
{ before(grammarAccess.getInterfaceTypeNameRule()); }
	 ruleInterfaceTypeName
{ after(grammarAccess.getInterfaceTypeNameRule()); } 
	 EOF 
;

// Rule InterfaceTypeName
ruleInterfaceTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall()); }
		ruleTypeName
		{ after(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapType
entryRuleMapType
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTypeAccess().getGroup()); }
		(rule__MapType__Group__0)
		{ after(grammarAccess.getMapTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyType
entryRuleKeyType
:
{ before(grammarAccess.getKeyTypeRule()); }
	 ruleKeyType
{ after(grammarAccess.getKeyTypeRule()); } 
	 EOF 
;

// Rule KeyType
ruleKeyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall()); }
		ruleType
		{ after(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelType
entryRuleChannelType
:
{ before(grammarAccess.getChannelTypeRule()); }
	 ruleChannelType
{ after(grammarAccess.getChannelTypeRule()); } 
	 EOF 
;

// Rule ChannelType
ruleChannelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup()); }
		(rule__ChannelType__Group__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementList
entryRuleStatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabeledStmt
entryRuleLabeledStmt
:
{ before(grammarAccess.getLabeledStmtRule()); }
	 ruleLabeledStmt
{ after(grammarAccess.getLabeledStmtRule()); } 
	 EOF 
;

// Rule LabeledStmt
ruleLabeledStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getGroup()); }
		(rule__LabeledStmt__Group__0)
		{ after(grammarAccess.getLabeledStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStmt
entryRuleSimpleStmt
:
{ before(grammarAccess.getSimpleStmtRule()); }
	 ruleSimpleStmt
{ after(grammarAccess.getSimpleStmtRule()); } 
	 EOF 
;

// Rule SimpleStmt
ruleSimpleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
		(rule__SimpleStmt__Alternatives)
		{ after(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoStmt
entryRuleGoStmt
:
{ before(grammarAccess.getGoStmtRule()); }
	 ruleGoStmt
{ after(grammarAccess.getGoStmtRule()); } 
	 EOF 
;

// Rule GoStmt
ruleGoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoStmtAccess().getGroup()); }
		(rule__GoStmt__Group__0)
		{ after(grammarAccess.getGoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt
:
{ before(grammarAccess.getReturnStmtRule()); }
	 ruleReturnStmt
{ after(grammarAccess.getReturnStmtRule()); } 
	 EOF 
;

// Rule ReturnStmt
ruleReturnStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStmtAccess().getGroup()); }
		(rule__ReturnStmt__Group__0)
		{ after(grammarAccess.getReturnStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakStmt
entryRuleBreakStmt
:
{ before(grammarAccess.getBreakStmtRule()); }
	 ruleBreakStmt
{ after(grammarAccess.getBreakStmtRule()); } 
	 EOF 
;

// Rule BreakStmt
ruleBreakStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStmtAccess().getGroup()); }
		(rule__BreakStmt__Group__0)
		{ after(grammarAccess.getBreakStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinueStmt
entryRuleContinueStmt
:
{ before(grammarAccess.getContinueStmtRule()); }
	 ruleContinueStmt
{ after(grammarAccess.getContinueStmtRule()); } 
	 EOF 
;

// Rule ContinueStmt
ruleContinueStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueStmtAccess().getGroup()); }
		(rule__ContinueStmt__Group__0)
		{ after(grammarAccess.getContinueStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGotoStmt
entryRuleGotoStmt
:
{ before(grammarAccess.getGotoStmtRule()); }
	 ruleGotoStmt
{ after(grammarAccess.getGotoStmtRule()); } 
	 EOF 
;

// Rule GotoStmt
ruleGotoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGotoStmtAccess().getGroup()); }
		(rule__GotoStmt__Group__0)
		{ after(grammarAccess.getGotoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFallthroughStmt
entryRuleFallthroughStmt
:
{ before(grammarAccess.getFallthroughStmtRule()); }
	 ruleFallthroughStmt
{ after(grammarAccess.getFallthroughStmtRule()); } 
	 EOF 
;

// Rule FallthroughStmt
ruleFallthroughStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); }
		'fallthrough'
		{ after(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStmt
entryRuleSwitchStmt
:
{ before(grammarAccess.getSwitchStmtRule()); }
	 ruleSwitchStmt
{ after(grammarAccess.getSwitchStmtRule()); } 
	 EOF 
;

// Rule SwitchStmt
ruleSwitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getAlternatives()); }
		(rule__SwitchStmt__Alternatives)
		{ after(grammarAccess.getSwitchStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectStmt
entryRuleSelectStmt
:
{ before(grammarAccess.getSelectStmtRule()); }
	 ruleSelectStmt
{ after(grammarAccess.getSelectStmtRule()); } 
	 EOF 
;

// Rule SelectStmt
ruleSelectStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectStmtAccess().getGroup()); }
		(rule__SelectStmt__Group__0)
		{ after(grammarAccess.getSelectStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmt
entryRuleForStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeferStmt
entryRuleDeferStmt
:
{ before(grammarAccess.getDeferStmtRule()); }
	 ruleDeferStmt
{ after(grammarAccess.getDeferStmtRule()); } 
	 EOF 
;

// Rule DeferStmt
ruleDeferStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeferStmtAccess().getGroup()); }
		(rule__DeferStmt__Group__0)
		{ after(grammarAccess.getDeferStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstDecl
entryRuleConstDecl
:
{ before(grammarAccess.getConstDeclRule()); }
	 ruleConstDecl
{ after(grammarAccess.getConstDeclRule()); } 
	 EOF 
;

// Rule ConstDecl
ruleConstDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup()); }
		(rule__ConstDecl__Group__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstSpec
entryRuleConstSpec
:
{ before(grammarAccess.getConstSpecRule()); }
	 ruleConstSpec
{ after(grammarAccess.getConstSpecRule()); } 
	 EOF 
;

// Rule ConstSpec
ruleConstSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstSpecAccess().getGroup()); }
		(rule__ConstSpec__Group__0)
		{ after(grammarAccess.getConstSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
		(rule__TypeDecl__Group__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec
:
{ before(grammarAccess.getTypeSpecRule()); }
	 ruleTypeSpec
{ after(grammarAccess.getTypeSpecRule()); } 
	 EOF 
;

// Rule TypeSpec
ruleTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAlternatives()); }
		(rule__TypeSpec__Alternatives)
		{ after(grammarAccess.getTypeSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl
:
{ before(grammarAccess.getAliasDeclRule()); }
	 ruleAliasDecl
{ after(grammarAccess.getAliasDeclRule()); } 
	 EOF 
;

// Rule AliasDecl
ruleAliasDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasDeclAccess().getGroup()); }
		(rule__AliasDecl__Group__0)
		{ after(grammarAccess.getAliasDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarSpec
entryRuleVarSpec
:
{ before(grammarAccess.getVarSpecRule()); }
	 ruleVarSpec
{ after(grammarAccess.getVarSpecRule()); } 
	 EOF 
;

// Rule VarSpec
ruleVarSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup()); }
		(rule__VarSpec__Group__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyStmt
entryRuleEmptyStmt
:
{ before(grammarAccess.getEmptyStmtRule()); }
	 ruleEmptyStmt
{ after(grammarAccess.getEmptyStmtRule()); } 
	 EOF 
;

// Rule EmptyStmt
ruleEmptyStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyStmtAccess().getSemicolonKeyword()); }
		';'
		{ after(grammarAccess.getEmptyStmtAccess().getSemicolonKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionStmt
entryRuleExpressionStmt
:
{ before(grammarAccess.getExpressionStmtRule()); }
	 ruleExpressionStmt
{ after(grammarAccess.getExpressionStmtRule()); } 
	 EOF 
;

// Rule ExpressionStmt
ruleExpressionStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionStmtAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getExpressionStmtAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSendStmt
entryRuleSendStmt
:
{ before(grammarAccess.getSendStmtRule()); }
	 ruleSendStmt
{ after(grammarAccess.getSendStmtRule()); } 
	 EOF 
;

// Rule SendStmt
ruleSendStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendStmtAccess().getGroup()); }
		(rule__SendStmt__Group__0)
		{ after(grammarAccess.getSendStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannel
entryRuleChannel
:
{ before(grammarAccess.getChannelRule()); }
	 ruleChannel
{ after(grammarAccess.getChannelRule()); } 
	 EOF 
;

// Rule Channel
ruleChannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getChannelAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncDecStmt
entryRuleIncDecStmt
:
{ before(grammarAccess.getIncDecStmtRule()); }
	 ruleIncDecStmt
{ after(grammarAccess.getIncDecStmtRule()); } 
	 EOF 
;

// Rule IncDecStmt
ruleIncDecStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getGroup()); }
		(rule__IncDecStmt__Group__0)
		{ after(grammarAccess.getIncDecStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortVarDecl
entryRuleShortVarDecl
:
{ before(grammarAccess.getShortVarDeclRule()); }
	 ruleShortVarDecl
{ after(grammarAccess.getShortVarDeclRule()); } 
	 EOF 
;

// Rule ShortVarDecl
ruleShortVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getGroup()); }
		(rule__ShortVarDecl__Group__0)
		{ after(grammarAccess.getShortVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSwitchStmt
entryRuleExprSwitchStmt
:
{ before(grammarAccess.getExprSwitchStmtRule()); }
	 ruleExprSwitchStmt
{ after(grammarAccess.getExprSwitchStmtRule()); } 
	 EOF 
;

// Rule ExprSwitchStmt
ruleExprSwitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getGroup()); }
		(rule__ExprSwitchStmt__Group__0)
		{ after(grammarAccess.getExprSwitchStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprCaseClause
entryRuleExprCaseClause
:
{ before(grammarAccess.getExprCaseClauseRule()); }
	 ruleExprCaseClause
{ after(grammarAccess.getExprCaseClauseRule()); } 
	 EOF 
;

// Rule ExprCaseClause
ruleExprCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getGroup()); }
		(rule__ExprCaseClause__Group__0)
		{ after(grammarAccess.getExprCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSwitchCase
entryRuleExprSwitchCase
:
{ before(grammarAccess.getExprSwitchCaseRule()); }
	 ruleExprSwitchCase
{ after(grammarAccess.getExprSwitchCaseRule()); } 
	 EOF 
;

// Rule ExprSwitchCase
ruleExprSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
		(rule__ExprSwitchCase__Alternatives)
		{ after(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSwitchStmt
entryRuleTypeSwitchStmt
:
{ before(grammarAccess.getTypeSwitchStmtRule()); }
	 ruleTypeSwitchStmt
{ after(grammarAccess.getTypeSwitchStmtRule()); } 
	 EOF 
;

// Rule TypeSwitchStmt
ruleTypeSwitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchStmtAccess().getGroup()); }
		(rule__TypeSwitchStmt__Group__0)
		{ after(grammarAccess.getTypeSwitchStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSwitchGuard
entryRuleTypeSwitchGuard
:
{ before(grammarAccess.getTypeSwitchGuardRule()); }
	 ruleTypeSwitchGuard
{ after(grammarAccess.getTypeSwitchGuardRule()); } 
	 EOF 
;

// Rule TypeSwitchGuard
ruleTypeSwitchGuard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchGuardAccess().getGroup()); }
		(rule__TypeSwitchGuard__Group__0)
		{ after(grammarAccess.getTypeSwitchGuardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeCaseClause
entryRuleTypeCaseClause
:
{ before(grammarAccess.getTypeCaseClauseRule()); }
	 ruleTypeCaseClause
{ after(grammarAccess.getTypeCaseClauseRule()); } 
	 EOF 
;

// Rule TypeCaseClause
ruleTypeCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
		(rule__TypeCaseClause__Group__0)
		{ after(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSwitchCase
entryRuleTypeSwitchCase
:
{ before(grammarAccess.getTypeSwitchCaseRule()); }
	 ruleTypeSwitchCase
{ after(grammarAccess.getTypeSwitchCaseRule()); } 
	 EOF 
;

// Rule TypeSwitchCase
ruleTypeSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
		(rule__TypeSwitchCase__Alternatives)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeList
entryRuleTypeList
:
{ before(grammarAccess.getTypeListRule()); }
	 ruleTypeList
{ after(grammarAccess.getTypeListRule()); } 
	 EOF 
;

// Rule TypeList
ruleTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeListAccess().getGroup()); }
		(rule__TypeList__Group__0)
		{ after(grammarAccess.getTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommClause
entryRuleCommClause
:
{ before(grammarAccess.getCommClauseRule()); }
	 ruleCommClause
{ after(grammarAccess.getCommClauseRule()); } 
	 EOF 
;

// Rule CommClause
ruleCommClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommClauseAccess().getGroup()); }
		(rule__CommClause__Group__0)
		{ after(grammarAccess.getCommClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommCase
entryRuleCommCase
:
{ before(grammarAccess.getCommCaseRule()); }
	 ruleCommCase
{ after(grammarAccess.getCommCaseRule()); } 
	 EOF 
;

// Rule CommCase
ruleCommCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommCaseAccess().getAlternatives()); }
		(rule__CommCase__Alternatives)
		{ after(grammarAccess.getCommCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecvStmt
entryRuleRecvStmt
:
{ before(grammarAccess.getRecvStmtRule()); }
	 ruleRecvStmt
{ after(grammarAccess.getRecvStmtRule()); } 
	 EOF 
;

// Rule RecvStmt
ruleRecvStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup()); }
		(rule__RecvStmt__Group__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecvExpr
entryRuleRecvExpr
:
{ before(grammarAccess.getRecvExprRule()); }
	 ruleRecvExpr
{ after(grammarAccess.getRecvExprRule()); } 
	 EOF 
;

// Rule RecvExpr
ruleRecvExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvExprAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getRecvExprAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getConditionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForClause
entryRuleForClause
:
{ before(grammarAccess.getForClauseRule()); }
	 ruleForClause
{ after(grammarAccess.getForClauseRule()); } 
	 EOF 
;

// Rule ForClause
ruleForClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForClauseAccess().getGroup()); }
		(rule__ForClause__Group__0)
		{ after(grammarAccess.getForClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeClause
entryRuleRangeClause
:
{ before(grammarAccess.getRangeClauseRule()); }
	 ruleRangeClause
{ after(grammarAccess.getRangeClauseRule()); } 
	 EOF 
;

// Rule RangeClause
ruleRangeClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup()); }
		(rule__RangeClause__Group__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitStmt
entryRuleInitStmt
:
{ before(grammarAccess.getInitStmtRule()); }
	 ruleInitStmt
{ after(grammarAccess.getInitStmtRule()); } 
	 EOF 
;

// Rule InitStmt
ruleInitStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitStmtAccess().getSimpleStmtParserRuleCall()); }
		ruleSimpleStmt
		{ after(grammarAccess.getInitStmtAccess().getSimpleStmtParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostStmt
entryRulePostStmt
:
{ before(grammarAccess.getPostStmtRule()); }
	 rulePostStmt
{ after(grammarAccess.getPostStmtRule()); } 
	 EOF 
;

// Rule PostStmt
rulePostStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostStmtAccess().getSimpleStmtParserRuleCall()); }
		ruleSimpleStmt
		{ after(grammarAccess.getPostStmtAccess().getSimpleStmtParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getIDENTIFIERParserRuleCall()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getLabelAccess().getIDENTIFIERParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionList
entryRuleExpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup()); }
		(rule__ExpressionList__Group__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression2
entryRuleExpression2
:
{ before(grammarAccess.getExpression2Rule()); }
	 ruleExpression2
{ after(grammarAccess.getExpression2Rule()); } 
	 EOF 
;

// Rule Expression2
ruleExpression2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression2Access().getGroup()); }
		(rule__Expression2__Group__0)
		{ after(grammarAccess.getExpression2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr2
entryRulePrimaryExpr2
:
{ before(grammarAccess.getPrimaryExpr2Rule()); }
	 rulePrimaryExpr2
{ after(grammarAccess.getPrimaryExpr2Rule()); } 
	 EOF 
;

// Rule PrimaryExpr2
rulePrimaryExpr2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getGroup()); }
		(rule__PrimaryExpr2__Group__0)
		{ after(grammarAccess.getPrimaryExpr2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConversion
entryRuleConversion
:
{ before(grammarAccess.getConversionRule()); }
	 ruleConversion
{ after(grammarAccess.getConversionRule()); } 
	 EOF 
;

// Rule Conversion
ruleConversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConversionAccess().getGroup()); }
		(rule__Conversion__Group__0)
		{ after(grammarAccess.getConversionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodExpr
entryRuleMethodExpr
:
{ before(grammarAccess.getMethodExprRule()); }
	 ruleMethodExpr
{ after(grammarAccess.getMethodExprRule()); } 
	 EOF 
;

// Rule MethodExpr
ruleMethodExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodExprAccess().getGroup()); }
		(rule__MethodExpr__Group__0)
		{ after(grammarAccess.getMethodExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup()); }
		(rule__Selector__Group__0)
		{ after(grammarAccess.getSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndex
entryRuleIndex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getGroup()); }
		(rule__Index__Group__0)
		{ after(grammarAccess.getIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSlice
entryRuleSlice
:
{ before(grammarAccess.getSliceRule()); }
	 ruleSlice
{ after(grammarAccess.getSliceRule()); } 
	 EOF 
;

// Rule Slice
ruleSlice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceAccess().getAlternatives()); }
		(rule__Slice__Alternatives)
		{ after(grammarAccess.getSliceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeAssertion
entryRuleTypeAssertion
:
{ before(grammarAccess.getTypeAssertionRule()); }
	 ruleTypeAssertion
{ after(grammarAccess.getTypeAssertionRule()); } 
	 EOF 
;

// Rule TypeAssertion
ruleTypeAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAssertionAccess().getGroup()); }
		(rule__TypeAssertion__Group__0)
		{ after(grammarAccess.getTypeAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit
:
{ before(grammarAccess.getFunctionLitRule()); }
	 ruleFunctionLit
{ after(grammarAccess.getFunctionLitRule()); } 
	 EOF 
;

// Rule FunctionLit
ruleFunctionLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionLitAccess().getGroup()); }
		(rule__FunctionLit__Group__0)
		{ after(grammarAccess.getFunctionLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit
:
{ before(grammarAccess.getCompositeLitRule()); }
	 ruleCompositeLit
{ after(grammarAccess.getCompositeLitRule()); } 
	 EOF 
;

// Rule CompositeLit
ruleCompositeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeLitAccess().getGroup()); }
		(rule__CompositeLit__Group__0)
		{ after(grammarAccess.getCompositeLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralType
entryRuleLiteralType
:
{ before(grammarAccess.getLiteralTypeRule()); }
	 ruleLiteralType
{ after(grammarAccess.getLiteralTypeRule()); } 
	 EOF 
;

// Rule LiteralType
ruleLiteralType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
		(rule__LiteralType__Alternatives)
		{ after(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralValueAccess().getGroup()); }
		(rule__LiteralValue__Group__0)
		{ after(grammarAccess.getLiteralValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementList
entryRuleElementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleElementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule ElementList
ruleElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement
:
{ before(grammarAccess.getKeyedElementRule()); }
	 ruleKeyedElement
{ after(grammarAccess.getKeyedElementRule()); } 
	 EOF 
;

// Rule KeyedElement
ruleKeyedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyedElementAccess().getGroup()); }
		(rule__KeyedElement__Group__0)
		{ after(grammarAccess.getKeyedElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getAlternatives()); }
		(rule__Key__Alternatives)
		{ after(grammarAccess.getKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldName
entryRuleFieldName
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldNameAccess().getIDENTIFIERParserRuleCall()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getFieldNameAccess().getIDENTIFIERParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicLit
entryRuleBasicLit
:
{ before(grammarAccess.getBasicLitRule()); }
	 ruleBasicLit
{ after(grammarAccess.getBasicLitRule()); } 
	 EOF 
;

// Rule BasicLit
ruleBasicLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicLitAccess().getAlternatives()); }
		(rule__BasicLit__Alternatives)
		{ after(grammarAccess.getBasicLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiverType
entryRuleReceiverType
:
{ before(grammarAccess.getReceiverTypeRule()); }
	 ruleReceiverType
{ after(grammarAccess.getReceiverTypeRule()); } 
	 EOF 
;

// Rule ReceiverType
ruleReceiverType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeAssignment()); }
		(rule__ReceiverType__TypeAssignment)
		{ after(grammarAccess.getReceiverTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall()); }
		ruleBlock
		{ after(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperandName
entryRuleOperandName
:
{ before(grammarAccess.getOperandNameRule()); }
	 ruleOperandName
{ after(grammarAccess.getOperandNameRule()); } 
	 EOF 
;

// Rule OperandName
ruleOperandName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandNameAccess().getAlternatives()); }
		(rule__OperandName__Alternatives)
		{ after(grammarAccess.getOperandNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDecl
entryRuleImportDecl
:
{ before(grammarAccess.getImportDeclRule()); }
	 ruleImportDecl
{ after(grammarAccess.getImportDeclRule()); } 
	 EOF 
;

// Rule ImportDecl
ruleImportDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup()); }
		(rule__ImportDecl__Group__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportSpec
entryRuleImportSpec
:
{ before(grammarAccess.getImportSpecRule()); }
	 ruleImportSpec
{ after(grammarAccess.getImportSpecRule()); } 
	 EOF 
;

// Rule ImportSpec
ruleImportSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportSpecAccess().getGroup()); }
		(rule__ImportSpec__Group__0)
		{ after(grammarAccess.getImportSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportPath
entryRuleImportPath
:
{ before(grammarAccess.getImportPathRule()); }
	 ruleImportPath
{ after(grammarAccess.getImportPathRule()); } 
	 EOF 
;

// Rule ImportPath
ruleImportPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportPathAccess().getSTRING_LITParserRuleCall()); }
		ruleSTRING_LIT
		{ after(grammarAccess.getImportPathAccess().getSTRING_LITParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getDeclarationParserRuleCall_0()); }
		ruleDeclaration
		{ after(grammarAccess.getTopLevelDeclAccess().getDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getFunctionDeclParserRuleCall_1()); }
		ruleFunctionDecl
		{ after(grammarAccess.getTopLevelDeclAccess().getFunctionDeclParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getMethodDeclParserRuleCall_2()); }
		ruleMethodDecl
		{ after(grammarAccess.getTopLevelDeclAccess().getMethodDeclParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDENTIFIER__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_1_0()); }
		RULE_LETTER
		{ after(grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIDENTIFIERAccess().getUNICODE_DIGITTerminalRuleCall_1_1()); }
		RULE_UNICODE_DIGIT
		{ after(grammarAccess.getIDENTIFIERAccess().getUNICODE_DIGITTerminalRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INT_LIT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINT_LITAccess().getDECIMAL_LITTerminalRuleCall_0()); }
		RULE_DECIMAL_LIT
		{ after(grammarAccess.getINT_LITAccess().getDECIMAL_LITTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getINT_LITAccess().getOCTAL_LITTerminalRuleCall_1()); }
		RULE_OCTAL_LIT
		{ after(grammarAccess.getINT_LITAccess().getOCTAL_LITTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getINT_LITAccess().getHEX_LITTerminalRuleCall_2()); }
		RULE_HEX_LIT
		{ after(grammarAccess.getINT_LITAccess().getHEX_LITTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getGroup_0()); }
		(rule__FLOAT_LIT__Group_0__0)
		{ after(grammarAccess.getFLOAT_LITAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getGroup_1()); }
		(rule__FLOAT_LIT__Group_1__0)
		{ after(grammarAccess.getFLOAT_LITAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getGroup_2()); }
		(rule__FLOAT_LIT__Group_2__0)
		{ after(grammarAccess.getFLOAT_LITAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0()); }
		RULE_DECIMALS
		{ after(grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITParserRuleCall_0_1()); }
		ruleFLOAT_LIT
		{ after(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RUNE_LIT__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRUNE_LITAccess().getUNICODE_VALUETerminalRuleCall_1_0()); }
		RULE_UNICODE_VALUE
		{ after(grammarAccess.getRUNE_LITAccess().getUNICODE_VALUETerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRUNE_LITAccess().getBYTE_VALUETerminalRuleCall_1_1()); }
		RULE_BYTE_VALUE
		{ after(grammarAccess.getRUNE_LITAccess().getBYTE_VALUETerminalRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_LIT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSTRING_LITAccess().getRAW_STRING_LITTerminalRuleCall_0()); }
		RULE_RAW_STRING_LIT
		{ after(grammarAccess.getSTRING_LITAccess().getRAW_STRING_LITTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSTRING_LITAccess().getINTERPRETED_STRING_LITTerminalRuleCall_1()); }
		RULE_INTERPRETED_STRING_LIT
		{ after(grammarAccess.getSTRING_LITAccess().getINTERPRETED_STRING_LITTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitParserRuleCall_1()); }
		ruleTypeLit
		{ after(grammarAccess.getTypeAccess().getTypeLitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getTypeNameAccess().getIDENTIFIERParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1()); }
		ruleQualifiedIdent
		{ after(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0()); }
		ruleArrayType
		{ after(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1()); }
		ruleStructType
		{ after(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2()); }
		rulePointerType
		{ after(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3()); }
		ruleFunctionType
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4()); }
		ruleInterfaceType
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_5()); }
		ruleSliceType
		{ after(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_6()); }
		ruleMapType
		{ after(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_7()); }
		ruleChannelType
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup_1_0()); }
		(rule__FieldDecl__Group_1_0__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldDeclAccess().getEmbeddedFieldParserRuleCall_1_1()); }
		ruleEmbeddedField
		{ after(grammarAccess.getFieldDeclAccess().getEmbeddedFieldParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersParserRuleCall_0()); }
		ruleParameters
		{ after(grammarAccess.getResultAccess().getParametersParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getTypeParserRuleCall_1()); }
		ruleType
		{ after(grammarAccess.getResultAccess().getTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getGroup_0()); }
		(rule__MethodSpec__Group_0__0)
		{ after(grammarAccess.getMethodSpecAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodSpecAccess().getGroup_1()); }
		(rule__MethodSpec__Group_1__0)
		{ after(grammarAccess.getMethodSpecAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_0()); }
		(rule__ChannelType__Group_0_0__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
		(rule__ChannelType__Group_0_1__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLabestAssignment_1()); }
		(rule__Statement__LabestAssignment_1)
		{ after(grammarAccess.getStatementAccess().getLabestAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimplestAssignment_2()); }
		(rule__Statement__SimplestAssignment_2)
		{ after(grammarAccess.getStatementAccess().getSimplestAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGotstAssignment_3()); }
		(rule__Statement__GotstAssignment_3)
		{ after(grammarAccess.getStatementAccess().getGotstAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4()); }
		ruleReturnStmt
		{ after(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakstAssignment_5()); }
		(rule__Statement__BreakstAssignment_5)
		{ after(grammarAccess.getStatementAccess().getBreakstAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getContinuestAssignment_6()); }
		(rule__Statement__ContinuestAssignment_6)
		{ after(grammarAccess.getStatementAccess().getContinuestAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGotostAssignment_7()); }
		(rule__Statement__GotostAssignment_7)
		{ after(grammarAccess.getStatementAccess().getGotostAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFalltstAssignment_8()); }
		(rule__Statement__FalltstAssignment_8)
		{ after(grammarAccess.getStatementAccess().getFalltstAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBlock1Assignment_9()); }
		(rule__Statement__Block1Assignment_9)
		{ after(grammarAccess.getStatementAccess().getBlock1Assignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfAssignment_10()); }
		(rule__Statement__IfAssignment_10)
		{ after(grammarAccess.getStatementAccess().getIfAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchAssignment_11()); }
		(rule__Statement__SwitchAssignment_11)
		{ after(grammarAccess.getStatementAccess().getSwitchAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectstAssignment_12()); }
		(rule__Statement__SelectstAssignment_12)
		{ after(grammarAccess.getStatementAccess().getSelectstAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForstAssignment_13()); }
		(rule__Statement__ForstAssignment_13)
		{ after(grammarAccess.getStatementAccess().getForstAssignment_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeferstAssignment_14()); }
		(rule__Statement__DeferstAssignment_14)
		{ after(grammarAccess.getStatementAccess().getDeferstAssignment_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0()); }
		ruleConstDecl
		{ after(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1()); }
		ruleTypeDecl
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2()); }
		ruleVarDecl
		{ after(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getGroup_0()); }
		(rule__SimpleStmt__Group_0__0)
		{ after(grammarAccess.getSimpleStmtAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getExpressionStmtParserRuleCall_1()); }
		ruleExpressionStmt
		{ after(grammarAccess.getSimpleStmtAccess().getExpressionStmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getSendStmtParserRuleCall_2()); }
		ruleSendStmt
		{ after(grammarAccess.getSimpleStmtAccess().getSendStmtParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getIncDecStmtParserRuleCall_3()); }
		ruleIncDecStmt
		{ after(grammarAccess.getSimpleStmtAccess().getIncDecStmtParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAssignmentParserRuleCall_4()); }
		ruleAssignment
		{ after(grammarAccess.getSimpleStmtAccess().getAssignmentParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getShortVarDeclParserRuleCall_5()); }
		ruleShortVarDecl
		{ after(grammarAccess.getSimpleStmtAccess().getShortVarDeclParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfsAssignment_4_1_0()); }
		(rule__IfStmt__IfsAssignment_4_1_0)
		{ after(grammarAccess.getIfStmtAccess().getIfsAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtAccess().getBlock2Assignment_4_1_1()); }
		(rule__IfStmt__Block2Assignment_4_1_1)
		{ after(grammarAccess.getIfStmtAccess().getBlock2Assignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtParserRuleCall_0()); }
		ruleExprSwitchStmt
		{ after(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtParserRuleCall_1()); }
		ruleTypeSwitchStmt
		{ after(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getConditionAssignment_1_0()); }
		(rule__ForStmt__ConditionAssignment_1_0)
		{ after(grammarAccess.getForStmtAccess().getConditionAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getForAssignment_1_1()); }
		(rule__ForStmt__ForAssignment_1_1)
		{ after(grammarAccess.getForStmtAccess().getForAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getRangeAssignment_1_2()); }
		(rule__ForStmt__RangeAssignment_1_2)
		{ after(grammarAccess.getForStmtAccess().getRangeAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstspecAssignment_2_0()); }
		(rule__ConstDecl__ConstspecAssignment_2_0)
		{ after(grammarAccess.getConstDeclAccess().getConstspecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup_2_1()); }
		(rule__ConstDecl__Group_2_1__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypespecAssignment_2_0()); }
		(rule__TypeDecl__TypespecAssignment_2_0)
		{ after(grammarAccess.getTypeDeclAccess().getTypespecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup_2_1()); }
		(rule__TypeDecl__Group_2_1__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0()); }
		ruleAliasDecl
		{ after(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1()); }
		ruleTypeDef
		{ after(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarspecAssignment_2_0()); }
		(rule__VarDecl__VarspecAssignment_2_0)
		{ after(grammarAccess.getVarDeclAccess().getVarspecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
		(rule__VarDecl__Group_2_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
		(rule__VarSpec__Group_1_0__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
		(rule__VarSpec__Group_1_1__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); }
		'++'
		{ after(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
		'--'
		{ after(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
		(rule__ExprSwitchCase__Group_0__0)
		{ after(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getGroup_1()); }
		(rule__ExprSwitchCase__Group_1__0)
		{ after(grammarAccess.getExprSwitchCaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
		(rule__TypeSwitchCase__Group_0__0)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getGroup_1()); }
		(rule__TypeSwitchCase__Group_1__0)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getGroup_0()); }
		(rule__CommCase__Group_0__0)
		{ after(grammarAccess.getCommCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseAccess().getGroup_1()); }
		(rule__CommCase__Group_1__0)
		{ after(grammarAccess.getCommCaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Alternatives_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getSendstmtAssignment_0_2_0()); }
		(rule__CommCase__SendstmtAssignment_0_2_0)
		{ after(grammarAccess.getCommCaseAccess().getSendstmtAssignment_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseAccess().getRecvstmtAssignment_0_2_1()); }
		(rule__CommCase__RecvstmtAssignment_0_2_1)
		{ after(grammarAccess.getCommCaseAccess().getRecvstmtAssignment_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup_0_0()); }
		(rule__RecvStmt__Group_0_0__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup_0_1()); }
		(rule__RecvStmt__Group_0_1__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup_0_0()); }
		(rule__RangeClause__Group_0_0__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup_0_1()); }
		(rule__RangeClause__Group_0_1__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
		(rule__UnaryExpr__Group_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
		(rule__PrimaryExpr__Group_0__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
		(rule__PrimaryExpr__Group_1__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
		(rule__PrimaryExpr__Group_2__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getGroup_1_0()); }
		(rule__PrimaryExpr2__Group_1_0__0)
		{ after(grammarAccess.getPrimaryExpr2Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getGroup_1_1()); }
		(rule__PrimaryExpr2__Group_1_1__0)
		{ after(grammarAccess.getPrimaryExpr2Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getGroup_1_2()); }
		(rule__PrimaryExpr2__Group_1_2__0)
		{ after(grammarAccess.getPrimaryExpr2Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getGroup_1_3()); }
		(rule__PrimaryExpr2__Group_1_3__0)
		{ after(grammarAccess.getPrimaryExpr2Access().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getGroup_1_4()); }
		(rule__PrimaryExpr2__Group_1_4__0)
		{ after(grammarAccess.getPrimaryExpr2Access().getGroup_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getGroup_0()); }
		(rule__Operand__Group_0__0)
		{ after(grammarAccess.getOperandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getOperandnAssignment_1()); }
		(rule__Operand__OperandnAssignment_1)
		{ after(grammarAccess.getOperandAccess().getOperandnAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getGroup_2()); }
		(rule__Operand__Group_2__0)
		{ after(grammarAccess.getOperandAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getGroup_0()); }
		(rule__Slice__Group_0__0)
		{ after(grammarAccess.getSliceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSliceAccess().getGroup_1()); }
		(rule__Slice__Group_1__0)
		{ after(grammarAccess.getSliceAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_0()); }
		(rule__Arguments__ExpressionlistAssignment_2_0_0)
		{ after(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
		(rule__Arguments__Group_2_0_1__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
		(rule__Literal__Group_0__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1()); }
		ruleCompositeLit
		{ after(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2()); }
		ruleFunctionLit
		{ after(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getGroup_0()); }
		(rule__LiteralType__Group_0__0)
		{ after(grammarAccess.getLiteralTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getArraytypeAssignment_1()); }
		(rule__LiteralType__ArraytypeAssignment_1)
		{ after(grammarAccess.getLiteralTypeAccess().getArraytypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getGroup_2()); }
		(rule__LiteralType__Group_2__0)
		{ after(grammarAccess.getLiteralTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getSlicetypeAssignment_3()); }
		(rule__LiteralType__SlicetypeAssignment_3)
		{ after(grammarAccess.getLiteralTypeAccess().getSlicetypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMaptypeAssignment_4()); }
		(rule__LiteralType__MaptypeAssignment_4)
		{ after(grammarAccess.getLiteralTypeAccess().getMaptypeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypenameAssignment_5()); }
		(rule__LiteralType__TypenameAssignment_5)
		{ after(grammarAccess.getLiteralTypeAccess().getTypenameAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getGroup_0()); }
		(rule__Key__Group_0__0)
		{ after(grammarAccess.getKeyAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1()); }
		ruleExpression
		{ after(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2()); }
		ruleLiteralValue
		{ after(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getElementAccess().getExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1()); }
		ruleLiteralValue
		{ after(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getINT_LITParserRuleCall_0()); }
		ruleINT_LIT
		{ after(grammarAccess.getBasicLitAccess().getINT_LITParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getFLOAT_LITParserRuleCall_1()); }
		ruleFLOAT_LIT
		{ after(grammarAccess.getBasicLitAccess().getFLOAT_LITParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2()); }
		ruleIMAGINARY_LIT
		{ after(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getRUNE_LITParserRuleCall_3()); }
		ruleRUNE_LIT
		{ after(grammarAccess.getBasicLitAccess().getRUNE_LITParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getSTRING_LITParserRuleCall_4()); }
		ruleSTRING_LIT
		{ after(grammarAccess.getBasicLitAccess().getSTRING_LITParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperandName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandNameAccess().getIDENTIFIERParserRuleCall_0()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getOperandNameAccess().getIDENTIFIERParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1()); }
		ruleQualifiedIdent
		{ after(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_2_0()); }
		ruleImportSpec
		{ after(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup_2_1()); }
		(rule__ImportDecl__Group_2_1__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportSpecAccess().getPackageNameParserRuleCall_0_1()); }
		rulePackageName
		{ after(grammarAccess.getImportSpecAccess().getPackageNameParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group__0__Impl
	rule__Compilation_initial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getCompilation_initialAction_0()); }
	()
	{ after(grammarAccess.getCompilation_initialAccess().getCompilation_initialAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group__1__Impl
	rule__Compilation_initial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getPackAssignment_1()); }
	(rule__Compilation_initial__PackAssignment_1)
	{ after(grammarAccess.getCompilation_initialAccess().getPackAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group__2__Impl
	rule__Compilation_initial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group__3__Impl
	rule__Compilation_initial__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getGroup_3()); }
	(rule__Compilation_initial__Group_3__0)*
	{ after(grammarAccess.getCompilation_initialAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getGroup_4()); }
	(rule__Compilation_initial__Group_4__0)*
	{ after(grammarAccess.getCompilation_initialAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_initial__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group_3__0__Impl
	rule__Compilation_initial__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getImportdeclAssignment_3_0()); }
	(rule__Compilation_initial__ImportdeclAssignment_3_0)
	{ after(grammarAccess.getCompilation_initialAccess().getImportdeclAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_initial__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group_4__0__Impl
	rule__Compilation_initial__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getToplevelAssignment_4_0()); }
	(rule__Compilation_initial__ToplevelAssignment_4_0)
	{ after(grammarAccess.getCompilation_initialAccess().getToplevelAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compilation_initial__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getCompilation_initialAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__0__Impl
	rule__MethodDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__1__Impl
	rule__MethodDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getReceiverParserRuleCall_1()); }
	ruleReceiver
	{ after(grammarAccess.getMethodDeclAccess().getReceiverParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__2__Impl
	rule__MethodDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getMethodNameParserRuleCall_2()); }
	ruleMethodName
	{ after(grammarAccess.getMethodDeclAccess().getMethodNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__3__Impl
	rule__MethodDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3()); }
	(rule__MethodDecl__SignatureAssignment_3)
	{ after(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getBodyAssignment_4()); }
	(rule__MethodDecl__BodyAssignment_4)?
	{ after(grammarAccess.getMethodDeclAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__0__Impl
	rule__FunctionDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__1__Impl
	rule__FunctionDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFunctionNameParserRuleCall_1()); }
	ruleFunctionName
	{ after(grammarAccess.getFunctionDeclAccess().getFunctionNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__2__Impl
	rule__FunctionDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2()); }
	(rule__FunctionDecl__SignatureAssignment_2)
	{ after(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getBodyAssignment_3()); }
	(rule__FunctionDecl__BodyAssignment_3)?
	{ after(grammarAccess.getFunctionDeclAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__0__Impl
	rule__PackageClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getPackAssignment_1()); }
	(rule__PackageClause__PackAssignment_1)
	{ after(grammarAccess.getPackageClauseAccess().getPackAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IDENTIFIER__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDENTIFIER__Group__0__Impl
	rule__IDENTIFIER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IDENTIFIER__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_0()); }
	RULE_LETTER
	{ after(grammarAccess.getIDENTIFIERAccess().getLETTERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDENTIFIER__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDENTIFIER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IDENTIFIER__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDENTIFIERAccess().getAlternatives_1()); }
	(rule__IDENTIFIER__Alternatives_1)*
	{ after(grammarAccess.getIDENTIFIERAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LIT__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__0__Impl
	rule__FLOAT_LIT__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_0()); }
	RULE_DECIMALS
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__1__Impl
	rule__FLOAT_LIT__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__2__Impl
	rule__FLOAT_LIT__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_2()); }
	(RULE_DECIMALS)?
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_0_3()); }
	(RULE_EXPOENT)?
	{ after(grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LIT__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_1__0__Impl
	rule__FLOAT_LIT__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_1_0()); }
	RULE_DECIMALS
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_1_1()); }
	RULE_EXPOENT
	{ after(grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LIT__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_2__0__Impl
	rule__FLOAT_LIT__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_2__1__Impl
	rule__FLOAT_LIT__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_2_1()); }
	RULE_DECIMALS
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_2_2()); }
	(RULE_EXPOENT)?
	{ after(grammarAccess.getFLOAT_LITAccess().getEXPOENTTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IMAGINARY_LIT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IMAGINARY_LIT__Group__0__Impl
	rule__IMAGINARY_LIT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIMAGINARY_LITAccess().getAlternatives_0()); }
	(rule__IMAGINARY_LIT__Alternatives_0)
	{ after(grammarAccess.getIMAGINARY_LITAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IMAGINARY_LIT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIMAGINARY_LITAccess().getIKeyword_1()); }
	'i'
	{ after(grammarAccess.getIMAGINARY_LITAccess().getIKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RUNE_LIT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RUNE_LIT__Group__0__Impl
	rule__RUNE_LIT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RUNE_LIT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRUNE_LITAccess().getApostropheKeyword_0()); }
	'\''
	{ after(grammarAccess.getRUNE_LITAccess().getApostropheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RUNE_LIT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RUNE_LIT__Group__1__Impl
	rule__RUNE_LIT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RUNE_LIT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRUNE_LITAccess().getAlternatives_1()); }
	(rule__RUNE_LIT__Alternatives_1)
	{ after(grammarAccess.getRUNE_LITAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RUNE_LIT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RUNE_LIT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RUNE_LIT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRUNE_LITAccess().getApostropheKeyword_2()); }
	'\''
	{ after(grammarAccess.getRUNE_LITAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAction_0_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0_1()); }
	ruleTypeName
	{ after(grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_1()); }
	ruleType
	{ after(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__0__Impl
	rule__QualifiedIdent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0()); }
	rulePackageName
	{ after(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__1__Impl
	rule__QualifiedIdent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERParserRuleCall_2()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1()); }
	ruleArrayLength
	{ after(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__2__Impl
	rule__ArrayType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getElemtypeAssignment_3()); }
	(rule__ArrayType__ElemtypeAssignment_3)
	{ after(grammarAccess.getArrayTypeAccess().getElemtypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SliceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__0__Impl
	rule__SliceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__1__Impl
	rule__SliceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); }
	']'
	{ after(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getElemtypeAssignment_2()); }
	(rule__SliceType__ElemtypeAssignment_2)
	{ after(grammarAccess.getSliceTypeAccess().getElemtypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__0__Impl
	rule__StructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getStructTypeAction_0()); }
	()
	{ after(grammarAccess.getStructTypeAccess().getStructTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__1__Impl
	rule__StructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getStructKeyword_1()); }
	'struct'
	{ after(grammarAccess.getStructTypeAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__2__Impl
	rule__StructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__3__Impl
	rule__StructType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getGroup_3()); }
	(rule__StructType__Group_3__0)*
	{ after(grammarAccess.getStructTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_3__0__Impl
	rule__StructType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getFielddeclAssignment_3_0()); }
	(rule__StructType__FielddeclAssignment_3_0)
	{ after(grammarAccess.getStructTypeAccess().getFielddeclAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__0__Impl
	rule__FieldDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getFieldDeclAction_0()); }
	()
	{ after(grammarAccess.getFieldDeclAccess().getFieldDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__1__Impl
	rule__FieldDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getAlternatives_1()); }
	(rule__FieldDecl__Alternatives_1)
	{ after(grammarAccess.getFieldDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTagParserRuleCall_2()); }
	(ruleTag)?
	{ after(grammarAccess.getFieldDeclAccess().getTagParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_1_0__0__Impl
	rule__FieldDecl__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getIndentifierLAssignment_1_0_0()); }
	(rule__FieldDecl__IndentifierLAssignment_1_0_0)
	{ after(grammarAccess.getFieldDeclAccess().getIndentifierLAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTypeAssignment_1_0_1()); }
	(rule__FieldDecl__TypeAssignment_1_0_1)
	{ after(grammarAccess.getFieldDeclAccess().getTypeAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__0__Impl
	rule__IdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getGroup_1()); }
	(rule__IdentifierList__Group_1__0)*
	{ after(grammarAccess.getIdentifierListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__0__Impl
	rule__IdentifierList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_1_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getIdentifierListAccess().getIDENTIFIERParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__0__Impl
	rule__EmbeddedField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
	('*')?
	{ after(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1()); }
	ruleTypeName
	{ after(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__0__Impl
	rule__PointerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getBasetypeAssignment_1()); }
	(rule__PointerType__BasetypeAssignment_1)
	{ after(grammarAccess.getPointerTypeAccess().getBasetypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1()); }
	ruleSignature
	{ after(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getSignatureAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
	rule__Signature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersParserRuleCall_1()); }
	ruleParameters
	{ after(grammarAccess.getSignatureAccess().getParametersParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getResultAssignment_2()); }
	(rule__Signature__ResultAssignment_2)?
	{ after(grammarAccess.getSignatureAccess().getResultAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAction_0()); }
	()
	{ after(grammarAccess.getParametersAccess().getParametersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_2()); }
	(rule__Parameters__Group_2__0)?
	{ after(grammarAccess.getParametersAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_2__0__Impl
	rule__Parameters__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParameterlistAssignment_2_0()); }
	(rule__Parameters__ParameterlistAssignment_2_0)
	{ after(grammarAccess.getParametersAccess().getParameterlistAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclParserRuleCall_0()); }
	ruleParameterDecl
	{ after(grammarAccess.getParameterListAccess().getParameterDeclParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterdeclAssignment_1_1()); }
	(rule__ParameterList__ParameterdeclAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getParameterdeclAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__0__Impl
	rule__ParameterDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getIndentifierLAssignment_0()); }
	(rule__ParameterDecl__IndentifierLAssignment_0)?
	{ after(grammarAccess.getParameterDeclAccess().getIndentifierLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__1__Impl
	rule__ParameterDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
	('...')?
	{ after(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
	(rule__ParameterDecl__TypeAssignment_2)
	{ after(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__0__Impl
	rule__InterfaceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0()); }
	()
	{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__1__Impl
	rule__InterfaceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1()); }
	'interface'
	{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__2__Impl
	rule__InterfaceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__3__Impl
	rule__InterfaceType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getGroup_3()); }
	(rule__InterfaceType__Group_3__0)*
	{ after(grammarAccess.getInterfaceTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_3__0__Impl
	rule__InterfaceType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getMethodspecAssignment_3_0()); }
	(rule__InterfaceType__MethodspecAssignment_3_0)
	{ after(grammarAccess.getInterfaceTypeAccess().getMethodspecAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSpec__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__0__Impl
	rule__MethodSpec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getMethodNameParserRuleCall_0_0()); }
	ruleMethodName
	{ after(grammarAccess.getMethodSpecAccess().getMethodNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getSignatureParserRuleCall_0_1()); }
	ruleSignature
	{ after(grammarAccess.getMethodSpecAccess().getSignatureParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_1__0__Impl
	rule__MethodSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getMethodSpecAction_1_0()); }
	()
	{ after(grammarAccess.getMethodSpecAccess().getMethodSpecAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameParserRuleCall_1_1()); }
	ruleInterfaceTypeName
	{ after(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getKeytypeAssignment_2()); }
	(rule__MapType__KeytypeAssignment_2)
	{ after(grammarAccess.getMapTypeAccess().getKeytypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getElemtypeAssignment_4()); }
	(rule__MapType__ElemtypeAssignment_4)
	{ after(grammarAccess.getMapTypeAccess().getElemtypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__0__Impl
	rule__ChannelType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
	(rule__ChannelType__Alternatives_0)
	{ after(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getElemtypeAssignment_1()); }
	(rule__ChannelType__ElemtypeAssignment_1)
	{ after(grammarAccess.getChannelTypeAccess().getElemtypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_0__0__Impl
	rule__ChannelType__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0_0()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_0_1()); }
	('<-')?
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__0__Impl
	rule__ChannelType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_1()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1()); }
	ruleStatementList
	{ after(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
	()
	{ after(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getGroup_1()); }
	(rule__StatementList__Group_1__0)*
	{ after(grammarAccess.getStatementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__0__Impl
	rule__StatementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatmentAssignment_1_0()); }
	(rule__StatementList__StatmentAssignment_1_0)
	{ after(grammarAccess.getStatementListAccess().getStatmentAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_0_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getDeclarationAssignment_0_1()); }
	(rule__Statement__DeclarationAssignment_0_1)
	{ after(grammarAccess.getStatementAccess().getDeclarationAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__0__Impl
	rule__LabeledStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getLabelParserRuleCall_0()); }
	ruleLabel
	{ after(grammarAccess.getLabeledStmtAccess().getLabelParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__1__Impl
	rule__LabeledStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
	(rule__LabeledStmt__StatementAssignment_2)
	{ after(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStmt__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmt__Group_0__0__Impl
	rule__SimpleStmt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtAccess().getSimpleStmtAction_0_0()); }
	()
	{ after(grammarAccess.getSimpleStmtAccess().getSimpleStmtAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmt__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0_1()); }
	ruleEmptyStmt
	{ after(grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__0__Impl
	rule__GoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getGotoKeyword_0()); }
	'goto'
	{ after(grammarAccess.getGoStmtAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getLabelParserRuleCall_1()); }
	ruleLabel
	{ after(grammarAccess.getGoStmtAccess().getLabelParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__0__Impl
	rule__ReturnStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
	()
	{ after(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__1__Impl
	rule__ReturnStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getReturnStmtAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getExpressionlistAssignment_2()); }
	(rule__ReturnStmt__ExpressionlistAssignment_2)?
	{ after(grammarAccess.getReturnStmtAccess().getExpressionlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__0__Impl
	rule__BreakStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getBreakKeyword_0()); }
	'break'
	{ after(grammarAccess.getBreakStmtAccess().getBreakKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1()); }
	(ruleLabel)?
	{ after(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__0__Impl
	rule__ContinueStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getContinueKeyword_0()); }
	'continue'
	{ after(grammarAccess.getContinueStmtAccess().getContinueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1()); }
	(ruleLabel)?
	{ after(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__0__Impl
	rule__GotoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }
	'goto'
	{ after(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1()); }
	ruleLabel
	{ after(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_1()); }
	(rule__IfStmt__Group_1__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); }
	(rule__IfStmt__ExpressionAssignment_2)
	{ after(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); }
	(rule__IfStmt__BlockAssignment_3)
	{ after(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_4()); }
	(rule__IfStmt__Group_4__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__0__Impl
	rule__IfStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getSimstAssignment_1_0()); }
	(rule__IfStmt__SimstAssignment_1_0)
	{ after(grammarAccess.getIfStmtAccess().getSimstAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__0__Impl
	rule__IfStmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); }
	(rule__IfStmt__Alternatives_4_1)
	{ after(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__0__Impl
	rule__SelectStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getSelectStmtAction_0()); }
	()
	{ after(grammarAccess.getSelectStmtAccess().getSelectStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__1__Impl
	rule__SelectStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getSelectKeyword_1()); }
	'select'
	{ after(grammarAccess.getSelectStmtAccess().getSelectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__2__Impl
	rule__SelectStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__3__Impl
	rule__SelectStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getCommclauseAssignment_3()); }
	(rule__SelectStmt__CommclauseAssignment_3)*
	{ after(grammarAccess.getSelectStmtAccess().getCommclauseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getAlternatives_1()); }
	(rule__ForStmt__Alternatives_1)*
	{ after(grammarAccess.getForStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
	(rule__ForStmt__BlockAssignment_2)
	{ after(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeferStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__0__Impl
	rule__DeferStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); }
	'defer'
	{ after(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__0__Impl
	rule__ConstDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstDeclAction_0()); }
	()
	{ after(grammarAccess.getConstDeclAccess().getConstDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__1__Impl
	rule__ConstDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstKeyword_1()); }
	'const'
	{ after(grammarAccess.getConstDeclAccess().getConstKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getAlternatives_2()); }
	(rule__ConstDecl__Alternatives_2)
	{ after(grammarAccess.getConstDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1__0__Impl
	rule__ConstDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1__1__Impl
	rule__ConstDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getGroup_2_1_1()); }
	(rule__ConstDecl__Group_2_1_1__0)*
	{ after(grammarAccess.getConstDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1_1__0__Impl
	rule__ConstDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstspec2Assignment_2_1_1_0()); }
	(rule__ConstDecl__Constspec2Assignment_2_1_1_0)
	{ after(grammarAccess.getConstDeclAccess().getConstspec2Assignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__0__Impl
	rule__ConstSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getGroup_1()); }
	(rule__ConstSpec__Group_1__0)
	{ after(grammarAccess.getConstSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__0__Impl
	rule__ConstSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getTypeParserRuleCall_1_0()); }
	ruleType
	{ after(grammarAccess.getConstSpecAccess().getTypeParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__1__Impl
	rule__ConstSpec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getExpressionlistAssignment_1_2()); }
	(rule__ConstSpec__ExpressionlistAssignment_1_2)
	{ after(grammarAccess.getConstSpecAccess().getExpressionlistAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__0__Impl
	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeDeclAction_0()); }
	()
	{ after(grammarAccess.getTypeDeclAccess().getTypeDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__1__Impl
	rule__TypeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeKeyword_1()); }
	'type'
	{ after(grammarAccess.getTypeDeclAccess().getTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getAlternatives_2()); }
	(rule__TypeDecl__Alternatives_2)
	{ after(grammarAccess.getTypeDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1__0__Impl
	rule__TypeDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1__1__Impl
	rule__TypeDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getGroup_2_1_1()); }
	(rule__TypeDecl__Group_2_1_1__0)*
	{ after(grammarAccess.getTypeDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1_1__0__Impl
	rule__TypeDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypespec2Assignment_2_1_1_0()); }
	(rule__TypeDecl__Typespec2Assignment_2_1_1_0)
	{ after(grammarAccess.getTypeDeclAccess().getTypespec2Assignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getIDENTIFIERParserRuleCall_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getTypeDefAccess().getIDENTIFIERParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypeParserRuleCall_1()); }
	ruleType
	{ after(grammarAccess.getTypeDefAccess().getTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__0__Impl
	rule__AliasDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getIDENTIFIERParserRuleCall_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getAliasDeclAccess().getIDENTIFIERParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__1__Impl
	rule__AliasDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getTypeParserRuleCall_2()); }
	ruleType
	{ after(grammarAccess.getAliasDeclAccess().getTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
	()
	{ after(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarKeyword_1()); }
	'var'
	{ after(grammarAccess.getVarDeclAccess().getVarKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
	(rule__VarDecl__Alternatives_2)
	{ after(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__0__Impl
	rule__VarDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__1__Impl
	rule__VarDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getGroup_2_1_1()); }
	(rule__VarDecl__Group_2_1_1__0)*
	{ after(grammarAccess.getVarDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1_1__0__Impl
	rule__VarDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarspec2Assignment_2_1_1_0()); }
	(rule__VarDecl__Varspec2Assignment_2_1_1_0)
	{ after(grammarAccess.getVarDeclAccess().getVarspec2Assignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__0__Impl
	rule__VarSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
	(rule__VarSpec__Alternatives_1)
	{ after(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__0__Impl
	rule__VarSpec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getTypeParserRuleCall_1_0_0()); }
	ruleType
	{ after(grammarAccess.getVarSpecAccess().getTypeParserRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
	(rule__VarSpec__Group_1_0_1__0)?
	{ after(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__0__Impl
	rule__VarSpec__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionlistAssignment_1_0_1_1()); }
	(rule__VarSpec__ExpressionlistAssignment_1_0_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionlistAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__0__Impl
	rule__VarSpec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListParserRuleCall_1_1_1()); }
	ruleExpressionList
	{ after(grammarAccess.getVarSpecAccess().getExpressionListParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__0__Impl
	rule__SendStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getChAssignment_0()); }
	(rule__SendStmt__ChAssignment_0)
	{ after(grammarAccess.getSendStmtAccess().getChAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__1__Impl
	rule__SendStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
	'<-'
	{ after(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); }
	(rule__SendStmt__ExpressionAssignment_2)
	{ after(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncDecStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncDecStmt__Group__0__Impl
	rule__IncDecStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncDecStmtAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
	{ after(grammarAccess.getIncDecStmtAccess().getExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncDecStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); }
	(rule__IncDecStmt__Alternatives_1)
	{ after(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_0()); }
	(rule__Assignment__ExpressionlistAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getASSING_OPTerminalRuleCall_1()); }
	RULE_ASSING_OP
	{ after(grammarAccess.getAssignmentAccess().getASSING_OPTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionlist2Assignment_2()); }
	(rule__Assignment__Expressionlist2Assignment_2)
	{ after(grammarAccess.getAssignmentAccess().getExpressionlist2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortVarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__0__Impl
	rule__ShortVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getIdentifierListParserRuleCall_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getShortVarDeclAccess().getIdentifierListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__1__Impl
	rule__ShortVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getExpressionListParserRuleCall_2()); }
	ruleExpressionList
	{ after(grammarAccess.getShortVarDeclAccess().getExpressionListParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__0__Impl
	rule__ExprSwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0()); }
	()
	{ after(grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__1__Impl
	rule__ExprSwitchStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1()); }
	'switch'
	{ after(grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__2__Impl
	rule__ExprSwitchStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getGroup_2()); }
	(rule__ExprSwitchStmt__Group_2__0)?
	{ after(grammarAccess.getExprSwitchStmtAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__3__Impl
	rule__ExprSwitchStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getExpressionAssignment_3()); }
	(rule__ExprSwitchStmt__ExpressionAssignment_3)?
	{ after(grammarAccess.getExprSwitchStmtAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__4__Impl
	rule__ExprSwitchStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__5__Impl
	rule__ExprSwitchStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getExprcaseAssignment_5()); }
	(rule__ExprSwitchStmt__ExprcaseAssignment_5)*
	{ after(grammarAccess.getExprSwitchStmtAccess().getExprcaseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchStmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group_2__0__Impl
	rule__ExprSwitchStmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getSimplestmtAssignment_2_0()); }
	(rule__ExprSwitchStmt__SimplestmtAssignment_2_0)
	{ after(grammarAccess.getExprSwitchStmtAccess().getSimplestmtAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__0__Impl
	rule__ExprCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseParserRuleCall_0()); }
	ruleExprSwitchCase
	{ after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__1__Impl
	rule__ExprCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getStatementlistAssignment_2()); }
	(rule__ExprCaseClause__StatementlistAssignment_2)
	{ after(grammarAccess.getExprCaseClauseAccess().getStatementlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__0__Impl
	rule__ExprSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_0_0()); }
	()
	{ after(grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__1__Impl
	rule__ExprSwitchCase__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_1()); }
	'case'
	{ after(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionlistAssignment_0_2()); }
	(rule__ExprSwitchCase__ExpressionlistAssignment_0_2)
	{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionlistAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchCase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_1__0__Impl
	rule__ExprSwitchCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0()); }
	()
	{ after(grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__0__Impl
	rule__TypeSwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__1__Impl
	rule__TypeSwitchStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getGroup_1()); }
	(rule__TypeSwitchStmt__Group_1__0)?
	{ after(grammarAccess.getTypeSwitchStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__2__Impl
	rule__TypeSwitchStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getTypesgAssignment_2()); }
	(rule__TypeSwitchStmt__TypesgAssignment_2)
	{ after(grammarAccess.getTypeSwitchStmtAccess().getTypesgAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__3__Impl
	rule__TypeSwitchStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__4__Impl
	rule__TypeSwitchStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getTypeccAssignment_4()); }
	(rule__TypeSwitchStmt__TypeccAssignment_4)*
	{ after(grammarAccess.getTypeSwitchStmtAccess().getTypeccAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group_1__0__Impl
	rule__TypeSwitchStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0()); }
	ruleSimpleStmt
	{ after(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchGuard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__0__Impl
	rule__TypeSwitchGuard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); }
	(rule__TypeSwitchGuard__Group_0__0)?
	{ after(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__1__Impl
	rule__TypeSwitchGuard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprParserRuleCall_1()); }
	rulePrimaryExpr
	{ after(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__2__Impl
	rule__TypeSwitchGuard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__3__Impl
	rule__TypeSwitchGuard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__4__Impl
	rule__TypeSwitchGuard__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchGuard__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group_0__0__Impl
	rule__TypeSwitchGuard__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERParserRuleCall_0_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); }
	':='
	{ after(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__0__Impl
	rule__TypeCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0()); }
	ruleTypeSwitchCase
	{ after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__1__Impl
	rule__TypeCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getStatementlistAssignment_2()); }
	(rule__TypeCaseClause__StatementlistAssignment_2)
	{ after(grammarAccess.getTypeCaseClauseAccess().getStatementlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__0__Impl
	rule__TypeSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_0_0()); }
	()
	{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__1__Impl
	rule__TypeSwitchCase__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_1()); }
	'case'
	{ after(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getTypelistAssignment_0_2()); }
	(rule__TypeSwitchCase__TypelistAssignment_0_2)
	{ after(grammarAccess.getTypeSwitchCaseAccess().getTypelistAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchCase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_1__0__Impl
	rule__TypeSwitchCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0()); }
	()
	{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__0__Impl
	rule__TypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
	(rule__TypeList__TypeAssignment_0)
	{ after(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getGroup_1()); }
	(rule__TypeList__Group_1__0)*
	{ after(grammarAccess.getTypeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__0__Impl
	rule__TypeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getType2Assignment_1_1()); }
	(rule__TypeList__Type2Assignment_1_1)
	{ after(grammarAccess.getTypeListAccess().getType2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__0__Impl
	rule__CommClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0()); }
	ruleCommCase
	{ after(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__1__Impl
	rule__CommClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getStatementlist2Assignment_2()); }
	(rule__CommClause__Statementlist2Assignment_2)
	{ after(grammarAccess.getCommClauseAccess().getStatementlist2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__0__Impl
	rule__CommCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCommCaseAction_0_0()); }
	()
	{ after(grammarAccess.getCommCaseAccess().getCommCaseAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__1__Impl
	rule__CommCase__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCaseKeyword_0_1()); }
	'case'
	{ after(grammarAccess.getCommCaseAccess().getCaseKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getAlternatives_0_2()); }
	(rule__CommCase__Alternatives_0_2)
	{ after(grammarAccess.getCommCaseAccess().getAlternatives_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_1__0__Impl
	rule__CommCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCommCaseAction_1_0()); }
	()
	{ after(grammarAccess.getCommCaseAccess().getCommCaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group__0__Impl
	rule__RecvStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getAlternatives_0()); }
	(rule__RecvStmt__Alternatives_0)?
	{ after(grammarAccess.getRecvStmtAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getRecvexprAssignment_1()); }
	(rule__RecvStmt__RecvexprAssignment_1)
	{ after(grammarAccess.getRecvStmtAccess().getRecvexprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_0__0__Impl
	rule__RecvStmt__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getExpressionListParserRuleCall_0_0_0()); }
	ruleExpressionList
	{ after(grammarAccess.getRecvStmtAccess().getExpressionListParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_1__0__Impl
	rule__RecvStmt__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getIdentifierListParserRuleCall_0_1_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getRecvStmtAccess().getIdentifierListParserRuleCall_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__0__Impl
	rule__ForClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getInitStmtParserRuleCall_0()); }
	(ruleInitStmt)?
	{ after(grammarAccess.getForClauseAccess().getInitStmtParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__1__Impl
	rule__ForClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__2__Impl
	rule__ForClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getConditionAssignment_2()); }
	(rule__ForClause__ConditionAssignment_2)?
	{ after(grammarAccess.getForClauseAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__3__Impl
	rule__ForClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getPoststmtAssignment_4()); }
	(rule__ForClause__PoststmtAssignment_4)
	{ after(grammarAccess.getForClauseAccess().getPoststmtAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__0__Impl
	rule__RangeClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getAlternatives_0()); }
	(rule__RangeClause__Alternatives_0)?
	{ after(grammarAccess.getRangeClauseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__1__Impl
	rule__RangeClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); }
	'range'
	{ after(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); }
	(rule__RangeClause__ExpressionAssignment_2)
	{ after(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_0__0__Impl
	rule__RangeClause__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getExpressionlistAssignment_0_0_0()); }
	(rule__RangeClause__ExpressionlistAssignment_0_0_0)
	{ after(grammarAccess.getRangeClauseAccess().getExpressionlistAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_1__0__Impl
	rule__RangeClause__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getIdentifierListParserRuleCall_0_1_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getRangeClauseAccess().getIdentifierListParserRuleCall_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
	{ after(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
	(rule__ExpressionList__Group_1__0)*
	{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getExpressionListAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpression2Assignment_1_1()); }
	(rule__ExpressionList__Expression2Assignment_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExpression2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
	{ after(grammarAccess.getExpressionAccess().getUnaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpAssignment_1()); }
	(rule__Expression__ExpAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group__0__Impl
	rule__Expression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getExpression2Action_0()); }
	()
	{ after(grammarAccess.getExpression2Access().getExpression2Action_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getGroup_1()); }
	(rule__Expression2__Group_1__0)?
	{ after(grammarAccess.getExpression2Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__0__Impl
	rule__Expression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getBINARY_OPTerminalRuleCall_1_0()); }
	RULE_BINARY_OP
	{ after(grammarAccess.getExpression2Access().getBINARY_OPTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__1__Impl
	rule__Expression2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getExpressionAssignment_1_1()); }
	(rule__Expression2__ExpressionAssignment_1_1)
	{ after(grammarAccess.getExpression2Access().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getExpression2Assignment_1_2()); }
	(rule__Expression2__Expression2Assignment_1_2)
	{ after(grammarAccess.getExpression2Access().getExpression2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUNARY_OPTerminalRuleCall_1_0()); }
	RULE_UNARY_OP
	{ after(grammarAccess.getUnaryExprAccess().getUNARY_OPTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryExprParserRuleCall_1_1()); }
	ruleUnaryExpr
	{ after(grammarAccess.getUnaryExprAccess().getUnaryExprParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__0__Impl
	rule__PrimaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getOperandParserRuleCall_0_0()); }
	ruleOperand
	{ after(grammarAccess.getPrimaryExprAccess().getOperandParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrAssignment_0_1()); }
	(rule__PrimaryExpr__PrAssignment_0_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__0__Impl
	rule__PrimaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getConversionParserRuleCall_1_0()); }
	ruleConversion
	{ after(grammarAccess.getPrimaryExprAccess().getConversionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrAssignment_1_1()); }
	(rule__PrimaryExpr__PrAssignment_1_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__0__Impl
	rule__PrimaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getMethodExprParserRuleCall_2_0()); }
	ruleMethodExpr
	{ after(grammarAccess.getPrimaryExprAccess().getMethodExprParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrAssignment_2_1()); }
	(rule__PrimaryExpr__PrAssignment_2_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group__0__Impl
	rule__PrimaryExpr2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getPrimaryExpr2Action_0()); }
	()
	{ after(grammarAccess.getPrimaryExpr2Access().getPrimaryExpr2Action_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getAlternatives_1()); }
	(rule__PrimaryExpr2__Alternatives_1)?
	{ after(grammarAccess.getPrimaryExpr2Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_0__0__Impl
	rule__PrimaryExpr2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getSelectorParserRuleCall_1_0_0()); }
	ruleSelector
	{ after(grammarAccess.getPrimaryExpr2Access().getSelectorParserRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_0_1()); }
	(rule__PrimaryExpr2__PrAssignment_1_0_1)
	{ after(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr2__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_1__0__Impl
	rule__PrimaryExpr2__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getIndexAssignment_1_1_0()); }
	(rule__PrimaryExpr2__IndexAssignment_1_1_0)
	{ after(grammarAccess.getPrimaryExpr2Access().getIndexAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_1_1()); }
	(rule__PrimaryExpr2__PrAssignment_1_1_1)
	{ after(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr2__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_2__0__Impl
	rule__PrimaryExpr2__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getSliceAssignment_1_2_0()); }
	(rule__PrimaryExpr2__SliceAssignment_1_2_0)
	{ after(grammarAccess.getPrimaryExpr2Access().getSliceAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_2_1()); }
	(rule__PrimaryExpr2__PrAssignment_1_2_1)
	{ after(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr2__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_3__0__Impl
	rule__PrimaryExpr2__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getTypeassAssignment_1_3_0()); }
	(rule__PrimaryExpr2__TypeassAssignment_1_3_0)
	{ after(grammarAccess.getPrimaryExpr2Access().getTypeassAssignment_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_3_1()); }
	(rule__PrimaryExpr2__PrAssignment_1_3_1)
	{ after(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr2__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_4__0__Impl
	rule__PrimaryExpr2__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getArgumentsAssignment_1_4_0()); }
	(rule__PrimaryExpr2__ArgumentsAssignment_1_4_0)
	{ after(grammarAccess.getPrimaryExpr2Access().getArgumentsAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr2__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_4_1()); }
	(rule__PrimaryExpr2__PrAssignment_1_4_1)
	{ after(grammarAccess.getPrimaryExpr2Access().getPrAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__0__Impl
	rule__Operand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getOperandAction_0_0()); }
	()
	{ after(grammarAccess.getOperandAccess().getOperandAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLiteralAssignment_0_1()); }
	(rule__Operand__LiteralAssignment_0_1)
	{ after(grammarAccess.getOperandAccess().getLiteralAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__0__Impl
	rule__Operand__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__1__Impl
	rule__Operand__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getExpressionAssignment_2_1()); }
	(rule__Operand__ExpressionAssignment_2_1)
	{ after(grammarAccess.getOperandAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__0__Impl
	rule__Conversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
	(rule__Conversion__TypeAssignment_0)
	{ after(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__1__Impl
	rule__Conversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__2__Impl
	rule__Conversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
	(rule__Conversion__ExpressionAssignment_2)
	{ after(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__3__Impl
	rule__Conversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__0__Impl
	rule__MethodExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0()); }
	ruleReceiverType
	{ after(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__1__Impl
	rule__MethodExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getMethodNameParserRuleCall_2()); }
	ruleMethodName
	{ after(grammarAccess.getMethodExprAccess().getMethodNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getIDENTIFIERParserRuleCall_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getSelectorAccess().getIDENTIFIERParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getExpressionAssignment_1()); }
	(rule__Index__ExpressionAssignment_1)
	{ after(grammarAccess.getIndexAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_0__0__Impl
	rule__Slice__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getSliceAction_0_0()); }
	()
	{ after(grammarAccess.getSliceAccess().getSliceAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_0__1__Impl
	rule__Slice__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_0__2__Impl
	rule__Slice__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_0_2()); }
	(rule__Slice__ExpressionAssignment_0_2)?
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_0__3__Impl
	rule__Slice__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_0_3()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_0__4__Impl
	rule__Slice__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpression2Assignment_0_4()); }
	(rule__Slice__Expression2Assignment_0_4)?
	{ after(grammarAccess.getSliceAccess().getExpression2Assignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_0_5()); }
	']'
	{ after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1__0__Impl
	rule__Slice__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1__1__Impl
	rule__Slice__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpression3Assignment_1_1()); }
	(rule__Slice__Expression3Assignment_1_1)?
	{ after(grammarAccess.getSliceAccess().getExpression3Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1__2__Impl
	rule__Slice__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1__3__Impl
	rule__Slice__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpression4Assignment_1_3()); }
	(rule__Slice__Expression4Assignment_1_3)
	{ after(grammarAccess.getSliceAccess().getExpression4Assignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1__4__Impl
	rule__Slice__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_4()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1__5__Impl
	rule__Slice__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpression5Assignment_1_5()); }
	(rule__Slice__Expression5Assignment_1_5)
	{ after(grammarAccess.getSliceAccess().getExpression5Assignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_6()); }
	']'
	{ after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAssertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__0__Impl
	rule__TypeAssertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__1__Impl
	rule__TypeAssertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__2__Impl
	rule__TypeAssertion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getTypeParserRuleCall_2()); }
	ruleType
	{ after(grammarAccess.getTypeAssertionAccess().getTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
	()
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2()); }
	(rule__Arguments__Group_2__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__0__Impl
	rule__Arguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
	(rule__Arguments__Alternatives_2_0)?
	{ after(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__1__Impl
	rule__Arguments__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	('...')?
	{ after(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
	(',')?
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__0__Impl
	rule__Arguments__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
	(rule__Arguments__TypeAssignment_2_0_1_0)
	{ after(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
	(rule__Arguments__Group_2_0_1_1__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__0__Impl
	rule__Arguments__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
	','
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_1_1_1()); }
	(rule__Arguments__ExpressionlistAssignment_2_0_1_1_1)
	{ after(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getBasicLitParserRuleCall_0_1()); }
	ruleBasicLit
	{ after(grammarAccess.getLiteralAccess().getBasicLitParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__0__Impl
	rule__FunctionLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__1__Impl
	rule__FunctionLit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getSignatureParserRuleCall_1()); }
	ruleSignature
	{ after(grammarAccess.getFunctionLitAccess().getSignatureParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFunctionbodyAssignment_2()); }
	(rule__FunctionLit__FunctionbodyAssignment_2)
	{ after(grammarAccess.getFunctionLitAccess().getFunctionbodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__0__Impl
	rule__CompositeLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteraltAssignment_0()); }
	(rule__CompositeLit__LiteraltAssignment_0)
	{ after(grammarAccess.getCompositeLitAccess().getLiteraltAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralvAssignment_1()); }
	(rule__CompositeLit__LiteralvAssignment_1)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralvAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_0__0__Impl
	rule__LiteralType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLiteralTypeAction_0_0()); }
	()
	{ after(grammarAccess.getLiteralTypeAccess().getLiteralTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getStructtypeAssignment_0_1()); }
	(rule__LiteralType__StructtypeAssignment_0_1)
	{ after(grammarAccess.getLiteralTypeAccess().getStructtypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__0__Impl
	rule__LiteralType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__1__Impl
	rule__LiteralType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	'...'
	{ after(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__2__Impl
	rule__LiteralType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getElementypeAssignment_2_3()); }
	(rule__LiteralType__ElementypeAssignment_2_3)
	{ after(grammarAccess.getLiteralTypeAccess().getElementypeAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__0__Impl
	rule__LiteralValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLiteralValueAction_0()); }
	()
	{ after(grammarAccess.getLiteralValueAccess().getLiteralValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__1__Impl
	rule__LiteralValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__2__Impl
	rule__LiteralValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getGroup_2()); }
	(rule__LiteralValue__Group_2__0)?
	{ after(grammarAccess.getLiteralValueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_2__0__Impl
	rule__LiteralValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getElementlistAssignment_2_0()); }
	(rule__LiteralValue__ElementlistAssignment_2_0)
	{ after(grammarAccess.getLiteralValueAccess().getElementlistAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0()); }
	ruleKeyedElement
	{ after(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)*
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedelementAssignment_1_1()); }
	(rule__ElementList__KeyedelementAssignment_1_1)
	{ after(grammarAccess.getElementListAccess().getKeyedelementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__0__Impl
	rule__KeyedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getGroup_0()); }
	(rule__KeyedElement__Group_0__0)?
	{ after(grammarAccess.getKeyedElementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
	(rule__KeyedElement__ElementAssignment_1)
	{ after(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__0__Impl
	rule__KeyedElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0()); }
	ruleKey
	{ after(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Key__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group_0__0__Impl
	rule__Key__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getKeyAction_0_0()); }
	()
	{ after(grammarAccess.getKeyAccess().getKeyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0_1()); }
	ruleFieldName
	{ after(grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__0__Impl
	rule__ImportDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportDeclAction_0()); }
	()
	{ after(grammarAccess.getImportDeclAccess().getImportDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__1__Impl
	rule__ImportDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportKeyword_1()); }
	'import'
	{ after(grammarAccess.getImportDeclAccess().getImportKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getAlternatives_2()); }
	(rule__ImportDecl__Alternatives_2)
	{ after(grammarAccess.getImportDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1__0__Impl
	rule__ImportDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1__1__Impl
	rule__ImportDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getGroup_2_1_1()); }
	(rule__ImportDecl__Group_2_1_1__0)*
	{ after(grammarAccess.getImportDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1_1__0__Impl
	rule__ImportDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_2_1_1_0()); }
	ruleImportSpec
	{ after(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getImportDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__0__Impl
	rule__ImportSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
	(rule__ImportSpec__Alternatives_0)?
	{ after(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getImportPathParserRuleCall_1()); }
	ruleImportPath
	{ after(grammarAccess.getImportSpecAccess().getImportPathParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__GreetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsCompilation_initialParserRuleCall_0()); }
		ruleCompilation_initial
		{ after(grammarAccess.getModelAccess().getGreetingsCompilation_initialParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__PackAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompilation_initialAccess().getPackPackageClauseParserRuleCall_1_0()); }
		rulePackageClause
		{ after(grammarAccess.getCompilation_initialAccess().getPackPackageClauseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__ImportdeclAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompilation_initialAccess().getImportdeclImportDeclParserRuleCall_3_0_0()); }
		ruleImportDecl
		{ after(grammarAccess.getCompilation_initialAccess().getImportdeclImportDeclParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_initial__ToplevelAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompilation_initialAccess().getToplevelTopLevelDeclParserRuleCall_4_0_0()); }
		ruleTopLevelDecl
		{ after(grammarAccess.getCompilation_initialAccess().getToplevelTopLevelDeclParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__SignatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
		ruleSignature
		{ after(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getBodyFunctionBodyParserRuleCall_4_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getMethodDeclAccess().getBodyFunctionBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__SignatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getBodyFunctionBodyParserRuleCall_3_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getFunctionDeclAccess().getBodyFunctionBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__PackAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageClauseAccess().getPackPackageNameParserRuleCall_1_0()); }
		rulePackageName
		{ after(grammarAccess.getPackageClauseAccess().getPackPackageNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ElemtypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getElemtypeElementTypeParserRuleCall_3_0()); }
		ruleElementType
		{ after(grammarAccess.getArrayTypeAccess().getElemtypeElementTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__ElemtypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceTypeAccess().getElemtypeElementTypeParserRuleCall_2_0()); }
		ruleElementType
		{ after(grammarAccess.getSliceTypeAccess().getElemtypeElementTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__FielddeclAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructTypeAccess().getFielddeclFieldDeclParserRuleCall_3_0_0()); }
		ruleFieldDecl
		{ after(grammarAccess.getStructTypeAccess().getFielddeclFieldDeclParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__IndentifierLAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getFieldDeclAccess().getIndentifierLIdentifierListParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__TypeAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0()); }
		ruleType
		{ after(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__BasetypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerTypeAccess().getBasetypeBaseTypeParserRuleCall_1_0()); }
		ruleBaseType
		{ after(grammarAccess.getPointerTypeAccess().getBasetypeBaseTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ResultAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_2_0()); }
		ruleResult
		{ after(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParameterlistAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0_0()); }
		ruleParameterList
		{ after(grammarAccess.getParametersAccess().getParameterlistParameterListParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterdeclAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterdeclParameterDeclParserRuleCall_1_1_0()); }
		ruleParameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterdeclParameterDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__IndentifierLAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getIndentifierLIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getParameterDeclAccess().getIndentifierLIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__MethodspecAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getMethodspecMethodSpecParserRuleCall_3_0_0()); }
		ruleMethodSpec
		{ after(grammarAccess.getInterfaceTypeAccess().getMethodspecMethodSpecParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__KeytypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getKeytypeKeyTypeParserRuleCall_2_0()); }
		ruleKeyType
		{ after(grammarAccess.getMapTypeAccess().getKeytypeKeyTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ElemtypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getElemtypeElementTypeParserRuleCall_4_0()); }
		ruleElementType
		{ after(grammarAccess.getMapTypeAccess().getElemtypeElementTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__ElemtypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getElemtypeElementTypeParserRuleCall_1_0()); }
		ruleElementType
		{ after(grammarAccess.getChannelTypeAccess().getElemtypeElementTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatmentAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getStatmentStatementParserRuleCall_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementListAccess().getStatmentStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeclarationAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_1_0()); }
		ruleDeclaration
		{ after(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LabestAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0()); }
		ruleLabeledStmt
		{ after(grammarAccess.getStatementAccess().getLabestLabeledStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SimplestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getStatementAccess().getSimplestSimpleStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GotstAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0()); }
		ruleGoStmt
		{ after(grammarAccess.getStatementAccess().getGotstGoStmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BreakstAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBreakstBreakStmtParserRuleCall_5_0()); }
		ruleBreakStmt
		{ after(grammarAccess.getStatementAccess().getBreakstBreakStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ContinuestAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getContinuestContinueStmtParserRuleCall_6_0()); }
		ruleContinueStmt
		{ after(grammarAccess.getStatementAccess().getContinuestContinueStmtParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GotostAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0()); }
		ruleGotoStmt
		{ after(grammarAccess.getStatementAccess().getGotostGotoStmtParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FalltstAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFalltstFallthroughStmtParserRuleCall_8_0()); }
		ruleFallthroughStmt
		{ after(grammarAccess.getStatementAccess().getFalltstFallthroughStmtParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Block1Assignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBlock1BlockParserRuleCall_9_0()); }
		ruleBlock
		{ after(grammarAccess.getStatementAccess().getBlock1BlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfIfStmtParserRuleCall_10_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStatementAccess().getIfIfStmtParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SwitchAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSwitchSwitchStmtParserRuleCall_11_0()); }
		ruleSwitchStmt
		{ after(grammarAccess.getStatementAccess().getSwitchSwitchStmtParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SelectstAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSelectstSelectStmtParserRuleCall_12_0()); }
		ruleSelectStmt
		{ after(grammarAccess.getStatementAccess().getSelectstSelectStmtParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForstAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getForstForStmtParserRuleCall_13_0()); }
		ruleForStmt
		{ after(grammarAccess.getStatementAccess().getForstForStmtParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeferstAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeferstDeferStmtParserRuleCall_14_0()); }
		ruleDeferStmt
		{ after(grammarAccess.getStatementAccess().getDeferstDeferStmtParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__ExpressionlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getReturnStmtAccess().getExpressionlistExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__SimstAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getIfStmtAccess().getSimstSimpleStmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfsAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfsIfStmtParserRuleCall_4_1_0_0()); }
		ruleIfStmt
		{ after(grammarAccess.getIfStmtAccess().getIfsIfStmtParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Block2Assignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlock2BlockParserRuleCall_4_1_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getBlock2BlockParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__CommclauseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStmtAccess().getCommclauseCommClauseParserRuleCall_3_0()); }
		ruleCommClause
		{ after(grammarAccess.getSelectStmtAccess().getCommclauseCommClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ConditionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0()); }
		ruleCondition
		{ after(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ForAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_1_1_0()); }
		ruleForClause
		{ after(grammarAccess.getForStmtAccess().getForForClauseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__RangeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_1_2_0()); }
		ruleRangeClause
		{ after(grammarAccess.getForStmtAccess().getRangeRangeClauseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleBlock
		{ after(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstspecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstspecConstSpecParserRuleCall_2_0_0()); }
		ruleConstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstspecConstSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Constspec2Assignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstspec2ConstSpecParserRuleCall_2_1_1_0_0()); }
		ruleConstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstspec2ConstSpecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__ExpressionlistAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_1_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getConstSpecAccess().getExpressionlistExpressionListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypespecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypespecTypeSpecParserRuleCall_2_0_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypespecTypeSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Typespec2Assignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypespec2TypeSpecParserRuleCall_2_1_1_0_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypespec2TypeSpecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarspecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarspecVarSpecParserRuleCall_2_0_0()); }
		ruleVarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarspecVarSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Varspec2Assignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarspec2VarSpecParserRuleCall_2_1_1_0_0()); }
		ruleVarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarspec2VarSpecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionlistAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionlistExpressionListParserRuleCall_1_0_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionlistExpressionListParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__ChAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendStmtAccess().getChChannelParserRuleCall_0_0()); }
		ruleChannel
		{ after(grammarAccess.getSendStmtAccess().getChChannelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionlistAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionlistExpressionListParserRuleCall_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getAssignmentAccess().getExpressionlistExpressionListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Expressionlist2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionlist2ExpressionListParserRuleCall_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getAssignmentAccess().getExpressionlist2ExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__SimplestmtAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getExprSwitchStmtAccess().getSimplestmtSimpleStmtParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__ExprcaseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getExprcaseExprCaseClauseParserRuleCall_5_0()); }
		ruleExprCaseClause
		{ after(grammarAccess.getExprSwitchStmtAccess().getExprcaseExprCaseClauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__StatementlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getExprCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__ExpressionlistAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionlistExpressionListParserRuleCall_0_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionlistExpressionListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__TypesgAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchStmtAccess().getTypesgTypeSwitchGuardParserRuleCall_2_0()); }
		ruleTypeSwitchGuard
		{ after(grammarAccess.getTypeSwitchStmtAccess().getTypesgTypeSwitchGuardParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__TypeccAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchStmtAccess().getTypeccTypeCaseClauseParserRuleCall_4_0()); }
		ruleTypeCaseClause
		{ after(grammarAccess.getTypeSwitchStmtAccess().getTypeccTypeCaseClauseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__StatementlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getTypeCaseClauseAccess().getStatementlistStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__TypelistAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getTypelistTypeListParserRuleCall_0_2_0()); }
		ruleTypeList
		{ after(grammarAccess.getTypeSwitchCaseAccess().getTypelistTypeListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Type2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getType2TypeParserRuleCall_1_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeListAccess().getType2TypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Statementlist2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommClauseAccess().getStatementlist2StatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getCommClauseAccess().getStatementlist2StatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__SendstmtAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0()); }
		ruleSendStmt
		{ after(grammarAccess.getCommCaseAccess().getSendstmtSendStmtParserRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__RecvstmtAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getRecvstmtRecvStmtParserRuleCall_0_2_1_0()); }
		ruleRecvStmt
		{ after(grammarAccess.getCommCaseAccess().getRecvstmtRecvStmtParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__RecvexprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getRecvexprRecvExprParserRuleCall_1_0()); }
		ruleRecvExpr
		{ after(grammarAccess.getRecvStmtAccess().getRecvexprRecvExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__PoststmtAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getPoststmtPostStmtParserRuleCall_4_0()); }
		rulePostStmt
		{ after(grammarAccess.getForClauseAccess().getPoststmtPostStmtParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__ExpressionlistAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getExpressionlistExpressionListParserRuleCall_0_0_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getRangeClauseAccess().getExpressionlistExpressionListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Expression2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpExpression2ParserRuleCall_1_0()); }
		ruleExpression2
		{ after(grammarAccess.getExpressionAccess().getExpExpression2ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpression2Access().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Expression2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0()); }
		ruleExpression2
		{ after(grammarAccess.getExpression2Access().getExpression2Expression2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_2_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExprAccess().getPrPrimaryExpr2ParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__PrAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__IndexAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0()); }
		ruleIndex
		{ after(grammarAccess.getPrimaryExpr2Access().getIndexIndexParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__PrAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__SliceAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0()); }
		ruleSlice
		{ after(grammarAccess.getPrimaryExpr2Access().getSliceSliceParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__PrAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__TypeassAssignment_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0()); }
		ruleTypeAssertion
		{ after(grammarAccess.getPrimaryExpr2Access().getTypeassTypeAssertionParserRuleCall_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__PrAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__ArgumentsAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0()); }
		ruleArguments
		{ after(grammarAccess.getPrimaryExpr2Access().getArgumentsArgumentsParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr2__PrAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0()); }
		rulePrimaryExpr2
		{ after(grammarAccess.getPrimaryExpr2Access().getPrPrimaryExpr2ParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__LiteralAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__OperandnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0()); }
		ruleOperandName
		{ after(grammarAccess.getOperandAccess().getOperandnOperandNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Expression2Assignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Expression3Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpression3ExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpression3ExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Expression4Assignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpression4ExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpression4ExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Expression5Assignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpression5ExpressionParserRuleCall_1_5_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpression5ExpressionParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionlistAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__TypeAssignment_2_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
		ruleType
		{ after(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionlistAssignment_2_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionlistExpressionListParserRuleCall_2_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__FunctionbodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getFunctionbodyFunctionBodyParserRuleCall_2_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getFunctionLitAccess().getFunctionbodyFunctionBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteraltAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteraltLiteralTypeParserRuleCall_0_0()); }
		ruleLiteralType
		{ after(grammarAccess.getCompositeLitAccess().getLiteraltLiteralTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralvLiteralValueParserRuleCall_1_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getCompositeLitAccess().getLiteralvLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__StructtypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructtypeStructTypeParserRuleCall_0_1_0()); }
		ruleStructType
		{ after(grammarAccess.getLiteralTypeAccess().getStructtypeStructTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__ArraytypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getArraytypeArrayTypeParserRuleCall_1_0()); }
		ruleArrayType
		{ after(grammarAccess.getLiteralTypeAccess().getArraytypeArrayTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__ElementypeAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getElementypeElementTypeParserRuleCall_2_3_0()); }
		ruleElementType
		{ after(grammarAccess.getLiteralTypeAccess().getElementypeElementTypeParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__SlicetypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getSlicetypeSliceTypeParserRuleCall_3_0()); }
		ruleSliceType
		{ after(grammarAccess.getLiteralTypeAccess().getSlicetypeSliceTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__MaptypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMaptypeMapTypeParserRuleCall_4_0()); }
		ruleMapType
		{ after(grammarAccess.getLiteralTypeAccess().getMaptypeMapTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__TypenameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypenameTypeNameParserRuleCall_5_0()); }
		ruleTypeName
		{ after(grammarAccess.getLiteralTypeAccess().getTypenameTypeNameParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__ElementlistAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralValueAccess().getElementlistElementListParserRuleCall_2_0_0()); }
		ruleElementList
		{ after(grammarAccess.getLiteralValueAccess().getElementlistElementListParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedelementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedelementKeyedElementParserRuleCall_1_1_0()); }
		ruleKeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedelementKeyedElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
		ruleElement
		{ after(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_NEWLINE : '\n';

fragment RULE_UNICODE_CHAR : '\n';

fragment RULE_UNICODE_LETTER : 'A-Z';

RULE_UNICODE_DIGIT : 'A-Z';

RULE_BINARY_OP : ('||'|'&&'|RULE_REL_OP|RULE_ADD_OP|RULE_MUL_OP);

fragment RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

fragment RULE_ADD_OP : ('+'|'-'|'|'|'^');

fragment RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_ASSING_OP : (RULE_ADD_OP|RULE_MUL_OP)? '=';

RULE_LETTER : (RULE_UNICODE_LETTER|'_'|EOF);

fragment RULE_DECIMAL_DIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9')+;

fragment RULE_OCTAL_DIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7');

fragment RULE_HEX_DIGIT : (('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9')|('A'|'B'|'C'|'D'|'E'|'F')|('a'|'b'|'c'|'d'|'e'|'f'));

RULE_DECIMAL_LIT : ('1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9') RULE_DECIMAL_DIGIT;

RULE_OCTAL_LIT : '0' RULE_OCTAL_DIGIT*;

RULE_HEX_LIT : '0' ('x'|'X') RULE_HEX_DIGIT RULE_HEX_DIGIT+;

RULE_DECIMALS : RULE_DECIMAL_DIGIT RULE_DECIMAL_DIGIT+;

RULE_EXPOENT : ('e'|'E') ('+'|'-')? RULE_DECIMALS;

RULE_UNICODE_VALUE : (RULE_UNICODE_CHAR|RULE_LITTLE_U_VALUE|RULE_BIG_U_VALUE|RULE_ESCAPED_CHAR);

RULE_BYTE_VALUE : (RULE_OCTAL_BYTE_VALUE|RULE_HEX_BYTE_VALUE);

fragment RULE_OCTAL_BYTE_VALUE : '\\' RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT;

fragment RULE_HEX_BYTE_VALUE : '\\' 'x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_LITTLE_U_VALUE : '\\' 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_BIG_U_VALUE : '\\' 'U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_RAW_STRING_LIT : '\'' (RULE_UNICODE_CHAR|RULE_NEWLINE)* '\'';

RULE_INTERPRETED_STRING_LIT : '"' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE)* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
